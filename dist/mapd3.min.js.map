{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mapd3.min.js","webpack:///webpack/bootstrap 8174a3fe72e861c290e4","webpack:///./src/bundle.js","webpack:///./src/charts/chart.js","webpack:///./src/charts/helpers/d3-service.js","webpack:///./~/d3/build/d3.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/scale.js","webpack:///./src/charts/line.js","webpack:///./src/charts/bar.js","webpack:///./src/charts/axis.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/brush.js","webpack:///./src/charts/hover.js","webpack:///./src/charts/binning.js","webpack:///./src/charts/interactors.js","webpack:///./src/charts/domain-editor.js","webpack:///./src/charts/brush-range-editor.js","webpack:///./src/charts/label.js","webpack:///./src/charts/data-manager.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./src/charts/observer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","Interactors","Hover","Brush","Label","BrushRangeEditor","DomainEditor","Binning","Observer","DataManager","Legend","Tooltip","Chart","undefined","_chart","_chart2","_tooltip","_tooltip2","_legend","_legend2","_dataManager","_dataManager2","_observer","_observer2","_binning","_binning2","_domainEditor","_domainEditor2","_brushRangeEditor","_brushRangeEditor2","_label","_label2","_brush","_brush2","_hover","_hover2","_interactors","_interactors2","_colors","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_container","render","buildSVG","dataObject","dataBySeries","buildChart","w","config","width","cache","container","clientWidth","h","height","clientHeight","chartWidth","margin","left","right","chartHeight","top","bottom","svg","template","base","d3","select","html","style","headerGroup","panel","chart","addEvents","assign","components","scale","_scale2","axis","_axis2","line","_line2","tooltip","legend","brush","hover","binning","domainEditor","brushRangeEditor","label","eventCollector","onBrush","_common","rebind","onHover","onBinning","onDomainEditor","onBrushRangeEditor","onLabel","onPanel","dispatcher","attr","setConfig","setData","scales","getScales","setScales","drawAxis","drawGridLines","drawMarks","bindEvents","legendContent","map","d","setTitle","legendTitle","setContent","setXPosition","legendXPosition","setYPosition","legendYPosition","drawTooltip","show","drawBrush","setBinning","binningReolution","setAuto","binningIsAuto","drawBinning","setXDomain","xDomain","setYDomain","yDomain","setY2Domain","y2Domain","drawDomainEditor","setRangeMin","brushRangeMin","setRangeMax","brushRangeMax","drawRangeEditor","setXLabels","xLabel","setYLabels","yLabel","setY2Labels","y2Label","drawLabels","triggerIntroAnimation","_data","data","cloneData","_constants","keys","SERIES","cleanedData","cleanData","flatData","forEach","serie","VALUES","sortData","keyType","DATA","Date","VALUE","Number","dataPoint","LABEL","GROUP","ID","push","flatDataSorted","dataByKey","nest","getKey","entries","values","allGroupKeys","getGroup","groupKeys","getUnique","stackData","stack","chartType","points","series","dB","getID","order","stackOrderNone","offset","stackOffsetNone","isAnimated","maskingRectangle","transition","duration","animationDuration","ease","on","remove","getNearestDataPoint","_mouseX","keyFromInvertedX","invertScale","xScale","bisectLeft","bisector","dataEntryIndex","dataEntryForXPosition","nearestDataPoint","THROTTLE_DELAY","throttledDispatch","throttle","apply","arguments","mouse","node","_d3$mouse","_d3$mouse2","_slicedToArray","mouseX","mouseY","xPosition","dataPointXPosition","_config","override","destroy","easeLinear","colorSchema","mapdColors","defaultColor","tickPadding","xAxisFormat","yAxisFormat","y2AxisFormat","tickSizes","yTicks","y2Ticks","xTickSkip","grid","axisTransitionDuration","xTitle","yTitle","dotRadius","valueFormat","mouseChaseDuration","tooltipEase","easeQuadInOut","tooltipHeight","tooltipWidth","dateFormat","seriesOrder","yScale","yScale2","hasSecondAxis","colorScale","xAxis","yAxis","yAxis2","dispatch","events","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","length","err","Array","isArray","TypeError","_d3Service","_scale","_line","_bar","_axis","enumerable","get","axisBottom","axisLeft","axisRight","timeFormat","format","extent","sum","range","merge","event","randomUniform","randomNormal","timeDay","timeMonth","area","curveCatmullRom","scaleTime","scalePoint","scaleBand","scaleLinear","scaleOrdinal","brushX","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","number$1","center","bandwidth","round","entering","__axis","orient","context","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","range0","range1","position","copy","selection","path","selectAll","tick","tickExit","exit","tickEnter","enter","append","text","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","t","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","set","callback","noop","concat","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fitExtent","projection","clip","clipExtent","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","version","hi","mid","ascendingBisect","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","transform$$1","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","sourceRandomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleIdentity","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","mapdUI","skyBlue","_toConsumableArray","arr2","_dataToClone","_keyType","sortedData","getTime","localeCompare","numeric","bandStep","accum","limit","wait","_len","_key","_len2","_key2","Scale","buildXScale","_allKeys","buildYScale","_extent","buildColorScale","ids","splitByGroups","allValues","allKeys","getValue","getStackedScales","allStackHeights","valuesExtent","allUniqueKeys","getHorizontalScales","groupAxis1","groupAxis2","valuesExtent2","Line","drawLines","seriesLine","seriesLine2","getColor","drawAreas","seriesArea","seriesArea2","areas","drawStackedAreas","_scales","Bar","drawBars","bars","drawStackedBars","stackedBarGroups","stackedUpdate","stackedBars","Axis","buildAxis","formatter","horizontalGridLines","verticalGridLines","hoverZoneSize","background","tooltipTitle","tooltipBody","calculateTooltipPosition","_mouseY","OFFSET","tooltipSize","tooltipX","avoidanceOffset","tooltipY","yPosition","drawContent","content","tooltipItems","tooltipItemsUpdate","tooltipItem","legendData","drawTitle","title","_typeof","setupContent","_series","sortByTopicsOrder","sortByAlpha","_order","orderName","_ref","hide","setupTooltip","_dataPoint","_xPosition","_yPosition","_calculateTooltipPosi","_calculateTooltipPosi2","_dispatcher","_title","_content","tooltipDivider","tooltipBackground","extractBrushDimension","buildBrush","handleBrushStart","handleBrushMove","handleBrushEnd","chartBrush","getDataExtent","dataExtent","dateRange","drawHover","_dataPointXPosition","moveVerticalMarker","drawVerticalMarker","highlightStackedDataPoints","highlightDataPoints","dotsData","drawHighlightDataPoints","_dotsData","dots","stackedDataPoint","verticalMarkerLine","_verticalMarkerXPosition","autoItem","isSelected","toggled","autoLabel","binningItems","exclusiveToggle","LINE_HEIGHT","changeBinning","selectedBin","toggleAuto","isAuto","_selectedItemName","_shouldBeSelected","_selectedBin","_isAuto","toggleOnOff","bool","shouldBeSelected","othersSelection","toggle","toggleOffIsEnabled","toggleMultipleIsEnabled","options","hasSelection","selectionNode","hasJustBeenClicked","blurOnEnter","blur","xHitZone","showXEditor","hideXEditor","yHitZone","showYEditor","hideYEditor","y2HitZone","showY2Editor","hideY2Editor","yMaxInput","innerText","yMinInput","yLockIcon","isLocked","y2MaxInput","y2MinInput","y2LockIcon","xMinInput","xMaxInput","xLockIcon","HOVER_ZONE_SIZE","LOCK_SIZE","INPUT_HEIGHT","PADDING","INPUT_WIDTH","_xDomain","_yDomain","_y2Domain","setXLock","_xLock","xLock","setYLock","_yLock","yLock","setY2Lock","_y2Lock","y2Lock","inputMax","rangeMax","inputMin","rangeMin","_rangeMin","_rangeMax","xAxisLabel","yAxisLabel","y2AxisLabel","textHeight","textWidth","_xLabel","_yLabel","_y2Label","generateRandomString","_length","substr","generateSeries","_dataKeys","_range","_allowNegative","variabilityRatio","randomWalkStepSize","rnd","generateTestDataset","dataKeys","baseDate","pointCount","lineCount","groupCount","filterByKey","extentMinIndex","extentMaxIndex","filterByDate","_dateExtent","epoch","_d3Array","sub","pub","_channelName","dataManager","_brushConfig","filtered"],"mappings":"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","file":"mapd3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.colors = exports.Interactors = exports.Hover = exports.Brush = exports.Label = exports.BrushRangeEditor = exports.DomainEditor = exports.Binning = exports.Observer = exports.DataManager = exports.Legend = exports.Tooltip = exports.Chart = undefined;\n\t\n\tvar _chart = __webpack_require__(1);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(12);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _dataManager = __webpack_require__(20);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tvar _observer = __webpack_require__(22);\n\t\n\tvar _observer2 = _interopRequireDefault(_observer);\n\t\n\tvar _binning = __webpack_require__(15);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(17);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(18);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(19);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _brush = __webpack_require__(13);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(14);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tvar _interactors2 = _interopRequireDefault(_interactors);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Chart = _chart2.default;\n\texports.Tooltip = _tooltip2.default;\n\texports.Legend = _legend2.default;\n\texports.DataManager = _dataManager2.default;\n\texports.Observer = _observer2.default;\n\texports.Binning = _binning2.default;\n\texports.DomainEditor = _domainEditor2.default;\n\texports.BrushRangeEditor = _brushRangeEditor2.default;\n\texports.Label = _label2.default;\n\texports.Brush = _brush2.default;\n\texports.Hover = _hover2.default;\n\texports.Interactors = _interactors2.default;\n\texports.colors = _colors.colors;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Chart;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _scale = __webpack_require__(7);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _line = __webpack_require__(8);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _bar = __webpack_require__(9);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _axis = __webpack_require__(10);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(12);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _brush = __webpack_require__(13);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(14);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _binning = __webpack_require__(15);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(17);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(18);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(19);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Chart(_container) {\n\t\n\t  var config = {\n\t    // common\n\t    margin: {\n\t      top: 48,\n\t      right: 32,\n\t      bottom: 48,\n\t      left: 32\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    chartType: \"line\", // line, area, stackedLine, stackedArea\n\t    ease: d3.easeLinear,\n\t\n\t    // intro animation\n\t    isAnimated: false,\n\t    animationDuration: 1500,\n\t\n\t    // scale\n\t    colorSchema: _colors.colors.mapdColors.map(function (d) {\n\t      return { value: d };\n\t    }),\n\t    defaultColor: \"skyblue\",\n\t\n\t    // axis\n\t    tickPadding: 5,\n\t    xAxisFormat: \"auto\",\n\t    yAxisFormat: \".2f\",\n\t    y2AxisFormat: \".2f\",\n\t    tickSizes: 8,\n\t    yTicks: 5,\n\t    y2Ticks: 5,\n\t    xTickSkip: 0,\n\t    grid: null,\n\t    axisTransitionDuration: 0,\n\t\n\t    xTitle: \"\",\n\t    yTitle: \"\",\n\t\n\t    // hover\n\t    dotRadius: 4,\n\t\n\t    // tooltip\n\t    valueFormat: \".2f\",\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: [],\n\t\n\t    // legend\n\t    legendXPosition: \"auto\",\n\t    legendYPosition: \"auto\",\n\t    legendTitle: \"\",\n\t\n\t    // binning\n\t    binningReolution: \"1mo\",\n\t    binningIsAuto: true,\n\t\n\t    // domain\n\t    xDomain: null,\n\t    yDomain: null,\n\t    y2Domain: null,\n\t\n\t    // brush range\n\t    brushRangeMin: null,\n\t    brushRangeMax: null,\n\t\n\t    // label\n\t    xLabel: \"\",\n\t    yLabel: \"\",\n\t    y2Label: \"\"\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    panel: null,\n\t    margin: null,\n\t    maskingRectangle: null,\n\t    chartWidth: null, chartHeight: null,\n\t    xAxis: null, yAxis: null, yAxis2: null\n\t  };\n\t\n\t  var dataObject = {\n\t    dataBySeries: null,\n\t    dataByKey: null,\n\t    data: null,\n\t    groupKeys: [],\n\t    hasSecondAxis: false,\n\t    stackData: null,\n\t    stack: null,\n\t    flatDataSorted: null\n\t  };\n\t\n\t  var components = {};\n\t  var eventCollector = {};\n\t\n\t  // accessors\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getGroup = function getGroup(d) {\n\t    return d[_constants.keys.GROUP];\n\t  };\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    if (dataObject.dataBySeries) {\n\t      buildChart();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    var w = config.width || cache.container.clientWidth;\n\t    var h = config.height || cache.container.clientHeight;\n\t    cache.chartWidth = w - config.margin.left - config.margin.right;\n\t    cache.chartHeight = h - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      var template = \"<div class=\\\"mapd3 mapd3-container\\\">\\n        <div class=\\\"header-group\\\"></div>\\n        <svg class=\\\"chart\\\">\\n          <g class=\\\"chart-group\\\"></g>\\n          <g class=\\\"panel-group\\\">\\n            <rect class=\\\"panel-background\\\"></rect>\\n          </g>\\n          <rect class=\\\"masking-rectangle\\\"></rect>\\n        </svg>\\n      </div>\";\n\t\n\t      var base = d3.select(cache.container).html(template);\n\t\n\t      cache.container = base.select(\".mapd3-container\").style(\"position\", \"relative\");\n\t\n\t      cache.svg = base.select(\"svg\");\n\t      cache.headerGroup = base.select(\".header-group\").style(\"position\", \"absolute\");\n\t      cache.panel = cache.svg.select(\".panel-group\");\n\t      cache.chart = cache.svg.select(\".chart-group\");\n\t\n\t      addEvents();\n\t\n\t      Object.assign(components, {\n\t        scale: (0, _scale2.default)(),\n\t        axis: (0, _axis2.default)(cache.chart),\n\t        line: (0, _line2.default)(cache.panel),\n\t        tooltip: (0, _tooltip2.default)(cache.container),\n\t        legend: (0, _legend2.default)(cache.container),\n\t        brush: (0, _brush2.default)(cache.panel),\n\t        hover: (0, _hover2.default)(cache.panel),\n\t        binning: (0, _binning2.default)(cache.headerGroup),\n\t        domainEditor: (0, _domainEditor2.default)(cache.container),\n\t        brushRangeEditor: (0, _brushRangeEditor2.default)(cache.headerGroup),\n\t        label: (0, _label2.default)(cache.container)\n\t      });\n\t\n\t      Object.assign(eventCollector, {\n\t        onBrush: (0, _common.rebind)(components.brush),\n\t        onHover: (0, _common.rebind)(components.hover),\n\t        onBinning: (0, _common.rebind)(components.binning),\n\t        onDomainEditor: (0, _common.rebind)(components.domainEditor),\n\t        onBrushRangeEditor: (0, _common.rebind)(components.brushRangeEditor),\n\t        onLabel: (0, _common.rebind)(components.label),\n\t        onPanel: (0, _common.rebind)(dispatcher)\n\t      });\n\t    }\n\t\n\t    cache.svg.attr(\"width\", config.width).attr(\"height\", config.height);\n\t\n\t    cache.headerGroup.style(\"width\", cache.chartWidth).style(\"left\", config.margin.left);\n\t\n\t    cache.panel.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\").select(\".panel-background\").attr(\"width\", cache.chartWidth).attr(\"height\", cache.chartHeight).attr(\"fill\", \"transparent\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildChart() {\n\t    components.scale.setConfig(config).setData(dataObject);\n\t    scales = components.scale.getScales();\n\t\n\t    components.axis.setConfig(config).setScales(scales).drawAxis().drawGridLines();\n\t\n\t    components.line.setConfig(config).setScales(scales).setData(dataObject).drawMarks();\n\t\n\t    components.tooltip.setConfig(config).setScales(scales).bindEvents(dispatcher);\n\t\n\t    var legendContent = dataObject.dataBySeries.map(function (d) {\n\t      return {\n\t        id: d.id,\n\t        key: d.key,\n\t        label: d.label\n\t      };\n\t    });\n\t\n\t    components.legend.setConfig(config).setScales(scales).setTitle(config.legendTitle).setContent(legendContent).setXPosition(config.legendXPosition).setYPosition(config.legendYPosition).drawTooltip().show();\n\t\n\t    components.brush.setConfig(config).setScales(scales).setData(dataObject).drawBrush();\n\t\n\t    components.hover.setConfig(config).setScales(scales).bindEvents(dispatcher);\n\t\n\t    components.binning.setConfig(config).setBinning(config.binningReolution).setAuto(config.binningIsAuto).drawBinning();\n\t\n\t    components.domainEditor.setConfig(config).setXDomain(config.xDomain).setYDomain(config.yDomain).setY2Domain(config.y2Domain).drawDomainEditor();\n\t\n\t    components.brushRangeEditor.setConfig(config).setRangeMin(config.brushRangeMin).setRangeMax(config.brushRangeMax).drawRangeEditor();\n\t\n\t    components.label.setConfig(config).setXLabels(config.xLabel).setYLabels(config.yLabel).setY2Labels(config.y2Label).drawLabels();\n\t\n\t    triggerIntroAnimation();\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    dataObject.data = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var cleanedData = cleanData(_data);\n\t    Object.assign(dataObject, cleanedData);\n\t\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  function cleanData(_data) {\n\t    var dataBySeries = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var flatData = [];\n\t\n\t    // Normalize dataBySeries\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES] = (0, _common.sortData)(serie[_constants.keys.VALUES], config.keyType);\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        d[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        d[_constants.keys.VALUE] = Number(d[_constants.keys.VALUE]);\n\t      });\n\t    });\n\t\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        var dataPoint = {};\n\t        dataPoint[_constants.keys.LABEL] = serie[_constants.keys.LABEL];\n\t        dataPoint[_constants.keys.GROUP] = serie[_constants.keys.GROUP];\n\t        dataPoint[_constants.keys.ID] = serie[_constants.keys.ID];\n\t        dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        dataPoint[_constants.keys.VALUE] = d[_constants.keys.VALUE];\n\t        flatData.push(dataPoint);\n\t      });\n\t    });\n\t\n\t    var flatDataSorted = (0, _common.sortData)(flatData, config.keyType);\n\t\n\t    var dataByKey = d3.nest().key(getKey).entries(flatDataSorted).map(function (d) {\n\t      var dataPoint = {};\n\t      dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key;\n\t      dataPoint[_constants.keys.SERIES] = d.values;\n\t      return dataPoint;\n\t    });\n\t\n\t    var allGroupKeys = dataBySeries.map(getGroup);\n\t    var groupKeys = (0, _common.getUnique)(allGroupKeys);\n\t\n\t    var stackData = null;\n\t    var stack = null;\n\t\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      stackData = dataByKey.map(function (d) {\n\t        var points = {\n\t          key: d[_constants.keys.DATA]\n\t        };\n\t        d.series.forEach(function (dB) {\n\t          points[dB[_constants.keys.ID]] = dB[_constants.keys.VALUE];\n\t        });\n\t\n\t        return points;\n\t      });\n\t\n\t      stack = d3.stack().keys(dataBySeries.map(getID)).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n\t    }\n\t\n\t    return { dataBySeries: dataBySeries, dataByKey: dataByKey, stack: stack, stackData: stackData, flatDataSorted: flatDataSorted, groupKeys: groupKeys };\n\t  }\n\t\n\t  function triggerIntroAnimation() {\n\t    if (config.isAnimated) {\n\t      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\").attr(\"width\", cache.chartWidth - 2).attr(\"height\", cache.chartHeight).attr(\"x\", config.margin.left + 1).attr(\"y\", config.margin.top);\n\t\n\t      cache.maskingRectangle.transition().duration(config.animationDuration).ease(config.ease).attr(\"width\", 0).attr(\"x\", config.width - config.margin.right).on(\"end\", function () {\n\t        return cache.maskingRectangle.remove();\n\t      });\n\t    }\n\t  }\n\t\n\t  function getNearestDataPoint(_mouseX) {\n\t    var keyFromInvertedX = (0, _common.invertScale)(scales.xScale, _mouseX, config.keyType);\n\t    var bisectLeft = d3.bisector(getKey).left;\n\t    var dataEntryIndex = bisectLeft(dataObject.dataByKey, keyFromInvertedX);\n\t    var dataEntryForXPosition = dataObject.dataByKey[dataEntryIndex];\n\t    var nearestDataPoint = null;\n\t\n\t    if (keyFromInvertedX) {\n\t      nearestDataPoint = dataEntryForXPosition;\n\t    }\n\t    return nearestDataPoint;\n\t  }\n\t\n\t  function addEvents() {\n\t    var THROTTLE_DELAY = 20;\n\t    var throttledDispatch = (0, _common.throttle)(function () {\n\t      dispatcher.call.apply(dispatcher, arguments);\n\t    }, THROTTLE_DELAY);\n\t\n\t    cache.panel.on(\"mouseover.dispatch\", function () {\n\t      dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mouseout.dispatch\", function () {\n\t      dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mousemove.dispatch\", function () {\n\t      var _d3$mouse = d3.mouse(cache.panel.node()),\n\t          _d3$mouse2 = _slicedToArray(_d3$mouse, 2),\n\t          mouseX = _d3$mouse2[0],\n\t          mouseY = _d3$mouse2[1];\n\t\n\t      if (!dataObject.data) {\n\t        return;\n\t      }\n\t      var xPosition = mouseX;\n\t      var dataPoint = getNearestDataPoint(xPosition);\n\t\n\t      if (dataPoint) {\n\t        var dataPointXPosition = scales.xScale(dataPoint[_constants.keys.DATA]);\n\t        throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY);\n\t      }\n\t    });\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.on(\".\", null).remove();\n\t  }\n\t\n\t  return {\n\t    render: render,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    on: on,\n\t    destroy: destroy,\n\t    events: eventCollector\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, \"axisBottom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisBottom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisLeft\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisLeft;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisRight\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisRight;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"format\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.format;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"bisector\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.bisector;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.extent;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.sum;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.range;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.merge;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"nest\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.nest;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"dispatch\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.dispatch;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeQuadInOut\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeQuadInOut;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"select\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.select;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"mouse\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.mouse;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"event\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.event;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"transition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.transition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomUniform\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomUniform;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomNormal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomNormal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeDay\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeDay;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeMonth\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeMonth;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"area\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.area;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"curveCatmullRom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.curveCatmullRom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"line\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.line;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stack\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stack;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOffsetNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOffsetNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOrderNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOrderNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleTime\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleTime;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scalePoint\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scalePoint;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleBand\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleBand;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleOrdinal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleOrdinal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"brushX\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.brushX;\n\t\t}\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.11.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar radial = function(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tvar naturalEarth1 = function() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t};\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$2 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function constrain(transform$$1, extent) {\n\t    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n\t        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n\t        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n\t        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n\t    return transform$$1.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar mapdUI = exports.mapdUI = {\n\t  skyBlue: \"#22A7F0\"\n\t};\n\t\n\tvar mapdColors = exports.mapdColors = [\"#ea5545\", \"#bdcf32\", \"#b33dc6\", \"#ef9b20\", \"#87bc45\", \"#f46a9b\", \"#ace5c7\", \"#ede15b\", \"#836dc5\", \"#86d87f\", \"#27aeef\"];\n\t\n\tvar grey = exports.grey = [\"#F8F8FA\", \"#EFF2F5\", \"#D2D6DF\", \"#C3C6CF\", \"#ADB0B6\", \"#666A73\", \"#45494E\", \"#363A43\", \"#282C35\"];\n\t\n\tvar colors = exports.colors = {\n\t  mapdUI: mapdUI,\n\t  mapdColors: mapdColors,\n\t  grey: grey\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar keys = exports.keys = {\n\t  DATA: \"key\",\n\t  VALUE: \"value\",\n\t  ID: \"id\",\n\t  LABEL: \"label\",\n\t  GROUP: \"group\",\n\t  VALUES: \"values\",\n\t  SERIES: \"series\"\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cloneData = cloneData;\n\texports.sortData = sortData;\n\texports.getUnique = getUnique;\n\texports.invertScale = invertScale;\n\texports.override = override;\n\texports.throttle = throttle;\n\texports.rebind = rebind;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Clones the passed array of data\n\t * @param  {Object[]} dataToClone Data to clone\n\t * @return {Object[]}             Cloned data\n\t */\n\tfunction cloneData(_dataToClone) {\n\t  return JSON.parse(JSON.stringify(_dataToClone));\n\t}\n\t\n\tfunction sortData(_data, _keyType) {\n\t  var sortedData = cloneData(_data);\n\t  if (_keyType === \"time\") {\n\t    sortedData.forEach(function (d) {\n\t      d[_constants.keys.DATA] = new Date(d[_constants.keys.DATA]);\n\t    });\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].getTime() - b[_constants.keys.DATA].getTime();\n\t    });\n\t  } else if (_keyType === \"string\") {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].localeCompare(b[_constants.keys.DATA], \"en\", { numeric: false });\n\t    });\n\t  } else {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA] - b[_constants.keys.DATA];\n\t    });\n\t  }\n\t  return sortedData;\n\t}\n\t\n\tfunction getUnique(arr) {\n\t  return [].concat(_toConsumableArray(new Set(arr)));\n\t}\n\t\n\tfunction invertScale(_scale, _mouseX, _keyType) {\n\t  if (_keyType === \"time\" || _keyType === \"number\") {\n\t    return _scale.invert(_mouseX);\n\t  } else {\n\t    var bandStep = _scale.step();\n\t    var index = Math.round(_mouseX / bandStep);\n\t    return _scale.domain()[index];\n\t  }\n\t}\n\t\n\tfunction override(a, b) {\n\t  var accum = {};\n\t  for (var x in a) {\n\t    if (a.hasOwnProperty(x)) {\n\t      accum[x] = x in b ? b[x] : a[x];\n\t    }\n\t  }\n\t  return accum;\n\t}\n\t\n\tfunction throttle(callback, limit) {\n\t  var wait = false;\n\t  var timer = null;\n\t  return function throttleFn() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    if (!wait) {\n\t      wait = true;\n\t      clearTimeout(timer);\n\t      timer = setTimeout(function () {\n\t        wait = false;\n\t        callback.apply(undefined, args);\n\t      }, limit);\n\t    }\n\t  };\n\t}\n\t\n\tfunction rebind(target) {\n\t  return function reapply() {\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\t\n\t    target.on.apply(target, [args[0] + \".rebind\"].concat(_toConsumableArray(args.slice(1))));\n\t    return this;\n\t  };\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Scale;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Scale() {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    height: null,\n\t    width: null,\n\t    keyType: null,\n\t    chartType: null,\n\t    colorSchema: null,\n\t    defaultColor: null\n\t  };\n\t\n\t  var data = {\n\t    dataByKey: null,\n\t    dataBySeries: null,\n\t    flatDataSorted: null,\n\t    groupKeys: null\n\t  };\n\t\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getValue = function getValue(d) {\n\t    return d[_constants.keys.VALUE];\n\t  };\n\t\n\t  function buildXScale(_allKeys) {\n\t    var chartWidth = config.width - config.margin.left - config.margin.right;\n\t    var domain = null;\n\t    var xScale = null;\n\t    if (config.keyType === \"time\") {\n\t      domain = d3.extent(_allKeys);\n\t      xScale = d3.scaleTime();\n\t    } else if (config.keyType === \"number\") {\n\t      domain = d3.extent(_allKeys);\n\t      xScale = d3.scaleLinear();\n\t    } else {\n\t      domain = _allKeys;\n\t      xScale = config.chartType === \"bar\" || config.chartType === \"stackedBar\" ? d3.scaleBand() : d3.scalePoint();\n\t      xScale.padding(0);\n\t    }\n\t\n\t    xScale.domain(domain).range([0, chartWidth]);\n\t\n\t    return xScale;\n\t  }\n\t\n\t  function buildYScale(_extent) {\n\t    var chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var yScale = d3.scaleLinear().domain(_extent).rangeRound([chartHeight, 0]).nice();\n\t\n\t    return yScale;\n\t  }\n\t\n\t  function buildColorScale() {\n\t    var ids = data.dataBySeries.map(getID);\n\t    var colorScale = d3.scaleOrdinal().range(config.colorSchema.map(function (d) {\n\t      return d.value;\n\t    })).domain(config.colorSchema.map(function (d, i) {\n\t      return d.key || ids[i];\n\t    })).unknown(config.defaultColor);\n\t\n\t    return colorScale;\n\t  }\n\t\n\t  function splitByGroups() {\n\t    var groups = {};\n\t    data.dataBySeries.forEach(function (d) {\n\t      var key = d[_constants.keys.GROUP];\n\t      if (!groups[key]) {\n\t        groups[key] = {\n\t          allValues: [],\n\t          allKeys: []\n\t        };\n\t      }\n\t      groups[key].allValues = groups[key].allValues.concat(d[_constants.keys.VALUES].map(getValue));\n\t      groups[key].allKeys = groups[key].allKeys.concat(d[_constants.keys.VALUES].map(getKey));\n\t    });\n\t\n\t    return groups;\n\t  }\n\t\n\t  function getStackedScales() {\n\t    var allStackHeights = data.dataByKey.map(function (d) {\n\t      return d3.sum(d.series.map(function (dB) {\n\t        return dB.value;\n\t      }));\n\t    });\n\t\n\t    var valuesExtent = d3.extent(allStackHeights);\n\t\n\t    var allKeys = data.flatDataSorted.map(getKey);\n\t    var allUniqueKeys = (0, _common.getUnique)(allKeys);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale([0, valuesExtent[1]]);\n\t\n\t    return {\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getHorizontalScales() {\n\t    var groups = splitByGroups();\n\t\n\t    var hasSecondAxis = data.groupKeys.length > 1;\n\t\n\t    var groupAxis1 = groups[data.groupKeys[0]];\n\t    var allUniqueKeys = groupAxis1.allKeys;\n\t    var valuesExtent = d3.extent(groupAxis1.allValues);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale(valuesExtent);\n\t\n\t    var yScale2 = null;\n\t    if (hasSecondAxis) {\n\t      var groupAxis2 = groups[data.groupKeys[1]];\n\t      var valuesExtent2 = d3.extent(groupAxis2.allValues);\n\t\n\t      yScale2 = yScale.copy().domain(valuesExtent2);\n\t    }\n\t\n\t    return {\n\t      hasSecondAxis: hasSecondAxis,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      yScale2: yScale2,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getScales() {\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      return getStackedScales();\n\t    } else {\n\t      return getHorizontalScales();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    getScales: getScales\n\t  };\n\t}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Line;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Line(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t  }\n\t\n\t  function drawLines() {\n\t    var seriesLine = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    });\n\t\n\t    var seriesLine2 = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var lines = cache.svg.selectAll(\".mark.line\").data(data.dataBySeries);\n\t\n\t    lines.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"line\"].join(\" \");\n\t    }).merge(lines).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === data.groupKeys[0]) {\n\t        return seriesLine(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesLine2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", \"none\");\n\t\n\t    lines.exit().remove();\n\t  }\n\t\n\t  function drawAreas() {\n\t    var seriesArea = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    });\n\t\n\t    var seriesArea2 = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var areas = cache.svg.selectAll(\".mark.area\").data(data.dataBySeries);\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === data.groupKeys[0]) {\n\t        return seriesArea(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesArea2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", getColor);\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawStackedAreas() {\n\t    var seriesLine = d3.area().x(function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[0]);\n\t    }).y1(function (d) {\n\t      return scales.yScale(d[1]);\n\t    });\n\t\n\t    var areas = cache.svg.selectAll(\".mark.stacked-area\").data(data.stack(data.stackData));\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"stacked-area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", seriesLine).style(\"stroke\", \"none\").style(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    });\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"area\") {\n\t      drawAreas();\n\t    } else if (config.chartType === \"line\") {\n\t      drawLines();\n\t    } else if (config.chartType === \"stackedArea\") {\n\t      drawStackedAreas();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Bar;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tfunction Bar(config, cache) {\n\t\n\t  var getColor = function getColor(d) {\n\t    return cache.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function drawBars() {\n\t    var bars = cache.svg.select(\".chart-group\").selectAll(\".mark\").data(cache.dataBySeries[0].values);\n\t\n\t    bars.enter().append(\"rect\").attr(\"class\", function () {\n\t      return [\"mark\", \"rect\"].join(\" \");\n\t    }).merge(bars).attr(\"x\", function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[_constants.keys.VALUE]);\n\t    }).attr(\"width\", function () {\n\t      return cache.xScale.bandwidth();\n\t    }).attr(\"height\", function (d) {\n\t      return cache.chartHeight - cache.yScale(d[_constants.keys.VALUE]);\n\t    }).style(\"stroke\", \"white\").style(\"fill\", getColor);\n\t\n\t    bars.exit().remove();\n\t  }\n\t\n\t  function drawStackedBars() {\n\t\n\t    var stackedBarGroups = cache.svg.select(\".chart-group\").selectAll(\".mark-group\").data(cache.stack(cache.stackData));\n\t\n\t    var stackedUpdate = stackedBarGroups.enter().append(\"g\").attr(\"class\", \"mark-group\").merge(stackedBarGroups).attr(\"fill\", function (d) {\n\t      return cache.colorScale(d.key);\n\t    }).attr(\"stroke\", \"white\");\n\t\n\t    stackedBarGroups.exit().remove();\n\t\n\t    var stackedBars = stackedUpdate.selectAll(\".mark\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    stackedBars.enter().append(\"rect\").attr(\"class\", \"mark\").merge(stackedBars).attr(\"x\", function (d) {\n\t      return cache.xScale(d.data[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[1]);\n\t    }).attr(\"height\", function (d) {\n\t      return cache.yScale(d[0]) - cache.yScale(d[1]);\n\t    }).attr(\"width\", cache.xScale.bandwidth());\n\t\n\t    stackedBars.exit().remove();\n\t  }\n\t\n\t  return {\n\t    drawBars: drawBars,\n\t    drawStackedBars: drawStackedBars\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Axis;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Axis(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    tickSizes: null,\n\t    tickPadding: null,\n\t    xAxisFormat: null,\n\t    yAxisFormat: null,\n\t    y2AxisFormat: null,\n\t    keyType: null,\n\t    yTicks: null,\n\t    y2Ticks: null,\n\t    xTickSkip: null,\n\t    axisTransitionDuration: null,\n\t    ease: null,\n\t    grid: null,\n\t    hoverZoneSize: 30\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    background: null,\n\t    chartHeight: null,\n\t    chartWidth: null,\n\t    xAxis: null,\n\t    yAxis: null,\n\t    yAxis2: null,\n\t    horizontalGridLines: null,\n\t    verticalGridLines: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"axis-group\", true).style(\"pointer-events\", \"none\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis x\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y2\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function buildAxis() {\n\t    cache.xAxis = d3.axisBottom(scales.xScale).tickSize(config.tickSizes, 0).tickPadding(config.tickPadding);\n\t\n\t    if (config.keyType === \"time\") {\n\t      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n\t        var formatter = d3.timeFormat(config.xAxisFormat);\n\t        cache.xAxis.tickFormat(formatter);\n\t      }\n\t    } else {\n\t      cache.xAxis.tickValues(scales.xScale.domain().filter(function (d, i) {\n\t        return !(i % config.xTickSkip);\n\t      }));\n\t    }\n\t\n\t    cache.yAxis = d3.axisLeft(scales.yScale).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.yAxis2 = d3.axisRight(scales.yScale2).ticks(config.y2Ticks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.y2AxisFormat));\n\t    }\n\t  }\n\t\n\t  function drawAxis() {\n\t    buildSVG();\n\t    buildAxis();\n\t\n\t    cache.svg.select(\".axis.x\").attr(\"transform\", \"translate(0, \" + cache.chartHeight + \")\").call(cache.xAxis);\n\t\n\t    cache.svg.select(\".axis.y\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis);\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.svg.select(\".axis.y2\").attr(\"transform\", \"translate(\" + cache.chartWidth + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis2);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawGridLines() {\n\t    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n\t      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.horizontal-grid-line\").data(scales.yScale.ticks(config.yTicks));\n\t\n\t      cache.horizontalGridLines.enter().append(\"line\").attr(\"class\", \"horizontal-grid-line\").merge(cache.horizontalGridLines).transition().duration(config.axisTransitionDuration).attr(\"x2\", cache.chartWidth).attr(\"y1\", scales.yScale).attr(\"y2\", scales.yScale);\n\t\n\t      cache.horizontalGridLines.exit().remove();\n\t    }\n\t\n\t    if (config.grid === \"vertical\" || config.grid === \"full\") {\n\t      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.vertical-grid-line\").data(cache.xAxis.tickValues());\n\t\n\t      cache.verticalGridLines.enter().append(\"line\").attr(\"class\", \"vertical-grid-line\").merge(cache.verticalGridLines).transition().duration(config.axisTransitionDuration).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight).attr(\"x1\", scales.xScale).attr(\"x2\", scales.xScale);\n\t\n\t      cache.verticalGridLines.exit().remove();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    drawAxis: drawAxis,\n\t    drawGridLines: drawGridLines\n\t  };\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.default = Tooltip;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Tooltip(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 2,\n\t      right: 2,\n\t      bottom: 2,\n\t      left: 2\n\t    },\n\t    width: 250,\n\t    height: 45,\n\t\n\t    valueFormat: \".2f\",\n\t\n\t    // Animations\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: [],\n\t\n\t    // from chart\n\t    keyType: \"time\"\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    tooltipDivider: null,\n\t    tooltipBody: null,\n\t    tooltipTitle: null,\n\t    tooltipBackground: null,\n\t    xPosition: null,\n\t    yPosition: null,\n\t    content: null,\n\t    title: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"tooltip-group\").style(\"position\", \"absolute\").style(\"pointer-events\", \"none\");\n\t\n\t      cache.tooltipTitle = cache.root.append(\"div\").attr(\"class\", \"tooltip-title\");\n\t\n\t      cache.tooltipBody = cache.root.append(\"div\").attr(\"class\", \"tooltip-body\");\n\t    }\n\t  }\n\t\n\t  function calculateTooltipPosition(_mouseX, _mouseY) {\n\t    var OFFSET = 4;\n\t    var tooltipSize = cache.root.node().getBoundingClientRect();\n\t    var tooltipX = _mouseX;\n\t    var avoidanceOffset = OFFSET;\n\t    var tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2;\n\t\n\t    if (_mouseX > cache.chartWidth / 2) {\n\t      avoidanceOffset = -tooltipSize.width - OFFSET;\n\t    }\n\t    return [tooltipX + avoidanceOffset, tooltipY];\n\t  }\n\t\n\t  function move() {\n\t    var xPosition = cache.xPosition === \"auto\" ? cache.chartWidth : cache.xPosition;\n\t\n\t    var yPosition = cache.yPosition === \"auto\" ? config.margin.top : cache.yPosition;\n\t\n\t    cache.root.transition().duration(config.mouseChaseDuration).ease(config.tooltipEase).style(\"top\", yPosition + \"px\").style(\"left\", function left() {\n\t      var width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0;\n\t      return xPosition + config.margin.left - width + \"px\";\n\t    });\n\t    return this;\n\t  }\n\t\n\t  function drawContent() {\n\t    var content = cache.content;\n\t    var formatter = d3.format(config.valueFormat);\n\t\n\t    var tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\").data(content);\n\t    var tooltipItemsUpdate = tooltipItems.enter().append(\"div\").attr(\"class\", \"tooltip-item\").merge(tooltipItems);\n\t    tooltipItems.exit().remove();\n\t\n\t    var tooltipItem = tooltipItemsUpdate.selectAll(\".section\").data(function (d) {\n\t      var legendData = [{ key: \"color\", value: scales.colorScale(d[_constants.keys.ID]) }, { key: \"label\", value: d[_constants.keys.LABEL] }];\n\t      if (typeof d[_constants.keys.VALUE] !== \"undefined\") {\n\t        legendData.push({ key: \"value\", value: d[_constants.keys.VALUE] });\n\t      }\n\t      return legendData;\n\t    });\n\t    tooltipItem.enter().append(\"div\").merge(tooltipItem).attr(\"class\", function (d) {\n\t      return [\"section\", d.key].join(\" \");\n\t    }).each(function each(d) {\n\t      var selection = d3.select(this);\n\t      if (d.key === \"color\") {\n\t        selection.style(\"background\", d.value);\n\t      } else if (d.key === \"value\") {\n\t        selection.html(formatter(d.value));\n\t      } else {\n\t        selection.html(d.value);\n\t      }\n\t    });\n\t    tooltipItem.exit().remove();\n\t    return this;\n\t  }\n\t\n\t  function drawTitle() {\n\t    var title = cache.title;\n\t\n\t    if ((typeof title === \"undefined\" ? \"undefined\" : _typeof(title)) === \"object\") {\n\t      title = d3.timeFormat(config.dateFormat)(title);\n\t    }\n\t\n\t    cache.tooltipTitle.html(title);\n\t    return this;\n\t  }\n\t\n\t  function drawTooltip() {\n\t    buildSVG();\n\t    drawTitle();\n\t    drawContent();\n\t    move();\n\t    return this;\n\t  }\n\t\n\t  function setupContent(_series) {\n\t    var series = _series;\n\t\n\t    if (config.seriesOrder.length) {\n\t      series = sortByTopicsOrder(_series);\n\t    } else if (_series.length && _series[0][_constants.keys.LABEL]) {\n\t      series = sortByAlpha(_series);\n\t    }\n\t\n\t    cache.content = series;\n\t    return this;\n\t  }\n\t\n\t  function sortByTopicsOrder(_series) {\n\t    var _order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesOrder;\n\t\n\t    return _order.map(function (orderName) {\n\t      return _series.filter(function (_ref) {\n\t        var name = _ref.name;\n\t        return name === orderName;\n\t      })[0];\n\t    });\n\t  }\n\t\n\t  function sortByAlpha(_series) {\n\t    var series = (0, _common.cloneData)(_series);\n\t    return series.sort(function (a, b) {\n\t      return a[_constants.keys.LABEL].localeCompare(b[_constants.keys.LABEL], \"en\", { numeric: false });\n\t    });\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function setupTooltip(_dataPoint, _xPosition, _yPosition) {\n\t    buildSVG();\n\t\n\t    var _calculateTooltipPosi = calculateTooltipPosition(_xPosition, _yPosition),\n\t        _calculateTooltipPosi2 = _slicedToArray(_calculateTooltipPosi, 2),\n\t        tooltipX = _calculateTooltipPosi2[0],\n\t        tooltipY = _calculateTooltipPosi2[1];\n\t\n\t    setXPosition(tooltipX);\n\t    setYPosition(tooltipY);\n\t    setTitle(_dataPoint[_constants.keys.DATA]);\n\t    setupContent(_dataPoint[_constants.keys.SERIES]);\n\t\n\t    drawTooltip();\n\t    return this;\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.tooltip\", show).on(\"mouseMovePanel.tooltip\", setupTooltip).on(\"mouseOutPanel.tooltip\", hide);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setTitle(_title) {\n\t    cache.title = _title;\n\t    return this;\n\t  }\n\t\n\t  function setXPosition(_xPosition) {\n\t    cache.xPosition = _xPosition;\n\t    return this;\n\t  }\n\t\n\t  function setYPosition(_yPosition) {\n\t    cache.yPosition = _yPosition;\n\t    return this;\n\t  }\n\t\n\t  function setContent(_content) {\n\t    cache.content = _content;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    bindEvents: bindEvents,\n\t    setXPosition: setXPosition,\n\t    setYPosition: setYPosition,\n\t    setContent: setContent,\n\t    setTitle: setTitle,\n\t    hide: hide,\n\t    show: show,\n\t    drawTooltip: drawTooltip,\n\t    setConfig: setConfig,\n\t    setScales: setScales\n\t  };\n\t}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Legend;\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Legend(_container) {\n\t  return (0, _tooltip2.default)(_container);\n\t}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Brush;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Brush(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"brush-group\", true);\n\t    }\n\t  }\n\t\n\t  function extractBrushDimension(_data) {\n\t    var merged = d3.merge(_data.map(function (d) {\n\t      return d[_constants.keys.VALUES];\n\t    }));\n\t    return (0, _common.sortData)(merged, config.keyType);\n\t  }\n\t\n\t  function buildBrush() {\n\t    cache.brush = cache.brush || d3.brushX().on(\"start\", handleBrushStart).on(\"brush\", handleBrushMove).on(\"end\", handleBrushEnd);\n\t\n\t    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]]);\n\t\n\t    cache.chartBrush = cache.svg.call(cache.brush);\n\t\n\t    cache.chartBrush.selectAll(\".brush-rect\").attr(\"height\", cache.chartHeight);\n\t  }\n\t\n\t  function getDataExtent() {\n\t    var selection = d3.event.selection;\n\t    var dataExtent = selection.map(function (d) {\n\t      return (0, _common.invertScale)(scales.xScale, d, config.keyType);\n\t    });\n\t    return dataExtent;\n\t  }\n\t\n\t  function handleBrushStart() {\n\t    dispatcher.call(\"brushStart\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushMove() {\n\t    dispatcher.call(\"brushMove\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushEnd() {\n\t    // Only transition after input, ignore empty selections.\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t\n\t    var dataExtent = getDataExtent();\n\t\n\t    d3.select(this).transition().call(d3.event.target.move, dataExtent.map(scales.xScale));\n\t\n\t    dispatcher.call(\"brushEnd\", this, dataExtent, config);\n\t  }\n\t\n\t  function drawBrush() {\n\t    buildSVG();\n\t\n\t    if (data.dataBySeries) {\n\t      cache.data = extractBrushDimension((0, _common.cloneData)(data.dataBySeries));\n\t      buildBrush();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  // function setBrushByPercentages (_a, _b) {\n\t  //   const x0 = _a * cache.chartWidth\n\t  //   const x1 = _b * cache.chartWidth\n\t\n\t  //   brush.move(chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function setBrushByDates (_dateA, _dateB) {\n\t  //   const x0 = cache.xScale(new Date(_dateA))\n\t  //   const x1 = cache.xScale(new Date(_dateB))\n\t\n\t  //   cache.brush.move(cache.chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function updateHandlers (_dateExtent) {\n\t  //   if (_dateExtent === null) {\n\t  //     cache.handle.attr(\"display\", \"none\")\n\t  //   } else {\n\t  //     cache.handle\n\t  //       .attr(\"display\", null)\n\t  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n\t  //   }\n\t  // }\n\t\n\t  // API\n\t\n\t  /**\n\t   * Gets or Sets the dateRange for the selected part of the brush\n\t   * @param  {String[]} _x Desired dateRange for the graph\n\t   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n\t   * @public\n\t   */\n\t  // function dateRange (_x) {\n\t  //   if (!arguments.length) {\n\t  //     return dateRange\n\t  //   }\n\t  //   dateRange = _x\n\t\n\t  //   if (Array.isArray(dateRange)) {\n\t  //     setBrushByDates(...dateRange)\n\t  //   }\n\t\n\t  //   return this\n\t  // }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    setScales: setScales,\n\t    drawBrush: drawBrush\n\t  };\n\t}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Hover;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Hover(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    dotRadius: null\n\t  };\n\t\n\t  var scales = {\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"hover\");\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"hover-group\", true).style(\"pointer-events\", \"none\");\n\t    }\n\t\n\t    // cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n\t  }\n\t\n\t  function drawHover(_dataPoint, _dataPointXPosition) {\n\t    buildSVG();\n\t\n\t    if (_dataPointXPosition) {\n\t      moveVerticalMarker(_dataPointXPosition);\n\t      drawVerticalMarker();\n\t      if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t        highlightStackedDataPoints(_dataPoint);\n\t      } else {\n\t        highlightDataPoints(_dataPoint);\n\t      }\n\t      dispatcher.call(\"hover\", this, _dataPoint);\n\t    }\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"block\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"none\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function highlightDataPoints(_dataPoint) {\n\t    var dotsData = _dataPoint[_constants.keys.SERIES];\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawHighlightDataPoints(_dotsData) {\n\t    var dots = cache.svg.selectAll(\".dot\").data(_dotsData);\n\t\n\t    dots.enter().append(\"circle\").attr(\"class\", \"dot\").merge(dots).attr(\"cy\", function (d) {\n\t      // if (d[keys.GROUP] === chartCache.groupKeys[0]) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return scales.yScale(d[_constants.keys.VALUE]);\n\t      } else {\n\t        return scales.yScale2(d[_constants.keys.VALUE]);\n\t      }\n\t    }).attr(\"r\", config.dotRadius).style(\"stroke\", \"none\").style(\"fill\", getColor);\n\t\n\t    dots.exit().remove();\n\t  }\n\t\n\t  function highlightStackedDataPoints(_dataPoint) {\n\t    var stackedDataPoint = { key: _dataPoint[_constants.keys.DATA] };\n\t    _dataPoint.series.forEach(function (d) {\n\t      var id = d[_constants.keys.ID];\n\t      stackedDataPoint[id] = d[_constants.keys.VALUE];\n\t    });\n\t\n\t    // const dotsStack = data.stack([stackedDataPoint])\n\t    // const dotsData = dotsStack.map((d) => {\n\t    //   const dot = {value: d[0][1]}\n\t    //   dot[keys.ID] = d.key\n\t    //   return dot\n\t    // })\n\t\n\t    // drawHighlightDataPoints(dotsData)\n\t  }\n\t\n\t  function drawVerticalMarker() {\n\t    var verticalMarkerLine = cache.svg.selectAll(\"line\").data([0]);\n\t\n\t    verticalMarkerLine.enter().append(\"line\").classed(\"vertical-marker\", true).merge(verticalMarkerLine).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight);\n\t\n\t    verticalMarkerLine.exit().remove();\n\t  }\n\t\n\t  function moveVerticalMarker(_verticalMarkerXPosition) {\n\t    cache.svg.attr(\"transform\", \"translate(\" + [_verticalMarkerXPosition, 0] + \")\");\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.hover\", show).on(\"mouseMovePanel.hover\", drawHover).on(\"mouseOutPanel.hover\", hide);\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    bindEvents: bindEvents,\n\t    highlightDataPoints: highlightDataPoints,\n\t    highlightStackedDataPoints: highlightStackedDataPoints,\n\t    drawVerticalMarker: drawVerticalMarker,\n\t    moveVerticalMarker: moveVerticalMarker,\n\t    on: on\n\t  };\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Binning;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Binning(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    autoLabel: \"auto\",\n\t    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n\t    label: \"BIN:\"\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    autoItem: null,\n\t    binningItems: null,\n\t    selectedBin: null,\n\t    isAuto: true\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"change\");\n\t\n\t  function buildSVG() {\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"binning-group\").style(\"float\", \"left\");\n\t\n\t      cache.label = cache.root.append(\"div\").attr(\"class\", \"label\").text(config.label);\n\t\n\t      cache.autoItem = cache.root.append(\"div\").attr(\"class\", \"item item-auto toggleOnOff\").on(\"click.select\", function click() {\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        var toggled = !isSelected;\n\t        setAuto(toggled);\n\t        drawBinning();\n\t        dispatcher.call(\"change\", this, { name: config.autoLabel, isSelected: toggled });\n\t      }).text(config.autoLabel);\n\t\n\t      cache.binningItems = cache.root.selectAll(\".toggleExclusive\").data(config.exclusiveToggle).enter().append(\"div\").attr(\"class\", function (d) {\n\t        return \"item item-\" + d + \" toggleExclusive\";\n\t      }).on(\"click.select\", function click(d) {\n\t        setBinning(d);\n\t        drawBinning();\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        dispatcher.call(\"change\", this, { name: d, isSelected: isSelected });\n\t      }).text(function (d) {\n\t        return d;\n\t      });\n\t    }\n\t\n\t    var LINE_HEIGHT = 20;\n\t    cache.root.style(\"top\", config.margin.top - LINE_HEIGHT).style(\"left\", config.margin.left);\n\t\n\t    changeBinning(cache.selectedBin);\n\t    toggleAuto(cache.isAuto);\n\t  }\n\t\n\t  function changeBinning(_selectedItemName) {\n\t    if (_selectedItemName) {\n\t      (0, _interactors.exclusiveToggle)(cache.binningItems, \".item-\" + _selectedItemName);\n\t    }\n\t  }\n\t\n\t  function toggleAuto(_shouldBeSelected) {\n\t    cache.autoItem.classed(\"selected\", _shouldBeSelected).classed(\"dimmed\", !_shouldBeSelected);\n\t  }\n\t\n\t  function drawBinning() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setBinning(_selectedBin) {\n\t    cache.selectedBin = _selectedBin;\n\t    return this;\n\t  }\n\t\n\t  function setAuto(_isAuto) {\n\t    cache.isAuto = _isAuto;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.root.remove();\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    drawBinning: drawBinning,\n\t    setBinning: setBinning,\n\t    setAuto: setAuto\n\t  };\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toggleOnOff = toggleOnOff;\n\texports.exclusiveToggle = exclusiveToggle;\n\texports.toggle = toggle;\n\texports.blurOnEnter = blurOnEnter;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n\t * @param  {Number} selector A valid selector of the elements to toggle\n\t * @example\n\t * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n\t *\n\t * @return {void}\n\t */\n\t\n\tfunction toggleOnOff(selector, bool) {\n\t  var shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool;\n\t  d3.select(selector).classed(\"selected\", shouldBeSelected).classed(\"dimmed\", !shouldBeSelected);\n\t}\n\t\n\tfunction exclusiveToggle(othersSelection, selector) {\n\t  return toggle(othersSelection, selector, {\n\t    toggleOffIsEnabled: false,\n\t    toggleMultipleIsEnabled: false\n\t  });\n\t}\n\t\n\tfunction toggle(othersSelection, selector) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { toggleOffIsEnabled: false, toggleMultipleIsEnabled: false };\n\t\n\t  /* eslint-disable consistent-this */\n\t  var hasSelection = false;\n\t  var selectionNode = document.querySelector(selector);\n\t\n\t  othersSelection.classed(\"selected\", function selectedClass() {\n\t    var isSelected = this.classList.contains(\"selected\");\n\t    var hasJustBeenClicked = this === selectionNode;\n\t    var shouldBeSelected = false;\n\t\n\t    if (hasJustBeenClicked) {\n\t      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true;\n\t    } else {\n\t      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false;\n\t    }\n\t\n\t    hasSelection = hasSelection || shouldBeSelected;\n\t    return shouldBeSelected;\n\t  });\n\t\n\t  othersSelection.classed(\"dimmed\", function dimmedClass() {\n\t    return hasSelection && !this.classList.contains(\"selected\");\n\t  });\n\t  /* eslint-enable consistent-this */\n\t}\n\t\n\tfunction blurOnEnter(selection) {\n\t  selection.on(\"keypress.enter\", function keypress() {\n\t    if (d3.event.key === \"Enter\") {\n\t      this.blur();\n\t    }\n\t  });\n\t}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DomainEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction DomainEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xHitZone: null,\n\t    yHitZone: null,\n\t    y2HitZone: null,\n\t    yMaxInput: null,\n\t    yMinInput: null,\n\t    yLockIcon: null,\n\t    y2MaxInput: null,\n\t    y2MinInput: null,\n\t    y2LockIcon: null,\n\t    xMinInput: null,\n\t    xMaxInput: null,\n\t    xLockIcon: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    xDomain: null,\n\t    yDomain: null,\n\t    y2Domain: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"domain-input-group\").style(\"position\", \"absolute\").style(\"top\", 0);\n\t\n\t      // hit zones\n\t      cache.xHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone x\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showXEditor).on(\"mouseout.dispatch\", hideXEditor);\n\t\n\t      cache.yHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showYEditor).on(\"mouseout.dispatch\", hideYEditor);\n\t\n\t      cache.y2HitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y2\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showY2Editor).on(\"mouseout.dispatch\", hideY2Editor);\n\t\n\t      // y input group\n\t      cache.yMaxInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yMinInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yLockIcon = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-lock y\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y\" });\n\t      });\n\t\n\t      // y2 input group\n\t      cache.y2MaxInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y2\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2MinInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y2\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2LockIcon = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-lock y2\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y2\" });\n\t      });\n\t\n\t      // x input group\n\t      cache.xMinInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"x\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xMaxInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"x\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xLockIcon = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-lock x\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"x\" });\n\t      });\n\t\n\t      hideYEditor();\n\t      hideY2Editor();\n\t      hideXEditor();\n\t    }\n\t\n\t    var HOVER_ZONE_SIZE = 40;\n\t    var LOCK_SIZE = 12;\n\t    var INPUT_HEIGHT = 12;\n\t    var PADDING = 4;\n\t    var INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING;\n\t\n\t    cache.xHitZone.style(\"width\", cache.chartWidth + HOVER_ZONE_SIZE * 2 + \"px\").style(\"height\", HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top + cache.chartHeight + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.yHitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.y2HitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left + cache.chartWidth + \"px\");\n\t\n\t    cache.yMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").text(Array.isArray(cache.yDomain) && !isNaN(cache.yDomain[1]) ? cache.yDomain[1] : \"\");\n\t\n\t    cache.yMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").text(Array.isArray(cache.yDomain) && !isNaN(cache.yDomain[0]) ? cache.yDomain[0] : \"\");\n\t\n\t    cache.yLockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.y2MaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").style(\"left\", PADDING + \"px\").text(Array.isArray(cache.y2Domain) && !isNaN(cache.y2Domain[1]) ? cache.y2Domain[1] : \"\");\n\t\n\t    cache.y2MinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").style(\"left\", PADDING + \"px\").text(Array.isArray(cache.y2Domain) && !isNaN(cache.y2Domain[0]) ? cache.y2Domain[0] : \"\");\n\t\n\t    cache.y2LockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.xMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + \"px\").text(Array.isArray(cache.xDomain) && typeof cache.xDomain[0] !== \"undefined\" ? cache.xDomain[0] : \"\");\n\t\n\t    cache.xMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH + \"px\").text(Array.isArray(cache.xDomain) && typeof cache.xDomain[1] !== \"undefined\" ? cache.xDomain[1] : \"\");\n\t\n\t    cache.xLockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth + \"px\");\n\t  }\n\t\n\t  function showYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function drawDomainEditor() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setXDomain(_xDomain) {\n\t    cache.xDomain = _xDomain;\n\t    return this;\n\t  }\n\t\n\t  function setYDomain(_yDomain) {\n\t    cache.yDomain = _yDomain;\n\t    return this;\n\t  }\n\t\n\t  function setY2Domain(_y2Domain) {\n\t    cache.y2Domain = _y2Domain;\n\t    return this;\n\t  }\n\t\n\t  function setXLock(_xLock) {\n\t    cache.xLock = _xLock;\n\t    return this;\n\t  }\n\t\n\t  function setYLock(_yLock) {\n\t    cache.yLock = _yLock;\n\t    return this;\n\t  }\n\t\n\t  function setY2Lock(_y2Lock) {\n\t    cache.y2Lock = _y2Lock;\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXDomain: setXDomain,\n\t    setYDomain: setYDomain,\n\t    setY2Domain: setY2Domain,\n\t    setXLock: setXLock,\n\t    setYLock: setYLock,\n\t    setY2Lock: setY2Lock,\n\t    drawDomainEditor: drawDomainEditor\n\t  };\n\t}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = BrushRangeEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction BrushRangeEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    inputMin: null,\n\t    inputMax: null,\n\t    rangeMin: null,\n\t    rangeMax: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"rangeChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"brush-range-input-group\").style(\"top\", 0);\n\t\n\t      cache.inputMax = cache.root.append(\"div\").attr(\"class\", \"brush-range-input max\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMax = cache.inputMax.text();\n\t        dispatcher.call(\"rangeChange\", this, { value: cache.rangeMax, type: \"max\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t\n\t      cache.root.append(\"div\").attr(\"class\", \"separator\").text(\"-\").style(\"float\", \"right\");\n\t\n\t      cache.inputMin = cache.root.append(\"div\").attr(\"class\", \"brush-range-input min\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMin = cache.inputMin.text();\n\t        dispatcher.call(\"rangeChange\", this, { value: cache.rangeMin, type: \"min\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t    }\n\t\n\t    cache.inputMin.text(cache.rangeMin || \"\");\n\t    cache.inputMax.text(cache.rangeMax || \"\");\n\t  }\n\t\n\t  function drawRangeEditor() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setRangeMin(_rangeMin) {\n\t    cache.rangeMin = _rangeMin;\n\t    return this;\n\t  }\n\t\n\t  function setRangeMax(_rangeMax) {\n\t    cache.rangeMax = _rangeMax;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    drawRangeEditor: drawRangeEditor,\n\t    setRangeMin: setRangeMin,\n\t    setRangeMax: setRangeMax\n\t  };\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Label;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Label(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xAxisLabel: null,\n\t    yAxisLabel: null,\n\t    y2AxisLabel: null,\n\t    xLabel: null,\n\t    yLabel: null,\n\t    y2Label: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"axisLabelChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"label-group\").style(\"position\", \"absolute\").style(\"top\", 0).style(\"white-space\", \"nowrap\");\n\t\n\t      cache.xAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label x\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.xLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"x\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%)\");\n\t\n\t      cache.yAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.yLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"left\", 0).style(\"transform\", \"translate(-50%) rotate(-90deg)\");\n\t\n\t      cache.y2AxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y2\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.y2Label = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y2\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%) rotate(90deg)\");\n\t    }\n\t\n\t    cache.xAxisLabel.text(config.xLabel).style(\"top\", function top() {\n\t      var textHeight = this.getBoundingClientRect().height;\n\t      return config.height - textHeight + \"px\";\n\t    }).style(\"left\", config.margin.left + cache.chartWidth / 2 + \"px\");\n\t\n\t    cache.yAxisLabel.text(config.yLabel).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return textWidth / 2 + \"px\";\n\t    });\n\t\n\t    cache.y2AxisLabel.text(config.y2Label).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return config.width - textWidth / 2 + \"px\";\n\t    });\n\t  }\n\t\n\t  function drawLabels() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setXLabels(_xLabel) {\n\t    config.xLabel = _xLabel;\n\t    return this;\n\t  }\n\t\n\t  function setYLabels(_yLabel) {\n\t    config.yLabel = _yLabel;\n\t    return this;\n\t  }\n\t\n\t  function setY2Labels(_y2Label) {\n\t    config.y2Label = _y2Label;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXLabels: setXLabels,\n\t    setYLabels: setYLabels,\n\t    setY2Labels: setY2Labels,\n\t    drawLabels: drawLabels\n\t  };\n\t}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.merge = exports.range = exports.sum = exports.extent = exports.bisector = undefined;\n\t\n\tvar _d3Array = __webpack_require__(21);\n\t\n\tObject.defineProperty(exports, \"bisector\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.bisector;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.extent;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.sum;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.range;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.merge;\n\t  }\n\t});\n\texports.default = DataManager;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction DataManager() {\n\t  /* eslint-disable no-magic-numbers */\n\t  var config = {\n\t    keyType: \"number\", // number, string, time,\n\t    range: [0, 100],\n\t    pointCount: 200,\n\t    groupCount: 2,\n\t    lineCount: 4\n\t  };\n\t  var cache = {\n\t    data: null,\n\t    baseDate: null\n\t  };\n\t\n\t  function generateRandomString(_length) {\n\t    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5);\n\t  }\n\t\n\t  function generateSeries(_dataKeys, _range, _allowNegative) {\n\t    var value = d3.randomUniform.apply(d3, _toConsumableArray(_range))();\n\t    var variabilityRatio = 50;\n\t    var randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio;\n\t    var rnd = d3.randomNormal(0, 1);\n\t    return _dataKeys.map(function (d) {\n\t      value = value + rnd() * randomWalkStepSize;\n\t      if (!_allowNegative && value < randomWalkStepSize) {\n\t        value = value + randomWalkStepSize;\n\t      }\n\t      return {\n\t        value: value,\n\t        key: config.keyType === \"time\" ? d.toISOString() : d\n\t      };\n\t    });\n\t  }\n\t\n\t  function generateTestDataset() {\n\t    var dataKeys = null;\n\t    if (config.keyType === \"time\") {\n\t      cache.baseDate = new Date();\n\t      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate));\n\t    } else if (config.keyType === \"string\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function () {\n\t        return generateRandomString();\n\t      });\n\t      dataKeys.sort(function (a, b) {\n\t        return a.localeCompare(b, \"en\", { numeric: false });\n\t      });\n\t    } else if (config.keyType === \"number\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function (d, i) {\n\t        return i;\n\t      });\n\t    }\n\t\n\t    var series = d3.range(config.lineCount).map(function (d) {\n\t      return {\n\t        label: \"Label \" + d,\n\t        id: d,\n\t        group: d < config.groupCount ? d : 0,\n\t        values: generateSeries(dataKeys, config.range)\n\t      };\n\t    });\n\t\n\t    cache.data = { series: series\n\t\n\t      // console.log(\"generated data\", cache.data)\n\t\n\t    };return cache.data;\n\t  }\n\t\n\t  function filterByKey(_extent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      var values = series[_constants.keys.VALUES];\n\t      var allKeys = values.map(function (d) {\n\t        return d[_constants.keys.DATA];\n\t      });\n\t      var extentMinIndex = allKeys.indexOf(_extent[0]);\n\t      var extentMaxIndex = allKeys.indexOf(_extent[1]);\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].slice(extentMinIndex, extentMaxIndex);\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function filterByDate(_dateExtent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].filter(function (d) {\n\t        var epoch = new Date(d[_constants.keys.DATA]).getTime();\n\t        return epoch >= _dateExtent[0].getTime() && epoch <= _dateExtent[1].getTime();\n\t      });\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    generateTestDataset: generateTestDataset,\n\t    generateSeries: generateSeries,\n\t    filterByDate: filterByDate,\n\t    filterByKey: filterByKey,\n\t    setConfig: setConfig\n\t  };\n\t}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Observer;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Observer(_dataManager) {\n\t  var dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\");\n\t  var dataManager = _dataManager;\n\t\n\t  dispatcher.on(\"brushChange.observer\", function (_e, _brushConfig) {\n\t    var filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e) : dataManager.filterByKey(_e);\n\t    pub(\"dataFilter\", filtered);\n\t  });\n\t\n\t  function sub() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function pub(_channelName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    dispatcher.call.apply(dispatcher, [_channelName, this].concat(args));\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    sub: sub,\n\t    pub: pub\n\t  };\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// mapd3.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8174a3fe72e861c290e4","import Chart from \"./charts/chart.js\"\nimport Tooltip from \"./charts/tooltip.js\"\nimport Legend from \"./charts/legend.js\"\nimport DataManager from \"./charts/data-manager.js\"\nimport Observer from \"./charts/observer.js\"\nimport Binning from \"./charts/binning.js\"\nimport DomainEditor from \"./charts/domain-editor.js\"\nimport BrushRangeEditor from \"./charts/brush-range-editor.js\"\nimport Label from \"./charts/label.js\"\nimport Brush from \"./charts/brush.js\"\nimport Hover from \"./charts/hover.js\"\nimport Interactors from \"./charts/interactors.js\"\nimport {colors} from \"./charts/helpers/colors.js\"\n\nexport {\n  Chart,\n  Tooltip,\n  Legend,\n  DataManager,\n  Observer,\n  Binning,\n  DomainEditor,\n  BrushRangeEditor,\n  Label,\n  Brush,\n  Hover,\n  Interactors,\n  colors\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {colors} from \"./helpers/colors\"\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, getUnique, invertScale, sortData, override, throttle, rebind} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\nimport Line from \"./line\"\nimport Bar from \"./bar\"\nimport Axis from \"./axis\"\nimport Tooltip from \"./tooltip\"\nimport Legend from \"./legend\"\nimport Brush from \"./brush\"\nimport Hover from \"./hover\"\nimport Binning from \"./binning\"\nimport DomainEditor from \"./domain-editor\"\nimport BrushRangeEditor from \"./brush-range-editor\"\nimport Label from \"./label\"\n\nexport default function Chart (_container) {\n\n  let config = {\n    // common\n    margin: {\n      top: 48,\n      right: 32,\n      bottom: 48,\n      left: 32\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    chartType: \"line\", // line, area, stackedLine, stackedArea\n    ease: d3.easeLinear,\n\n    // intro animation\n    isAnimated: false,\n    animationDuration: 1500,\n\n    // scale\n    colorSchema: colors.mapdColors.map((d) => ({value: d})),\n    defaultColor: \"skyblue\",\n\n    // axis\n    tickPadding: 5,\n    xAxisFormat: \"auto\",\n    yAxisFormat: \".2f\",\n    y2AxisFormat: \".2f\",\n    tickSizes: 8,\n    yTicks: 5,\n    y2Ticks: 5,\n    xTickSkip: 0,\n    grid: null,\n    axisTransitionDuration: 0,\n\n    xTitle: \"\",\n    yTitle: \"\",\n\n    // hover\n    dotRadius: 4,\n\n    // tooltip\n    valueFormat: \".2f\",\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: [],\n\n    // legend\n    legendXPosition: \"auto\",\n    legendYPosition: \"auto\",\n    legendTitle: \"\",\n\n    // binning\n    binningReolution: \"1mo\",\n    binningIsAuto: true,\n\n    // domain\n    xDomain: null,\n    yDomain: null,\n    y2Domain: null,\n\n    // brush range\n    brushRangeMin: null,\n    brushRangeMax: null,\n\n    // label\n    xLabel: \"\",\n    yLabel: \"\",\n    y2Label: \"\"\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    panel: null,\n    margin: null,\n    maskingRectangle: null,\n    chartWidth: null, chartHeight: null,\n    xAxis: null, yAxis: null, yAxis2: null\n  }\n\n  const dataObject = {\n    dataBySeries: null,\n    dataByKey: null,\n    data: null,\n    groupKeys: [],\n    hasSecondAxis: false,\n    stackData: null,\n    stack: null,\n    flatDataSorted: null\n  }\n\n  let components = {}\n  let eventCollector = {}\n\n  // accessors\n  const getKey = (d) => d[keys.DATA]\n  const getGroup = (d) => d[keys.GROUP]\n  const getID = (d) => d[keys.ID]\n\n  // events\n  const dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\")\n\n  function render () {\n    buildSVG()\n\n    if (dataObject.dataBySeries) {\n      buildChart()\n    }\n\n    return this\n  }\n\n  function buildSVG () {\n    const w = config.width || cache.container.clientWidth\n    const h = config.height || cache.container.clientHeight\n    cache.chartWidth = w - config.margin.left - config.margin.right\n    cache.chartHeight = h - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      const template = `<div class=\"mapd3 mapd3-container\">\n        <div class=\"header-group\"></div>\n        <svg class=\"chart\">\n          <g class=\"chart-group\"></g>\n          <g class=\"panel-group\">\n            <rect class=\"panel-background\"></rect>\n          </g>\n          <rect class=\"masking-rectangle\"></rect>\n        </svg>\n      </div>`\n\n      const base = d3.select(cache.container)\n          .html(template)\n\n      cache.container = base.select(\".mapd3-container\")\n          .style(\"position\", \"relative\")\n\n      cache.svg = base.select(\"svg\")\n      cache.headerGroup = base.select(\".header-group\")\n          .style(\"position\", \"absolute\")\n      cache.panel = cache.svg.select(\".panel-group\")\n      cache.chart = cache.svg.select(\".chart-group\")\n\n      addEvents()\n\n      Object.assign(components, {\n        scale: Scale(),\n        axis: Axis(cache.chart),\n        line: Line(cache.panel),\n        tooltip: Tooltip(cache.container),\n        legend: Legend(cache.container),\n        brush: Brush(cache.panel),\n        hover: Hover(cache.panel),\n        binning: Binning(cache.headerGroup),\n        domainEditor: DomainEditor(cache.container),\n        brushRangeEditor: BrushRangeEditor(cache.headerGroup),\n        label: Label(cache.container)\n      })\n\n      Object.assign(eventCollector, {\n        onBrush: rebind(components.brush),\n        onHover: rebind(components.hover),\n        onBinning: rebind(components.binning),\n        onDomainEditor: rebind(components.domainEditor),\n        onBrushRangeEditor: rebind(components.brushRangeEditor),\n        onLabel: rebind(components.label),\n        onPanel: rebind(dispatcher)\n      })\n    }\n\n    cache.svg\n      .attr(\"width\", config.width)\n      .attr(\"height\", config.height)\n\n    cache.headerGroup\n      .style(\"width\", cache.chartWidth)\n      .style(\"left\", config.margin.left)\n\n    cache.panel\n      .attr(\"transform\", `translate(${config.margin.left},${config.margin.top})`)\n      .select(\".panel-background\")\n      .attr(\"width\", cache.chartWidth)\n      .attr(\"height\", cache.chartHeight)\n      .attr(\"fill\", \"transparent\")\n\n\n    return this\n  }\n\n  function buildChart () {\n    components.scale\n      .setConfig(config)\n      .setData(dataObject)\n    scales = components.scale.getScales()\n\n    components.axis\n      .setConfig(config)\n      .setScales(scales)\n      .drawAxis()\n      .drawGridLines()\n\n    components.line\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawMarks()\n\n    components.tooltip\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n\n    const legendContent = dataObject.dataBySeries\n        .map((d) => ({\n          id: d.id,\n          key: d.key,\n          label: d.label\n        }))\n\n    components.legend\n      .setConfig(config)\n      .setScales(scales)\n      .setTitle(config.legendTitle)\n      .setContent(legendContent)\n      .setXPosition(config.legendXPosition)\n      .setYPosition(config.legendYPosition)\n      .drawTooltip()\n      .show()\n\n    components.brush\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawBrush()\n\n    components.hover\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n\n    components.binning\n      .setConfig(config)\n      .setBinning(config.binningReolution)\n      .setAuto(config.binningIsAuto)\n      .drawBinning()\n\n    components.domainEditor\n      .setConfig(config)\n      .setXDomain(config.xDomain)\n      .setYDomain(config.yDomain)\n      .setY2Domain(config.y2Domain)\n      .drawDomainEditor()\n\n    components.brushRangeEditor\n      .setConfig(config)\n      .setRangeMin(config.brushRangeMin)\n      .setRangeMax(config.brushRangeMax)\n      .drawRangeEditor()\n\n    components.label\n      .setConfig(config)\n      .setXLabels(config.xLabel)\n      .setYLabels(config.yLabel)\n      .setY2Labels(config.y2Label)\n      .drawLabels()\n\n    triggerIntroAnimation()\n    return this\n  }\n\n  function setData (_data) {\n    dataObject.data = cloneData(_data[keys.SERIES])\n    const cleanedData = cleanData(_data)\n    Object.assign(dataObject, cleanedData)\n\n    render()\n    return this\n  }\n\n  function cleanData (_data) {\n    const dataBySeries = cloneData(_data[keys.SERIES])\n    const flatData = []\n\n    // Normalize dataBySeries\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES] = sortData(serie[keys.VALUES], config.keyType)\n      serie[keys.VALUES].forEach((d) => {\n        d[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        d[keys.VALUE] = Number(d[keys.VALUE])\n      })\n    })\n\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES].forEach((d) => {\n        const dataPoint = {}\n        dataPoint[keys.LABEL] = serie[keys.LABEL]\n        dataPoint[keys.GROUP] = serie[keys.GROUP]\n        dataPoint[keys.ID] = serie[keys.ID]\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        dataPoint[keys.VALUE] = d[keys.VALUE]\n        flatData.push(dataPoint)\n      })\n    })\n\n    const flatDataSorted = sortData(flatData, config.keyType)\n\n    const dataByKey = d3.nest()\n      .key(getKey)\n      .entries(flatDataSorted)\n      .map((d) => {\n        const dataPoint = {}\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key\n        dataPoint[keys.SERIES] = d.values\n        return dataPoint\n      })\n\n    const allGroupKeys = dataBySeries.map(getGroup)\n    const groupKeys = getUnique(allGroupKeys)\n\n    let stackData = null\n    let stack = null\n\n    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n      stackData = dataByKey\n          .map((d) => {\n            const points = {\n              key: d[keys.DATA]\n            }\n            d.series.forEach((dB) => {\n              points[dB[keys.ID]] = dB[keys.VALUE]\n            })\n\n            return points\n          })\n\n      stack = d3.stack()\n          .keys(dataBySeries.map(getID))\n          .order(d3.stackOrderNone)\n          .offset(d3.stackOffsetNone)\n    }\n\n    return {dataBySeries, dataByKey, stack, stackData, flatDataSorted, groupKeys}\n  }\n\n  function triggerIntroAnimation () {\n    if (config.isAnimated) {\n      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\")\n        .attr(\"width\", cache.chartWidth - 2)\n        .attr(\"height\", cache.chartHeight)\n        .attr(\"x\", config.margin.left + 1)\n        .attr(\"y\", config.margin.top)\n\n      cache.maskingRectangle.transition()\n        .duration(config.animationDuration)\n        .ease(config.ease)\n        .attr(\"width\", 0)\n        .attr(\"x\", config.width - config.margin.right)\n        .on(\"end\", () => cache.maskingRectangle.remove())\n    }\n  }\n\n  function getNearestDataPoint (_mouseX) {\n    const keyFromInvertedX = invertScale(scales.xScale, _mouseX, config.keyType)\n    const bisectLeft = d3.bisector(getKey).left\n    const dataEntryIndex = bisectLeft(dataObject.dataByKey, keyFromInvertedX)\n    const dataEntryForXPosition = dataObject.dataByKey[dataEntryIndex]\n    let nearestDataPoint = null\n\n    if (keyFromInvertedX) {\n      nearestDataPoint = dataEntryForXPosition\n    }\n    return nearestDataPoint\n  }\n\n  function addEvents () {\n    const THROTTLE_DELAY = 20\n    const throttledDispatch = throttle((...args) => {\n      dispatcher.call(...args)\n    }, THROTTLE_DELAY)\n\n    cache.panel\n      .on(\"mouseover.dispatch\", () => {\n        dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mouseout.dispatch\", () => {\n        dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mousemove.dispatch\", () => {\n        const [mouseX, mouseY] = d3.mouse(cache.panel.node())\n        if (!dataObject.data) { return }\n        const xPosition = mouseX\n        const dataPoint = getNearestDataPoint(xPosition)\n\n        if (dataPoint) {\n          const dataPointXPosition = scales.xScale(dataPoint[keys.DATA])\n          throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY)\n        }\n      })\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.on(\".\", null).remove()\n  }\n\n  return {\n    render,\n    setConfig,\n    setData,\n    on,\n    destroy,\n    events: eventCollector\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/chart.js","export {\n\taxisBottom,\n\taxisLeft,\n\taxisRight,\n\ttimeFormat,\n\tformat,\n\tbisector,\n\textent,\n\tsum,\n\trange,\n\tmerge,\n\tnest,\n\tdispatch,\n\teaseLinear,\n\teaseQuadInOut,\n\tselect,\n\tmouse,\n\tevent,\n\ttransition,\n\trandomUniform,\n\trandomNormal,\n\ttimeDay,\n\ttimeMonth,\n\tarea,\n\tcurveCatmullRom,\n\tline,\n\tstack,\n\tstackOffsetNone,\n\tstackOrderNone,\n\tscaleTime,\n\tscalePoint,\n\tscaleBand,\n\tscaleLinear,\n\tscaleOrdinal,\n\tbrushX\n} from \"d3/build/d3\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/d3-service.js","// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.11.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function constrain(transform$$1, extent) {\n    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n    return transform$$1.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","export const mapdUI = {\n  skyBlue: \"#22A7F0\"\n}\n\nexport const mapdColors = [\n  \"#ea5545\",\n  \"#bdcf32\",\n  \"#b33dc6\",\n  \"#ef9b20\",\n  \"#87bc45\",\n  \"#f46a9b\",\n  \"#ace5c7\",\n  \"#ede15b\",\n  \"#836dc5\",\n  \"#86d87f\",\n  \"#27aeef\"\n]\n\nexport const grey = [\n  \"#F8F8FA\",\n  \"#EFF2F5\",\n  \"#D2D6DF\",\n  \"#C3C6CF\",\n  \"#ADB0B6\",\n  \"#666A73\",\n  \"#45494E\",\n  \"#363A43\",\n  \"#282C35\"\n]\n\nexport const colors = {\n  mapdUI,\n  mapdColors,\n  grey\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","export const keys = {\n  DATA: \"key\",\n  VALUE: \"value\",\n  ID: \"id\",\n  LABEL: \"label\",\n  GROUP: \"group\",\n  VALUES: \"values\",\n  SERIES: \"series\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","import {keys} from \"./constants\"\n\n/**\n * Clones the passed array of data\n * @param  {Object[]} dataToClone Data to clone\n * @return {Object[]}             Cloned data\n */\nexport function cloneData (_dataToClone) {\n  return JSON.parse(JSON.stringify(_dataToClone))\n}\n\nexport function sortData (_data, _keyType) {\n  const sortedData = cloneData(_data)\n  if (_keyType === \"time\") {\n    sortedData.forEach((d) => {\n      d[keys.DATA] = new Date(d[keys.DATA])\n    })\n    sortedData.sort((a, b) => a[keys.DATA].getTime() - b[keys.DATA].getTime())\n  } else if (_keyType === \"string\") {\n    sortedData.sort((a, b) => a[keys.DATA].localeCompare(b[keys.DATA], \"en\", {numeric: false}))\n  } else {\n    sortedData.sort((a, b) => a[keys.DATA] - b[keys.DATA])\n  }\n  return sortedData\n}\n\nexport function getUnique (arr) {\n  return [...new Set(arr)]\n}\n\nexport function invertScale (_scale, _mouseX, _keyType) {\n  if (_keyType === \"time\" || _keyType === \"number\") {\n    return _scale.invert(_mouseX)\n  } else {\n    const bandStep = _scale.step()\n    const index = Math.round((_mouseX) / bandStep)\n    return _scale.domain()[index]\n  }\n}\n\nexport function override (a, b) {\n  const accum = {}\n  for (const x in a) {\n    if (a.hasOwnProperty(x)) {\n      accum[x] = (x in b) ? b[x] : a[x]\n    }\n  }\n  return accum\n}\n\nexport function throttle (callback, limit) {\n  let wait = false\n  let timer = null\n  return function throttleFn (...args) {\n    if (!wait) {\n      wait = true\n      clearTimeout(timer)\n      timer = setTimeout(() => {\n        wait = false\n        callback(...args)\n      }, limit)\n    }\n  }\n}\n\nexport function rebind (target) {\n  return function reapply (...args) {\n    target.on(`${args[0]}.rebind`, ...args.slice(1))\n    return this\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {getUnique, override} from \"./helpers/common\"\n\nexport default function Scale () {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    height: null,\n    width: null,\n    keyType: null,\n    chartType: null,\n    colorSchema: null,\n    defaultColor: null\n  }\n\n  let data = {\n    dataByKey: null,\n    dataBySeries: null,\n    flatDataSorted: null,\n    groupKeys: null\n  }\n\n  const getID = (d) => d[keys.ID]\n  const getKey = (d) => d[keys.DATA]\n  const getValue = (d) => d[keys.VALUE]\n\n  function buildXScale (_allKeys) {\n    const chartWidth = config.width - config.margin.left - config.margin.right\n    let domain = null\n    let xScale = null\n    if (config.keyType === \"time\") {\n      domain = d3.extent(_allKeys)\n      xScale = d3.scaleTime()\n    } else if (config.keyType === \"number\") {\n      domain = d3.extent(_allKeys)\n      xScale = d3.scaleLinear()\n    } else {\n      domain = _allKeys\n      xScale = (config.chartType === \"bar\" || config.chartType === \"stackedBar\") ? d3.scaleBand() : d3.scalePoint()\n      xScale.padding(0)\n    }\n\n    xScale.domain(domain)\n      .range([0, chartWidth])\n\n    return xScale\n  }\n\n  function buildYScale (_extent) {\n    const chartHeight = config.height - config.margin.top - config.margin.bottom\n    const yScale = d3.scaleLinear()\n        .domain(_extent)\n        .rangeRound([chartHeight, 0])\n        .nice()\n\n    return yScale\n  }\n\n  function buildColorScale () {\n    const ids = data.dataBySeries.map(getID)\n    const colorScale = d3.scaleOrdinal()\n        .range(config.colorSchema.map((d) => d.value))\n        .domain(config.colorSchema.map((d, i) => d.key || ids[i]))\n        .unknown(config.defaultColor)\n\n    return colorScale\n  }\n\n  function splitByGroups () {\n    const groups = {}\n    data.dataBySeries.forEach((d) => {\n      const key = d[keys.GROUP]\n      if (!groups[key]) {\n        groups[key] = {\n          allValues: [],\n          allKeys: []\n        }\n      }\n      groups[key].allValues = groups[key].allValues.concat(d[keys.VALUES].map(getValue))\n      groups[key].allKeys = groups[key].allKeys.concat(d[keys.VALUES].map(getKey))\n    })\n\n    return groups\n  }\n\n  function getStackedScales () {\n    const allStackHeights = data.dataByKey.map((d) => d3.sum(d.series.map((dB) => dB.value)))\n\n    const valuesExtent = d3.extent(allStackHeights)\n\n    const allKeys = data.flatDataSorted.map(getKey)\n    const allUniqueKeys = getUnique(allKeys)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale([0, valuesExtent[1]])\n\n    return {\n      xScale,\n      yScale,\n      colorScale\n    }\n  }\n\n  function getHorizontalScales () {\n    const groups = splitByGroups()\n\n    const hasSecondAxis = data.groupKeys.length > 1\n\n    const groupAxis1 = groups[data.groupKeys[0]]\n    const allUniqueKeys = groupAxis1.allKeys\n    const valuesExtent = d3.extent(groupAxis1.allValues)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale(valuesExtent)\n\n    let yScale2 = null\n    if (hasSecondAxis) {\n      const groupAxis2 = groups[data.groupKeys[1]]\n      const valuesExtent2 = d3.extent(groupAxis2.allValues)\n\n      yScale2 = yScale.copy()\n        .domain(valuesExtent2)\n    }\n\n    return {\n      hasSecondAxis,\n      xScale,\n      yScale,\n      yScale2,\n      colorScale\n    }\n  }\n\n  function getScales () {\n    if (config.chartType === \"stackedBar\"\n      || config.chartType === \"stackedArea\") {\n      return getStackedScales()\n    } else {\n      return getHorizontalScales()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setData,\n    getScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/scale.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Line (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    yScale2: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n  }\n\n  function drawLines () {\n    const seriesLine = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale(d[keys.VALUE]))\n\n    const seriesLine2 = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale2(d[keys.VALUE]))\n        .curve(d3.curveCatmullRom)\n\n    const lines = cache.svg.selectAll(\".mark.line\")\n        .data(data.dataBySeries)\n\n    lines.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"line\"].join(\" \"))\n      .merge(lines)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === data.groupKeys[0]) {\n          return seriesLine(d[keys.VALUES])\n        } else {\n          return seriesLine2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", \"none\")\n\n    lines.exit().remove()\n  }\n\n  function drawAreas () {\n    const seriesArea = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n\n    const seriesArea2 = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale2(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n        .curve(d3.curveCatmullRom)\n\n    const areas = cache.svg.selectAll(\".mark.area\")\n        .data(data.dataBySeries)\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === data.groupKeys[0]) {\n          return seriesArea(d[keys.VALUES])\n        } else {\n          return seriesArea2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", getColor)\n\n    areas.exit().remove()\n  }\n\n  function drawStackedAreas () {\n    const seriesLine = d3.area()\n        .x((d) => scales.xScale(d.data[keys.DATA]))\n        .y0((d) => scales.yScale(d[0]))\n        .y1((d) => scales.yScale(d[1]))\n\n    const areas = cache.svg.selectAll(\".mark.stacked-area\")\n        .data(data.stack(data.stackData))\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"stacked-area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", seriesLine)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", (d) => scales.colorScale(d.key))\n\n    areas.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"area\") {\n      drawAreas()\n    } else if (config.chartType === \"line\") {\n      drawLines()\n    } else if (config.chartType === \"stackedArea\") {\n      drawStackedAreas()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","import {keys} from \"./helpers/constants\"\n\nexport default function Bar (config, cache) {\n\n  const getColor = (d) => cache.colorScale(d[keys.ID])\n\n  function drawBars () {\n    const bars = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark\")\n        .data(cache.dataBySeries[0].values)\n\n    bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", () => [\"mark\", \"rect\"].join(\" \"))\n      .merge(bars)\n      .attr(\"x\", (d) => cache.xScale(d[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[keys.VALUE]))\n      .attr(\"width\", () => cache.xScale.bandwidth())\n      .attr(\"height\", (d) => cache.chartHeight - cache.yScale(d[keys.VALUE]))\n      .style(\"stroke\", \"white\")\n      .style(\"fill\", getColor)\n\n    bars.exit().remove()\n  }\n\n  function drawStackedBars () {\n\n    const stackedBarGroups = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark-group\")\n        .data(cache.stack(cache.stackData))\n\n    const stackedUpdate = stackedBarGroups.enter()\n      .append(\"g\")\n      .attr(\"class\", \"mark-group\")\n      .merge(stackedBarGroups)\n      .attr(\"fill\", (d) => cache.colorScale(d.key))\n      .attr(\"stroke\", \"white\")\n\n    stackedBarGroups.exit().remove()\n\n    const stackedBars = stackedUpdate.selectAll(\".mark\")\n        .data((d) => d)\n\n    stackedBars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark\")\n      .merge(stackedBars)\n      .attr(\"x\", (d) => cache.xScale(d.data[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[1]))\n      .attr(\"height\", (d) => cache.yScale(d[0]) - cache.yScale(d[1]))\n      .attr(\"width\", cache.xScale.bandwidth())\n\n    stackedBars.exit().remove()\n  }\n\n  return {\n    drawBars,\n    drawStackedBars\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Axis (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    tickSizes: null,\n    tickPadding: null,\n    xAxisFormat: null,\n    yAxisFormat: null,\n    y2AxisFormat: null,\n    keyType: null,\n    yTicks: null,\n    y2Ticks: null,\n    xTickSkip: null,\n    axisTransitionDuration: null,\n    ease: null,\n    grid: null,\n    hoverZoneSize: 30\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null\n  }\n\n  const cache = {\n    container: _container,\n    background: null,\n    chartHeight: null,\n    chartWidth: null,\n    xAxis: null,\n    yAxis: null,\n    yAxis2: null,\n    horizontalGridLines: null,\n    verticalGridLines: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"axis-group\", true)\n          .style(\"pointer-events\", \"none\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis x\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y2\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function buildAxis () {\n    cache.xAxis = d3.axisBottom(scales.xScale)\n        .tickSize(config.tickSizes, 0)\n        .tickPadding(config.tickPadding)\n\n    if (config.keyType === \"time\") {\n      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n        const formatter = d3.timeFormat(config.xAxisFormat)\n        cache.xAxis.tickFormat(formatter)\n      }\n    } else {\n      cache.xAxis.tickValues(scales.xScale.domain().filter((d, i) => !(i % config.xTickSkip)))\n    }\n\n    cache.yAxis = d3.axisLeft(scales.yScale)\n        .ticks(config.yTicks)\n        .tickSize([config.tickSizes])\n        .tickPadding(config.tickPadding)\n        .tickFormat(d3.format(config.yAxisFormat))\n\n    if (scales.hasSecondAxis) {\n      cache.yAxis2 = d3.axisRight(scales.yScale2)\n          .ticks(config.y2Ticks)\n          .tickSize([config.tickSizes])\n          .tickPadding(config.tickPadding)\n          .tickFormat(d3.format(config.y2AxisFormat))\n    }\n  }\n\n  function drawAxis () {\n    buildSVG()\n    buildAxis()\n\n    cache.svg.select(\".axis.x\")\n        .attr(\"transform\", `translate(0, ${cache.chartHeight})`)\n        .call(cache.xAxis)\n\n    cache.svg.select(\".axis.y\")\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .ease(config.ease)\n        .call(cache.yAxis)\n\n    if (scales.hasSecondAxis) {\n      cache.svg.select(\".axis.y2\")\n          .attr(\"transform\", `translate(${cache.chartWidth}, 0)`)\n          .transition()\n          .duration(config.axisTransitionDuration)\n          .ease(config.ease)\n          .call(cache.yAxis2)\n    }\n\n    return this\n  }\n\n  function drawGridLines () {\n    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.horizontal-grid-line\")\n          .data(scales.yScale.ticks(config.yTicks))\n\n      cache.horizontalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"horizontal-grid-line\")\n        .merge(cache.horizontalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"x2\", cache.chartWidth)\n        .attr(\"y1\", scales.yScale)\n        .attr(\"y2\", scales.yScale)\n\n      cache.horizontalGridLines.exit().remove()\n    }\n\n    if (config.grid === \"vertical\" || config.grid === \"full\") {\n      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.vertical-grid-line\")\n          .data(cache.xAxis.tickValues())\n\n      cache.verticalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"vertical-grid-line\")\n        .merge(cache.verticalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", cache.chartHeight)\n        .attr(\"x1\", scales.xScale)\n        .attr(\"x2\", scales.xScale)\n\n      cache.verticalGridLines.exit().remove()\n    }\n\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    drawAxis,\n    drawGridLines\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/axis.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override} from \"./helpers/common\"\n\nexport default function Tooltip (_container) {\n\n  let config = {\n    margin: {\n      top: 2,\n      right: 2,\n      bottom: 2,\n      left: 2\n    },\n    width: 250,\n    height: 45,\n\n    valueFormat: \".2f\",\n\n    // Animations\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: [],\n\n    // from chart\n    keyType: \"time\"\n  }\n\n  let scales = {\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    chartWidth: null,\n    chartHeight: null,\n    tooltipDivider: null,\n    tooltipBody: null,\n    tooltipTitle: null,\n    tooltipBackground: null,\n    xPosition: null,\n    yPosition: null,\n    content: null,\n    title: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"tooltip-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"pointer-events\", \"none\")\n\n      cache.tooltipTitle = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-title\")\n\n      cache.tooltipBody = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-body\")\n    }\n  }\n\n  function calculateTooltipPosition (_mouseX, _mouseY) {\n    const OFFSET = 4\n    const tooltipSize = cache.root.node().getBoundingClientRect()\n    const tooltipX = _mouseX\n    let avoidanceOffset = OFFSET\n    const tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2\n\n    if (_mouseX > (cache.chartWidth / 2)) {\n      avoidanceOffset = -tooltipSize.width - OFFSET\n    }\n    return [tooltipX + avoidanceOffset, tooltipY]\n  }\n\n  function move () {\n    const xPosition = cache.xPosition === \"auto\"\n        ? cache.chartWidth\n        : cache.xPosition\n\n    const yPosition = cache.yPosition === \"auto\"\n        ? config.margin.top\n        : cache.yPosition\n\n    cache.root.transition()\n      .duration(config.mouseChaseDuration)\n      .ease(config.tooltipEase)\n      .style(\"top\", `${yPosition}px`)\n      .style(\"left\", function left () {\n        const width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0\n        return `${xPosition + config.margin.left - width}px`\n      })\n    return this\n  }\n\n  function drawContent () {\n    const content = cache.content\n    const formatter = d3.format(config.valueFormat)\n\n    const tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\")\n        .data(content)\n    const tooltipItemsUpdate = tooltipItems.enter().append(\"div\")\n      .attr(\"class\", \"tooltip-item\")\n      .merge(tooltipItems)\n    tooltipItems.exit().remove()\n\n    const tooltipItem = tooltipItemsUpdate.selectAll(\".section\")\n      .data((d) => {\n        const legendData = [\n          {key: \"color\", value: scales.colorScale(d[keys.ID])},\n          {key: \"label\", value: d[keys.LABEL]}\n        ]\n        if (typeof d[keys.VALUE] !== \"undefined\") {\n          legendData.push({key: \"value\", value: d[keys.VALUE]})\n        }\n        return legendData\n      })\n    tooltipItem.enter().append(\"div\")\n      .merge(tooltipItem)\n      .attr(\"class\", (d) => [\"section\", d.key].join(\" \"))\n      .each(function each (d) {\n        const selection = d3.select(this)\n        if (d.key === \"color\") {\n          selection.style(\"background\", d.value)\n        } else if (d.key === \"value\") {\n          selection.html(formatter(d.value))\n        } else {\n          selection.html(d.value)\n        }\n      })\n    tooltipItem.exit().remove()\n    return this\n  }\n\n  function drawTitle () {\n    let title = cache.title\n\n    if (typeof title === \"object\") {\n      title = d3.timeFormat(config.dateFormat)(title)\n    }\n\n    cache.tooltipTitle.html(title)\n    return this\n  }\n\n  function drawTooltip () {\n    buildSVG()\n    drawTitle()\n    drawContent()\n    move()\n    return this\n  }\n\n  function setupContent (_series) {\n    let series = _series\n\n    if (config.seriesOrder.length) {\n      series = sortByTopicsOrder(_series)\n    } else if (_series.length && _series[0][keys.LABEL]) {\n      series = sortByAlpha(_series)\n    }\n\n    cache.content = series\n    return this\n  }\n\n  function sortByTopicsOrder (_series, _order = seriesOrder) {\n    return _order.map((orderName) => _series.filter(({name}) => name === orderName)[0])\n  }\n\n  function sortByAlpha (_series) {\n    const series = cloneData(_series)\n    return series.sort((a, b) => a[keys.LABEL].localeCompare(b[keys.LABEL], \"en\", {numeric: false}))\n  }\n\n  function hide () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"none\")\n    return this\n  }\n\n  function show () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"block\")\n    return this\n  }\n\n  function setupTooltip (_dataPoint, _xPosition, _yPosition) {\n    buildSVG()\n    const [tooltipX, tooltipY] = calculateTooltipPosition(_xPosition, _yPosition)\n    setXPosition(tooltipX)\n    setYPosition(tooltipY)\n    setTitle(_dataPoint[keys.DATA])\n    setupContent(_dataPoint[keys.SERIES])\n\n    drawTooltip()\n    return this\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.tooltip\", show)\n      .on(\"mouseMovePanel.tooltip\", setupTooltip)\n      .on(\"mouseOutPanel.tooltip\", hide)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setTitle (_title) {\n    cache.title = _title\n    return this\n  }\n\n  function setXPosition (_xPosition) {\n    cache.xPosition = _xPosition\n    return this\n  }\n\n  function setYPosition (_yPosition) {\n    cache.yPosition = _yPosition\n    return this\n  }\n\n  function setContent (_content) {\n    cache.content = _content\n    return this\n  }\n\n  return {\n    bindEvents,\n    setXPosition,\n    setYPosition,\n    setContent,\n    setTitle,\n    hide,\n    show,\n    drawTooltip,\n    setConfig,\n    setScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","import Tooltip from \"./tooltip\"\n\nexport default function Legend (_container) {\n  return Tooltip(_container)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData, override} from \"./helpers/common\"\n\nexport default function Brush (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null\n  }\n\n  let scales = {\n    xScale: null\n  }\n\n  const cache = {\n    container: _container,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"brush-group\", true)\n    }\n  }\n\n  function extractBrushDimension (_data) {\n    const merged = d3.merge(_data.map((d) => d[keys.VALUES]))\n    return sortData(merged, config.keyType)\n  }\n\n  function buildBrush () {\n    cache.brush = cache.brush || d3.brushX()\n        .on(\"start\", handleBrushStart)\n        .on(\"brush\", handleBrushMove)\n        .on(\"end\", handleBrushEnd)\n\n    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]])\n\n    cache.chartBrush = cache.svg.call(cache.brush)\n\n    cache.chartBrush.selectAll(\".brush-rect\")\n      .attr(\"height\", cache.chartHeight)\n  }\n\n  function getDataExtent () {\n    const selection = d3.event.selection\n    const dataExtent = selection.map((d) => invertScale(scales.xScale, d, config.keyType))\n    return dataExtent\n  }\n\n  function handleBrushStart () {\n    dispatcher.call(\"brushStart\", this, getDataExtent(), config)\n  }\n\n  function handleBrushMove () {\n    dispatcher.call(\"brushMove\", this, getDataExtent(), config)\n  }\n\n  function handleBrushEnd () {\n    // Only transition after input, ignore empty selections.\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n\n    const dataExtent = getDataExtent()\n\n    d3.select(this)\n      .transition()\n      .call(d3.event.target.move, dataExtent.map(scales.xScale))\n\n    dispatcher.call(\"brushEnd\", this, dataExtent, config)\n  }\n\n  function drawBrush () {\n    buildSVG()\n\n    if (data.dataBySeries) {\n      cache.data = extractBrushDimension(cloneData(data.dataBySeries))\n      buildBrush()\n    }\n\n    return this\n  }\n\n  // function setBrushByPercentages (_a, _b) {\n  //   const x0 = _a * cache.chartWidth\n  //   const x1 = _b * cache.chartWidth\n\n  //   brush.move(chartBrush, [x0, x1])\n  // }\n\n  // function setBrushByDates (_dateA, _dateB) {\n  //   const x0 = cache.xScale(new Date(_dateA))\n  //   const x1 = cache.xScale(new Date(_dateB))\n\n  //   cache.brush.move(cache.chartBrush, [x0, x1])\n  // }\n\n  // function updateHandlers (_dateExtent) {\n  //   if (_dateExtent === null) {\n  //     cache.handle.attr(\"display\", \"none\")\n  //   } else {\n  //     cache.handle\n  //       .attr(\"display\", null)\n  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n  //   }\n  // }\n\n  // API\n\n  /**\n   * Gets or Sets the dateRange for the selected part of the brush\n   * @param  {String[]} _x Desired dateRange for the graph\n   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n   * @public\n   */\n  // function dateRange (_x) {\n  //   if (!arguments.length) {\n  //     return dateRange\n  //   }\n  //   dateRange = _x\n\n  //   if (Array.isArray(dateRange)) {\n  //     setBrushByDates(...dateRange)\n  //   }\n\n  //   return this\n  // }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setData,\n    setScales,\n    drawBrush\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Hover (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    dotRadius: null\n  }\n\n  let scales = {\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"hover\")\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"hover-group\", true)\n          .style(\"pointer-events\", \"none\")\n    }\n\n    // cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function drawHover (_dataPoint, _dataPointXPosition) {\n    buildSVG()\n\n    if (_dataPointXPosition) {\n      moveVerticalMarker(_dataPointXPosition)\n      drawVerticalMarker()\n      if (config.chartType === \"stackedLine\"\n        || config.chartType === \"stackedArea\"\n        || config.chartType === \"stackedBar\") {\n        highlightStackedDataPoints(_dataPoint)\n      } else {\n        highlightDataPoints(_dataPoint)\n      }\n      dispatcher.call(\"hover\", this, _dataPoint)\n    }\n  }\n\n  function show () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"block\")\n\n    return this\n  }\n\n  function hide () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"none\")\n\n    return this\n  }\n\n  function highlightDataPoints (_dataPoint) {\n    const dotsData = _dataPoint[keys.SERIES]\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawHighlightDataPoints (_dotsData) {\n    const dots = cache.svg.selectAll(\".dot\")\n        .data(_dotsData)\n\n    dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .merge(dots)\n      .attr(\"cy\", (d) => {\n        // if (d[keys.GROUP] === chartCache.groupKeys[0]) {\n        if (d[keys.GROUP] === 0) {\n          return scales.yScale(d[keys.VALUE])\n        } else {\n          return scales.yScale2(d[keys.VALUE])\n        }\n      })\n      .attr(\"r\", config.dotRadius)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", getColor)\n\n    dots.exit().remove()\n  }\n\n  function highlightStackedDataPoints (_dataPoint) {\n    const stackedDataPoint = {key: _dataPoint[keys.DATA]}\n    _dataPoint.series.forEach((d) => {\n      const id = d[keys.ID]\n      stackedDataPoint[id] = d[keys.VALUE]\n    })\n\n    // const dotsStack = data.stack([stackedDataPoint])\n    // const dotsData = dotsStack.map((d) => {\n    //   const dot = {value: d[0][1]}\n    //   dot[keys.ID] = d.key\n    //   return dot\n    // })\n\n    // drawHighlightDataPoints(dotsData)\n  }\n\n  function drawVerticalMarker () {\n    const verticalMarkerLine = cache.svg.selectAll(\"line\")\n        .data([0])\n\n    verticalMarkerLine.enter()\n      .append(\"line\")\n      .classed(\"vertical-marker\", true)\n      .merge(verticalMarkerLine)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", cache.chartHeight)\n\n    verticalMarkerLine.exit().remove()\n  }\n\n  function moveVerticalMarker (_verticalMarkerXPosition) {\n    cache.svg.attr(\"transform\", `translate(${[_verticalMarkerXPosition, 0]})`)\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.hover\", show)\n      .on(\"mouseMovePanel.hover\", drawHover)\n      .on(\"mouseOutPanel.hover\", hide)\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    bindEvents,\n    highlightDataPoints,\n    highlightStackedDataPoints,\n    drawVerticalMarker,\n    moveVerticalMarker,\n    on\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/hover.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exclusiveToggle} from \"./interactors\"\n\nexport default function Binning (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    autoLabel: \"auto\",\n    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n    label: \"BIN:\"\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    autoItem: null,\n    binningItems: null,\n    selectedBin: null,\n    isAuto: true\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"change\")\n\n  function buildSVG () {\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"binning-group\")\n          .style(\"float\", \"left\")\n\n      cache.label = cache.root.append(\"div\")\n          .attr(\"class\", \"label\")\n          .text(config.label)\n\n      cache.autoItem = cache.root.append(\"div\")\n          .attr(\"class\", \"item item-auto toggleOnOff\")\n          .on(\"click.select\", function click () {\n            const isSelected = this.classList.contains(\"selected\")\n            const toggled = !isSelected\n            setAuto(toggled)\n            drawBinning()\n            dispatcher.call(\"change\", this, {name: config.autoLabel, isSelected: toggled})\n          })\n          .text(config.autoLabel)\n\n      cache.binningItems = cache.root.selectAll(\".toggleExclusive\")\n          .data(config.exclusiveToggle)\n          .enter().append(\"div\")\n          .attr(\"class\", (d) => `item item-${d} toggleExclusive`)\n          .on(\"click.select\", function click (d) {\n            setBinning(d)\n            drawBinning()\n            const isSelected = this.classList.contains(\"selected\")\n            dispatcher.call(\"change\", this, {name: d, isSelected})\n          })\n          .text((d) => d)\n    }\n\n    const LINE_HEIGHT = 20\n    cache.root\n      .style(\"top\", config.margin.top - LINE_HEIGHT)\n      .style(\"left\", config.margin.left)\n\n    changeBinning(cache.selectedBin)\n    toggleAuto(cache.isAuto)\n  }\n\n  function changeBinning (_selectedItemName) {\n    if (_selectedItemName) {\n      exclusiveToggle(cache.binningItems, `.item-${_selectedItemName}`)\n    }\n  }\n\n  function toggleAuto (_shouldBeSelected) {\n    cache.autoItem\n      .classed(\"selected\", _shouldBeSelected)\n      .classed(\"dimmed\", !_shouldBeSelected)\n  }\n\n  function drawBinning () {\n    buildSVG()\n    return this\n  }\n\n  function setBinning (_selectedBin) {\n    cache.selectedBin = _selectedBin\n    return this\n  }\n\n  function setAuto (_isAuto) {\n    cache.isAuto = _isAuto\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.root.remove()\n  }\n\n  return {\n    on,\n    setConfig,\n    destroy,\n    drawBinning,\n    setBinning,\n    setAuto\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/binning.js","import * as d3 from \"./helpers/d3-service\"\n\n/**\n * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n * @param  {Number} selector A valid selector of the elements to toggle\n * @example\n * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n *\n * @return {void}\n */\n\nexport function toggleOnOff (selector, bool) {\n  const shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool\n  d3.select(selector)\n    .classed(\"selected\", shouldBeSelected)\n    .classed(\"dimmed\", !shouldBeSelected)\n}\n\nexport function exclusiveToggle (othersSelection, selector) {\n  return toggle(othersSelection, selector, {\n    toggleOffIsEnabled: false,\n    toggleMultipleIsEnabled: false\n  })\n}\n\nexport function toggle (othersSelection, selector, options = {toggleOffIsEnabled: false, toggleMultipleIsEnabled: false}) {\n  /* eslint-disable consistent-this */\n  let hasSelection = false\n  const selectionNode = document.querySelector(selector)\n\n  othersSelection.classed(\"selected\", function selectedClass () {\n    const isSelected = this.classList.contains(\"selected\")\n    const hasJustBeenClicked = this === selectionNode\n    let shouldBeSelected = false\n\n    if (hasJustBeenClicked) {\n      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true\n    } else {\n      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false\n    }\n\n    hasSelection = hasSelection || shouldBeSelected\n    return shouldBeSelected\n  })\n\n  othersSelection.classed(\"dimmed\", function dimmedClass () {\n    return hasSelection && !this.classList.contains(\"selected\")\n  })\n  /* eslint-enable consistent-this */\n}\n\nexport function blurOnEnter (selection) {\n  selection.on(\"keypress.enter\", function keypress () {\n    if (d3.event.key === \"Enter\") { this.blur() }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/interactors.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function DomainEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xHitZone: null,\n    yHitZone: null,\n    y2HitZone: null,\n    yMaxInput: null,\n    yMinInput: null,\n    yLockIcon: null,\n    y2MaxInput: null,\n    y2MinInput: null,\n    y2LockIcon: null,\n    xMinInput: null,\n    xMaxInput: null,\n    xLockIcon: null,\n    chartWidth: null,\n    chartHeight: null,\n    xDomain: null,\n    yDomain: null,\n    y2Domain: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"domain-input-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n\n      // hit zones\n      cache.xHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone x\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showXEditor)\n          .on(\"mouseout.dispatch\", hideXEditor)\n\n      cache.yHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showYEditor)\n          .on(\"mouseout.dispatch\", hideYEditor)\n\n      cache.y2HitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y2\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showY2Editor)\n          .on(\"mouseout.dispatch\", hideY2Editor)\n\n      // y input group\n      cache.yMaxInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.yMinInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.yLockIcon = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y\"})\n        })\n\n      // y2 input group\n      cache.y2MaxInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y2\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.y2MinInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y2\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.y2LockIcon = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y2\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y2\"})\n        })\n\n      // x input group\n      cache.xMinInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"x\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.xMaxInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"x\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.xLockIcon = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock x\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"x\"})\n        })\n\n      hideYEditor()\n      hideY2Editor()\n      hideXEditor()\n    }\n\n    const HOVER_ZONE_SIZE = 40\n    const LOCK_SIZE = 12\n    const INPUT_HEIGHT = 12\n    const PADDING = 4\n    const INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING\n\n    cache.xHitZone\n      .style(\"width\", `${cache.chartWidth + HOVER_ZONE_SIZE * 2}px`)\n      .style(\"height\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top + cache.chartHeight}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.yHitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.y2HitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left + cache.chartWidth}px`)\n\n    cache.yMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .text(Array.isArray(cache.yDomain)\n          && !isNaN(cache.yDomain[1]) ? cache.yDomain[1] : \"\")\n\n    cache.yMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .text(Array.isArray(cache.yDomain)\n            && !isNaN(cache.yDomain[0]) ? cache.yDomain[0] : \"\")\n\n    cache.yLockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.y2MaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(Array.isArray(cache.y2Domain)\n          && !isNaN(cache.y2Domain[1]) ? cache.y2Domain[1] : \"\")\n\n    cache.y2MinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(Array.isArray(cache.y2Domain)\n          && !isNaN(cache.y2Domain[0]) ? cache.y2Domain[0] : \"\")\n\n    cache.y2LockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.xMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE}px`)\n      .text(Array.isArray(cache.xDomain)\n          && typeof (cache.xDomain[0]) !== \"undefined\" ? cache.xDomain[0] : \"\")\n\n    cache.xMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH}px`)\n      .text(Array.isArray(cache.xDomain)\n          && typeof (cache.xDomain[1]) !== \"undefined\" ? cache.xDomain[1] : \"\")\n\n    cache.xLockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth}px`)\n  }\n\n  function showYEditor () {\n    cache.yHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideYEditor () {\n    cache.yHitZone.style(\"opacity\", \"0\")\n  }\n\n  function showY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"0\")\n  }\n\n  function showXEditor () {\n    cache.xHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideXEditor () {\n    cache.xHitZone.style(\"opacity\", \"0\")\n  }\n\n  function drawDomainEditor () {\n    buildSVG()\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setXDomain (_xDomain) {\n    cache.xDomain = _xDomain\n    return this\n  }\n\n  function setYDomain (_yDomain) {\n    cache.yDomain = _yDomain\n    return this\n  }\n\n  function setY2Domain (_y2Domain) {\n    cache.y2Domain = _y2Domain\n    return this\n  }\n\n  function setXLock (_xLock) {\n    cache.xLock = _xLock\n    return this\n  }\n\n  function setYLock (_yLock) {\n    cache.yLock = _yLock\n    return this\n  }\n\n  function setY2Lock (_y2Lock) {\n    cache.y2Lock = _y2Lock\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXDomain,\n    setYDomain,\n    setY2Domain,\n    setXLock,\n    setYLock,\n    setY2Lock,\n    drawDomainEditor\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/domain-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function BrushRangeEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    inputMin: null,\n    inputMax: null,\n    rangeMin: null,\n    rangeMax: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"rangeChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"brush-range-input-group\")\n          .style(\"top\", 0)\n\n      cache.inputMax = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input max\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMax = cache.inputMax.text()\n          dispatcher.call(\"rangeChange\", this, {value: cache.rangeMax, type: \"max\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n\n      cache.root.append(\"div\")\n        .attr(\"class\", \"separator\")\n        .text(\"-\")\n        .style(\"float\", \"right\")\n\n      cache.inputMin = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input min\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMin = cache.inputMin.text()\n          dispatcher.call(\"rangeChange\", this, {value: cache.rangeMin, type: \"min\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n    }\n\n    cache.inputMin.text(cache.rangeMin || \"\")\n    cache.inputMax.text(cache.rangeMax || \"\")\n  }\n\n  function drawRangeEditor () {\n    buildSVG()\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setRangeMin (_rangeMin) {\n    cache.rangeMin = _rangeMin\n    return this\n  }\n\n  function setRangeMax (_rangeMax) {\n    cache.rangeMax = _rangeMax\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    drawRangeEditor,\n    setRangeMin,\n    setRangeMax\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush-range-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Label (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xAxisLabel: null,\n    yAxisLabel: null,\n    y2AxisLabel: null,\n    xLabel: null,\n    yLabel: null,\n    y2Label: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"axisLabelChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"label-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n          .style(\"white-space\", \"nowrap\")\n\n      cache.xAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label x\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.xLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"x\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%)\")\n\n      cache.yAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.yLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"left\", 0)\n        .style(\"transform\", \"translate(-50%) rotate(-90deg)\")\n\n      cache.y2AxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y2\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.y2Label = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y2\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%) rotate(90deg)\")\n    }\n\n    cache.xAxisLabel\n        .text(config.xLabel)\n        .style(\"top\", function top () {\n          const textHeight = this.getBoundingClientRect().height\n          return `${config.height - textHeight}px`\n        })\n        .style(\"left\", `${config.margin.left + cache.chartWidth / 2}px`)\n\n    cache.yAxisLabel\n      .text(config.yLabel)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${textWidth / 2}px`\n      })\n\n    cache.y2AxisLabel\n      .text(config.y2Label)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${config.width - textWidth / 2}px`\n      })\n  }\n\n  function drawLabels () {\n    buildSVG()\n    return this\n  }\n\n  function setXLabels (_xLabel) {\n    config.xLabel = _xLabel\n    return this\n  }\n\n  function setYLabels (_yLabel) {\n    config.yLabel = _yLabel\n    return this\n  }\n\n  function setY2Labels (_y2Label) {\n    config.y2Label = _y2Label\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXLabels,\n    setYLabels,\n    setY2Labels,\n    drawLabels\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/label.js","import * as d3 from \"./helpers/d3-service\"\nexport {bisector, extent, sum, range, merge} from \"d3-array\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData} from \"./helpers/common\"\n\nexport default function DataManager () {\n  /* eslint-disable no-magic-numbers */\n  let config = {\n    keyType: \"number\", // number, string, time,\n    range: [0, 100],\n    pointCount: 200,\n    groupCount: 2,\n    lineCount: 4\n  }\n  const cache = {\n    data: null,\n    baseDate: null\n  }\n\n  function generateRandomString (_length) {\n    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5)\n  }\n\n  function generateSeries (_dataKeys, _range, _allowNegative) {\n    let value = d3.randomUniform(..._range)()\n    const variabilityRatio = 50\n    const randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio\n    const rnd = d3.randomNormal(0, 1)\n    return _dataKeys.map((d) => {\n      value = value + rnd() * randomWalkStepSize\n      if (!_allowNegative && value < randomWalkStepSize) {\n        value = value + randomWalkStepSize\n      }\n      return {\n        value,\n        key: config.keyType === \"time\" ? d.toISOString() : d\n      }\n    })\n  }\n\n  function generateTestDataset () {\n    let dataKeys = null\n    if (config.keyType === \"time\") {\n      cache.baseDate = new Date()\n      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate))\n    } else if (config.keyType === \"string\") {\n      dataKeys = d3.range(0, config.pointCount).map(() => generateRandomString())\n      dataKeys.sort((a, b) => a.localeCompare(b, \"en\", {numeric: false}))\n    } else if (config.keyType === \"number\") {\n      dataKeys = d3.range(0, config.pointCount).map((d, i) => i)\n    }\n\n    const series = d3.range(config.lineCount).map((d) => ({\n      label: `Label ${d}`,\n      id: d,\n      group: d < config.groupCount ? d : 0,\n      values: generateSeries(dataKeys, config.range)\n    }))\n\n    cache.data = {series}\n\n    // console.log(\"generated data\", cache.data)\n\n    return cache.data\n  }\n\n  function filterByKey (_extent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      const values = series[keys.VALUES]\n      const allKeys = values.map(d => d[keys.DATA])\n      const extentMinIndex = allKeys.indexOf(_extent[0])\n      const extentMaxIndex = allKeys.indexOf(_extent[1])\n      series[keys.VALUES] = series[keys.VALUES].slice(extentMinIndex, extentMaxIndex)\n    })\n\n    return data\n  }\n\n  function filterByDate (_dateExtent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      series[keys.VALUES] = series[keys.VALUES].filter((d) => {\n        const epoch = new Date(d[keys.DATA]).getTime()\n        return epoch >= _dateExtent[0].getTime()\n          && epoch <= _dateExtent[1].getTime()\n      })\n    })\n\n    return data\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  return {\n    generateTestDataset,\n    generateSeries,\n    filterByDate,\n    filterByKey,\n    setConfig\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/data-manager.js","// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 21\n// module chunks = 0","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Observer (_dataManager) {\n  const dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\")\n  const dataManager = _dataManager\n\n  dispatcher.on(\"brushChange.observer\", (_e, _brushConfig) => {\n    const filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e)\n      : dataManager.filterByKey(_e)\n    pub(\"dataFilter\", filtered)\n  })\n\n  function sub (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function pub (_channelName, ...args) {\n    dispatcher.call(_channelName, this, ...args)\n    return this\n  }\n\n  return {\n    sub,\n    pub\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/observer.js"],"sourceRoot":""}