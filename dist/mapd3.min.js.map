{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mapd3.min.js","webpack:///webpack/bootstrap 08ebffa6881e225fb4f5","webpack:///./src/bundle.js","webpack:///./src/charts/chart.js","webpack:///./src/charts/helpers/d3-service.js","webpack:///./~/d3/build/d3.js","webpack:///./src/charts/helpers/exportChart.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/serializeWithStyles.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/scale.js","webpack:///./src/charts/line.js","webpack:///./src/charts/bar.js","webpack:///./src/charts/axis.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/data-manager.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./src/charts/observer.js","webpack:///./src/charts/binning.js","webpack:///./src/charts/interactors.js","webpack:///./src/charts/domain-editor.js","webpack:///./src/charts/brush.js","webpack:///./src/charts/hover.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","Interactors","Hover","Brush","DomainEditor","Binning","Observer","DataManager","Legend","Tooltip","Chart","undefined","_chart","_chart2","_tooltip","_tooltip2","_legend","_legend2","_dataManager","_dataManager2","_observer","_observer2","_binning","_binning2","_domainEditor","_domainEditor2","_brush","_brush2","_hover","_hover2","_interactors","_interactors2","_colors","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_container","init","render","addMouseEvents","buildSVG","cache","dataBySeries","buildChart","w","config","width","container","clientWidth","h","height","clientHeight","chartWidth","margin","left","right","chartHeight","top","bottom","svg","template","d3","select","html","attr","components","scale","_scale2","line","_line2","bar","_bar2","axis","_axis2","chartType","buildStackedScales","buildScales","buildAxis","drawGridLines","drawAxis","drawAxisTitles","drawAreas","drawLines","drawStackedAreas","drawBars","drawStackedBars","triggerIntroAnimation","setData","_data","data","_common","cloneData","_constants","keys","SERIES","cleanedData","cleanData","dataByKey","flatData","forEach","serie","VALUES","sortData","keyType","d","DATA","Date","VALUE","Number","dataPoint","LABEL","GROUP","ID","push","flatDataSorted","nest","getKey","entries","map","values","allGroupKeys","getGroup","groupKeys","getUnique","isAnimated","maskingRectangle","transition","duration","animationDuration","ease","on","remove","getNearestDataPoint","_mouseX","keyFromInvertedX","invertScale","xScale","bisectLeft","bisector","dataEntryIndex","dataEntryForXPosition","nearestDataPoint","dispatcher","mouse","mouseX","xPosition","dataPointXPosition","save","_filename","_title","_exportChart","exportChart","apply","arguments","setConfig","_config","assign","setXTitle","_xTitle","xTitle","setYTitle","_yTitle","yTitle","getConfig","getCache","destroy","xAxisPadding","tickPadding","colorSchema","mapdColors","dotRadius","xAxisFormat","tickSkip","tickSizes","defaultColor","easeLinear","axisTransitionDuration","yTicks","yTicks2","yAxisFormat","yAxisFormat2","verticalGridLines","horizontalGridLines","grid","verticalMarkerContainer","verticalMarkerLine","yScale","yScale2","colorScale","xAxis","yAxis","yAxis2","hasSecondAxis","stackData","stack","hover","dispatch","_d3Service","_scale","_line","_bar","_axis","_d","enumerable","get","axisBottom","axisLeft","axisRight","timeFormat","format","extent","sum","range","merge","easeQuadInOut","event","randomUniform","randomNormal","timeDay","timeMonth","area","curveCatmullRom","stackOffsetNone","stackOrderNone","scaleTime","scalePoint","scaleBand","scaleLinear","scaleOrdinal","brushX","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","length","translateX","translateY","y","number$1","center","offset","bandwidth","round","entering","__axis","orient","context","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","text","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","t","i","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","set","callback","noop","concat","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fitExtent","projection","clip","clipExtent","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","version","hi","mid","ascendingBisect","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","transform$$1","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","sourceRandomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleIdentity","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","require","d3svg","filename","title","img","createImage","convertSvgToHtml","handleImageLoad","createCanvas","addBackground","styleBackgroundString","serializer","_serializeWithStyles2","prependTitle","canvas","svgHtml","Image","src","imageSourceBase","b64EncodeUnicode","drawImageOnCanvas","image","getContext","drawImage","downloadCanvas","defaultFilename","extensionType","toDataURL","href","download","body","click","svgWidth","colorSchemas","titleTopOffset","titleFontFamily","titleFontSize","encoder","btoa","encode","str","encodeURIComponent","String","fromCharCode","chartBackground","_serializeWithStyles","mapdUI","skyBlue","initializeSerializer","computeDefaultStyleByTagName","tagName","defaultStyle","computedStyle","getDefaultStyleByTagName","defaultStylesByTagName","serializeWithStyles","elem","cssTexts","elements","nodeType","ELEMENT_NODE","el","noStyleTags","cssText","cssPropName","outerHTML","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","_toConsumableArray","arr","arr2","_dataToClone","_keyType","sortedData","getTime","localeCompare","numeric","bandStep","Scale","allStackHeights","dB","getID","valuesExtent","allKeys","allUniqueKeys","buildXScale","buildColorScale","buildYScale","_allKeys","datesExtent","ids","_extent","splitByGroups","allValues","getValue","groupAxis1","groupAxis2","valuesExtent2","Line","seriesLine","seriesLine2","getColor","seriesArea","seriesArea2","areas","Bar","bars","stackedBarGroups","stackedUpdate","stackedBars","Axis","formatter","textHeight","getBBox","isStatic","chart","show","hide","chartCache","tooltipBackground","tooltipTitle","tooltipDivider","tooltipBody","tooltipBorderRadius","setSize","calculateTooltipPosition","tooltipX","tooltipY","tooltipWidth","setPosition","_xPosition","_calculateTooltipPosi","_calculateTooltipPosi2","_slicedToArray","mouseChaseDuration","_width","_height","titleHeight","setSeriesContent","_series","tooltipLeft","elementHeight","getValueText","tooltipRight","tooltipCircles","setTitle","dateFormat","valueFormat","setContent","seriesOrder","sortByTopicsOrder","sortByAlpha","_order","orderName","_ref","_dataPoint","tooltipMaxTopicLength","tooltipHeight","sliceIterator","_arr","_n","_e","_s","_i","Symbol","iterator","done","err","generateRandomString","_length","substr","generateSeries","_dataKeys","_range","_allowNegative","variabilityRatio","randomWalkStepSize","rnd","generateTestDataset","dataKeys","baseDate","pointCount","lineCount","label","groupCount","filterByKey","extentMinIndex","extentMaxIndex","filterByDate","_dateExtent","epoch","_d3Array","sub","pub","_channelName","_len","_key","dataManager","_brushConfig","filtered","items","toggle","toggleOnOff","isSelected","itemsExclusive","exclusiveToggle","toggleOffIsEnabled","toggleMultipleIsEnabled","options","hasSelection","farthestViewportElement","hasJustBeenClicked","shouldBeSelected","panel","lock","loop","isClosed","parentHtmlNode","extractBrushDimension","buildBrush","drawBrush","handleBrushStart","handleBrushMove","handleBrushEnd","chartBrush","getDataExtent","dataExtent","dateRange","drawVerticalMarker","_dataPointXPosition","moveVerticalMarker","highlightStackedDataPoints","highlightDataPoints","dotsData","drawHighlightDataPoints","_dotsData","dots","stackedDataPoint","dotsStack","dot","_verticalMarkerXPosition"],"mappings":"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","file":"mapd3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.colors = exports.Interactors = exports.Hover = exports.Brush = exports.DomainEditor = exports.Binning = exports.Observer = exports.DataManager = exports.Legend = exports.Tooltip = exports.Chart = undefined;\n\t\n\tvar _chart = __webpack_require__(1);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _tooltip = __webpack_require__(13);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(14);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _dataManager = __webpack_require__(15);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tvar _observer = __webpack_require__(17);\n\t\n\tvar _observer2 = _interopRequireDefault(_observer);\n\t\n\tvar _binning = __webpack_require__(18);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(20);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brush = __webpack_require__(21);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(22);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _interactors = __webpack_require__(19);\n\t\n\tvar _interactors2 = _interopRequireDefault(_interactors);\n\t\n\tvar _colors = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Chart = _chart2.default;\n\texports.Tooltip = _tooltip2.default;\n\texports.Legend = _legend2.default;\n\texports.DataManager = _dataManager2.default;\n\texports.Observer = _observer2.default;\n\texports.Binning = _binning2.default;\n\texports.DomainEditor = _domainEditor2.default;\n\texports.Brush = _brush2.default;\n\texports.Hover = _hover2.default;\n\texports.Interactors = _interactors2.default;\n\texports.colors = _colors.colors;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Chart;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _exportChart = __webpack_require__(4);\n\t\n\tvar _colors = __webpack_require__(5);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tvar _scale = __webpack_require__(9);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _line = __webpack_require__(10);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _bar = __webpack_require__(11);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _axis = __webpack_require__(12);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Chart(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 48,\n\t      right: 32,\n\t      bottom: 48,\n\t      left: 32\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    xAxisPadding: {\n\t      top: 0,\n\t      left: 0,\n\t      bottom: 0,\n\t      right: 0\n\t    },\n\t    tickPadding: 5,\n\t    colorSchema: _colors.colors.mapdColors.map(function (d) {\n\t      return { value: d };\n\t    }),\n\t    dotRadius: 4,\n\t    xAxisFormat: \"%c\",\n\t    tickSkip: 1,\n\t    tickSizes: 8,\n\t    defaultColor: \"skyblue\",\n\t\n\t    isAnimated: false,\n\t    ease: d3.easeLinear,\n\t    animationDuration: 1500,\n\t    axisTransitionDuration: 0,\n\t\n\t    yTicks: 5,\n\t    yTicks2: 5,\n\t    yAxisFormat: \".2f\",\n\t    yAxisFormat2: \".2f\",\n\t\n\t    xTitle: \"\",\n\t    yTitle: \"\",\n\t\n\t    keyType: \"time\",\n\t    chartType: \"line\" // line, area, stackedLine, stackedArea\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    maskingRectangle: null,\n\t    verticalGridLines: null,\n\t    horizontalGridLines: null,\n\t    grid: null,\n\t    verticalMarkerContainer: null,\n\t    verticalMarkerLine: null,\n\t\n\t    dataBySeries: null,\n\t    dataByKey: null,\n\t    data: null,\n\t    chartWidth: null, chartHeight: null,\n\t    xScale: null, yScale: null, yScale2: null, colorScale: null,\n\t    xAxis: null, yAxis: null, yAxis2: null,\n\t    groupKeys: [],\n\t    hasSecondAxis: false,\n\t\n\t    stackData: null,\n\t    stack: null,\n\t    flatDataSorted: null\n\t  };\n\t\n\t  var components = {\n\t    scale: null,\n\t    axis: null,\n\t    line: null,\n\t    bar: null,\n\t    hover: null\n\t\n\t    // accessors\n\t  };var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getGroup = function getGroup(d) {\n\t    return d[_constants.keys.GROUP];\n\t  };\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"mouseOver\", \"mouseOut\", \"mouseMove\");\n\t\n\t  function init() {\n\t    render();\n\t    addMouseEvents();\n\t  }\n\t  init();\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    if (cache.dataBySeries) {\n\t      buildChart();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    var w = config.width || cache.container.clientWidth;\n\t    var h = config.height || cache.container.clientHeight;\n\t    cache.chartWidth = w - config.margin.left - config.margin.right;\n\t    cache.chartHeight = h - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      var template = \"<svg class=\\\"mapd3 line-chart\\\">\\n        <g class=\\\"container-group\\\">\\n          <g class=\\\"grid-lines-group\\\"></g>\\n          <g class=\\\"x-axis-group\\\">\\n            <g class=\\\"axis x\\\"></g>\\n          </g>\\n          <g class=\\\"y-axis-group axis y\\\"></g>\\n          <g class=\\\"y-axis-group2 axis y\\\"></g>\\n          <g class=\\\"chart-group\\\"></g>\\n        </g>\\n        <text class=\\\"x-title\\\"></text>\\n        <text class=\\\"y-title\\\"></text>\\n        <rect class=\\\"masking-rectangle\\\"></rect>\\n      </svg>\";\n\t\n\t      cache.svg = d3.select(cache.container).html(template).select(\"svg\");\n\t    }\n\t\n\t    cache.svg.attr(\"width\", config.width).attr(\"height\", config.height).select(\".container-group\").attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildChart() {\n\t    components.scale = (0, _scale2.default)(config, cache);\n\t    components.line = (0, _line2.default)(config, cache);\n\t    components.bar = (0, _bar2.default)(config, cache);\n\t    components.axis = (0, _axis2.default)(config, cache);\n\t\n\t    if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t      components.scale.buildStackedScales();\n\t    } else {\n\t      components.scale.buildScales();\n\t    }\n\t\n\t    components.axis.buildAxis();\n\t    components.axis.drawGridLines();\n\t    components.axis.drawAxis();\n\t    components.axis.drawAxisTitles();\n\t\n\t    if (config.chartType === \"area\") {\n\t      components.line.drawAreas();\n\t    } else if (config.chartType === \"line\") {\n\t      components.line.drawLines();\n\t    } else if (config.chartType === \"stackedArea\") {\n\t      components.line.drawStackedAreas();\n\t    } else if (config.chartType === \"bar\") {\n\t      components.bar.drawBars();\n\t    } else if (config.chartType === \"stackedBar\") {\n\t      components.bar.drawStackedBars();\n\t    }\n\t\n\t    triggerIntroAnimation();\n\t\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    cache.data = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var cleanedData = cleanData(_data);\n\t    cache.dataBySeries = cleanedData.dataBySeries;\n\t    cache.dataByKey = cleanedData.dataByKey;\n\t\n\t    render();\n\t\n\t    return this;\n\t  }\n\t\n\t  function cleanData(_data) {\n\t    var dataBySeries = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var flatData = [];\n\t\n\t    // Normalize dataBySeries\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES] = (0, _common.sortData)(serie[_constants.keys.VALUES], config.keyType);\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        d[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        d[_constants.keys.VALUE] = Number(d[_constants.keys.VALUE]);\n\t      });\n\t    });\n\t\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        var dataPoint = {};\n\t        dataPoint[_constants.keys.LABEL] = serie[_constants.keys.LABEL];\n\t        dataPoint[_constants.keys.GROUP] = serie[_constants.keys.GROUP];\n\t        dataPoint[_constants.keys.ID] = serie[_constants.keys.ID];\n\t        dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        dataPoint[_constants.keys.VALUE] = d[_constants.keys.VALUE];\n\t        flatData.push(dataPoint);\n\t      });\n\t    });\n\t\n\t    cache.flatDataSorted = (0, _common.sortData)(flatData, config.keyType);\n\t\n\t    var dataByKey = d3.nest().key(getKey).entries(cache.flatDataSorted).map(function (d) {\n\t      var dataPoint = {};\n\t      dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key;\n\t      dataPoint[_constants.keys.SERIES] = d.values;\n\t      return dataPoint;\n\t    });\n\t\n\t    var allGroupKeys = dataBySeries.map(getGroup);\n\t    cache.groupKeys = (0, _common.getUnique)(allGroupKeys);\n\t\n\t    return { dataBySeries: dataBySeries, dataByKey: dataByKey };\n\t  }\n\t\n\t  function triggerIntroAnimation() {\n\t    if (config.isAnimated) {\n\t      cache.maskingRectangle = cache.svg.d3.select(\".masking-rectangle\").attr(\"width\", cache.chartWidth - 2).attr(\"height\", cache.chartHeight).attr(\"x\", config.margin.left + 1).attr(\"y\", config.margin.top);\n\t\n\t      cache.maskingRectangle.transition().duration(config.animationDuration).ease(config.ease).attr(\"width\", 0).attr(\"x\", config.width - config.margin.right).on(\"end\", function () {\n\t        return cache.maskingRectangle.remove();\n\t      });\n\t    }\n\t  }\n\t\n\t  function getNearestDataPoint(_mouseX) {\n\t    var keyFromInvertedX = (0, _common.invertScale)(cache.xScale, _mouseX, config.keyType);\n\t    var bisectLeft = d3.bisector(getKey).left;\n\t    var dataEntryIndex = bisectLeft(cache.dataByKey, keyFromInvertedX);\n\t    var dataEntryForXPosition = cache.dataByKey[dataEntryIndex];\n\t    var nearestDataPoint = null;\n\t\n\t    if (keyFromInvertedX) {\n\t      nearestDataPoint = dataEntryForXPosition;\n\t    }\n\t    return nearestDataPoint;\n\t  }\n\t\n\t  function addMouseEvents() {\n\t    cache.svg.on(\"mouseover.d3.dispatch\", function mouseover(d) {\n\t      if (!cache.data) {\n\t        return;\n\t      }\n\t      dispatcher.call(\"mouseOver\", this, d, d3.mouse(this));\n\t    }).on(\"mouseout.d3.dispatch\", function mouseout(d) {\n\t      if (!cache.data) {\n\t        return;\n\t      }\n\t      dispatcher.call(\"mouseOut\", this, d, d3.mouse(this));\n\t    }).on(\"mousemove.d3.dispatch\", function mousemove() {\n\t      if (!cache.data) {\n\t        return;\n\t      }\n\t      var mouseX = d3.mouse(this)[0];\n\t      var xPosition = mouseX - config.margin.left;\n\t      var dataPoint = getNearestDataPoint(xPosition);\n\t\n\t      if (dataPoint) {\n\t        var dataPointXPosition = cache.xScale(dataPoint[_constants.keys.DATA]);\n\t        dispatcher.call(\"mouseMove\", this, dataPoint, dataPointXPosition);\n\t      }\n\t    });\n\t  }\n\t\n\t  function save(_filename, _title) {\n\t    _exportChart.exportChart.call(this, cache.svg, _filename, _title);\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setXTitle(_xTitle) {\n\t    config = Object.assign({}, config, { xTitle: _xTitle });\n\t    return this;\n\t  }\n\t\n\t  function setYTitle(_yTitle) {\n\t    config = Object.assign({}, config, { yTitle: _yTitle });\n\t    return this;\n\t  }\n\t\n\t  function getConfig() {\n\t    return config;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.on(\".\", null).remove();\n\t  }\n\t\n\t  return {\n\t    render: render,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    setXTitle: setXTitle,\n\t    setYTitle: setYTitle,\n\t    getCache: getCache,\n\t    getConfig: getConfig,\n\t    on: on,\n\t    save: save,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, \"axisBottom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisBottom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisLeft\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisLeft;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisRight\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisRight;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"format\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.format;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"bisector\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.bisector;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.extent;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.sum;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.range;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.merge;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"nest\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.nest;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"dispatch\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.dispatch;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeQuadInOut\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeQuadInOut;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"select\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.select;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"mouse\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.mouse;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"event\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.event;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"transition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.transition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomUniform\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomUniform;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomNormal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomNormal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeDay\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeDay;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeMonth\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeMonth;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"area\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.area;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"curveCatmullRom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.curveCatmullRom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"line\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.line;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stack\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stack;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOffsetNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOffsetNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOrderNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOrderNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleTime\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleTime;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scalePoint\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scalePoint;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleBand\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleBand;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleOrdinal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleOrdinal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"brushX\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.brushX;\n\t\t}\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.11.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar radial = function(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tvar naturalEarth1 = function() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t};\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$2 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function constrain(transform$$1, extent) {\n\t    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n\t        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n\t        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n\t        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n\t    return transform$$1.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.exportChart = exportChart;\n\t\n\tvar _colors = __webpack_require__(5);\n\t\n\tvar _serializeWithStyles = __webpack_require__(6);\n\t\n\tvar _serializeWithStyles2 = _interopRequireDefault(_serializeWithStyles);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction exportChart(require) {\n\t  var encoder = window.btoa;\n\t\n\t  if (!encoder) {\n\t    encoder = require(\"base-64\").encode;\n\t  }\n\t\n\t  // Base64 doesn't work really well with Unicode strings, so we need to use this function\n\t  // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n\t  var b64EncodeUnicode = function b64EncodeUnicode(str) {\n\t    return encoder(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n\t      return String.fromCharCode(\"0x\" + p1);\n\t    }));\n\t  };\n\t\n\t  var config = {\n\t    defaultFilename: \"mapd3.png\",\n\t    chartBackground: \"white\",\n\t    imageSourceBase: \"data:image/svg+xml;base64,\",\n\t    titleFontSize: \"15px\",\n\t    titleFontFamily: \"'Benton Sans', sans-serif\",\n\t    titleTopOffset: 30,\n\t    get styleBackgroundString() {\n\t      return \"<style>svg{background:\" + this.chartBackground + \";}</style>\";\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Main function to be used as a method by chart instances to export charts to png\n\t   * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n\t   * @param  {string} filename    [download to be called <filename>.png]\n\t   * @param  {string} title       Title for the image\n\t   */\n\t  function save(d3svg, filename, title) {\n\t    var img = createImage(convertSvgToHtml.call(this, d3svg, title));\n\t\n\t    img.onload = handleImageLoad.bind(img, createCanvas(this.width(), this.height()), filename);\n\t  }\n\t\n\t  /**\n\t   * adds background styles to raw html\n\t   * @param {string} html raw html\n\t   */\n\t  function addBackground(html) {\n\t    return html.replace(\">\", \">\" + config.styleBackgroundString);\n\t  }\n\t\n\t  /**\n\t   * takes d3 svg el, adds proper svg tags, adds inline styles\n\t   * from stylesheets, adds white background and returns string\n\t   * @param  {object} d3svg TYPE d3 svg element\n\t   * @return {string} string of passed d3\n\t   */\n\t  function convertSvgToHtml(d3svg, title) {\n\t    if (!d3svg) {\n\t      return null;\n\t    }\n\t\n\t    d3svg.attr(\"version\", \"1.1\").attr(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\t    var serializer = (0, _serializeWithStyles2.default)();\n\t    var html = serializer(d3svg.node());\n\t\n\t    html = prependTitle.call(this, html, title, parseInt(d3svg.attr(\"width\"), 10));\n\t    html = addBackground(html);\n\t\n\t    return html;\n\t  }\n\t\n\t  /**\n\t   * Create Canvas\n\t   * @param  {number} width\n\t   * @param  {number} height\n\t   * @return {object} TYPE canvas element\n\t   */\n\t  function createCanvas(width, height) {\n\t    var canvas = document.createElement(\"canvas\");\n\t\n\t    canvas.height = height;\n\t    canvas.width = width;\n\t\n\t    return canvas;\n\t  }\n\t\n\t  /**\n\t   * Create Image\n\t   * @param  {string} svgHtml string representation of svg el\n\t   * @return {object}  TYPE element <img>, src points at svg\n\t   */\n\t  function createImage(svgHtml) {\n\t    var img = new Image();\n\t\n\t    img.src = \"\" + config.imageSourceBase + b64EncodeUnicode(svgHtml);\n\t\n\t    return img;\n\t  }\n\t\n\t  /**\n\t   * Draws image on canvas\n\t   * @param  {object} image TYPE:el <img>, to be drawn\n\t   * @param  {object} canvas TYPE: el <canvas>, to draw on\n\t   */\n\t  function drawImageOnCanvas(image, canvas) {\n\t    canvas.getContext(\"2d\").drawImage(image, 0, 0);\n\t\n\t    return canvas;\n\t  }\n\t\n\t  /**\n\t   * Triggers browser to download image, convert canvas to url,\n\t   * we need to append the link el to the dom before clicking it for Firefox to register\n\t   * point <a> at it and trigger click\n\t   * @param  {object} canvas TYPE: el <canvas>\n\t   * @param  {string} filename\n\t   * @param  {string} extensionType\n\t   */\n\t  function downloadCanvas(canvas) {\n\t    var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.defaultFilename;\n\t    var extensionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"image/png\";\n\t\n\t    var url = canvas.toDataURL(extensionType);\n\t    var link = document.createElement(\"a\");\n\t\n\t    link.href = url;\n\t    link.download = filename;\n\t    document.body.appendChild(link);\n\t    link.click();\n\t    document.body.removeChild(link);\n\t  }\n\t\n\t  /**\n\t  * Handles on load event fired by img.onload, this=img\n\t  * @param  {object} canvas TYPE: el <canvas>\n\t  * @param  {string} filename\n\t  * @param  {object} e\n\t  */\n\t  function handleImageLoad(canvas, filename, e) {\n\t    e.preventDefault();\n\t\n\t    downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n\t  }\n\t\n\t  /**\n\t   * if passed, append title to the raw html to appear on graph\n\t   * @param  {string} html     raw html string\n\t   * @param  {string} title    title of the graph\n\t   * @param  {number} svgWidth width of graph container\n\t   * @return {string}         raw html with title prepended\n\t   */\n\t  function prependTitle(html, title, svgWidth) {\n\t    if (!title || !svgWidth) {\n\t      return html;\n\t    }\n\t    var grey = _colors.colorSchemas.grey;\n\t\n\t\n\t    html = html.replace(/<g/, \"<text x=\\\"\" + this.margin().left + \"\\\" y=\\\"\" + config.titleTopOffset + \"\\\" font-family=\\\"\" + config.titleFontFamily + \"\\\" font-size=\\\"\" + config.titleFontSize + \"\\\" fill=\\\"\" + grey[6] + \"\\\"> \" + title + \" </text><g \");\n\t\n\t    return html;\n\t  }\n\t\n\t  return {\n\t    save: save,\n\t    convertSvgToHtml: convertSvgToHtml,\n\t    createImage: createImage,\n\t    drawImageOnCanvas: drawImageOnCanvas\n\t  };\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar mapdUI = exports.mapdUI = {\n\t  skyBlue: \"#22A7F0\"\n\t};\n\t\n\tvar mapdColors = exports.mapdColors = [\"#ea5545\", \"#bdcf32\", \"#b33dc6\", \"#ef9b20\", \"#87bc45\", \"#f46a9b\", \"#ace5c7\", \"#ede15b\", \"#836dc5\", \"#86d87f\", \"#27aeef\"];\n\t\n\tvar grey = exports.grey = [\"#F8F8FA\", \"#EFF2F5\", \"#D2D6DF\", \"#C3C6CF\", \"#ADB0B6\", \"#666A73\", \"#45494E\", \"#363A43\", \"#282C35\"];\n\t\n\tvar colors = exports.colors = {\n\t  mapdUI: mapdUI,\n\t  mapdColors: mapdColors,\n\t  grey: grey\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        /**\n\t         * returns serializer function, only run it when you know you want to serialize your chart\n\t         * @return {func} serializer to add styles in line to dom string\n\t         */\n\t        initializeSerializer: function initializeSerializer() {\n\t\n\t            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n\t            var defaultStylesByTagName = {};\n\t\n\t            // Styles inherited from style sheets will not be rendered for elements with these tag names\n\t            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\t\n\t            // This list determines which css default values lookup tables are precomputed at load time\n\t            // Lookup tables for other tag names will be automatically built at runtime if needed\n\t            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\t\n\t            // Precompute the lookup tables.\n\t            [].forEach.call(tagNames, function (name) {\n\t                if (!noStyleTags[name]) {\n\t                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n\t                }\n\t            });\n\t\n\t            function computeDefaultStyleByTagName(tagName) {\n\t                var defaultStyle = {},\n\t                    element = document.body.appendChild(document.createElement(tagName)),\n\t                    computedStyle = window.getComputedStyle(element);\n\t\n\t                [].forEach.call(computedStyle, function (style) {\n\t                    defaultStyle[style] = computedStyle[style];\n\t                });\n\t                document.body.removeChild(element);\n\t                return defaultStyle;\n\t            }\n\t\n\t            function getDefaultStyleByTagName(tagName) {\n\t                tagName = tagName.toUpperCase();\n\t                if (!defaultStylesByTagName[tagName]) {\n\t                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n\t                }\n\t                return defaultStylesByTagName[tagName];\n\t            };\n\t\n\t            function serializeWithStyles(elem) {\n\t\n\t                var cssTexts = [],\n\t                    elements = void 0,\n\t                    computedStyle = void 0,\n\t                    defaultStyle = void 0,\n\t                    result = void 0;\n\t\n\t                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n\t                    // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n\t\n\t                    return;\n\t                }\n\t\n\t                cssTexts = [];\n\t                elements = elem.querySelectorAll('*');\n\t\n\t                [].forEach.call(elements, function (el, i) {\n\t                    if (!noStyleTags[el.tagName]) {\n\t                        computedStyle = window.getComputedStyle(el);\n\t                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n\t                        cssTexts[i] = el.style.cssText;\n\t                        [].forEach.call(computedStyle, function (cssPropName) {\n\t                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n\t                                el.style[cssPropName] = computedStyle[cssPropName];\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t\n\t                result = elem.outerHTML;\n\t                elements = [].map.call(elements, function (el, i) {\n\t                    el.style.cssText = cssTexts[i];\n\t                    return el;\n\t                });\n\t\n\t                return result;\n\t            };\n\t\n\t            return serializeWithStyles;\n\t        }\n\t    };\n\t}();\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar keys = exports.keys = {\n\t  DATA: \"key\",\n\t  VALUE: \"value\",\n\t  ID: \"id\",\n\t  LABEL: \"label\",\n\t  GROUP: \"group\",\n\t  VALUES: \"values\",\n\t  SERIES: \"series\"\n\t};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cloneData = cloneData;\n\texports.sortData = sortData;\n\texports.getUnique = getUnique;\n\texports.invertScale = invertScale;\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Clones the passed array of data\n\t * @param  {Object[]} dataToClone Data to clone\n\t * @return {Object[]}             Cloned data\n\t */\n\tfunction cloneData(_dataToClone) {\n\t  return JSON.parse(JSON.stringify(_dataToClone));\n\t}\n\t\n\tfunction sortData(_data, _keyType) {\n\t  var sortedData = cloneData(_data);\n\t  if (_keyType === \"time\") {\n\t    sortedData.forEach(function (d) {\n\t      d[_constants.keys.DATA] = new Date(d[_constants.keys.DATA]);\n\t    });\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].getTime() - b[_constants.keys.DATA].getTime();\n\t    });\n\t  } else if (_keyType === \"string\") {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].localeCompare(b[_constants.keys.DATA], \"en\", { numeric: false });\n\t    });\n\t  } else {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA] - b[_constants.keys.DATA];\n\t    });\n\t  }\n\t  return sortedData;\n\t}\n\t\n\tfunction getUnique(arr) {\n\t  return [].concat(_toConsumableArray(new Set(arr)));\n\t}\n\t\n\tfunction invertScale(_scale, _mouseX, _keyType) {\n\t  if (_keyType === \"time\") {\n\t    return _scale.invert(_mouseX);\n\t  } else {\n\t    var bandStep = _scale.step();\n\t    var index = Math.round(_mouseX / bandStep);\n\t    return _scale.domain()[index];\n\t  }\n\t}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Scale;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Scale(config, cache) {\n\t\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getValue = function getValue(d) {\n\t    return d[_constants.keys.VALUE];\n\t  };\n\t\n\t  function buildStackedScales() {\n\t    var allStackHeights = cache.dataByKey.map(function (d) {\n\t      return d3.sum(d.series.map(function (dB) {\n\t        return dB.value;\n\t      }));\n\t    });\n\t\n\t    cache.stackData = cache.dataByKey.map(function (d) {\n\t      var points = {\n\t        key: d[_constants.keys.DATA]\n\t      };\n\t      d.series.forEach(function (dB) {\n\t        points[dB[_constants.keys.ID]] = dB[_constants.keys.VALUE];\n\t      });\n\t\n\t      return points;\n\t    });\n\t\n\t    cache.d3.stack = d3.stack().keys(cache.dataBySeries.map(getID)).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n\t\n\t    var valuesExtent = d3.extent(allStackHeights);\n\t\n\t    var allKeys = cache.flatDataSorted.map(getKey);\n\t    var allUniqueKeys = (0, _common.getUnique)(allKeys);\n\t\n\t    buildXScale(allUniqueKeys);\n\t    buildColorScale();\n\t    buildYScale([0, valuesExtent[1]]);\n\t  }\n\t\n\t  function buildXScale(_allKeys) {\n\t    var datesExtent = null;\n\t    if (config.keyType === \"time\") {\n\t      datesExtent = d3.extent(_allKeys);\n\t      cache.xScale = d3.scaleTime();\n\t    } else {\n\t      datesExtent = _allKeys;\n\t      cache.xScale = config.chartType === \"bar\" || config.chartType === \"stackedBar\" ? d3.scaleBand() : d3.scalePoint();\n\t      cache.xScale.padding(0);\n\t    }\n\t\n\t    cache.xScale.domain(datesExtent).range([0, cache.chartWidth]);\n\t  }\n\t\n\t  function buildColorScale() {\n\t    var ids = cache.dataBySeries.map(getID);\n\t    cache.colorScale = d3.scaleOrdinal().range(config.colorSchema.map(function (d) {\n\t      return d.value;\n\t    })).domain(config.colorSchema.map(function (d, i) {\n\t      return d.key || ids[i];\n\t    })).unknown(config.defaultColor);\n\t  }\n\t\n\t  function buildYScale(_extent) {\n\t    cache.yScale = d3.scaleLinear().domain(_extent).rangeRound([cache.chartHeight, 0]).nice();\n\t  }\n\t\n\t  function splitByGroups() {\n\t    var groups = {};\n\t    cache.dataBySeries.forEach(function (d) {\n\t      var key = d[_constants.keys.GROUP];\n\t      if (!groups[key]) {\n\t        groups[key] = {\n\t          allValues: [],\n\t          allKeys: []\n\t        };\n\t      }\n\t      groups[key].allValues = groups[key].allValues.concat(d[_constants.keys.VALUES].map(getValue));\n\t      groups[key].allKeys = groups[key].allKeys.concat(d[_constants.keys.VALUES].map(getKey));\n\t    });\n\t\n\t    return groups;\n\t  }\n\t\n\t  function buildScales() {\n\t    var groups = splitByGroups();\n\t\n\t    cache.hasSecondAxis = cache.groupKeys.length > 1;\n\t\n\t    var groupAxis1 = groups[cache.groupKeys[0]];\n\t    var allUniqueKeys = groupAxis1.allKeys;\n\t    var valuesExtent = d3.extent(groupAxis1.allValues);\n\t\n\t    buildXScale(allUniqueKeys);\n\t    buildColorScale();\n\t    buildYScale(valuesExtent);\n\t\n\t    if (cache.hasSecondAxis) {\n\t      var groupAxis2 = groups[cache.groupKeys[1]];\n\t      var valuesExtent2 = d3.extent(groupAxis2.allValues);\n\t\n\t      cache.yScale2 = cache.yScale.copy().domain(valuesExtent2);\n\t    }\n\t  }\n\t\n\t  return {\n\t    buildStackedScales: buildStackedScales,\n\t    buildScales: buildScales\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Line;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Line(config, cache) {\n\t\n\t  var getColor = function getColor(d) {\n\t    return cache.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function drawLines() {\n\t    var seriesLine = d3.line().x(function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return cache.yScale(d[_constants.keys.VALUE]);\n\t    });\n\t\n\t    var seriesLine2 = d3.line().x(function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return cache.yScale2(d[_constants.keys.VALUE]);\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var lines = cache.svg.select(\".chart-group\").selectAll(\".mark\").data(cache.dataBySeries);\n\t\n\t    lines.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"d3.line\"].join(\" \");\n\t    }).merge(lines).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === cache.groupKeys[0]) {\n\t        return seriesLine(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesLine2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", \"none\");\n\t\n\t    lines.exit().remove();\n\t  }\n\t\n\t  function drawAreas() {\n\t    var seriesArea = d3.area().x(function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return cache.yScale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return cache.chartHeight;\n\t    });\n\t\n\t    var seriesArea2 = d3.area().x(function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return cache.yScale2(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return cache.chartHeight;\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var areas = cache.svg.select(\".chart-group\").selectAll(\".mark\").data(cache.dataBySeries);\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"d3.area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === cache.groupKeys[0]) {\n\t        return seriesArea(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesArea2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", getColor);\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawStackedAreas() {\n\t    var seriesLine = d3.area().x(function (d) {\n\t      return cache.xScale(d.data[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return cache.yScale(d[0]);\n\t    }).y1(function (d) {\n\t      return cache.yScale(d[1]);\n\t    });\n\t\n\t    var areas = cache.svg.select(\".chart-group\").selectAll(\".mark\").data(cache.stack(cache.stackData));\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"stacked-d3.area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", seriesLine).style(\"stroke\", \"none\").style(\"fill\", function (d) {\n\t      return cache.colorScale(d.key);\n\t    });\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  return {\n\t    drawLines: drawLines,\n\t    drawAreas: drawAreas,\n\t    drawStackedAreas: drawStackedAreas\n\t  };\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Bar;\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tfunction Bar(config, cache) {\n\t\n\t  var getColor = function getColor(d) {\n\t    return cache.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function drawBars() {\n\t    var bars = cache.svg.select(\".chart-group\").selectAll(\".mark\").data(cache.dataBySeries[0].values);\n\t\n\t    bars.enter().append(\"rect\").attr(\"class\", function () {\n\t      return [\"mark\", \"rect\"].join(\" \");\n\t    }).merge(bars).attr(\"x\", function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[_constants.keys.VALUE]);\n\t    }).attr(\"width\", function () {\n\t      return cache.xScale.bandwidth();\n\t    }).attr(\"height\", function (d) {\n\t      return cache.chartHeight - cache.yScale(d[_constants.keys.VALUE]);\n\t    }).style(\"stroke\", \"white\").style(\"fill\", getColor);\n\t\n\t    bars.exit().remove();\n\t  }\n\t\n\t  function drawStackedBars() {\n\t\n\t    var stackedBarGroups = cache.svg.select(\".chart-group\").selectAll(\".mark-group\").data(cache.stack(cache.stackData));\n\t\n\t    var stackedUpdate = stackedBarGroups.enter().append(\"g\").attr(\"class\", \"mark-group\").merge(stackedBarGroups).attr(\"fill\", function (d) {\n\t      return cache.colorScale(d.key);\n\t    }).attr(\"stroke\", \"white\");\n\t\n\t    stackedBarGroups.exit().remove();\n\t\n\t    var stackedBars = stackedUpdate.selectAll(\".mark\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    stackedBars.enter().append(\"rect\").attr(\"class\", \"mark\").merge(stackedBars).attr(\"x\", function (d) {\n\t      return cache.xScale(d.data[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[1]);\n\t    }).attr(\"height\", function (d) {\n\t      return cache.yScale(d[0]) - cache.yScale(d[1]);\n\t    }).attr(\"width\", cache.xScale.bandwidth());\n\t\n\t    stackedBars.exit().remove();\n\t  }\n\t\n\t  return {\n\t    drawBars: drawBars,\n\t    drawStackedBars: drawStackedBars\n\t  };\n\t}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Axis;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Axis(config, cache) {\n\t\n\t  function buildAxis() {\n\t    cache.xAxis = d3.axisBottom(cache.xScale).tickSize(config.tickSizes, 0).tickPadding(config.tickPadding);\n\t\n\t    if (config.keyType === \"time\") {\n\t      var formatter = d3.timeFormat(config.xAxisFormat);\n\t      cache.xAxis.tickFormat(formatter);\n\t    } else {\n\t      cache.xAxis.tickValues(cache.xScale.domain().filter(function (d, i) {\n\t        return !(i % config.tickSkip);\n\t      }));\n\t    }\n\t\n\t    cache.yAxis = d3.axisLeft(cache.yScale).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t\n\t    if (cache.hasSecondAxis) {\n\t      cache.yAxis2 = d3.axisRight(cache.yScale2).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t    }\n\t  }\n\t\n\t  function drawAxis() {\n\t    cache.svg.select(\".x-axis-group .axis.x\").attr(\"transform\", \"translate(0, \" + cache.chartHeight + \")\").call(cache.xAxis);\n\t\n\t    cache.svg.select(\".y-axis-group.axis.y\").attr(\"transform\", \"translate(\" + -config.xAxisPadding.left + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis);\n\t\n\t    if (cache.hasSecondAxis) {\n\t      cache.svg.select(\".y-axis-group2.axis.y\").attr(\"transform\", \"translate(\" + (cache.chartWidth - config.xAxisPadding.right) + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis2);\n\t    }\n\t  }\n\t\n\t  function drawAxisTitles() {\n\t    cache.svg.select(\".y-title\").text(config.yTitle).attr(\"text-anchor\", \"middle\").attr(\"transform\", function transform() {\n\t      var textHeight = this.getBBox().height;\n\t      return \"translate(\" + [textHeight, config.height / 2] + \") rotate(-90)\";\n\t    });\n\t\n\t    cache.svg.select(\".x-title\").text(config.xTitle).attr(\"text-anchor\", \"middle\").attr(\"transform\", \"translate(\" + [config.width / 2, config.height] + \")\");\n\t  }\n\t\n\t  function drawGridLines() {\n\t    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n\t      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.horizontal-grid-line\").data(cache.yScale.ticks(config.yTicks));\n\t\n\t      cache.horizontalGridLines.enter().append(\"line\").attr(\"class\", \"horizontal-grid-line\").merge(cache.horizontalGridLines).transition().duration(config.axisTransitionDuration).attr(\"x1\", -config.xAxisPadding.left).attr(\"x2\", cache.chartWidth).attr(\"y1\", cache.yScale).attr(\"y2\", cache.yScale);\n\t\n\t      cache.horizontalGridLines.exit().remove();\n\t    }\n\t\n\t    if (config.grid === \"vertical\" || config.grid === \"full\") {\n\t      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.vertical-grid-line\").data(cache.xAxis.tickValues());\n\t\n\t      cache.verticalGridLines.enter().append(\"line\").attr(\"class\", \"vertical-grid-line\").merge(cache.verticalGridLines).transition().duration(config.axisTransitionDuration).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight).attr(\"x1\", cache.xScale).attr(\"x2\", cache.xScale);\n\t\n\t      cache.verticalGridLines.exit().remove();\n\t    }\n\t  }\n\t\n\t  return {\n\t    buildAxis: buildAxis,\n\t    drawAxis: drawAxis,\n\t    drawAxisTitles: drawAxisTitles,\n\t    drawGridLines: drawGridLines\n\t  };\n\t}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Tooltip;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Tooltip(_chart, isStatic) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 2,\n\t      right: 2,\n\t      bottom: 2,\n\t      left: 2\n\t    },\n\t    width: 250,\n\t    height: 45,\n\t\n\t    valueFormat: \".2f\",\n\t\n\t    tooltipMaxTopicLength: 170,\n\t    tooltipBorderRadius: 3,\n\t\n\t    // Animations\n\t    mouseChaseDuration: 30,\n\t    ease: d3.easeQuadInOut,\n\t\n\t    titleHeight: 32,\n\t    elementHeight: 24,\n\t    padding: 8,\n\t    dotRadius: 4,\n\t\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: [],\n\t\n\t    // from chart\n\t    keyType: \"time\"\n\t  };\n\t\n\t  var cache = {\n\t    chart: _chart,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    tooltipDivider: null,\n\t    tooltipBody: null,\n\t    tooltipTitle: null,\n\t    tooltipBackground: null\n\t  };\n\t\n\t  var chartCache = null;\n\t\n\t  function init() {\n\t    if (!isStatic) {\n\t      cache.chart.on(\"mouseOver.tooltip\", show).on(\"mouseMove.tooltip\", update).on(\"mouseOut.tooltip\", hide);\n\t    }\n\t\n\t    render();\n\t  }\n\t  init();\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    chartCache = cache.chart.getCache();\n\t    setConfig(cache.chart.getConfig());\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = chartCache.svg.append(\"g\").classed(\"mapd3 mapd3-tooltip\", true);\n\t\n\t      cache.tooltipBackground = cache.svg.append(\"rect\").classed(\"tooltip-text-container\", true);\n\t\n\t      cache.tooltipTitle = cache.svg.append(\"text\").classed(\"tooltip-title\", true).attr(\"dominant-baseline\", \"hanging\");\n\t\n\t      cache.tooltipDivider = cache.svg.append(\"line\").classed(\"tooltip-divider\", true);\n\t\n\t      cache.tooltipBody = cache.svg.append(\"g\").classed(\"tooltip-body\", true);\n\t    }\n\t\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    cache.tooltipBackground.attr(\"rx\", config.tooltipBorderRadius).attr(\"ry\", config.tooltipBorderRadius);\n\t\n\t    cache.tooltipTitle.attr(\"dy\", config.padding).attr(\"dx\", config.padding);\n\t\n\t    setSize(\"auto\", \"auto\");\n\t    hide();\n\t  }\n\t\n\t  function calculateTooltipPosition(_mouseX) {\n\t    var tooltipX = _mouseX + config.margin.left;\n\t    var offset = 0;\n\t    var tooltipY = config.margin.top;\n\t\n\t    if (_mouseX > cache.chartWidth / 2) {\n\t      offset = -config.tooltipWidth;\n\t    }\n\t\n\t    return [tooltipX + offset, tooltipY];\n\t  }\n\t\n\t  function setPosition(_xPosition) {\n\t    var _calculateTooltipPosi = calculateTooltipPosition(_xPosition),\n\t        _calculateTooltipPosi2 = _slicedToArray(_calculateTooltipPosi, 2),\n\t        tooltipX = _calculateTooltipPosi2[0],\n\t        tooltipY = _calculateTooltipPosi2[1];\n\t\n\t    cache.svg.transition().duration(config.mouseChaseDuration).ease(config.ease).attr(\"transform\", \"translate(\" + tooltipX + \", \" + tooltipY + \")\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function setSize(_width, _height) {\n\t    var height = _height;\n\t    if (_height === \"auto\") {\n\t      height = cache.tooltipBody.node().getBoundingClientRect().height + config.titleHeight + config.padding;\n\t    }\n\t    var width = _width;\n\t    if (_width === \"auto\") {\n\t      width = cache.tooltipBody.node().getBoundingClientRect().width + config.padding * 2;\n\t    }\n\t\n\t    cache.tooltipBackground.attr(\"width\", width).attr(\"height\", height);\n\t\n\t    cache.tooltipDivider.attr(\"x2\", width).attr(\"y1\", config.titleHeight).attr(\"y2\", config.titleHeight);\n\t\n\t    return this;\n\t  }\n\t\n\t  function setSeriesContent(_series) {\n\t    var tooltipLeft = cache.tooltipBody.selectAll(\".tooltip-left-text\").data(_series);\n\t    tooltipLeft.enter().append(\"text\").classed(\"tooltip-left-text\", true).attr(\"dominant-baseline\", \"hanging\").attr(\"dy\", config.padding).attr(\"dx\", config.padding * 2 + config.dotRadius).merge(tooltipLeft).attr(\"y\", function (d, i) {\n\t      return i * config.elementHeight + config.titleHeight;\n\t    }).text(function (d) {\n\t      return d[_constants.keys.LABEL];\n\t    });\n\t    tooltipLeft.exit().remove();\n\t\n\t    var values = _series.map(getValueText);\n\t    var tooltipRight = cache.tooltipBody.selectAll(\".tooltip-right-text\").data(values);\n\t    tooltipRight.enter().append(\"text\").classed(\"tooltip-right-text\", true).attr(\"text-anchor\", \"end\").attr(\"dominant-baseline\", \"hanging\").attr(\"dy\", config.padding).attr(\"dx\", -config.padding).merge(tooltipRight).attr(\"x\", config.tooltipWidth).attr(\"y\", function (d, i) {\n\t      return i * config.elementHeight + config.titleHeight;\n\t    }).text(function (d) {\n\t      return d;\n\t    });\n\t    tooltipRight.exit().remove();\n\t\n\t    var tooltipCircles = cache.tooltipBody.selectAll(\".tooltip-circle\").data(_series);\n\t    tooltipCircles.enter().append(\"circle\").classed(\"tooltip-circle\", true).merge(tooltipCircles).attr(\"cx\", config.padding + config.dotRadius).attr(\"cy\", function (d, i) {\n\t      return i * config.elementHeight + config.titleHeight + config.elementHeight / 2;\n\t    }).attr(\"r\", config.dotRadius).style(\"fill\", function (d) {\n\t      return chartCache.colorScale(d[_constants.keys.ID]);\n\t    });\n\t    tooltipCircles.exit().remove();\n\t  }\n\t\n\t  function setTitle(_title) {\n\t    var title = _title;\n\t    if (config.keyType === \"time\") {\n\t      title = d3.timeFormat(config.dateFormat)(_title);\n\t    }\n\t\n\t    cache.tooltipTitle.text(title);\n\t\n\t    return this;\n\t  }\n\t\n\t  function getValueText(_data) {\n\t    var value = _data[_constants.keys.VALUE];\n\t    if (value) {\n\t      var formatter = d3.format(config.valueFormat);\n\t      return formatter(_data[_constants.keys.VALUE]);\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t\n\t  function setContent(_series) {\n\t    var series = _series;\n\t\n\t    if (config.seriesOrder.length) {\n\t      series = sortByTopicsOrder(_series);\n\t    } else if (_series.length && _series[0][_constants.keys.LABEL]) {\n\t      series = sortByAlpha(_series);\n\t    }\n\t\n\t    setSeriesContent(series);\n\t\n\t    return this;\n\t  }\n\t\n\t  function sortByTopicsOrder(_series) {\n\t    var _order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesOrder;\n\t\n\t    return _order.map(function (orderName) {\n\t      return _series.filter(function (_ref) {\n\t        var name = _ref.name;\n\t        return name === orderName;\n\t      })[0];\n\t    });\n\t  }\n\t\n\t  function sortByAlpha(_series) {\n\t    var series = (0, _common.cloneData)(_series);\n\t    return series.sort(function (a, b) {\n\t      return a[_constants.keys.LABEL].localeCompare(b[_constants.keys.LABEL], \"en\", { numeric: false });\n\t    });\n\t  }\n\t\n\t  function hide() {\n\t    cache.svg.style(\"display\", \"none\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function show() {\n\t    cache.svg.style(\"display\", \"block\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function update(_dataPoint, _xPosition) {\n\t    setTitle(_dataPoint[_constants.keys.DATA]);\n\t    setContent(_dataPoint[_constants.keys.SERIES]);\n\t    setSize(config.tooltipWidth, \"auto\");\n\t    setPosition(_xPosition);\n\t\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.chart.on(\".tooltip\", null);\n\t    cache.svg.remove();\n\t  }\n\t\n\t  return {\n\t    setPosition: setPosition,\n\t    setSize: setSize,\n\t    setContent: setContent,\n\t    setTitle: setTitle,\n\t    hide: hide,\n\t    show: show,\n\t    update: update,\n\t    setConfig: setConfig,\n\t    getCache: getCache,\n\t    render: render,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Legend;\n\t\n\tvar _tooltip = __webpack_require__(13);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Legend(_chart) {\n\t  return (0, _tooltip2.default)(_chart, true);\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.merge = exports.range = exports.sum = exports.extent = exports.bisector = undefined;\n\t\n\tvar _d3Array = __webpack_require__(16);\n\t\n\tObject.defineProperty(exports, \"bisector\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.bisector;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.extent;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.sum;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.range;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.merge;\n\t  }\n\t});\n\texports.default = DataManager;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction DataManager() {\n\t  /* eslint-disable no-magic-numbers */\n\t  var config = {\n\t    keyType: \"number\", // number, string, time,\n\t    range: [0, 100],\n\t    pointCount: 200,\n\t    groupCount: 2,\n\t    lineCount: 4\n\t  };\n\t  var cache = {\n\t    data: null,\n\t    baseDate: null\n\t  };\n\t\n\t  function generateRandomString(_length) {\n\t    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5);\n\t  }\n\t\n\t  function generateSeries(_dataKeys, _range, _allowNegative) {\n\t    var value = d3.randomUniform.apply(d3, _toConsumableArray(_range))();\n\t    var variabilityRatio = 50;\n\t    var randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio;\n\t    var rnd = d3.randomNormal(0, 1);\n\t    return _dataKeys.map(function (d) {\n\t      value = value + rnd() * randomWalkStepSize;\n\t      if (!_allowNegative && value < randomWalkStepSize) {\n\t        value = value + randomWalkStepSize;\n\t      }\n\t      return {\n\t        value: value,\n\t        key: config.keyType === \"time\" ? d.toISOString() : d\n\t      };\n\t    });\n\t  }\n\t\n\t  function generateTestDataset() {\n\t    var dataKeys = null;\n\t    if (config.keyType === \"time\") {\n\t      cache.baseDate = new Date();\n\t      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate));\n\t    } else if (config.keyType === \"string\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function () {\n\t        return generateRandomString();\n\t      });\n\t      dataKeys.sort(function (a, b) {\n\t        return a.localeCompare(b, \"en\", { numeric: false });\n\t      });\n\t    } else if (config.keyType === \"number\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function (d, i) {\n\t        return i;\n\t      });\n\t    }\n\t\n\t    var series = d3.range(config.lineCount).map(function (d) {\n\t      return {\n\t        label: \"Label \" + d,\n\t        id: d,\n\t        group: d < config.groupCount ? d : 0,\n\t        values: generateSeries(dataKeys, config.range)\n\t      };\n\t    });\n\t\n\t    cache.data = { series: series\n\t\n\t      // console.log(\"generated data\", cache.data)\n\t\n\t    };return cache.data;\n\t  }\n\t\n\t  function filterByKey(_extent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      var values = series[_constants.keys.VALUES];\n\t      var allKeys = values.map(function (d) {\n\t        return d[_constants.keys.DATA];\n\t      });\n\t      var extentMinIndex = allKeys.indexOf(_extent[0]);\n\t      var extentMaxIndex = allKeys.indexOf(_extent[1]);\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].slice(extentMinIndex, extentMaxIndex);\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function filterByDate(_dateExtent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].filter(function (d) {\n\t        var epoch = new Date(d[_constants.keys.DATA]).getTime();\n\t        return epoch >= _dateExtent[0].getTime() && epoch <= _dateExtent[1].getTime();\n\t      });\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    generateTestDataset: generateTestDataset,\n\t    generateSeries: generateSeries,\n\t    filterByDate: filterByDate,\n\t    filterByKey: filterByKey,\n\t    setConfig: setConfig\n\t  };\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Observer;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Observer(_dataManager) {\n\t  var dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\");\n\t  var dataManager = _dataManager;\n\t\n\t  dispatcher.on(\"brushChange.observer\", function (_e, _brushConfig) {\n\t    var filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e) : dataManager.filterByKey(_e);\n\t    pub(\"dataFilter\", filtered);\n\t  });\n\t\n\t  function sub() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function pub(_channelName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    dispatcher.call.apply(dispatcher, [_channelName, this].concat(args));\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    sub: sub,\n\t    pub: pub\n\t  };\n\t}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Binning;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(19);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Binning(_chart) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    toggle: [\"auto\"],\n\t    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n\t    label: \"BIN:\"\n\t  };\n\t\n\t  var cache = {\n\t    chart: _chart,\n\t    svg: null\n\t  };\n\t\n\t  var chartCache = {\n\t    svg: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"change\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t  }\n\t  render();\n\t\n\t  function buildSVG() {\n\t    chartCache = cache.chart.getCache();\n\t    setConfig(cache.chart.getConfig());\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = chartCache.svg.append(\"g\").classed(\"binning-group\", true).append(\"text\");\n\t\n\t      cache.svg.append(\"tspan\").text(config.label).attr(\"y\", \"1em\").attr(\"class\", \"item\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + [config.margin.left, 0] + \")\");\n\t\n\t    var items = cache.svg.selectAll(\".toggleOnOff\").data(config.toggle);\n\t    items.enter().append(\"tspan\").attr(\"class\", function (d) {\n\t      return \"item \" + d + \" toggleOnOff\";\n\t    }).attr(\"dx\", \"0.8em\").attr(\"y\", \"1em\").on(\"click.select\", (0, _interactors.toggleOnOff)(\".binning-group .item.toggleOnOff\")).on(\"click.d3.dispatch\", function click(d) {\n\t      var isSelected = this.classList.contains(\"selected\");\n\t      dispatcher.call(\"change\", this, d, { isSelected: isSelected });\n\t    }).merge(items).text(function (d) {\n\t      return d;\n\t    });\n\t    items.exit().remove();\n\t\n\t    var itemsExclusive = cache.svg.selectAll(\".toggleExclusive\").data(config.exclusiveToggle);\n\t    itemsExclusive.enter().append(\"tspan\").attr(\"class\", function (d) {\n\t      return \"item \" + d + \" toggleExclusive\";\n\t    }).attr(\"dx\", \"0.8em\").attr(\"y\", \"1em\").on(\"click.select\", (0, _interactors.exclusiveToggle)(\".binning-group .item.toggleExclusive\")).on(\"click.d3.dispatch\", function click(d) {\n\t      var isSelected = this.classList.contains(\"selected\");\n\t      dispatcher.call(\"change\", this, d, { isSelected: isSelected });\n\t    }).merge(itemsExclusive).text(function (d) {\n\t      return d;\n\t    });\n\t    itemsExclusive.exit().remove();\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  function update() {\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    getCache: getCache,\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    update: update\n\t  };\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toggleOnOff = toggleOnOff;\n\texports.exclusiveToggle = exclusiveToggle;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n\t * @param  {Number} selector A valid selector of the elements to toggle\n\t * @example\n\t * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n\t *\n\t * @return {void}\n\t */\n\t\n\tfunction toggleOnOff(selector) {\n\t  return exclusiveToggle(selector, {\n\t    toggleOffIsEnabled: true,\n\t    toggleMultipleIsEnabled: false\n\t  });\n\t}\n\t\n\tfunction exclusiveToggle(selector) {\n\t  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { toggleOffIsEnabled: false, toggleMultipleIsEnabled: false };\n\t\n\t\n\t  return function toggle() {\n\t    /* eslint-disable consistent-this */\n\t    var that = this;\n\t    var hasSelection = false;\n\t    var selection = d3.select(this.farthestViewportElement).selectAll(selector);\n\t\n\t    selection.classed(\"selected\", function selectedClass() {\n\t      var isSelected = this.classList.contains(\"selected\");\n\t      var hasJustBeenClicked = this === that;\n\t      var shouldBeSelected = false;\n\t\n\t      if (hasJustBeenClicked) {\n\t        shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true;\n\t      } else {\n\t        shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false;\n\t      }\n\t\n\t      hasSelection = hasSelection || shouldBeSelected;\n\t      return shouldBeSelected;\n\t    });\n\t    selection.classed(\"dimmed\", function dimmedClass() {\n\t      return hasSelection && !this.classList.contains(\"selected\");\n\t    });\n\t    /* eslint-enable consistent-this */\n\t  };\n\t}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DomainEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(19);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction DomainEditor(_chart) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    position: { x: 0, y: 0 }\n\t  };\n\t\n\t  var cache = {\n\t    chart: _chart,\n\t    svg: null,\n\t    parentHtmlNode: null\n\t  };\n\t\n\t  var chartCache = {\n\t    svg: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"lockToggle\", \"domainChanged\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t  }\n\t  render();\n\t\n\t  function buildSVG() {\n\t    chartCache = cache.chart.getCache();\n\t    setConfig(cache.chart.getConfig());\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = chartCache.svg.append(\"g\").classed(\"domain-editor-group\", true);\n\t\n\t      var panel = cache.svg.append(\"rect\").attr(\"width\", \"10\").attr(\"height\", \"14\").attr(\"opacity\", \"0\");\n\t\n\t      var lock = cache.svg.append(\"g\").attr(\"class\", \"lock-icon\").attr(\"transform\", \"scale(0.2, 0.3)\").attr(\"pointer-events\", \"none\");\n\t      lock.append(\"rect\").attr(\"x\", \"3\").attr(\"y\", \"26\").attr(\"width\", \"42\").attr(\"height\", \"21\");\n\t      var loop = lock.append(\"path\").attr(\"class\", \"loop closed\").attr(\"d\", \"M24,0c0,0 -5,-0 -10,2c-4,3 -4,9 -4,9l-0,14l4,0l0,-14c0,0 0,-5 3,-6c3,-1 7,-1 7,-1c0,0 3,-0 7,1c3,1 3,6 3,6l4,0c0,0 0,-6 -4,-9c-4,-3 -10,-2 -10,-2\").attr(\"transform\", \"translate(0, 14)\");\n\t\n\t      panel.on(\"click\", function click() {\n\t        var isClosed = this.classList.contains(\"closed\");\n\t        loop.transition().attr(\"transform\", \"translate(0, \" + (isClosed ? \"14\" : \"6\") + \")\");\n\t        this.classList.toggle(\"closed\", !isClosed);\n\t      });\n\t\n\t      cache.svg.append(\"text\").attr(\"class\", \"domain-min\");\n\t\n\t      cache.parentHtmlNode = cache.svg.node().ownerSVGElement.parentNode;\n\t      d3.select(cache.parentHtmlNode).append(\"input\").style(\"position\", \"absolute\").style(\"top\", config.position.x).style(\"left\", config.position.y);\n\t\n\t      cache.svg.append(\"text\").attr(\"class\", \"domain-max\");\n\t    }\n\t\n\t    // cache.svg.attr(\"transform\", `translate(${[config.margin.left, 0]})`)\n\t\n\t    // const items = cache.svg.selectAll(\".toggleOnOff\")\n\t    //     .data(config.toggle)\n\t    // items.enter().append(\"tspan\")\n\t    //   .attr(\"class\", (d) => `item ${d} toggleOnOff`)\n\t    //   .attr(\"dx\", \"0.8em\")\n\t    //   .attr(\"y\", \"1em\")\n\t    //   .on(\"click.d3.select\", toggleOnOff(\".binning-group .item.toggleOnOff\"))\n\t    //   .on(\"click.d3.dispatch\", function click (d) {\n\t    //     const isSelected = this.classList.contains(\"selected\")\n\t    //     dispatcher.call(\"change\", this, d, {isSelected})\n\t    //   })\n\t    //   .merge(items)\n\t    //   .text((d) => d)\n\t    // items.exit().remove()\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  function update() {\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    getCache: getCache,\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    update: update\n\t  };\n\t}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Brush;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Brush(_chart) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    chart: _chart,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null,\n\t    xScale: null\n\t  };\n\t\n\t  var chartCache = {\n\t    xScale: null,\n\t    dataBySeries: null,\n\t    svg: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\");\n\t\n\t  function init() {\n\t    render();\n\t  }\n\t  init();\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    if (chartCache.dataBySeries) {\n\t      cache.data = extractBrushDimension((0, _common.cloneData)(chartCache.dataBySeries));\n\t      buildScales();\n\t      buildBrush();\n\t      drawBrush();\n\t    }\n\t  }\n\t\n\t  function buildSVG() {\n\t    chartCache = cache.chart.getCache();\n\t    setConfig(cache.chart.getConfig());\n\t\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = chartCache.svg.append(\"g\").classed(\"brush-group\", true);\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function extractBrushDimension(_data) {\n\t    var merged = d3.merge(_data.map(function (d) {\n\t      return d[_constants.keys.VALUES];\n\t    }));\n\t    return (0, _common.sortData)(merged, config.keyType);\n\t  }\n\t\n\t  function buildScales() {\n\t    cache.xScale = chartCache.xScale;\n\t  }\n\t\n\t  function buildBrush() {\n\t    cache.brush = cache.brush || d3.brushX().on(\"start\", handleBrushStart).on(\"brush\", handleBrushMove).on(\"end\", handleBrushEnd);\n\t\n\t    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]]);\n\t  }\n\t\n\t  function drawBrush() {\n\t    cache.chartBrush = cache.svg.call(cache.brush);\n\t\n\t    cache.chartBrush.selectAll(\".brush-rect\").attr(\"height\", cache.chartHeight);\n\t  }\n\t\n\t  function getDataExtent() {\n\t    var selection = d3.event.selection;\n\t    var dataExtent = selection.map(function (d) {\n\t      return (0, _common.invertScale)(chartCache.xScale, d, config.keyType);\n\t    });\n\t    return dataExtent;\n\t  }\n\t\n\t  function handleBrushStart() {\n\t    dispatcher.call(\"brushStart\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushMove() {\n\t    dispatcher.call(\"brushMove\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushEnd() {\n\t    // Only transition after input, ignore empty selections.\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t\n\t    var dataExtent = getDataExtent();\n\t\n\t    d3.select(this).transition().call(d3.event.target.move, dataExtent.map(cache.xScale));\n\t\n\t    dispatcher.call(\"brushEnd\", this, dataExtent, config);\n\t  }\n\t\n\t  // function setBrushByPercentages (_a, _b) {\n\t  //   const x0 = _a * cache.chartWidth\n\t  //   const x1 = _b * cache.chartWidth\n\t\n\t  //   brush.move(chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function setBrushByDates (_dateA, _dateB) {\n\t  //   const x0 = cache.xScale(new Date(_dateA))\n\t  //   const x1 = cache.xScale(new Date(_dateB))\n\t\n\t  //   cache.brush.move(cache.chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function updateHandlers (_dateExtent) {\n\t  //   if (_dateExtent === null) {\n\t  //     cache.handle.attr(\"display\", \"none\")\n\t  //   } else {\n\t  //     cache.handle\n\t  //       .attr(\"display\", null)\n\t  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n\t  //   }\n\t  // }\n\t\n\t  // API\n\t\n\t  /**\n\t   * Gets or Sets the dateRange for the selected part of the brush\n\t   * @param  {String[]} _x Desired dateRange for the graph\n\t   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n\t   * @public\n\t   */\n\t  // function dateRange (_x) {\n\t  //   if (!arguments.length) {\n\t  //     return dateRange\n\t  //   }\n\t  //   dateRange = _x\n\t\n\t  //   if (Array.isArray(dateRange)) {\n\t  //     setBrushByDates(...dateRange)\n\t  //   }\n\t\n\t  //   return this\n\t  // }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  function update() {\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    getCache: getCache,\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    update: update\n\t  };\n\t}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Hover;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Hover(_chart) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    chart: _chart,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var chartCache = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    colorScale: null,\n\t    dataBySeries: null,\n\t    svg: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"hover\");\n\t\n\t  function init() {\n\t    cache.chart.on(\"mouseOver.hover\", show).on(\"mouseMove.hover\", update).on(\"mouseOut.hover\", hide);\n\t\n\t    render();\n\t    hide();\n\t  }\n\t  init();\n\t\n\t  function render() {\n\t    buildSVG();\n\t    buildScales();\n\t    drawVerticalMarker();\n\t  }\n\t\n\t  function buildSVG() {\n\t    chartCache = cache.chart.getCache();\n\t    setConfig(cache.chart.getConfig());\n\t\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = chartCache.svg.append(\"g\").classed(\"hover-group\", true);\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function buildScales() {\n\t    cache.xScale = chartCache.xScale;\n\t    cache.yScale = chartCache.yScale;\n\t    cache.yScale2 = chartCache.yScale2;\n\t    cache.colorScale = chartCache.colorScale;\n\t  }\n\t\n\t  function update(_dataPoint, _dataPointXPosition) {\n\t    if (_dataPointXPosition) {\n\t      moveVerticalMarker(_dataPointXPosition);\n\t      if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t        highlightStackedDataPoints(_dataPoint);\n\t      } else {\n\t        highlightDataPoints(_dataPoint);\n\t      }\n\t      dispatcher.call(\"hover\", this, _dataPoint);\n\t    }\n\t  }\n\t\n\t  function show() {\n\t    cache.svg.style(\"display\", \"block\");\n\t  }\n\t\n\t  function hide() {\n\t    cache.svg.style(\"display\", \"none\");\n\t  }\n\t\n\t  var getColor = function getColor(d) {\n\t    return cache.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function highlightDataPoints(_dataPoint) {\n\t    var dotsData = _dataPoint[_constants.keys.SERIES];\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawHighlightDataPoints(_dotsData) {\n\t    var dots = cache.svg.selectAll(\".dot\").data(_dotsData);\n\t\n\t    dots.enter().append(\"circle\").attr(\"class\", \"dot\").merge(dots)\n\t    // .attr(\"cy\", (d) => cache.yScale2(d[keys.VALUE]))\n\t    .attr(\"cy\", function (d) {\n\t      if (d[_constants.keys.GROUP] === chartCache.groupKeys[0]) {\n\t        return cache.yScale(d[_constants.keys.VALUE]);\n\t      } else {\n\t        return cache.yScale2(d[_constants.keys.VALUE]);\n\t      }\n\t    }).attr(\"r\", config.dotRadius).style(\"stroke\", \"none\").style(\"fill\", getColor);\n\t\n\t    dots.exit().remove();\n\t  }\n\t\n\t  function highlightStackedDataPoints(_dataPoint) {\n\t    var stackedDataPoint = { key: _dataPoint[_constants.keys.DATA] };\n\t    _dataPoint.series.forEach(function (d) {\n\t      var id = d[_constants.keys.ID];\n\t      stackedDataPoint[id] = d[_constants.keys.VALUE];\n\t    });\n\t\n\t    var dotsStack = cache.stack([stackedDataPoint]);\n\t    var dotsData = dotsStack.map(function (d) {\n\t      var dot = { value: d[0][1] };\n\t      dot[_constants.keys.ID] = d.key;\n\t      return dot;\n\t    });\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawVerticalMarker() {\n\t    var verticalMarkerLine = cache.svg.selectAll(\"line\").data([0]);\n\t\n\t    verticalMarkerLine.enter().append(\"line\").classed(\"vertical-marker\", true).merge(verticalMarkerLine).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight);\n\t\n\t    verticalMarkerLine.exit().remove();\n\t  }\n\t\n\t  function moveVerticalMarker(_verticalMarkerXPosition) {\n\t    cache.svg.attr(\"transform\", \"translate(\" + [_verticalMarkerXPosition + config.margin.left, config.margin.top] + \")\");\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  return {\n\t    highlightDataPoints: highlightDataPoints,\n\t    highlightStackedDataPoints: highlightStackedDataPoints,\n\t    drawVerticalMarker: drawVerticalMarker,\n\t    moveVerticalMarker: moveVerticalMarker,\n\t    getCache: getCache,\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// mapd3.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 08ebffa6881e225fb4f5","import Chart from \"./charts/chart.js\"\nimport Tooltip from \"./charts/tooltip.js\"\nimport Legend from \"./charts/legend.js\"\nimport DataManager from \"./charts/data-manager.js\"\nimport Observer from \"./charts/observer.js\"\nimport Binning from \"./charts/binning.js\"\nimport DomainEditor from \"./charts/domain-editor.js\"\nimport Brush from \"./charts/brush.js\"\nimport Hover from \"./charts/hover.js\"\nimport Interactors from \"./charts/interactors.js\"\nimport {colors} from \"./charts/helpers/colors.js\"\n\nexport {\n  Chart,\n  Tooltip,\n  Legend,\n  DataManager,\n  Observer,\n  Binning,\n  DomainEditor,\n  Brush,\n  Hover,\n  Interactors,\n  colors\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exportChart} from \"./helpers/exportChart\"\nimport {colors} from \"./helpers/colors\"\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, getUnique, invertScale, sortData} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\nimport Line from \"./line\"\nimport Bar from \"./bar\"\nimport Axis from \"./axis\"\n\nexport default function Chart (_container) {\n\n  let config = {\n    margin: {\n      top: 48,\n      right: 32,\n      bottom: 48,\n      left: 32\n    },\n    width: 800,\n    height: 500,\n    xAxisPadding: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    },\n    tickPadding: 5,\n    colorSchema: colors.mapdColors.map((d) => ({value: d})),\n    dotRadius: 4,\n    xAxisFormat: \"%c\",\n    tickSkip: 1,\n    tickSizes: 8,\n    defaultColor: \"skyblue\",\n\n    isAnimated: false,\n    ease: d3.easeLinear,\n    animationDuration: 1500,\n    axisTransitionDuration: 0,\n\n    yTicks: 5,\n    yTicks2: 5,\n    yAxisFormat: \".2f\",\n    yAxisFormat2: \".2f\",\n\n    xTitle: \"\",\n    yTitle: \"\",\n\n    keyType: \"time\",\n    chartType: \"line\" // line, area, stackedLine, stackedArea\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    maskingRectangle: null,\n    verticalGridLines: null,\n    horizontalGridLines: null,\n    grid: null,\n    verticalMarkerContainer: null,\n    verticalMarkerLine: null,\n\n    dataBySeries: null,\n    dataByKey: null,\n    data: null,\n    chartWidth: null, chartHeight: null,\n    xScale: null, yScale: null, yScale2: null, colorScale: null,\n    xAxis: null, yAxis: null, yAxis2: null,\n    groupKeys: [],\n    hasSecondAxis: false,\n\n    stackData: null,\n    stack: null,\n    flatDataSorted: null\n  }\n\n  const components = {\n    scale: null,\n    axis: null,\n    line: null,\n    bar: null,\n    hover: null\n  }\n\n  // accessors\n  const getKey = (d) => d[keys.DATA]\n  const getGroup = (d) => d[keys.GROUP]\n\n  // events\n  const dispatcher = d3.dispatch(\"mouseOver\", \"mouseOut\", \"mouseMove\")\n\n  function init () {\n    render()\n    addMouseEvents()\n  }\n  init()\n\n  function render () {\n    buildSVG()\n\n    if (cache.dataBySeries) {\n      buildChart()\n    }\n\n    return this\n  }\n\n  function buildSVG () {\n    const w = config.width || cache.container.clientWidth\n    const h = config.height || cache.container.clientHeight\n    cache.chartWidth = w - config.margin.left - config.margin.right\n    cache.chartHeight = h - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      const template = `<svg class=\"mapd3 line-chart\">\n        <g class=\"container-group\">\n          <g class=\"grid-lines-group\"></g>\n          <g class=\"x-axis-group\">\n            <g class=\"axis x\"></g>\n          </g>\n          <g class=\"y-axis-group axis y\"></g>\n          <g class=\"y-axis-group2 axis y\"></g>\n          <g class=\"chart-group\"></g>\n        </g>\n        <text class=\"x-title\"></text>\n        <text class=\"y-title\"></text>\n        <rect class=\"masking-rectangle\"></rect>\n      </svg>`\n\n      cache.svg = d3.select(cache.container)\n          .html(template)\n          .select(\"svg\")\n    }\n\n    cache.svg.attr(\"width\", config.width)\n      .attr(\"height\", config.height)\n      .select(\".container-group\")\n      .attr(\"transform\", `translate(${config.margin.left},${config.margin.top})`)\n\n    return this\n  }\n\n  function buildChart () {\n    components.scale = Scale(config, cache)\n    components.line = Line(config, cache)\n    components.bar = Bar(config, cache)\n    components.axis = Axis(config, cache)\n\n    if (config.chartType === \"stackedLine\"\n      || config.chartType === \"stackedArea\"\n      || config.chartType === \"stackedBar\") {\n      components.scale.buildStackedScales()\n    } else {\n      components.scale.buildScales()\n    }\n\n    components.axis.buildAxis()\n    components.axis.drawGridLines()\n    components.axis.drawAxis()\n    components.axis.drawAxisTitles()\n\n    if (config.chartType === \"area\") {\n      components.line.drawAreas()\n    } else if (config.chartType === \"line\") {\n      components.line.drawLines()\n    } else if (config.chartType === \"stackedArea\") {\n      components.line.drawStackedAreas()\n    } else if (config.chartType === \"bar\") {\n      components.bar.drawBars()\n    } else if (config.chartType === \"stackedBar\") {\n      components.bar.drawStackedBars()\n    }\n\n    triggerIntroAnimation()\n\n    return this\n  }\n\n  function setData (_data) {\n    cache.data = cloneData(_data[keys.SERIES])\n    const cleanedData = cleanData(_data)\n    cache.dataBySeries = cleanedData.dataBySeries\n    cache.dataByKey = cleanedData.dataByKey\n\n    render()\n\n    return this\n  }\n\n  function cleanData (_data) {\n    const dataBySeries = cloneData(_data[keys.SERIES])\n    const flatData = []\n\n    // Normalize dataBySeries\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES] = sortData(serie[keys.VALUES], config.keyType)\n      serie[keys.VALUES].forEach((d) => {\n        d[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        d[keys.VALUE] = Number(d[keys.VALUE])\n      })\n    })\n\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES].forEach((d) => {\n        const dataPoint = {}\n        dataPoint[keys.LABEL] = serie[keys.LABEL]\n        dataPoint[keys.GROUP] = serie[keys.GROUP]\n        dataPoint[keys.ID] = serie[keys.ID]\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        dataPoint[keys.VALUE] = d[keys.VALUE]\n        flatData.push(dataPoint)\n      })\n    })\n\n    cache.flatDataSorted = sortData(flatData, config.keyType)\n\n    const dataByKey = d3.nest()\n      .key(getKey)\n      .entries(cache.flatDataSorted)\n      .map((d) => {\n        const dataPoint = {}\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key\n        dataPoint[keys.SERIES] = d.values\n        return dataPoint\n      })\n\n    const allGroupKeys = dataBySeries.map(getGroup)\n    cache.groupKeys = getUnique(allGroupKeys)\n\n    return {dataBySeries, dataByKey}\n  }\n\n  function triggerIntroAnimation () {\n    if (config.isAnimated) {\n      cache.maskingRectangle = cache.svg.d3.select(\".masking-rectangle\")\n        .attr(\"width\", cache.chartWidth - 2)\n        .attr(\"height\", cache.chartHeight)\n        .attr(\"x\", config.margin.left + 1)\n        .attr(\"y\", config.margin.top)\n\n      cache.maskingRectangle.transition()\n        .duration(config.animationDuration)\n        .ease(config.ease)\n        .attr(\"width\", 0)\n        .attr(\"x\", config.width - config.margin.right)\n        .on(\"end\", () => cache.maskingRectangle.remove())\n    }\n  }\n\n  function getNearestDataPoint (_mouseX) {\n    const keyFromInvertedX = invertScale(cache.xScale, _mouseX, config.keyType)\n    const bisectLeft = d3.bisector(getKey).left\n    const dataEntryIndex = bisectLeft(cache.dataByKey, keyFromInvertedX)\n    const dataEntryForXPosition = cache.dataByKey[dataEntryIndex]\n    let nearestDataPoint = null\n\n    if (keyFromInvertedX) {\n      nearestDataPoint = dataEntryForXPosition\n    }\n    return nearestDataPoint\n  }\n\n  function addMouseEvents () {\n    cache.svg\n      .on(\"mouseover.d3.dispatch\", function mouseover (d) {\n        if (!cache.data) { return }\n        dispatcher.call(\"mouseOver\", this, d, d3.mouse(this))\n      })\n      .on(\"mouseout.d3.dispatch\", function mouseout (d) {\n        if (!cache.data) { return }\n        dispatcher.call(\"mouseOut\", this, d, d3.mouse(this))\n      })\n      .on(\"mousemove.d3.dispatch\", function mousemove () {\n        if (!cache.data) { return }\n        const mouseX = d3.mouse(this)[0]\n        const xPosition = mouseX - config.margin.left\n        const dataPoint = getNearestDataPoint(xPosition)\n\n        if (dataPoint) {\n          const dataPointXPosition = cache.xScale(dataPoint[keys.DATA])\n          dispatcher.call(\"mouseMove\", this, dataPoint, dataPointXPosition)\n        }\n      })\n  }\n\n  function save (_filename, _title) {\n    exportChart.call(this, cache.svg, _filename, _title)\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function setXTitle (_xTitle) {\n    config = Object.assign({}, config, {xTitle: _xTitle})\n    return this\n  }\n\n  function setYTitle (_yTitle) {\n    config = Object.assign({}, config, {yTitle: _yTitle})\n    return this\n  }\n\n  function getConfig () {\n    return config\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.svg.on(\".\", null).remove()\n  }\n\n  return {\n    render,\n    setConfig,\n    setData,\n    setXTitle,\n    setYTitle,\n    getCache,\n    getConfig,\n    on,\n    save,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/chart.js","export {\n\taxisBottom,\n\taxisLeft,\n\taxisRight,\n\ttimeFormat,\n\tformat,\n\tbisector,\n\textent,\n\tsum,\n\trange,\n\tmerge,\n\tnest,\n\tdispatch,\n\teaseLinear,\n\teaseQuadInOut,\n\tselect,\n\tmouse,\n\tevent,\n\ttransition,\n\trandomUniform,\n\trandomNormal,\n\ttimeDay,\n\ttimeMonth,\n\tarea,\n\tcurveCatmullRom,\n\tline,\n\tstack,\n\tstackOffsetNone,\n\tstackOrderNone,\n\tscaleTime,\n\tscalePoint,\n\tscaleBand,\n\tscaleLinear,\n\tscaleOrdinal,\n\tbrushX\n} from \"d3/build/d3\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/d3-service.js","// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.11.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function constrain(transform$$1, extent) {\n    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n    return transform$$1.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","import {colorSchemas} from \"./colors.js\"\nimport initializeSerializer from \"./serializeWithStyles.js\"\n\nexport function exportChart (require) {\n  let encoder = window.btoa\n\n  if (!encoder) {\n    encoder = require(\"base-64\").encode\n  }\n\n  // Base64 doesn't work really well with Unicode strings, so we need to use this function\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n  const b64EncodeUnicode = (str) => encoder(encodeURIComponent(str)\n      .replace(/%([0-9A-F]{2})/g, (match, p1) => String.fromCharCode(`0x${p1}`)))\n\n  const config = {\n    defaultFilename: \"mapd3.png\",\n    chartBackground: \"white\",\n    imageSourceBase: \"data:image/svg+xml;base64,\",\n    titleFontSize: \"15px\",\n    titleFontFamily: \"'Benton Sans', sans-serif\",\n    titleTopOffset: 30,\n    get styleBackgroundString () {\n      return `<style>svg{background:${this.chartBackground};}</style>`\n    }\n  }\n\n  /**\n   * Main function to be used as a method by chart instances to export charts to png\n   * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n   * @param  {string} filename    [download to be called <filename>.png]\n   * @param  {string} title       Title for the image\n   */\n  function save (d3svg, filename, title) {\n    const img = createImage(convertSvgToHtml.call(this, d3svg, title))\n\n    img.onload = handleImageLoad.bind(\n                img,\n                createCanvas(this.width(), this.height()),\n                filename\n            )\n  }\n\n  /**\n   * adds background styles to raw html\n   * @param {string} html raw html\n   */\n  function addBackground (html) {\n    return html.replace(\">\", `>${config.styleBackgroundString}`)\n  }\n\n  /**\n   * takes d3 svg el, adds proper svg tags, adds inline styles\n   * from stylesheets, adds white background and returns string\n   * @param  {object} d3svg TYPE d3 svg element\n   * @return {string} string of passed d3\n   */\n  function convertSvgToHtml (d3svg, title) {\n    if (!d3svg) {\n      return null\n    }\n\n    d3svg.attr(\"version\", \"1.1\")\n      .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n    const serializer = initializeSerializer()\n    let html = serializer(d3svg.node())\n\n    html = prependTitle.call(this, html, title, parseInt(d3svg.attr(\"width\"), 10))\n    html = addBackground(html)\n\n    return html\n  }\n\n  /**\n   * Create Canvas\n   * @param  {number} width\n   * @param  {number} height\n   * @return {object} TYPE canvas element\n   */\n  function createCanvas (width, height) {\n    const canvas = document.createElement(\"canvas\")\n\n    canvas.height = height\n    canvas.width = width\n\n    return canvas\n  }\n\n  /**\n   * Create Image\n   * @param  {string} svgHtml string representation of svg el\n   * @return {object}  TYPE element <img>, src points at svg\n   */\n  function createImage (svgHtml) {\n    const img = new Image()\n\n    img.src = `${config.imageSourceBase}${b64EncodeUnicode(svgHtml)}`\n\n    return img\n  }\n\n  /**\n   * Draws image on canvas\n   * @param  {object} image TYPE:el <img>, to be drawn\n   * @param  {object} canvas TYPE: el <canvas>, to draw on\n   */\n  function drawImageOnCanvas (image, canvas) {\n    canvas.getContext(\"2d\").drawImage(image, 0, 0)\n\n    return canvas\n  }\n\n  /**\n   * Triggers browser to download image, convert canvas to url,\n   * we need to append the link el to the dom before clicking it for Firefox to register\n   * point <a> at it and trigger click\n   * @param  {object} canvas TYPE: el <canvas>\n   * @param  {string} filename\n   * @param  {string} extensionType\n   */\n  function downloadCanvas (canvas, filename = config.defaultFilename, extensionType = \"image/png\") {\n    const url = canvas.toDataURL(extensionType)\n    const link = document.createElement(\"a\")\n\n    link.href = url\n    link.download = filename\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n    /**\n   * Handles on load event fired by img.onload, this=img\n   * @param  {object} canvas TYPE: el <canvas>\n   * @param  {string} filename\n   * @param  {object} e\n   */\n  function handleImageLoad (canvas, filename, e) {\n    e.preventDefault()\n\n    downloadCanvas(drawImageOnCanvas(this, canvas), filename)\n  }\n\n  /**\n   * if passed, append title to the raw html to appear on graph\n   * @param  {string} html     raw html string\n   * @param  {string} title    title of the graph\n   * @param  {number} svgWidth width of graph container\n   * @return {string}         raw html with title prepended\n   */\n  function prependTitle (html, title, svgWidth) {\n    if (!title || !svgWidth) {\n      return html\n    }\n    const {grey} = colorSchemas\n\n    html = html.replace(/<g/, `<text x=\"${this.margin().left}\" y=\"${config.titleTopOffset}\" font-family=\"${config.titleFontFamily}\" font-size=\"${config.titleFontSize}\" fill=\"${grey[6]}\"> ${title} </text><g `)\n\n    return html\n  }\n\n  return {\n    save,\n    convertSvgToHtml,\n    createImage,\n    drawImageOnCanvas\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/exportChart.js","export const mapdUI = {\n  skyBlue: \"#22A7F0\"\n}\n\nexport const mapdColors = [\n  \"#ea5545\",\n  \"#bdcf32\",\n  \"#b33dc6\",\n  \"#ef9b20\",\n  \"#87bc45\",\n  \"#f46a9b\",\n  \"#ace5c7\",\n  \"#ede15b\",\n  \"#836dc5\",\n  \"#86d87f\",\n  \"#27aeef\"\n]\n\nexport const grey = [\n  \"#F8F8FA\",\n  \"#EFF2F5\",\n  \"#D2D6DF\",\n  \"#C3C6CF\",\n  \"#ADB0B6\",\n  \"#666A73\",\n  \"#45494E\",\n  \"#363A43\",\n  \"#282C35\"\n]\n\nexport const colors = {\n  mapdUI,\n  mapdColors,\n  grey\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","module.exports = (function() {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            const defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            const noStyleTags = {'BASE':true,'HEAD':true,'HTML':true,'META':true,'NOFRAME':true,'NOSCRIPT':true,'PARAM':true,'SCRIPT':true,'STYLE':true,'TITLE':true};\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            const tagNames = ['A','ABBR','ADDRESS','AREA','ARTICLE','ASIDE','AUDIO','B','BASE','BDI','BDO','BLOCKQUOTE','BODY','BR','BUTTON','CANVAS','CAPTION','CENTER','CITE','CODE','COL','COLGROUP','COMMAND','DATALIST','DD','DEL','DETAILS','DFN','DIV','DL','DT','EM','EMBED','FIELDSET','FIGCAPTION','FIGURE','FONT','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEAD','HEADER','HGROUP','HR','HTML','I','IFRAME','IMG','INPUT','INS','KBD','LABEL','LEGEND','LI','LINK','MAP','MARK','MATH','MENU','META','METER','NAV','NOBR','NOSCRIPT','OBJECT','OL','OPTION','OPTGROUP','OUTPUT','P','PARAM','PRE','PROGRESS','Q','RP','RT','RUBY','S','SAMP','SCRIPT','SECTION','SELECT','SMALL','SOURCE','SPAN','STRONG','STYLE','SUB','SUMMARY','SUP','SVG','TABLE','TBODY','TD','TEXTAREA','TFOOT','TH','THEAD','TIME','TITLE','TR','TRACK','U','UL','VAR','VIDEO','WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, (name) => {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                let defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, (style) => {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName (tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                let cssTexts = [],\n                    elements,\n                    computedStyle,\n                    defaultStyle,\n                    result;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n                    \n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, (el, i) => {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, (cssPropName) => {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, (el, i) => {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n\n            };\n\n            return serializeWithStyles;\n        }\n    }\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/serializeWithStyles.js","export const keys = {\n  DATA: \"key\",\n  VALUE: \"value\",\n  ID: \"id\",\n  LABEL: \"label\",\n  GROUP: \"group\",\n  VALUES: \"values\",\n  SERIES: \"series\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","import {keys} from \"./constants\"\n\n/**\n * Clones the passed array of data\n * @param  {Object[]} dataToClone Data to clone\n * @return {Object[]}             Cloned data\n */\nexport function cloneData (_dataToClone) {\n  return JSON.parse(JSON.stringify(_dataToClone))\n}\n\nexport function sortData (_data, _keyType) {\n  const sortedData = cloneData(_data)\n  if (_keyType === \"time\") {\n    sortedData.forEach((d) => {\n      d[keys.DATA] = new Date(d[keys.DATA])\n    })\n    sortedData.sort((a, b) => a[keys.DATA].getTime() - b[keys.DATA].getTime())\n  } else if (_keyType === \"string\") {\n    sortedData.sort((a, b) => a[keys.DATA].localeCompare(b[keys.DATA], \"en\", {numeric: false}))\n  } else {\n    sortedData.sort((a, b) => a[keys.DATA] - b[keys.DATA])\n  }\n  return sortedData\n}\n\nexport function getUnique (arr) {\n  return [...new Set(arr)]\n}\n\nexport function invertScale (_scale, _mouseX, _keyType) {\n  if (_keyType === \"time\") {\n    return _scale.invert(_mouseX)\n  } else {\n    const bandStep = _scale.step()\n    const index = Math.round((_mouseX) / bandStep)\n    return _scale.domain()[index]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {getUnique} from \"./helpers/common\"\n\nexport default function Scale (config, cache) {\n\n  const getID = (d) => d[keys.ID]\n  const getKey = (d) => d[keys.DATA]\n  const getValue = (d) => d[keys.VALUE]\n\n  function buildStackedScales () {\n    const allStackHeights = cache.dataByKey.map((d) => d3.sum(d.series.map((dB) => dB.value)))\n\n    cache.stackData = cache.dataByKey.map((d) => {\n      const points = {\n        key: d[keys.DATA]\n      }\n      d.series.forEach((dB) => {\n        points[dB[keys.ID]] = dB[keys.VALUE]\n      })\n\n      return points\n    })\n\n    cache.d3.stack = d3.stack()\n      .keys(cache.dataBySeries.map(getID))\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone)\n\n    const valuesExtent = d3.extent(allStackHeights)\n\n    const allKeys = cache.flatDataSorted.map(getKey)\n    const allUniqueKeys = getUnique(allKeys)\n\n    buildXScale(allUniqueKeys)\n    buildColorScale()\n    buildYScale([0, valuesExtent[1]])\n  }\n\n  function buildXScale (_allKeys) {\n    let datesExtent = null\n    if (config.keyType === \"time\") {\n      datesExtent = d3.extent(_allKeys)\n      cache.xScale = d3.scaleTime()\n    } else {\n      datesExtent = _allKeys\n      cache.xScale = (config.chartType === \"bar\" || config.chartType === \"stackedBar\") ? d3.scaleBand() : d3.scalePoint()\n      cache.xScale.padding(0)\n    }\n\n    cache.xScale.domain(datesExtent)\n      .range([0, cache.chartWidth])\n  }\n\n  function buildColorScale () {\n    const ids = cache.dataBySeries.map(getID)\n    cache.colorScale = d3.scaleOrdinal()\n        .range(config.colorSchema.map((d) => d.value))\n        .domain(config.colorSchema.map((d, i) => d.key || ids[i]))\n        .unknown(config.defaultColor)\n  }\n\n  function buildYScale (_extent) {\n    cache.yScale = d3.scaleLinear()\n        .domain(_extent)\n        .rangeRound([cache.chartHeight, 0])\n        .nice()\n  }\n\n  function splitByGroups () {\n    const groups = {}\n    cache.dataBySeries.forEach((d) => {\n      const key = d[keys.GROUP]\n      if (!groups[key]) {\n        groups[key] = {\n          allValues: [],\n          allKeys: []\n        }\n      }\n      groups[key].allValues = groups[key].allValues.concat(d[keys.VALUES].map(getValue))\n      groups[key].allKeys = groups[key].allKeys.concat(d[keys.VALUES].map(getKey))\n    })\n\n    return groups\n  }\n\n  function buildScales () {\n    const groups = splitByGroups()\n\n    cache.hasSecondAxis = cache.groupKeys.length > 1\n\n    const groupAxis1 = groups[cache.groupKeys[0]]\n    const allUniqueKeys = groupAxis1.allKeys\n    const valuesExtent = d3.extent(groupAxis1.allValues)\n\n    buildXScale(allUniqueKeys)\n    buildColorScale()\n    buildYScale(valuesExtent)\n\n    if (cache.hasSecondAxis) {\n      const groupAxis2 = groups[cache.groupKeys[1]]\n      const valuesExtent2 = d3.extent(groupAxis2.allValues)\n\n      cache.yScale2 = cache.yScale.copy()\n        .domain(valuesExtent2)\n    }\n  }\n\n  return {\n    buildStackedScales,\n    buildScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/scale.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\n\nexport default function Line (config, cache) {\n\n  const getColor = (d) => cache.colorScale(d[keys.ID])\n\n  function drawLines () {\n    const seriesLine = d3.line()\n        .x((d) => cache.xScale(d[keys.DATA]))\n        .y((d) => cache.yScale(d[keys.VALUE]))\n\n    const seriesLine2 = d3.line()\n        .x((d) => cache.xScale(d[keys.DATA]))\n        .y((d) => cache.yScale2(d[keys.VALUE]))\n        .curve(d3.curveCatmullRom)\n\n    const lines = cache.svg.select(\".chart-group\").selectAll(\".mark\")\n        .data(cache.dataBySeries)\n\n    lines.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"d3.line\"].join(\" \"))\n      .merge(lines)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === cache.groupKeys[0]) {\n          return seriesLine(d[keys.VALUES])\n        } else {\n          return seriesLine2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", \"none\")\n\n    lines.exit().remove()\n  }\n\n  function drawAreas () {\n    const seriesArea = d3.area()\n        .x((d) => cache.xScale(d[keys.DATA]))\n        .y0((d) => cache.yScale(d[keys.VALUE]))\n        .y1(() => cache.chartHeight)\n\n    const seriesArea2 = d3.area()\n        .x((d) => cache.xScale(d[keys.DATA]))\n        .y0((d) => cache.yScale2(d[keys.VALUE]))\n        .y1(() => cache.chartHeight)\n        .curve(d3.curveCatmullRom)\n\n    const areas = cache.svg.select(\".chart-group\").selectAll(\".mark\")\n        .data(cache.dataBySeries)\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"d3.area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === cache.groupKeys[0]) {\n          return seriesArea(d[keys.VALUES])\n        } else {\n          return seriesArea2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", getColor)\n\n    areas.exit().remove()\n  }\n\n  function drawStackedAreas () {\n    const seriesLine = d3.area()\n        .x((d) => cache.xScale(d.data[keys.DATA]))\n        .y0((d) => cache.yScale(d[0]))\n        .y1((d) => cache.yScale(d[1]))\n\n    const areas = cache.svg.select(\".chart-group\").selectAll(\".mark\")\n        .data(cache.stack(cache.stackData))\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"stacked-d3.area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", seriesLine)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", (d) => cache.colorScale(d.key))\n\n    areas.exit().remove()\n  }\n\n  return {\n    drawLines,\n    drawAreas,\n    drawStackedAreas\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","import {keys} from \"./helpers/constants\"\n\nexport default function Bar (config, cache) {\n\n  const getColor = (d) => cache.colorScale(d[keys.ID])\n\n  function drawBars () {\n    const bars = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark\")\n        .data(cache.dataBySeries[0].values)\n\n    bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", () => [\"mark\", \"rect\"].join(\" \"))\n      .merge(bars)\n      .attr(\"x\", (d) => cache.xScale(d[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[keys.VALUE]))\n      .attr(\"width\", () => cache.xScale.bandwidth())\n      .attr(\"height\", (d) => cache.chartHeight - cache.yScale(d[keys.VALUE]))\n      .style(\"stroke\", \"white\")\n      .style(\"fill\", getColor)\n\n    bars.exit().remove()\n  }\n\n  function drawStackedBars () {\n\n    const stackedBarGroups = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark-group\")\n        .data(cache.stack(cache.stackData))\n\n    const stackedUpdate = stackedBarGroups.enter()\n      .append(\"g\")\n      .attr(\"class\", \"mark-group\")\n      .merge(stackedBarGroups)\n      .attr(\"fill\", (d) => cache.colorScale(d.key))\n      .attr(\"stroke\", \"white\")\n\n    stackedBarGroups.exit().remove()\n\n    const stackedBars = stackedUpdate.selectAll(\".mark\")\n        .data((d) => d)\n\n    stackedBars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark\")\n      .merge(stackedBars)\n      .attr(\"x\", (d) => cache.xScale(d.data[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[1]))\n      .attr(\"height\", (d) => cache.yScale(d[0]) - cache.yScale(d[1]))\n      .attr(\"width\", cache.xScale.bandwidth())\n\n    stackedBars.exit().remove()\n  }\n\n  return {\n    drawBars,\n    drawStackedBars\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Axis (config, cache) {\n\n  function buildAxis () {\n    cache.xAxis = d3.axisBottom(cache.xScale)\n        .tickSize(config.tickSizes, 0)\n        .tickPadding(config.tickPadding)\n\n    if (config.keyType === \"time\") {\n      const formatter = d3.timeFormat(config.xAxisFormat)\n      cache.xAxis.tickFormat(formatter)\n    } else {\n      cache.xAxis.tickValues(cache.xScale.domain().filter((d, i) => !(i % config.tickSkip)))\n    }\n\n    cache.yAxis = d3.axisLeft(cache.yScale)\n        .ticks(config.yTicks)\n        .tickSize([config.tickSizes])\n        .tickPadding(config.tickPadding)\n        .tickFormat(d3.format(config.yAxisFormat))\n\n    if (cache.hasSecondAxis) {\n      cache.yAxis2 = d3.axisRight(cache.yScale2)\n          .ticks(config.yTicks)\n          .tickSize([config.tickSizes])\n          .tickPadding(config.tickPadding)\n          .tickFormat(d3.format(config.yAxisFormat))\n    }\n  }\n\n  function drawAxis () {\n    cache.svg.select(\".x-axis-group .axis.x\")\n        .attr(\"transform\", `translate(0, ${cache.chartHeight})`)\n        .call(cache.xAxis)\n\n    cache.svg.select(\".y-axis-group.axis.y\")\n        .attr(\"transform\", `translate(${-config.xAxisPadding.left}, 0)`)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .ease(config.ease)\n        .call(cache.yAxis)\n\n    if (cache.hasSecondAxis) {\n      cache.svg.select(\".y-axis-group2.axis.y\")\n          .attr(\"transform\", `translate(${cache.chartWidth - config.xAxisPadding.right}, 0)`)\n          .transition()\n          .duration(config.axisTransitionDuration)\n          .ease(config.ease)\n          .call(cache.yAxis2)\n    }\n  }\n\n  function drawAxisTitles () {\n    cache.svg.select(\".y-title\")\n      .text(config.yTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", function transform () {\n        const textHeight = this.getBBox().height\n        return `translate(${[textHeight, config.height / 2]}) rotate(-90)`\n      })\n\n    cache.svg.select(\".x-title\")\n      .text(config.xTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(${[config.width / 2, config.height]})`)\n  }\n\n  function drawGridLines () {\n    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.horizontal-grid-line\")\n          .data(cache.yScale.ticks(config.yTicks))\n\n      cache.horizontalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"horizontal-grid-line\")\n        .merge(cache.horizontalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"x1\", (-config.xAxisPadding.left))\n        .attr(\"x2\", cache.chartWidth)\n        .attr(\"y1\", cache.yScale)\n        .attr(\"y2\", cache.yScale)\n\n      cache.horizontalGridLines.exit().remove()\n    }\n\n    if (config.grid === \"vertical\" || config.grid === \"full\") {\n      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.vertical-grid-line\")\n          .data(cache.xAxis.tickValues())\n\n      cache.verticalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"vertical-grid-line\")\n        .merge(cache.verticalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", cache.chartHeight)\n        .attr(\"x1\", cache.xScale)\n        .attr(\"x2\", cache.xScale)\n\n      cache.verticalGridLines.exit().remove()\n    }\n  }\n\n  return {\n    buildAxis,\n    drawAxis,\n    drawAxisTitles,\n    drawGridLines\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/axis.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData} from \"./helpers/common\"\n\nexport default function Tooltip (_chart, isStatic) {\n\n  let config = {\n    margin: {\n      top: 2,\n      right: 2,\n      bottom: 2,\n      left: 2\n    },\n    width: 250,\n    height: 45,\n\n    valueFormat: \".2f\",\n\n    tooltipMaxTopicLength: 170,\n    tooltipBorderRadius: 3,\n\n    // Animations\n    mouseChaseDuration: 30,\n    ease: d3.easeQuadInOut,\n\n    titleHeight: 32,\n    elementHeight: 24,\n    padding: 8,\n    dotRadius: 4,\n\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: [],\n\n    // from chart\n    keyType: \"time\"\n  }\n\n  const cache = {\n    chart: _chart,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    tooltipDivider: null,\n    tooltipBody: null,\n    tooltipTitle: null,\n    tooltipBackground: null\n  }\n\n  let chartCache = null\n\n  function init () {\n    if (!isStatic) {\n      cache.chart.on(\"mouseOver.tooltip\", show)\n        .on(\"mouseMove.tooltip\", update)\n        .on(\"mouseOut.tooltip\", hide)\n    }\n\n    render()\n  }\n  init()\n\n  function render () {\n    buildSVG()\n\n    return this\n  }\n\n  function buildSVG () {\n    chartCache = cache.chart.getCache()\n    setConfig(cache.chart.getConfig())\n\n    if (!cache.svg) {\n      cache.svg = chartCache.svg.append(\"g\")\n          .classed(\"mapd3 mapd3-tooltip\", true)\n\n      cache.tooltipBackground = cache.svg.append(\"rect\")\n          .classed(\"tooltip-text-container\", true)\n\n      cache.tooltipTitle = cache.svg.append(\"text\")\n          .classed(\"tooltip-title\", true)\n          .attr(\"dominant-baseline\", \"hanging\")\n\n      cache.tooltipDivider = cache.svg.append(\"line\")\n          .classed(\"tooltip-divider\", true)\n\n      cache.tooltipBody = cache.svg.append(\"g\")\n          .classed(\"tooltip-body\", true)\n    }\n\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    cache.tooltipBackground.attr(\"rx\", config.tooltipBorderRadius)\n        .attr(\"ry\", config.tooltipBorderRadius)\n\n    cache.tooltipTitle.attr(\"dy\", config.padding)\n        .attr(\"dx\", config.padding)\n\n    setSize(\"auto\", \"auto\")\n    hide()\n  }\n\n  function calculateTooltipPosition (_mouseX) {\n    const tooltipX = _mouseX + config.margin.left\n    let offset = 0\n    const tooltipY = config.margin.top\n\n    if (_mouseX > (cache.chartWidth / 2)) {\n      offset = -config.tooltipWidth\n    }\n\n    return [tooltipX + offset, tooltipY]\n  }\n\n  function setPosition (_xPosition) {\n    const [tooltipX, tooltipY] = calculateTooltipPosition(_xPosition)\n\n    cache.svg.transition()\n      .duration(config.mouseChaseDuration)\n      .ease(config.ease)\n      .attr(\"transform\", `translate(${tooltipX}, ${tooltipY})`)\n\n    return this\n  }\n\n  function setSize (_width, _height) {\n    let height = _height\n    if (_height === \"auto\") {\n      height = cache.tooltipBody.node().getBoundingClientRect().height + config.titleHeight + config.padding\n    }\n    let width = _width\n    if (_width === \"auto\") {\n      width = cache.tooltipBody.node().getBoundingClientRect().width + config.padding * 2\n    }\n\n    cache.tooltipBackground.attr(\"width\", width)\n      .attr(\"height\", height)\n\n    cache.tooltipDivider.attr(\"x2\", width)\n      .attr(\"y1\", config.titleHeight)\n      .attr(\"y2\", config.titleHeight)\n\n    return this\n  }\n\n  function setSeriesContent (_series) {\n    const tooltipLeft = cache.tooltipBody.selectAll(\".tooltip-left-text\")\n        .data(_series)\n    tooltipLeft.enter().append(\"text\")\n      .classed(\"tooltip-left-text\", true)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"dy\", config.padding)\n      .attr(\"dx\", config.padding * 2 + config.dotRadius)\n      .merge(tooltipLeft)\n      .attr(\"y\", (d, i) => i * config.elementHeight + config.titleHeight)\n      .text((d) => d[keys.LABEL])\n    tooltipLeft.exit().remove()\n\n    const values = _series.map(getValueText)\n    const tooltipRight = cache.tooltipBody.selectAll(\".tooltip-right-text\")\n        .data(values)\n    tooltipRight.enter().append(\"text\")\n      .classed(\"tooltip-right-text\", true)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"dy\", config.padding)\n      .attr(\"dx\", -config.padding)\n      .merge(tooltipRight)\n      .attr(\"x\", config.tooltipWidth)\n      .attr(\"y\", (d, i) => i * config.elementHeight + config.titleHeight)\n      .text((d) => d)\n    tooltipRight.exit().remove()\n\n    const tooltipCircles = cache.tooltipBody.selectAll(\".tooltip-circle\")\n        .data(_series)\n    tooltipCircles.enter().append(\"circle\")\n      .classed(\"tooltip-circle\", true)\n      .merge(tooltipCircles)\n      .attr(\"cx\", config.padding + config.dotRadius)\n      .attr(\"cy\", (d, i) => i * config.elementHeight + config.titleHeight + config.elementHeight / 2)\n      .attr(\"r\", config.dotRadius)\n      .style(\"fill\", (d) => chartCache.colorScale(d[keys.ID]))\n    tooltipCircles.exit().remove()\n  }\n\n  function setTitle (_title) {\n    let title = _title\n    if (config.keyType === \"time\") {\n      title = d3.timeFormat(config.dateFormat)(_title)\n    }\n\n    cache.tooltipTitle.text(title)\n\n    return this\n  }\n\n  function getValueText (_data) {\n    const value = _data[keys.VALUE]\n    if (value) {\n      const formatter = d3.format(config.valueFormat)\n      return formatter(_data[keys.VALUE])\n    } else {\n      return null\n    }\n  }\n\n  function setContent (_series) {\n    let series = _series\n\n    if (config.seriesOrder.length) {\n      series = sortByTopicsOrder(_series)\n    } else if (_series.length && _series[0][keys.LABEL]) {\n      series = sortByAlpha(_series)\n    }\n\n    setSeriesContent(series)\n\n    return this\n  }\n\n  function sortByTopicsOrder (_series, _order = seriesOrder) {\n    return _order.map((orderName) => _series.filter(({name}) => name === orderName)[0])\n  }\n\n  function sortByAlpha (_series) {\n    const series = cloneData(_series)\n    return series.sort((a, b) => a[keys.LABEL].localeCompare(b[keys.LABEL], \"en\", {numeric: false}))\n  }\n\n  function hide () {\n    cache.svg.style(\"display\", \"none\")\n\n    return this\n  }\n\n  function show () {\n    cache.svg.style(\"display\", \"block\")\n\n    return this\n  }\n\n  function update (_dataPoint, _xPosition) {\n    setTitle(_dataPoint[keys.DATA])\n    setContent(_dataPoint[keys.SERIES])\n    setSize(config.tooltipWidth, \"auto\")\n    setPosition(_xPosition)\n\n    return this\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.chart.on(\".tooltip\", null)\n    cache.svg.remove()\n  }\n\n  return {\n    setPosition,\n    setSize,\n    setContent,\n    setTitle,\n    hide,\n    show,\n    update,\n    setConfig,\n    getCache,\n    render,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","import Tooltip from \"./tooltip\"\n\nexport default function Legend (_chart) {\n  return Tooltip(_chart, true)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","import * as d3 from \"./helpers/d3-service\"\nexport {bisector, extent, sum, range, merge} from \"d3-array\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData} from \"./helpers/common\"\n\nexport default function DataManager () {\n  /* eslint-disable no-magic-numbers */\n  let config = {\n    keyType: \"number\", // number, string, time,\n    range: [0, 100],\n    pointCount: 200,\n    groupCount: 2,\n    lineCount: 4\n  }\n  const cache = {\n    data: null,\n    baseDate: null\n  }\n\n  function generateRandomString (_length) {\n    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5)\n  }\n\n  function generateSeries (_dataKeys, _range, _allowNegative) {\n    let value = d3.randomUniform(..._range)()\n    const variabilityRatio = 50\n    const randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio\n    const rnd = d3.randomNormal(0, 1)\n    return _dataKeys.map((d) => {\n      value = value + rnd() * randomWalkStepSize\n      if (!_allowNegative && value < randomWalkStepSize) {\n        value = value + randomWalkStepSize\n      }\n      return {\n        value,\n        key: config.keyType === \"time\" ? d.toISOString() : d\n      }\n    })\n  }\n\n  function generateTestDataset () {\n    let dataKeys = null\n    if (config.keyType === \"time\") {\n      cache.baseDate = new Date()\n      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate))\n    } else if (config.keyType === \"string\") {\n      dataKeys = d3.range(0, config.pointCount).map(() => generateRandomString())\n      dataKeys.sort((a, b) => a.localeCompare(b, \"en\", {numeric: false}))\n    } else if (config.keyType === \"number\") {\n      dataKeys = d3.range(0, config.pointCount).map((d, i) => i)\n    }\n\n    const series = d3.range(config.lineCount).map((d) => ({\n      label: `Label ${d}`,\n      id: d,\n      group: d < config.groupCount ? d : 0,\n      values: generateSeries(dataKeys, config.range)\n    }))\n\n    cache.data = {series}\n\n    // console.log(\"generated data\", cache.data)\n\n    return cache.data\n  }\n\n  function filterByKey (_extent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      const values = series[keys.VALUES]\n      const allKeys = values.map(d => d[keys.DATA])\n      const extentMinIndex = allKeys.indexOf(_extent[0])\n      const extentMaxIndex = allKeys.indexOf(_extent[1])\n      series[keys.VALUES] = series[keys.VALUES].slice(extentMinIndex, extentMaxIndex)\n    })\n\n    return data\n  }\n\n  function filterByDate (_dateExtent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      series[keys.VALUES] = series[keys.VALUES].filter((d) => {\n        const epoch = new Date(d[keys.DATA]).getTime()\n        return epoch >= _dateExtent[0].getTime()\n          && epoch <= _dateExtent[1].getTime()\n      })\n    })\n\n    return data\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  return {\n    generateTestDataset,\n    generateSeries,\n    filterByDate,\n    filterByKey,\n    setConfig\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/data-manager.js","// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 16\n// module chunks = 0","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Observer (_dataManager) {\n  const dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\")\n  const dataManager = _dataManager\n\n  dispatcher.on(\"brushChange.observer\", (_e, _brushConfig) => {\n    const filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e)\n      : dataManager.filterByKey(_e)\n    pub(\"dataFilter\", filtered)\n  })\n\n  function sub (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function pub (_channelName, ...args) {\n    dispatcher.call(_channelName, this, ...args)\n    return this\n  }\n\n  return {\n    sub,\n    pub\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/observer.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exclusiveToggle, toggleOnOff} from \"./interactors\"\n\nexport default function Binning (_chart) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    toggle: [\"auto\"],\n    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n    label: \"BIN:\"\n  }\n\n  const cache = {\n    chart: _chart,\n    svg: null\n  }\n\n  let chartCache = {\n    svg: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"change\")\n\n  function render () {\n    buildSVG()\n  }\n  render()\n\n  function buildSVG () {\n    chartCache = cache.chart.getCache()\n    setConfig(cache.chart.getConfig())\n\n    if (!cache.svg) {\n      cache.svg = chartCache.svg.append(\"g\")\n          .classed(\"binning-group\", true)\n          .append(\"text\")\n\n      cache.svg.append(\"tspan\")\n        .text(config.label)\n        .attr(\"y\", \"1em\")\n        .attr(\"class\", \"item\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${[config.margin.left, 0]})`)\n\n    const items = cache.svg.selectAll(\".toggleOnOff\")\n        .data(config.toggle)\n    items.enter().append(\"tspan\")\n      .attr(\"class\", (d) => `item ${d} toggleOnOff`)\n      .attr(\"dx\", \"0.8em\")\n      .attr(\"y\", \"1em\")\n      .on(\"click.select\", toggleOnOff(\".binning-group .item.toggleOnOff\"))\n      .on(\"click.d3.dispatch\", function click (d) {\n        const isSelected = this.classList.contains(\"selected\")\n        dispatcher.call(\"change\", this, d, {isSelected})\n      })\n      .merge(items)\n      .text((d) => d)\n    items.exit().remove()\n\n    const itemsExclusive = cache.svg.selectAll(\".toggleExclusive\")\n        .data(config.exclusiveToggle)\n    itemsExclusive.enter().append(\"tspan\")\n      .attr(\"class\", (d) => `item ${d} toggleExclusive`)\n      .attr(\"dx\", \"0.8em\")\n      .attr(\"y\", \"1em\")\n      .on(\"click.select\", exclusiveToggle(\".binning-group .item.toggleExclusive\"))\n      .on(\"click.d3.dispatch\", function click (d) {\n        const isSelected = this.classList.contains(\"selected\")\n        dispatcher.call(\"change\", this, d, {isSelected})\n      })\n      .merge(itemsExclusive)\n      .text((d) => d)\n    itemsExclusive.exit().remove()\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  function update () {\n    render()\n    return this\n  }\n\n  return {\n    getCache,\n    on,\n    setConfig,\n    destroy,\n    update\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/binning.js","import * as d3 from \"./helpers/d3-service\"\n\n/**\n * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n * @param  {Number} selector A valid selector of the elements to toggle\n * @example\n * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n *\n * @return {void}\n */\n\nexport function toggleOnOff (selector) {\n  return exclusiveToggle(selector, {\n    toggleOffIsEnabled: true,\n    toggleMultipleIsEnabled: false\n  })\n}\n\nexport function exclusiveToggle (selector, options = {toggleOffIsEnabled: false, toggleMultipleIsEnabled: false}) {\n\n  return function toggle () {\n    /* eslint-disable consistent-this */\n    const that = this\n    let hasSelection = false\n    const selection = d3.select(this.farthestViewportElement)\n        .selectAll(selector)\n\n    selection.classed(\"selected\", function selectedClass () {\n      const isSelected = this.classList.contains(\"selected\")\n      const hasJustBeenClicked = this === that\n      let shouldBeSelected = false\n\n      if (hasJustBeenClicked) {\n        shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true\n      } else {\n        shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false\n      }\n\n      hasSelection = hasSelection || shouldBeSelected\n      return shouldBeSelected\n    })\n    selection.classed(\"dimmed\", function dimmedClass () {\n      return hasSelection && !this.classList.contains(\"selected\")\n    })\n    /* eslint-enable consistent-this */\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/interactors.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {toggleOnOff} from \"./interactors\"\n\nexport default function DomainEditor (_chart) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    position: {x: 0, y: 0}\n  }\n\n  const cache = {\n    chart: _chart,\n    svg: null,\n    parentHtmlNode: null\n  }\n\n  let chartCache = {\n    svg: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"lockToggle\", \"domainChanged\")\n\n  function render () {\n    buildSVG()\n  }\n  render()\n\n  function buildSVG () {\n    chartCache = cache.chart.getCache()\n    setConfig(cache.chart.getConfig())\n\n    if (!cache.svg) {\n      cache.svg = chartCache.svg.append(\"g\")\n          .classed(\"domain-editor-group\", true)\n\n      const panel = cache.svg.append(\"rect\")\n        .attr(\"width\", \"10\")\n        .attr(\"height\", \"14\")\n        .attr(\"opacity\", \"0\")\n\n      const lock = cache.svg.append(\"g\")\n        .attr(\"class\", \"lock-icon\")\n        .attr(\"transform\", \"scale(0.2, 0.3)\")\n        .attr(\"pointer-events\", \"none\")\n      lock.append(\"rect\")\n        .attr(\"x\", \"3\")\n        .attr(\"y\", \"26\")\n        .attr(\"width\", \"42\")\n        .attr(\"height\", \"21\")\n      const loop = lock.append(\"path\")\n        .attr(\"class\", \"loop closed\")\n        .attr(\"d\", \"M24,0c0,0 -5,-0 -10,2c-4,3 -4,9 -4,9l-0,14l4,0l0,-14c0,0 0,-5 3,-6c3,-1 7,-1 7,-1c0,0 3,-0 7,1c3,1 3,6 3,6l4,0c0,0 0,-6 -4,-9c-4,-3 -10,-2 -10,-2\")\n        .attr(\"transform\", \"translate(0, 14)\")\n\n      panel.on(\"click\", function click () {\n        const isClosed = this.classList.contains(\"closed\")\n        loop.transition().attr(\"transform\", `translate(0, ${isClosed ? \"14\" : \"6\"})`)\n        this.classList.toggle(\"closed\", !isClosed)\n      })\n\n      cache.svg.append(\"text\")\n        .attr(\"class\", \"domain-min\")\n\n      cache.parentHtmlNode = cache.svg.node().ownerSVGElement.parentNode\n      d3.select(cache.parentHtmlNode).append(\"input\")\n        .style(\"position\", \"absolute\")\n        .style(\"top\", config.position.x)\n        .style(\"left\", config.position.y)\n\n\n      cache.svg.append(\"text\")\n        .attr(\"class\", \"domain-max\")\n    }\n\n    // cache.svg.attr(\"transform\", `translate(${[config.margin.left, 0]})`)\n\n    // const items = cache.svg.selectAll(\".toggleOnOff\")\n    //     .data(config.toggle)\n    // items.enter().append(\"tspan\")\n    //   .attr(\"class\", (d) => `item ${d} toggleOnOff`)\n    //   .attr(\"dx\", \"0.8em\")\n    //   .attr(\"y\", \"1em\")\n    //   .on(\"click.d3.select\", toggleOnOff(\".binning-group .item.toggleOnOff\"))\n    //   .on(\"click.d3.dispatch\", function click (d) {\n    //     const isSelected = this.classList.contains(\"selected\")\n    //     dispatcher.call(\"change\", this, d, {isSelected})\n    //   })\n    //   .merge(items)\n    //   .text((d) => d)\n    // items.exit().remove()\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  function update () {\n    render()\n    return this\n  }\n\n  return {\n    getCache,\n    on,\n    setConfig,\n    destroy,\n    update\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/domain-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData} from \"./helpers/common\"\n\nexport default function Brush (_chart) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    chart: _chart,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null,\n    xScale: null\n  }\n\n  let chartCache = {\n    xScale: null,\n    dataBySeries: null,\n    svg: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\")\n\n  function init () {\n    render()\n  }\n  init()\n\n  function render () {\n    buildSVG()\n\n    if (chartCache.dataBySeries) {\n      cache.data = extractBrushDimension(cloneData(chartCache.dataBySeries))\n      buildScales()\n      buildBrush()\n      drawBrush()\n    }\n  }\n\n  function buildSVG () {\n    chartCache = cache.chart.getCache()\n    setConfig(cache.chart.getConfig())\n\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = chartCache.svg.append(\"g\")\n          .classed(\"brush-group\", true)\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function extractBrushDimension (_data) {\n    const merged = d3.merge(_data.map((d) => d[keys.VALUES]))\n    return sortData(merged, config.keyType)\n  }\n\n  function buildScales () {\n    cache.xScale = chartCache.xScale\n  }\n\n  function buildBrush () {\n    cache.brush = cache.brush || d3.brushX()\n        .on(\"start\", handleBrushStart)\n        .on(\"brush\", handleBrushMove)\n        .on(\"end\", handleBrushEnd)\n\n    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]])\n  }\n\n  function drawBrush () {\n    cache.chartBrush = cache.svg.call(cache.brush)\n\n    cache.chartBrush.selectAll(\".brush-rect\")\n      .attr(\"height\", cache.chartHeight)\n  }\n\n  function getDataExtent () {\n    const selection = d3.event.selection\n    const dataExtent = selection.map((d) => invertScale(chartCache.xScale, d, config.keyType))\n    return dataExtent\n  }\n\n  function handleBrushStart () {\n    dispatcher.call(\"brushStart\", this, getDataExtent(), config)\n  }\n\n  function handleBrushMove () {\n    dispatcher.call(\"brushMove\", this, getDataExtent(), config)\n  }\n\n  function handleBrushEnd () {\n    // Only transition after input, ignore empty selections.\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n\n    const dataExtent = getDataExtent()\n\n    d3.select(this)\n      .transition()\n      .call(d3.event.target.move, dataExtent.map(cache.xScale))\n\n    dispatcher.call(\"brushEnd\", this, dataExtent, config)\n  }\n\n  // function setBrushByPercentages (_a, _b) {\n  //   const x0 = _a * cache.chartWidth\n  //   const x1 = _b * cache.chartWidth\n\n  //   brush.move(chartBrush, [x0, x1])\n  // }\n\n  // function setBrushByDates (_dateA, _dateB) {\n  //   const x0 = cache.xScale(new Date(_dateA))\n  //   const x1 = cache.xScale(new Date(_dateB))\n\n  //   cache.brush.move(cache.chartBrush, [x0, x1])\n  // }\n\n  // function updateHandlers (_dateExtent) {\n  //   if (_dateExtent === null) {\n  //     cache.handle.attr(\"display\", \"none\")\n  //   } else {\n  //     cache.handle\n  //       .attr(\"display\", null)\n  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n  //   }\n  // }\n\n  // API\n\n  /**\n   * Gets or Sets the dateRange for the selected part of the brush\n   * @param  {String[]} _x Desired dateRange for the graph\n   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n   * @public\n   */\n  // function dateRange (_x) {\n  //   if (!arguments.length) {\n  //     return dateRange\n  //   }\n  //   dateRange = _x\n\n  //   if (Array.isArray(dateRange)) {\n  //     setBrushByDates(...dateRange)\n  //   }\n\n  //   return this\n  // }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  function update () {\n    render()\n    return this\n  }\n\n  return {\n    getCache,\n    on,\n    setConfig,\n    destroy,\n    update\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\n\nexport default function Hover (_chart) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    chart: _chart,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null,\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    colorScale: null\n  }\n\n  let chartCache = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    colorScale: null,\n    dataBySeries: null,\n    svg: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"hover\")\n\n  function init () {\n    cache.chart.on(\"mouseOver.hover\", show)\n      .on(\"mouseMove.hover\", update)\n      .on(\"mouseOut.hover\", hide)\n\n    render()\n    hide()\n  }\n  init()\n\n  function render () {\n    buildSVG()\n    buildScales()\n    drawVerticalMarker()\n  }\n\n  function buildSVG () {\n    chartCache = cache.chart.getCache()\n    setConfig(cache.chart.getConfig())\n\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = chartCache.svg.append(\"g\")\n          .classed(\"hover-group\", true)\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function buildScales () {\n    cache.xScale = chartCache.xScale\n    cache.yScale = chartCache.yScale\n    cache.yScale2 = chartCache.yScale2\n    cache.colorScale = chartCache.colorScale\n  }\n\n  function update (_dataPoint, _dataPointXPosition) {\n    if (_dataPointXPosition) {\n      moveVerticalMarker(_dataPointXPosition)\n      if (config.chartType === \"stackedLine\"\n        || config.chartType === \"stackedArea\"\n        || config.chartType === \"stackedBar\") {\n        highlightStackedDataPoints(_dataPoint)\n      } else {\n        highlightDataPoints(_dataPoint)\n      }\n      dispatcher.call(\"hover\", this, _dataPoint)\n    }\n  }\n\n  function show () {\n    cache.svg.style(\"display\", \"block\")\n  }\n\n  function hide () {\n    cache.svg.style(\"display\", \"none\")\n  }\n\n  const getColor = (d) => cache.colorScale(d[keys.ID])\n\n  function highlightDataPoints (_dataPoint) {\n    const dotsData = _dataPoint[keys.SERIES]\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawHighlightDataPoints (_dotsData) {\n    const dots = cache.svg.selectAll(\".dot\")\n        .data(_dotsData)\n\n    dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .merge(dots)\n      // .attr(\"cy\", (d) => cache.yScale2(d[keys.VALUE]))\n      .attr(\"cy\", (d) => {\n        if (d[keys.GROUP] === chartCache.groupKeys[0]) {\n          return cache.yScale(d[keys.VALUE])\n        } else {\n          return cache.yScale2(d[keys.VALUE])\n        }\n      })\n      .attr(\"r\", config.dotRadius)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", getColor)\n\n    dots.exit().remove()\n  }\n\n  function highlightStackedDataPoints (_dataPoint) {\n    const stackedDataPoint = {key: _dataPoint[keys.DATA]}\n    _dataPoint.series.forEach((d) => {\n      const id = d[keys.ID]\n      stackedDataPoint[id] = d[keys.VALUE]\n    })\n\n    const dotsStack = cache.stack([stackedDataPoint])\n    const dotsData = dotsStack.map((d) => {\n      const dot = {value: d[0][1]}\n      dot[keys.ID] = d.key\n      return dot\n    })\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawVerticalMarker () {\n    const verticalMarkerLine = cache.svg.selectAll(\"line\")\n        .data([0])\n\n    verticalMarkerLine.enter()\n      .append(\"line\")\n      .classed(\"vertical-marker\", true)\n      .merge(verticalMarkerLine)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", cache.chartHeight)\n\n    verticalMarkerLine.exit().remove()\n  }\n\n  function moveVerticalMarker (_verticalMarkerXPosition) {\n    cache.svg.attr(\"transform\", `translate(${[_verticalMarkerXPosition + config.margin.left, config.margin.top]})`)\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  return {\n    highlightDataPoints,\n    highlightStackedDataPoints,\n    drawVerticalMarker,\n    moveVerticalMarker,\n    getCache,\n    on,\n    setConfig,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/hover.js"],"sourceRoot":""}