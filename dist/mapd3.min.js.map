{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mapd3.min.js","webpack:///webpack/bootstrap 043705cfd8cbd857f40c","webpack:///./src/bundle.js","webpack:///./src/charts/chart.js","webpack:///./src/charts/helpers/d3-service.js","webpack:///./~/d3/build/d3.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/scale.js","webpack:///./src/charts/line.js","webpack:///./src/charts/bar.js","webpack:///./src/charts/axis.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/brush.js","webpack:///./src/charts/hover.js","webpack:///./src/charts/binning.js","webpack:///./src/charts/interactors.js","webpack:///./src/charts/domain-editor.js","webpack:///./src/charts/brush-range-editor.js","webpack:///./src/charts/label.js","webpack:///./src/charts/data-manager.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./src/charts/observer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","Interactors","Hover","Brush","Label","BrushRangeEditor","DomainEditor","Binning","Observer","DataManager","Legend","Tooltip","Chart","undefined","_chart","_chart2","_tooltip","_tooltip2","_legend","_legend2","_dataManager","_dataManager2","_observer","_observer2","_binning","_binning2","_domainEditor","_domainEditor2","_brushRangeEditor","_brushRangeEditor2","_label","_label2","_brush","_brush2","_hover","_hover2","_interactors","_interactors2","_colors","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_container","render","buildSVG","cache","dataBySeries","buildChart","w","config","width","container","clientWidth","h","height","clientHeight","chartWidth","margin","left","right","chartHeight","top","bottom","svg","template","base","d3","select","html","style","headerGroup","panel","chart","addEvents","attr","dataObject","dataByKey","flatDataSorted","groupKeys","scale","_scale2","setConfig","setData","scales","getScales","_axis2","setScales","drawAxis","drawGridLines","_line2","drawMarks","bindEvents","dispatcher","legendContent","map","d","label","setTitle","setContent","setXPosition","setYPosition","drawTooltip","show","drawBrush","on","_console","_len","arguments","length","arg","Array","_key","console","log","apply","concat","setBinning","setAuto","drawBinning","_console2","_len2","_key2","setXDomain","setYDomain","setY2Domain","drawDomainEditor","setRangeMin","setRangeMax","drawRangeEditor","setXLabels","setYLabels","setY2Labels","drawLabels","triggerIntroAnimation","_data","data","_common","cloneData","_constants","keys","SERIES","cleanedData","cleanData","flatData","forEach","serie","VALUES","sortData","keyType","DATA","Date","VALUE","Number","dataPoint","LABEL","GROUP","ID","push","nest","getKey","entries","values","allGroupKeys","getGroup","getUnique","isAnimated","maskingRectangle","transition","duration","animationDuration","ease","remove","getNearestDataPoint","_mouseX","keyFromInvertedX","invertScale","xScale","bisectLeft","bisector","dataEntryIndex","dataEntryForXPosition","nearestDataPoint","THROTTLE_DELAY","throttledDispatch","throttle","mouse","node","_d3$mouse","_d3$mouse2","_slicedToArray","mouseX","mouseY","xPosition","dataPointXPosition","_config","override","destroy","chartType","easeLinear","colorSchema","mapdColors","defaultColor","xAxisPadding","tickPadding","xAxisFormat","tickSkip","tickSizes","yTicks","yTicks2","yAxisFormat","yAxisFormat2","grid","axisTransitionDuration","xTitle","yTitle","dotRadius","valueFormat","tooltipMaxTopicLength","tooltipBorderRadius","mouseChaseDuration","tooltipEase","easeQuadInOut","tooltipHeight","tooltipWidth","dateFormat","seriesOrder","yScale","yScale2","hasSecondAxis","colorScale","xAxis","yAxis","yAxis2","stackData","stack","dispatch","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","isArray","TypeError","_d3Service","_scale","_line","_bar","_axis","enumerable","get","axisBottom","axisLeft","axisRight","timeFormat","format","extent","sum","range","merge","event","randomUniform","randomNormal","timeDay","timeMonth","area","curveCatmullRom","line","stackOffsetNone","stackOrderNone","scaleTime","scalePoint","scaleBand","scaleLinear","scaleOrdinal","brushX","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","number$1","center","offset","bandwidth","round","entering","__axis","axis","orient","context","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","text","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","t","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","set","callback","noop","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fitExtent","projection","clip","clipExtent","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","version","hi","mid","ascendingBisect","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","transform$$1","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","sourceRandomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleIdentity","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","mapdUI","skyBlue","_toConsumableArray","arr2","_dataToClone","_keyType","sortedData","getTime","localeCompare","numeric","bandStep","accum","limit","wait","Scale","buildXScale","_allKeys","datesExtent","buildYScale","_extent","buildColorScale","ids","getID","splitByGroups","allValues","allKeys","getValue","getStackedScales","allStackHeights","dB","valuesExtent","allUniqueKeys","getHorizontalScales","groupAxis1","groupAxis2","valuesExtent2","assign","Line","drawLines","seriesLine","seriesLine2","getColor","drawAreas","seriesArea","seriesArea2","areas","drawStackedAreas","_scales","Bar","drawBars","bars","drawStackedBars","stackedBarGroups","stackedUpdate","stackedBars","Axis","buildAxis","formatter","horizontalGridLines","verticalGridLines","hoverZoneSize","background","tooltipTitle","tooltipBody","calculateTooltipPosition","_mouseY","OFFSET","tooltipSize","tooltipX","avoidanceOffset","tooltipY","yPosition","drawContent","content","tooltipItems","tooltipItemsUpdate","tooltipItem","legendData","drawTitle","title","_title","setupContent","_series","sortByTopicsOrder","sortByAlpha","_order","orderName","_ref","hide","setupTooltip","_dataPoint","_xPosition","_yPosition","_calculateTooltipPosi","_calculateTooltipPosi2","_dispatcher","_content","titleHeight","elementHeight","tooltipDivider","tooltipBackground","extractBrushDimension","buildBrush","handleBrushStart","handleBrushMove","handleBrushEnd","chartBrush","getDataExtent","dataExtent","dateRange","drawHover","_dataPointXPosition","moveVerticalMarker","drawVerticalMarker","highlightStackedDataPoints","highlightDataPoints","dotsData","drawHighlightDataPoints","_dotsData","dots","stackedDataPoint","verticalMarkerLine","_verticalMarkerXPosition","autoItem","isSelected","toggled","autoLabel","binningItems","exclusiveToggle","LINE_HEIGHT","changeBinning","selectedBin","toggleAuto","isAuto","_selectedItemName","_shouldBeSelected","_selectedBin","_isAuto","toggleOnOff","bool","shouldBeSelected","othersSelection","toggle","toggleOffIsEnabled","toggleMultipleIsEnabled","options","hasSelection","selectionNode","hasJustBeenClicked","blurOnEnter","blur","xHitZone","showXEditor","hideXEditor","yHitZone","showYEditor","hideYEditor","y2HitZone","showY2Editor","hideY2Editor","yMaxInput","innerText","yMinInput","yLockIcon","isLocked","y2MaxInput","y2MinInput","y2LockIcon","xMinInput","xMaxInput","xLockIcon","HOVER_ZONE_SIZE","LOCK_SIZE","INPUT_HEIGHT","PADDING","INPUT_WIDTH","yDomain","y2Domain","xDomain","_xDomain","_yDomain","_y2Domain","setXLock","_xLock","xLock","setYLock","_yLock","yLock","setY2Lock","_y2Lock","y2Lock","inputMax","rangeMax","inputMin","rangeMin","_rangeMin","_rangeMax","xAxisLabel","yAxisLabel","y2AxisLabel","xLabel","textHeight","yLabel","textWidth","y2Label","_xLabel","_yLabel","_y2Label","generateRandomString","_length","substr","generateSeries","_dataKeys","_range","_allowNegative","variabilityRatio","randomWalkStepSize","rnd","generateTestDataset","dataKeys","baseDate","pointCount","lineCount","groupCount","filterByKey","extentMinIndex","extentMaxIndex","filterByDate","_dateExtent","epoch","_d3Array","sub","pub","_channelName","dataManager","_brushConfig","filtered"],"mappings":"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","file":"mapd3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.colors = exports.Interactors = exports.Hover = exports.Brush = exports.Label = exports.BrushRangeEditor = exports.DomainEditor = exports.Binning = exports.Observer = exports.DataManager = exports.Legend = exports.Tooltip = exports.Chart = undefined;\n\t\n\tvar _chart = __webpack_require__(1);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(12);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _dataManager = __webpack_require__(20);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tvar _observer = __webpack_require__(22);\n\t\n\tvar _observer2 = _interopRequireDefault(_observer);\n\t\n\tvar _binning = __webpack_require__(15);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(17);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(18);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(19);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _brush = __webpack_require__(13);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(14);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tvar _interactors2 = _interopRequireDefault(_interactors);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Chart = _chart2.default;\n\texports.Tooltip = _tooltip2.default;\n\texports.Legend = _legend2.default;\n\texports.DataManager = _dataManager2.default;\n\texports.Observer = _observer2.default;\n\texports.Binning = _binning2.default;\n\texports.DomainEditor = _domainEditor2.default;\n\texports.BrushRangeEditor = _brushRangeEditor2.default;\n\texports.Label = _label2.default;\n\texports.Brush = _brush2.default;\n\texports.Hover = _hover2.default;\n\texports.Interactors = _interactors2.default;\n\texports.colors = _colors.colors;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Chart;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _scale = __webpack_require__(7);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _line = __webpack_require__(8);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _bar = __webpack_require__(9);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _axis = __webpack_require__(10);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(12);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _brush = __webpack_require__(13);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(14);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _binning = __webpack_require__(15);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(17);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(18);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(19);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Chart(_container) {\n\t\n\t  var config = {\n\t    // common\n\t    margin: {\n\t      top: 48,\n\t      right: 32,\n\t      bottom: 48,\n\t      left: 32\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    chartType: \"line\", // line, area, stackedLine, stackedArea\n\t    ease: d3.easeLinear,\n\t\n\t    // intro animation\n\t    isAnimated: false,\n\t    animationDuration: 1500,\n\t\n\t    // scale\n\t    colorSchema: _colors.colors.mapdColors.map(function (d) {\n\t      return { value: d };\n\t    }),\n\t    defaultColor: \"skyblue\",\n\t\n\t    // axis\n\t    xAxisPadding: {\n\t      top: 0,\n\t      left: 0,\n\t      bottom: 0,\n\t      right: 0\n\t    },\n\t    tickPadding: 5,\n\t    xAxisFormat: \"%c\",\n\t    tickSkip: 1,\n\t    tickSizes: 8,\n\t    yTicks: 5,\n\t    yTicks2: 5,\n\t    yAxisFormat: \".2f\",\n\t    yAxisFormat2: \".2f\",\n\t    grid: null,\n\t    axisTransitionDuration: 0,\n\t\n\t    xTitle: \"\",\n\t    yTitle: \"\",\n\t\n\t    // hover\n\t    dotRadius: 4,\n\t\n\t    // tooltip\n\t    valueFormat: \".2f\",\n\t    tooltipMaxTopicLength: 170,\n\t    tooltipBorderRadius: 3,\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: []\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    panel: null,\n\t    margin: null,\n\t    maskingRectangle: null,\n\t    chartWidth: null, chartHeight: null,\n\t    xAxis: null, yAxis: null, yAxis2: null,\n\t\n\t    dataBySeries: null,\n\t    dataByKey: null,\n\t    data: null,\n\t    groupKeys: [],\n\t    hasSecondAxis: false,\n\t    stackData: null,\n\t    stack: null,\n\t    flatDataSorted: null\n\t\n\t    // accessors\n\t  };var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getGroup = function getGroup(d) {\n\t    return d[_constants.keys.GROUP];\n\t  };\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    if (cache.dataBySeries) {\n\t      buildChart();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    var w = config.width || cache.container.clientWidth;\n\t    var h = config.height || cache.container.clientHeight;\n\t    cache.chartWidth = w - config.margin.left - config.margin.right;\n\t    cache.chartHeight = h - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      var template = \"<div class=\\\"mapd3 mapd3-container\\\">\\n        <div class=\\\"header-group\\\"></div>\\n        <svg class=\\\"chart\\\">\\n          <g class=\\\"chart-group\\\"></g>\\n          <g class=\\\"panel-group\\\">\\n            <rect class=\\\"panel-background\\\"></rect>\\n          </g>\\n          <rect class=\\\"masking-rectangle\\\"></rect>\\n        </svg>\\n      </div>\";\n\t\n\t      var base = d3.select(cache.container).html(template);\n\t\n\t      cache.container = base.select(\".mapd3-container\").style(\"position\", \"relative\");\n\t\n\t      cache.svg = base.select(\"svg\");\n\t      cache.headerGroup = base.select(\".header-group\").style(\"position\", \"absolute\");\n\t      cache.panel = cache.svg.select(\".panel-group\");\n\t      cache.chart = cache.svg.select(\".chart-group\");\n\t\n\t      addEvents();\n\t    }\n\t\n\t    cache.svg.attr(\"width\", config.width).attr(\"height\", config.height);\n\t\n\t    cache.headerGroup.style(\"width\", cache.chartWidth).style(\"left\", config.margin.left);\n\t\n\t    cache.panel.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\").select(\".panel-background\").attr(\"width\", cache.chartWidth).attr(\"height\", cache.chartHeight).attr(\"fill\", \"transparent\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildChart() {\n\t    var dataObject = {\n\t      dataByKey: cache.dataByKey,\n\t      dataBySeries: cache.dataBySeries,\n\t      flatDataSorted: cache.flatDataSorted,\n\t      groupKeys: cache.groupKeys\n\t    };\n\t\n\t    var scale = (0, _scale2.default)().setConfig(config).setData(dataObject);\n\t    scales = scale.getScales();\n\t\n\t    (0, _axis2.default)(cache.chart).setConfig(config).setScales(scales).drawAxis().drawGridLines();\n\t\n\t    (0, _line2.default)(cache.panel).setConfig(config).setScales(scales).setData(dataObject).drawMarks();\n\t\n\t    (0, _tooltip2.default)(cache.container).setConfig(config).setScales(scales).bindEvents(dispatcher);\n\t\n\t    var legendContent = dataObject.dataBySeries.map(function (d) {\n\t      return {\n\t        id: d.id,\n\t        key: d.key,\n\t        label: d.label\n\t      };\n\t    });\n\t\n\t    (0, _legend2.default)(cache.container).setConfig(config).setScales(scales).setTitle(\"Title\").setContent(legendContent).setXPosition(cache.chartWidth - 80).setYPosition(20).drawTooltip().show();\n\t\n\t    (0, _brush2.default)(cache.panel).setConfig(config).setScales(scales).setData(dataObject).drawBrush().on(\"brushMove\", function () {\n\t      var _console;\n\t\n\t      for (var _len = arguments.length, arg = Array(_len), _key = 0; _key < _len; _key++) {\n\t        arg[_key] = arguments[_key];\n\t      }\n\t\n\t      return (_console = console).log.apply(_console, [\"brush\"].concat(arg));\n\t    });\n\t\n\t    (0, _hover2.default)(cache.panel).setConfig(config).setScales(scales).bindEvents(dispatcher);\n\t\n\t    (0, _binning2.default)(cache.headerGroup).setConfig(config).setBinning(\"1mo\").setAuto(true).drawBinning().on(\"change\", function () {\n\t      var _console2;\n\t\n\t      for (var _len2 = arguments.length, arg = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        arg[_key2] = arguments[_key2];\n\t      }\n\t\n\t      return (_console2 = console).log.apply(_console2, [\"binning\"].concat(arg));\n\t    });\n\t\n\t    (0, _domainEditor2.default)(cache.container).setConfig(config).setXDomain([\"a\", \"b\"]).setYDomain([0, 200]).setY2Domain([0, 300]).drawDomainEditor().on(\"domainChanged\", function (d) {\n\t      return console.log(d);\n\t    }).on(\"domainLockToggled\", function (d) {\n\t      return console.log(d);\n\t    });\n\t\n\t    (0, _brushRangeEditor2.default)(cache.headerGroup).setConfig(config).setRangeMin(\"Jan 01, 2001\").setRangeMax(\"Jan 01, 2002\").drawRangeEditor().on(\"rangeChanged\", function (d) {\n\t      return console.log(d);\n\t    });\n\t\n\t    (0, _label2.default)(cache.container).setConfig(config).setXLabels(\"X Axis Label\").setYLabels(\"Y Axis Label\").setY2Labels(\"Y2 Axis Label\").drawLabels().on(\"axisLabelChanged\", function (d) {\n\t      return console.log(d);\n\t    });\n\t\n\t    // const bar = Bar(config, cache)\n\t    // if (config.chartType === \"bar\") {\n\t    //   bar.drawBars()\n\t    // } else if (config.chartType === \"stackedBar\") {\n\t    //   bar.drawStackedBars()\n\t    // }\n\t\n\t    triggerIntroAnimation();\n\t\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    cache.data = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var cleanedData = cleanData(_data);\n\t    cache.dataBySeries = cleanedData.dataBySeries;\n\t    cache.dataByKey = cleanedData.dataByKey;\n\t\n\t    render();\n\t\n\t    return this;\n\t  }\n\t\n\t  function cleanData(_data) {\n\t    var dataBySeries = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var flatData = [];\n\t\n\t    // Normalize dataBySeries\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES] = (0, _common.sortData)(serie[_constants.keys.VALUES], config.keyType);\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        d[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        d[_constants.keys.VALUE] = Number(d[_constants.keys.VALUE]);\n\t      });\n\t    });\n\t\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        var dataPoint = {};\n\t        dataPoint[_constants.keys.LABEL] = serie[_constants.keys.LABEL];\n\t        dataPoint[_constants.keys.GROUP] = serie[_constants.keys.GROUP];\n\t        dataPoint[_constants.keys.ID] = serie[_constants.keys.ID];\n\t        dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        dataPoint[_constants.keys.VALUE] = d[_constants.keys.VALUE];\n\t        flatData.push(dataPoint);\n\t      });\n\t    });\n\t\n\t    cache.flatDataSorted = (0, _common.sortData)(flatData, config.keyType);\n\t\n\t    var dataByKey = d3.nest().key(getKey).entries(cache.flatDataSorted).map(function (d) {\n\t      var dataPoint = {};\n\t      dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key;\n\t      dataPoint[_constants.keys.SERIES] = d.values;\n\t      return dataPoint;\n\t    });\n\t\n\t    var allGroupKeys = dataBySeries.map(getGroup);\n\t    cache.groupKeys = (0, _common.getUnique)(allGroupKeys);\n\t\n\t    return { dataBySeries: dataBySeries, dataByKey: dataByKey };\n\t  }\n\t\n\t  function triggerIntroAnimation() {\n\t    if (config.isAnimated) {\n\t      cache.maskingRectangle = cache.svg.d3.select(\".masking-rectangle\").attr(\"width\", cache.chartWidth - 2).attr(\"height\", cache.chartHeight).attr(\"x\", config.margin.left + 1).attr(\"y\", config.margin.top);\n\t\n\t      cache.maskingRectangle.transition().duration(config.animationDuration).ease(config.ease).attr(\"width\", 0).attr(\"x\", config.width - config.margin.right).on(\"end\", function () {\n\t        return cache.maskingRectangle.remove();\n\t      });\n\t    }\n\t  }\n\t\n\t  function getNearestDataPoint(_mouseX) {\n\t    var keyFromInvertedX = (0, _common.invertScale)(scales.xScale, _mouseX, config.keyType);\n\t    var bisectLeft = d3.bisector(getKey).left;\n\t    var dataEntryIndex = bisectLeft(cache.dataByKey, keyFromInvertedX);\n\t    var dataEntryForXPosition = cache.dataByKey[dataEntryIndex];\n\t    var nearestDataPoint = null;\n\t\n\t    if (keyFromInvertedX) {\n\t      nearestDataPoint = dataEntryForXPosition;\n\t    }\n\t    return nearestDataPoint;\n\t  }\n\t\n\t  function addEvents() {\n\t    var THROTTLE_DELAY = 20;\n\t    var throttledDispatch = (0, _common.throttle)(function () {\n\t      dispatcher.call.apply(dispatcher, arguments);\n\t    }, THROTTLE_DELAY);\n\t\n\t    cache.panel.on(\"mouseover.dispatch\", function () {\n\t      dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mouseout.dispatch\", function () {\n\t      dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mousemove.dispatch\", function () {\n\t      var _d3$mouse = d3.mouse(cache.panel.node()),\n\t          _d3$mouse2 = _slicedToArray(_d3$mouse, 2),\n\t          mouseX = _d3$mouse2[0],\n\t          mouseY = _d3$mouse2[1];\n\t\n\t      if (!cache.data) {\n\t        return;\n\t      }\n\t      var xPosition = mouseX;\n\t      var dataPoint = getNearestDataPoint(xPosition);\n\t\n\t      if (dataPoint) {\n\t        var dataPointXPosition = scales.xScale(dataPoint[_constants.keys.DATA]);\n\t        throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY);\n\t      }\n\t    });\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.on(\".\", null).remove();\n\t  }\n\t\n\t  return {\n\t    render: render,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    on: on,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, \"axisBottom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisBottom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisLeft\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisLeft;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisRight\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisRight;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"format\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.format;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"bisector\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.bisector;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.extent;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.sum;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.range;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.merge;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"nest\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.nest;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"dispatch\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.dispatch;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeQuadInOut\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeQuadInOut;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"select\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.select;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"mouse\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.mouse;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"event\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.event;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"transition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.transition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomUniform\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomUniform;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomNormal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomNormal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeDay\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeDay;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeMonth\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeMonth;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"area\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.area;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"curveCatmullRom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.curveCatmullRom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"line\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.line;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stack\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stack;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOffsetNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOffsetNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOrderNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOrderNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleTime\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleTime;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scalePoint\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scalePoint;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleBand\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleBand;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleOrdinal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleOrdinal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"brushX\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.brushX;\n\t\t}\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.11.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar radial = function(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tvar naturalEarth1 = function() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t};\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$2 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function constrain(transform$$1, extent) {\n\t    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n\t        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n\t        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n\t        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n\t    return transform$$1.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar mapdUI = exports.mapdUI = {\n\t  skyBlue: \"#22A7F0\"\n\t};\n\t\n\tvar mapdColors = exports.mapdColors = [\"#ea5545\", \"#bdcf32\", \"#b33dc6\", \"#ef9b20\", \"#87bc45\", \"#f46a9b\", \"#ace5c7\", \"#ede15b\", \"#836dc5\", \"#86d87f\", \"#27aeef\"];\n\t\n\tvar grey = exports.grey = [\"#F8F8FA\", \"#EFF2F5\", \"#D2D6DF\", \"#C3C6CF\", \"#ADB0B6\", \"#666A73\", \"#45494E\", \"#363A43\", \"#282C35\"];\n\t\n\tvar colors = exports.colors = {\n\t  mapdUI: mapdUI,\n\t  mapdColors: mapdColors,\n\t  grey: grey\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar keys = exports.keys = {\n\t  DATA: \"key\",\n\t  VALUE: \"value\",\n\t  ID: \"id\",\n\t  LABEL: \"label\",\n\t  GROUP: \"group\",\n\t  VALUES: \"values\",\n\t  SERIES: \"series\"\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cloneData = cloneData;\n\texports.sortData = sortData;\n\texports.getUnique = getUnique;\n\texports.invertScale = invertScale;\n\texports.override = override;\n\texports.throttle = throttle;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Clones the passed array of data\n\t * @param  {Object[]} dataToClone Data to clone\n\t * @return {Object[]}             Cloned data\n\t */\n\tfunction cloneData(_dataToClone) {\n\t  return JSON.parse(JSON.stringify(_dataToClone));\n\t}\n\t\n\tfunction sortData(_data, _keyType) {\n\t  var sortedData = cloneData(_data);\n\t  if (_keyType === \"time\") {\n\t    sortedData.forEach(function (d) {\n\t      d[_constants.keys.DATA] = new Date(d[_constants.keys.DATA]);\n\t    });\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].getTime() - b[_constants.keys.DATA].getTime();\n\t    });\n\t  } else if (_keyType === \"string\") {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].localeCompare(b[_constants.keys.DATA], \"en\", { numeric: false });\n\t    });\n\t  } else {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA] - b[_constants.keys.DATA];\n\t    });\n\t  }\n\t  return sortedData;\n\t}\n\t\n\tfunction getUnique(arr) {\n\t  return [].concat(_toConsumableArray(new Set(arr)));\n\t}\n\t\n\tfunction invertScale(_scale, _mouseX, _keyType) {\n\t  if (_keyType === \"time\") {\n\t    return _scale.invert(_mouseX);\n\t  } else {\n\t    var bandStep = _scale.step();\n\t    var index = Math.round(_mouseX / bandStep);\n\t    return _scale.domain()[index];\n\t  }\n\t}\n\t\n\tfunction override(a, b) {\n\t  var accum = {};\n\t  for (var x in a) {\n\t    if (a.hasOwnProperty(x)) {\n\t      accum[x] = x in b ? b[x] : a[x];\n\t    }\n\t  }\n\t  return accum;\n\t}\n\t\n\tfunction throttle(callback, limit) {\n\t  var wait = false;\n\t  var timer = null;\n\t  return function throttleFn() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    if (!wait) {\n\t      wait = true;\n\t      clearTimeout(timer);\n\t      timer = setTimeout(function () {\n\t        wait = false;\n\t        callback.apply(undefined, args);\n\t      }, limit);\n\t    }\n\t  };\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Scale;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Scale() {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    height: null,\n\t    width: null,\n\t    keyType: null,\n\t    chartType: null,\n\t    colorSchema: null,\n\t    defaultColor: null\n\t  };\n\t\n\t  var data = {\n\t    dataByKey: null,\n\t    dataBySeries: null,\n\t    flatDataSorted: null,\n\t    groupKeys: null\n\t  };\n\t\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getValue = function getValue(d) {\n\t    return d[_constants.keys.VALUE];\n\t  };\n\t\n\t  function buildXScale(_allKeys) {\n\t    var chartWidth = config.width - config.margin.left - config.margin.right;\n\t    var datesExtent = null;\n\t    var xScale = null;\n\t    if (config.keyType === \"time\") {\n\t      datesExtent = d3.extent(_allKeys);\n\t      xScale = d3.scaleTime();\n\t    } else {\n\t      datesExtent = _allKeys;\n\t      xScale = config.chartType === \"bar\" || config.chartType === \"stackedBar\" ? d3.scaleBand() : d3.scalePoint();\n\t      xScale.padding(0);\n\t    }\n\t\n\t    xScale.domain(datesExtent).range([0, chartWidth]);\n\t\n\t    return xScale;\n\t  }\n\t\n\t  function buildYScale(_extent) {\n\t    var chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var yScale = d3.scaleLinear().domain(_extent).rangeRound([chartHeight, 0]).nice();\n\t\n\t    return yScale;\n\t  }\n\t\n\t  function buildColorScale() {\n\t    var ids = data.dataBySeries.map(getID);\n\t    var colorScale = d3.scaleOrdinal().range(config.colorSchema.map(function (d) {\n\t      return d.value;\n\t    })).domain(config.colorSchema.map(function (d, i) {\n\t      return d.key || ids[i];\n\t    })).unknown(config.defaultColor);\n\t\n\t    return colorScale;\n\t  }\n\t\n\t  function splitByGroups() {\n\t    var groups = {};\n\t    data.dataBySeries.forEach(function (d) {\n\t      var key = d[_constants.keys.GROUP];\n\t      if (!groups[key]) {\n\t        groups[key] = {\n\t          allValues: [],\n\t          allKeys: []\n\t        };\n\t      }\n\t      groups[key].allValues = groups[key].allValues.concat(d[_constants.keys.VALUES].map(getValue));\n\t      groups[key].allKeys = groups[key].allKeys.concat(d[_constants.keys.VALUES].map(getKey));\n\t    });\n\t\n\t    return groups;\n\t  }\n\t\n\t  function getStackedScales() {\n\t    var allStackHeights = data.dataByKey.map(function (d) {\n\t      return d3.sum(d.series.map(function (dB) {\n\t        return dB.value;\n\t      }));\n\t    });\n\t\n\t    var stackData = data.dataByKey.map(function (d) {\n\t      var points = {\n\t        key: d[_constants.keys.DATA]\n\t      };\n\t      d.series.forEach(function (dB) {\n\t        points[dB[_constants.keys.ID]] = dB[_constants.keys.VALUE];\n\t      });\n\t\n\t      return points;\n\t    });\n\t\n\t    var stack = d3.stack().keys(data.dataBySeries.map(getID)).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n\t\n\t    var valuesExtent = d3.extent(allStackHeights);\n\t\n\t    var allKeys = data.flatDataSorted.map(getKey);\n\t    var allUniqueKeys = (0, _common.getUnique)(allKeys);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale([0, valuesExtent[1]]);\n\t\n\t    return {\n\t      stackData: stackData,\n\t      stack: stack,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getHorizontalScales() {\n\t    var groups = splitByGroups();\n\t\n\t    var hasSecondAxis = data.groupKeys.length > 1;\n\t\n\t    var groupAxis1 = groups[data.groupKeys[0]];\n\t    var allUniqueKeys = groupAxis1.allKeys;\n\t    var valuesExtent = d3.extent(groupAxis1.allValues);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale(valuesExtent);\n\t\n\t    var yScale2 = null;\n\t    if (hasSecondAxis) {\n\t      var groupAxis2 = groups[data.groupKeys[1]];\n\t      var valuesExtent2 = d3.extent(groupAxis2.allValues);\n\t\n\t      yScale2 = yScale.copy().domain(valuesExtent2);\n\t    }\n\t\n\t    return {\n\t      hasSecondAxis: hasSecondAxis,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale,\n\t      yScale2: yScale2\n\t    };\n\t  }\n\t\n\t  function getScales() {\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      return getStackedScales();\n\t    } else {\n\t      return getHorizontalScales();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    getScales: getScales\n\t  };\n\t}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Line;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Line(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t  }\n\t\n\t  function drawLines() {\n\t    var seriesLine = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    });\n\t\n\t    var seriesLine2 = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var lines = cache.svg.selectAll(\".mark.line\").data(data.dataBySeries);\n\t\n\t    lines.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"line\"].join(\" \");\n\t    }).merge(lines).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === data.groupKeys[0]) {\n\t        return seriesLine(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesLine2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", \"none\");\n\t\n\t    lines.exit().remove();\n\t  }\n\t\n\t  function drawAreas() {\n\t    var seriesArea = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    });\n\t\n\t    var seriesArea2 = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var areas = cache.svg.selectAll(\".mark.area\").data(data.dataBySeries);\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === data.groupKeys[0]) {\n\t        return seriesArea(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesArea2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", getColor);\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawStackedAreas() {\n\t    var seriesLine = d3.area().x(function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[0]);\n\t    }).y1(function (d) {\n\t      return scales.yScale(d[1]);\n\t    });\n\t\n\t    var areas = cache.svg.selectAll(\".mark.stacked-area\").data(data.stack(data.stackData));\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"stacked-area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", seriesLine).style(\"stroke\", \"none\").style(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    });\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"area\") {\n\t      drawAreas();\n\t    } else if (config.chartType === \"line\") {\n\t      drawLines();\n\t    } else if (config.chartType === \"stackedArea\") {\n\t      drawStackedAreas();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Bar;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tfunction Bar(config, cache) {\n\t\n\t  var getColor = function getColor(d) {\n\t    return cache.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function drawBars() {\n\t    var bars = cache.svg.select(\".chart-group\").selectAll(\".mark\").data(cache.dataBySeries[0].values);\n\t\n\t    bars.enter().append(\"rect\").attr(\"class\", function () {\n\t      return [\"mark\", \"rect\"].join(\" \");\n\t    }).merge(bars).attr(\"x\", function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[_constants.keys.VALUE]);\n\t    }).attr(\"width\", function () {\n\t      return cache.xScale.bandwidth();\n\t    }).attr(\"height\", function (d) {\n\t      return cache.chartHeight - cache.yScale(d[_constants.keys.VALUE]);\n\t    }).style(\"stroke\", \"white\").style(\"fill\", getColor);\n\t\n\t    bars.exit().remove();\n\t  }\n\t\n\t  function drawStackedBars() {\n\t\n\t    var stackedBarGroups = cache.svg.select(\".chart-group\").selectAll(\".mark-group\").data(cache.stack(cache.stackData));\n\t\n\t    var stackedUpdate = stackedBarGroups.enter().append(\"g\").attr(\"class\", \"mark-group\").merge(stackedBarGroups).attr(\"fill\", function (d) {\n\t      return cache.colorScale(d.key);\n\t    }).attr(\"stroke\", \"white\");\n\t\n\t    stackedBarGroups.exit().remove();\n\t\n\t    var stackedBars = stackedUpdate.selectAll(\".mark\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    stackedBars.enter().append(\"rect\").attr(\"class\", \"mark\").merge(stackedBars).attr(\"x\", function (d) {\n\t      return cache.xScale(d.data[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[1]);\n\t    }).attr(\"height\", function (d) {\n\t      return cache.yScale(d[0]) - cache.yScale(d[1]);\n\t    }).attr(\"width\", cache.xScale.bandwidth());\n\t\n\t    stackedBars.exit().remove();\n\t  }\n\t\n\t  return {\n\t    drawBars: drawBars,\n\t    drawStackedBars: drawStackedBars\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Axis;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Axis(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    tickSizes: null,\n\t    tickPadding: null,\n\t    xAxisFormat: null,\n\t    keyType: null,\n\t    yTicks: null,\n\t    yAxisFormat: null,\n\t    xAxisPadding: null,\n\t    axisTransitionDuration: null,\n\t    ease: null,\n\t    grid: null,\n\t    hoverZoneSize: 30\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    background: null,\n\t    chartHeight: null,\n\t    chartWidth: null,\n\t    xAxis: null,\n\t    yAxis: null,\n\t    yAxis2: null,\n\t    horizontalGridLines: null,\n\t    verticalGridLines: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"axis-group\", true).style(\"pointer-events\", \"none\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis x\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y2\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function buildAxis() {\n\t    cache.xAxis = d3.axisBottom(scales.xScale).tickSize(config.tickSizes, 0).tickPadding(config.tickPadding);\n\t\n\t    if (config.keyType === \"time\") {\n\t      var formatter = d3.timeFormat(config.xAxisFormat);\n\t      cache.xAxis.tickFormat(formatter);\n\t    } else {\n\t      cache.xAxis.tickValues(scales.xScale.domain().filter(function (d, i) {\n\t        return !(i % config.tickSkip);\n\t      }));\n\t    }\n\t\n\t    cache.yAxis = d3.axisLeft(scales.yScale).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.yAxis2 = d3.axisRight(scales.yScale2).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t    }\n\t  }\n\t\n\t  function drawAxis() {\n\t    buildSVG();\n\t    buildAxis();\n\t\n\t    cache.svg.select(\".axis.x\").attr(\"transform\", \"translate(0, \" + cache.chartHeight + \")\").call(cache.xAxis);\n\t\n\t    cache.svg.select(\".axis.y\").attr(\"transform\", \"translate(\" + -config.xAxisPadding.left + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis);\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.svg.select(\".axis.y2\").attr(\"transform\", \"translate(\" + (cache.chartWidth - config.xAxisPadding.right) + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis2);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawGridLines() {\n\t    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n\t      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.horizontal-grid-line\").data(scales.yScale.ticks(config.yTicks));\n\t\n\t      cache.horizontalGridLines.enter().append(\"line\").attr(\"class\", \"horizontal-grid-line\").merge(cache.horizontalGridLines).transition().duration(config.axisTransitionDuration).attr(\"x1\", -config.xAxisPadding.left).attr(\"x2\", cache.chartWidth).attr(\"y1\", scales.yScale).attr(\"y2\", scales.yScale);\n\t\n\t      cache.horizontalGridLines.exit().remove();\n\t    }\n\t\n\t    if (config.grid === \"vertical\" || config.grid === \"full\") {\n\t      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.vertical-grid-line\").data(cache.xAxis.tickValues());\n\t\n\t      cache.verticalGridLines.enter().append(\"line\").attr(\"class\", \"vertical-grid-line\").merge(cache.verticalGridLines).transition().duration(config.axisTransitionDuration).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight).attr(\"x1\", scales.xScale).attr(\"x2\", scales.xScale);\n\t\n\t      cache.verticalGridLines.exit().remove();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    drawAxis: drawAxis,\n\t    drawGridLines: drawGridLines\n\t  };\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Tooltip;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Tooltip(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 2,\n\t      right: 2,\n\t      bottom: 2,\n\t      left: 2\n\t    },\n\t    width: 250,\n\t    height: 45,\n\t\n\t    valueFormat: \".2f\",\n\t\n\t    tooltipMaxTopicLength: 170,\n\t    tooltipBorderRadius: 3,\n\t\n\t    // Animations\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t\n\t    titleHeight: 32,\n\t    elementHeight: 24,\n\t    padding: 8,\n\t    dotRadius: 4,\n\t\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: [],\n\t\n\t    // from chart\n\t    keyType: \"time\"\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    tooltipDivider: null,\n\t    tooltipBody: null,\n\t    tooltipTitle: null,\n\t    tooltipBackground: null,\n\t    xPosition: null,\n\t    yPosition: null,\n\t    content: null,\n\t    title: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"tooltip-group\").style(\"position\", \"absolute\").style(\"pointer-events\", \"none\");\n\t\n\t      cache.tooltipTitle = cache.root.append(\"div\").attr(\"class\", \"tooltip-title\");\n\t\n\t      cache.tooltipBody = cache.root.append(\"div\").attr(\"class\", \"tooltip-body\");\n\t    }\n\t  }\n\t\n\t  function calculateTooltipPosition(_mouseX, _mouseY) {\n\t    var OFFSET = 4;\n\t    var tooltipSize = cache.root.node().getBoundingClientRect();\n\t    var tooltipX = _mouseX;\n\t    var avoidanceOffset = OFFSET;\n\t    var tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2;\n\t\n\t    if (_mouseX > cache.chartWidth / 2) {\n\t      avoidanceOffset = -tooltipSize.width - OFFSET;\n\t    }\n\t\n\t    return [tooltipX + avoidanceOffset, tooltipY];\n\t  }\n\t\n\t  function move() {\n\t    cache.root.transition().duration(config.mouseChaseDuration).ease(config.tooltipEase).style(\"top\", cache.yPosition + \"px\").style(\"left\", cache.xPosition + config.margin.left + \"px\");\n\t    return this;\n\t  }\n\t\n\t  function drawContent() {\n\t    var content = cache.content;\n\t    var formatter = d3.format(config.valueFormat);\n\t\n\t    var tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\").data(content);\n\t    var tooltipItemsUpdate = tooltipItems.enter().append(\"div\").attr(\"class\", \"tooltip-item\").merge(tooltipItems);\n\t    tooltipItems.exit().remove();\n\t\n\t    var tooltipItem = tooltipItemsUpdate.selectAll(\".section\").data(function (d) {\n\t      var legendData = [{ key: \"color\", value: scales.colorScale(d[_constants.keys.ID]) }, { key: \"label\", value: d[_constants.keys.LABEL] }];\n\t      if (typeof d[_constants.keys.VALUE] !== \"undefined\") {\n\t        legendData.push({ key: \"value\", value: d[_constants.keys.VALUE] });\n\t      }\n\t      return legendData;\n\t    });\n\t    tooltipItem.enter().append(\"div\").merge(tooltipItem).attr(\"class\", function (d) {\n\t      return [\"section\", d.key].join(\" \");\n\t    }).each(function each(d) {\n\t      var selection = d3.select(this);\n\t      if (d.key === \"color\") {\n\t        selection.style(\"background\", d.value);\n\t      } else if (d.key === \"value\") {\n\t        selection.html(formatter(d.value));\n\t      } else {\n\t        selection.html(d.value);\n\t      }\n\t    });\n\t    tooltipItem.exit().remove();\n\t    return this;\n\t  }\n\t\n\t  function drawTitle() {\n\t    var title = cache.title;\n\t    if (config.keyType === \"time\") {\n\t      title = d3.timeFormat(config.dateFormat)(_title);\n\t    }\n\t\n\t    cache.tooltipTitle.html(title);\n\t    return this;\n\t  }\n\t\n\t  function drawTooltip() {\n\t    buildSVG();\n\t    drawTitle();\n\t    drawContent();\n\t    move();\n\t    return this;\n\t  }\n\t\n\t  function setupContent(_series) {\n\t    var series = _series;\n\t\n\t    if (config.seriesOrder.length) {\n\t      series = sortByTopicsOrder(_series);\n\t    } else if (_series.length && _series[0][_constants.keys.LABEL]) {\n\t      series = sortByAlpha(_series);\n\t    }\n\t\n\t    cache.content = series;\n\t    return this;\n\t  }\n\t\n\t  function sortByTopicsOrder(_series) {\n\t    var _order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesOrder;\n\t\n\t    return _order.map(function (orderName) {\n\t      return _series.filter(function (_ref) {\n\t        var name = _ref.name;\n\t        return name === orderName;\n\t      })[0];\n\t    });\n\t  }\n\t\n\t  function sortByAlpha(_series) {\n\t    var series = (0, _common.cloneData)(_series);\n\t    return series.sort(function (a, b) {\n\t      return a[_constants.keys.LABEL].localeCompare(b[_constants.keys.LABEL], \"en\", { numeric: false });\n\t    });\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function setupTooltip(_dataPoint, _xPosition, _yPosition) {\n\t    buildSVG();\n\t\n\t    var _calculateTooltipPosi = calculateTooltipPosition(_xPosition, _yPosition),\n\t        _calculateTooltipPosi2 = _slicedToArray(_calculateTooltipPosi, 2),\n\t        tooltipX = _calculateTooltipPosi2[0],\n\t        tooltipY = _calculateTooltipPosi2[1];\n\t\n\t    setXPosition(tooltipX);\n\t    setYPosition(tooltipY);\n\t    setTitle(_dataPoint[_constants.keys.DATA]);\n\t    setupContent(_dataPoint[_constants.keys.SERIES]);\n\t\n\t    drawTooltip();\n\t    return this;\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.tooltip\", show).on(\"mouseMovePanel.tooltip\", setupTooltip).on(\"mouseOutPanel.tooltip\", hide);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setTitle(_title) {\n\t    cache.title = _title;\n\t    return this;\n\t  }\n\t\n\t  function setXPosition(_xPosition) {\n\t    cache.xPosition = _xPosition;\n\t    return this;\n\t  }\n\t\n\t  function setYPosition(_yPosition) {\n\t    cache.yPosition = _yPosition;\n\t    return this;\n\t  }\n\t\n\t  function setContent(_content) {\n\t    cache.content = _content;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    bindEvents: bindEvents,\n\t    setXPosition: setXPosition,\n\t    setYPosition: setYPosition,\n\t    setContent: setContent,\n\t    setTitle: setTitle,\n\t    hide: hide,\n\t    show: show,\n\t    drawTooltip: drawTooltip,\n\t    setConfig: setConfig,\n\t    setScales: setScales\n\t  };\n\t}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Legend;\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Legend(_container) {\n\t  return (0, _tooltip2.default)(_container);\n\t}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Brush;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Brush(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"brush-group\", true);\n\t    }\n\t  }\n\t\n\t  function extractBrushDimension(_data) {\n\t    var merged = d3.merge(_data.map(function (d) {\n\t      return d[_constants.keys.VALUES];\n\t    }));\n\t    return (0, _common.sortData)(merged, config.keyType);\n\t  }\n\t\n\t  function buildBrush() {\n\t    cache.brush = cache.brush || d3.brushX().on(\"start\", handleBrushStart).on(\"brush\", handleBrushMove).on(\"end\", handleBrushEnd);\n\t\n\t    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]]);\n\t\n\t    cache.chartBrush = cache.svg.call(cache.brush);\n\t\n\t    cache.chartBrush.selectAll(\".brush-rect\").attr(\"height\", cache.chartHeight);\n\t  }\n\t\n\t  function getDataExtent() {\n\t    var selection = d3.event.selection;\n\t    var dataExtent = selection.map(function (d) {\n\t      return (0, _common.invertScale)(scales.xScale, d, config.keyType);\n\t    });\n\t    return dataExtent;\n\t  }\n\t\n\t  function handleBrushStart() {\n\t    dispatcher.call(\"brushStart\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushMove() {\n\t    dispatcher.call(\"brushMove\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushEnd() {\n\t    // Only transition after input, ignore empty selections.\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t\n\t    var dataExtent = getDataExtent();\n\t\n\t    d3.select(this).transition().call(d3.event.target.move, dataExtent.map(scales.xScale));\n\t\n\t    dispatcher.call(\"brushEnd\", this, dataExtent, config);\n\t  }\n\t\n\t  function drawBrush() {\n\t    buildSVG();\n\t\n\t    if (data.dataBySeries) {\n\t      cache.data = extractBrushDimension((0, _common.cloneData)(data.dataBySeries));\n\t      buildBrush();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  // function setBrushByPercentages (_a, _b) {\n\t  //   const x0 = _a * cache.chartWidth\n\t  //   const x1 = _b * cache.chartWidth\n\t\n\t  //   brush.move(chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function setBrushByDates (_dateA, _dateB) {\n\t  //   const x0 = cache.xScale(new Date(_dateA))\n\t  //   const x1 = cache.xScale(new Date(_dateB))\n\t\n\t  //   cache.brush.move(cache.chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function updateHandlers (_dateExtent) {\n\t  //   if (_dateExtent === null) {\n\t  //     cache.handle.attr(\"display\", \"none\")\n\t  //   } else {\n\t  //     cache.handle\n\t  //       .attr(\"display\", null)\n\t  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n\t  //   }\n\t  // }\n\t\n\t  // API\n\t\n\t  /**\n\t   * Gets or Sets the dateRange for the selected part of the brush\n\t   * @param  {String[]} _x Desired dateRange for the graph\n\t   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n\t   * @public\n\t   */\n\t  // function dateRange (_x) {\n\t  //   if (!arguments.length) {\n\t  //     return dateRange\n\t  //   }\n\t  //   dateRange = _x\n\t\n\t  //   if (Array.isArray(dateRange)) {\n\t  //     setBrushByDates(...dateRange)\n\t  //   }\n\t\n\t  //   return this\n\t  // }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    setScales: setScales,\n\t    drawBrush: drawBrush\n\t  };\n\t}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Hover;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Hover(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    dotRadius: null\n\t  };\n\t\n\t  var scales = {\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"hover\");\n\t\n\t  // function init () {\n\t  //   cache.chart.on(\"mouseOver.hover\", show)\n\t  //     .on(\"mouseMove.hover\", update)\n\t  //     .on(\"mouseOut.hover\", hide)\n\t\n\t  //   render()\n\t  //   hide()\n\t  // }\n\t  // init()\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"hover-group\", true).style(\"pointer-events\", \"none\");\n\t    }\n\t\n\t    // cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n\t  }\n\t\n\t  function drawHover(_dataPoint, _dataPointXPosition) {\n\t    buildSVG();\n\t\n\t    if (_dataPointXPosition) {\n\t      moveVerticalMarker(_dataPointXPosition);\n\t      drawVerticalMarker();\n\t      if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t        highlightStackedDataPoints(_dataPoint);\n\t      } else {\n\t        highlightDataPoints(_dataPoint);\n\t      }\n\t      dispatcher.call(\"hover\", this, _dataPoint);\n\t    }\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"block\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"none\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function highlightDataPoints(_dataPoint) {\n\t    var dotsData = _dataPoint[_constants.keys.SERIES];\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawHighlightDataPoints(_dotsData) {\n\t    var dots = cache.svg.selectAll(\".dot\").data(_dotsData);\n\t\n\t    dots.enter().append(\"circle\").attr(\"class\", \"dot\").merge(dots).attr(\"cy\", function (d) {\n\t      // if (d[keys.GROUP] === chartCache.groupKeys[0]) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return scales.yScale(d[_constants.keys.VALUE]);\n\t      } else {\n\t        return scales.yScale2(d[_constants.keys.VALUE]);\n\t      }\n\t    }).attr(\"r\", config.dotRadius).style(\"stroke\", \"none\").style(\"fill\", getColor);\n\t\n\t    dots.exit().remove();\n\t  }\n\t\n\t  function highlightStackedDataPoints(_dataPoint) {\n\t    var stackedDataPoint = { key: _dataPoint[_constants.keys.DATA] };\n\t    _dataPoint.series.forEach(function (d) {\n\t      var id = d[_constants.keys.ID];\n\t      stackedDataPoint[id] = d[_constants.keys.VALUE];\n\t    });\n\t\n\t    // const dotsStack = data.stack([stackedDataPoint])\n\t    // const dotsData = dotsStack.map((d) => {\n\t    //   const dot = {value: d[0][1]}\n\t    //   dot[keys.ID] = d.key\n\t    //   return dot\n\t    // })\n\t\n\t    // drawHighlightDataPoints(dotsData)\n\t  }\n\t\n\t  function drawVerticalMarker() {\n\t    var verticalMarkerLine = cache.svg.selectAll(\"line\").data([0]);\n\t\n\t    verticalMarkerLine.enter().append(\"line\").classed(\"vertical-marker\", true).merge(verticalMarkerLine).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight);\n\t\n\t    verticalMarkerLine.exit().remove();\n\t  }\n\t\n\t  function moveVerticalMarker(_verticalMarkerXPosition) {\n\t    cache.svg.attr(\"transform\", \"translate(\" + [_verticalMarkerXPosition, 0] + \")\");\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.hover\", show).on(\"mouseMovePanel.hover\", drawHover).on(\"mouseOutPanel.hover\", hide);\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    bindEvents: bindEvents,\n\t    highlightDataPoints: highlightDataPoints,\n\t    highlightStackedDataPoints: highlightStackedDataPoints,\n\t    drawVerticalMarker: drawVerticalMarker,\n\t    moveVerticalMarker: moveVerticalMarker,\n\t    on: on\n\t  };\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Binning;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Binning(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    autoLabel: \"auto\",\n\t    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n\t    label: \"BIN:\"\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    autoItem: null,\n\t    binningItems: null,\n\t    selectedBin: null,\n\t    isAuto: true\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"change\");\n\t\n\t  function buildSVG() {\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"binning-group\").style(\"float\", \"left\");\n\t\n\t      cache.label = cache.root.append(\"div\").attr(\"class\", \"label\").text(config.label);\n\t\n\t      cache.autoItem = cache.root.append(\"div\").attr(\"class\", \"item item-auto toggleOnOff\").on(\"click.select\", function click(d) {\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        var toggled = !isSelected;\n\t        setAuto(toggled);\n\t        drawBinning();\n\t        dispatcher.call(\"change\", this, d, { isSelected: toggled });\n\t      }).text(config.autoLabel);\n\t\n\t      cache.binningItems = cache.root.selectAll(\".toggleExclusive\").data(config.exclusiveToggle).enter().append(\"div\").attr(\"class\", function (d) {\n\t        return \"item item-\" + d + \" toggleExclusive\";\n\t      }).on(\"click.select\", function click(d) {\n\t        setBinning(d);\n\t        drawBinning();\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        dispatcher.call(\"change\", this, d, { isSelected: isSelected });\n\t      }).text(function (d) {\n\t        return d;\n\t      });\n\t    }\n\t\n\t    var LINE_HEIGHT = 20;\n\t    cache.root.style(\"top\", config.margin.top - LINE_HEIGHT).style(\"left\", config.margin.left);\n\t\n\t    changeBinning(cache.selectedBin);\n\t    toggleAuto(cache.isAuto);\n\t  }\n\t\n\t  function changeBinning(_selectedItemName) {\n\t    if (_selectedItemName) {\n\t      (0, _interactors.exclusiveToggle)(cache.binningItems, \".item-\" + _selectedItemName);\n\t    }\n\t  }\n\t\n\t  function toggleAuto(_shouldBeSelected) {\n\t    cache.autoItem.classed(\"selected\", _shouldBeSelected).classed(\"dimmed\", !_shouldBeSelected);\n\t  }\n\t\n\t  function drawBinning() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setBinning(_selectedBin) {\n\t    cache.selectedBin = _selectedBin;\n\t    return this;\n\t  }\n\t\n\t  function setAuto(_isAuto) {\n\t    cache.isAuto = _isAuto;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.root.remove();\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    drawBinning: drawBinning,\n\t    setBinning: setBinning,\n\t    setAuto: setAuto\n\t  };\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toggleOnOff = toggleOnOff;\n\texports.exclusiveToggle = exclusiveToggle;\n\texports.toggle = toggle;\n\texports.blurOnEnter = blurOnEnter;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n\t * @param  {Number} selector A valid selector of the elements to toggle\n\t * @example\n\t * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n\t *\n\t * @return {void}\n\t */\n\t\n\tfunction toggleOnOff(selector, bool) {\n\t  var shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool;\n\t  d3.select(selector).classed(\"selected\", shouldBeSelected).classed(\"dimmed\", !shouldBeSelected);\n\t}\n\t\n\tfunction exclusiveToggle(othersSelection, selector) {\n\t  return toggle(othersSelection, selector, {\n\t    toggleOffIsEnabled: false,\n\t    toggleMultipleIsEnabled: false\n\t  });\n\t}\n\t\n\tfunction toggle(othersSelection, selector) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { toggleOffIsEnabled: false, toggleMultipleIsEnabled: false };\n\t\n\t  /* eslint-disable consistent-this */\n\t  var hasSelection = false;\n\t  var selectionNode = document.querySelector(selector);\n\t\n\t  othersSelection.classed(\"selected\", function selectedClass() {\n\t    var isSelected = this.classList.contains(\"selected\");\n\t    var hasJustBeenClicked = this === selectionNode;\n\t    var shouldBeSelected = false;\n\t\n\t    if (hasJustBeenClicked) {\n\t      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true;\n\t    } else {\n\t      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false;\n\t    }\n\t\n\t    hasSelection = hasSelection || shouldBeSelected;\n\t    return shouldBeSelected;\n\t  });\n\t\n\t  othersSelection.classed(\"dimmed\", function dimmedClass() {\n\t    return hasSelection && !this.classList.contains(\"selected\");\n\t  });\n\t  /* eslint-enable consistent-this */\n\t}\n\t\n\tfunction blurOnEnter(selection) {\n\t  selection.on(\"keypress.enter\", function keypress() {\n\t    if (d3.event.key === \"Enter\") {\n\t      this.blur();\n\t    }\n\t  });\n\t}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DomainEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction DomainEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xHitZone: null,\n\t    yHitZone: null,\n\t    y2HitZone: null,\n\t    yMaxInput: null,\n\t    yMinInput: null,\n\t    yLockIcon: null,\n\t    y2MaxInput: null,\n\t    y2MinInput: null,\n\t    y2LockIcon: null,\n\t    xMinInput: null,\n\t    xMaxInput: null,\n\t    xLockIcon: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    xDomain: null,\n\t    yDomain: null,\n\t    y2Domain: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"domainChanged\", \"domainLockToggled\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"domain-input-group\").style(\"position\", \"absolute\").style(\"top\", 0);\n\t\n\t      // hit zones\n\t      cache.xHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone x\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showXEditor).on(\"mouseout.dispatch\", hideXEditor);\n\t\n\t      cache.yHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showYEditor).on(\"mouseout.dispatch\", hideYEditor);\n\t\n\t      cache.y2HitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y2\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showY2Editor).on(\"mouseout.dispatch\", hideY2Editor);\n\t\n\t      // y input group\n\t      cache.yMaxInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChanged\", this, { value: this.innerText, axis: \"y\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yMinInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChanged\", this, { value: this.innerText, axis: \"y\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yLockIcon = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-lock y\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggled\", this, { isLocked: !isLocked, axis: \"y\" });\n\t      });\n\t\n\t      // y2 input group\n\t      cache.y2MaxInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChanged\", this, { value: this.innerText, axis: \"y2\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2MinInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChanged\", this, { value: this.innerText, axis: \"y2\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2LockIcon = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-lock y2\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggled\", this, { isLocked: !isLocked, axis: \"y2\" });\n\t      });\n\t\n\t      // x input group\n\t      cache.xMinInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChanged\", this, { value: this.innerText, axis: \"x\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xMaxInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChanged\", this, { value: this.innerText, axis: \"x\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xLockIcon = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-lock x\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggled\", this, { isLocked: !isLocked, axis: \"x\" });\n\t      });\n\t\n\t      hideYEditor();\n\t      hideY2Editor();\n\t      hideXEditor();\n\t    }\n\t\n\t    var HOVER_ZONE_SIZE = 40;\n\t    var LOCK_SIZE = 12;\n\t    var INPUT_HEIGHT = 12;\n\t    var PADDING = 4;\n\t    var INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING;\n\t\n\t    cache.xHitZone.style(\"width\", cache.chartWidth + HOVER_ZONE_SIZE * 2 + \"px\").style(\"height\", HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top + cache.chartHeight + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.yHitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.y2HitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left + cache.chartWidth + \"px\");\n\t\n\t    cache.yMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").text(Array.isArray(cache.yDomain) && !isNaN(cache.yDomain[1]) ? cache.yDomain[1] : \"\");\n\t\n\t    cache.yMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").text(Array.isArray(cache.yDomain) && !isNaN(cache.yDomain[0]) ? cache.yDomain[0] : \"\");\n\t\n\t    cache.yLockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.y2MaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").style(\"left\", PADDING + \"px\").text(Array.isArray(cache.y2Domain) && !isNaN(cache.y2Domain[1]) ? cache.y2Domain[1] : \"\");\n\t\n\t    cache.y2MinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").style(\"left\", PADDING + \"px\").text(Array.isArray(cache.y2Domain) && !isNaN(cache.y2Domain[0]) ? cache.y2Domain[0] : \"\");\n\t\n\t    cache.y2LockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.xMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + \"px\").text(Array.isArray(cache.xDomain) && typeof cache.xDomain[0] !== \"undefined\" ? cache.xDomain[0] : \"\");\n\t\n\t    cache.xMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH + \"px\").text(Array.isArray(cache.xDomain) && typeof cache.xDomain[1] !== \"undefined\" ? cache.xDomain[1] : \"\");\n\t\n\t    cache.xLockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth + \"px\");\n\t  }\n\t\n\t  function showYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function drawDomainEditor() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setXDomain(_xDomain) {\n\t    cache.xDomain = _xDomain;\n\t    return this;\n\t  }\n\t\n\t  function setYDomain(_yDomain) {\n\t    cache.yDomain = _yDomain;\n\t    return this;\n\t  }\n\t\n\t  function setY2Domain(_y2Domain) {\n\t    cache.y2Domain = _y2Domain;\n\t    return this;\n\t  }\n\t\n\t  function setXLock(_xLock) {\n\t    cache.xLock = _xLock;\n\t    return this;\n\t  }\n\t\n\t  function setYLock(_yLock) {\n\t    cache.yLock = _yLock;\n\t    return this;\n\t  }\n\t\n\t  function setY2Lock(_y2Lock) {\n\t    cache.y2Lock = _y2Lock;\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXDomain: setXDomain,\n\t    setYDomain: setYDomain,\n\t    setY2Domain: setY2Domain,\n\t    setXLock: setXLock,\n\t    setYLock: setYLock,\n\t    setY2Lock: setY2Lock,\n\t    drawDomainEditor: drawDomainEditor\n\t  };\n\t}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = BrushRangeEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction BrushRangeEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    inputMin: null,\n\t    inputMax: null,\n\t    rangeMin: null,\n\t    rangeMax: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"rangeChanged\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"brush-range-input-group\").style(\"top\", 0);\n\t\n\t      cache.inputMax = cache.root.append(\"div\").attr(\"class\", \"brush-range-input max\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMax = cache.inputMax.text();\n\t        dispatcher.call(\"rangeChanged\", this, { value: cache.rangeMax, type: \"max\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t\n\t      cache.root.append(\"div\").attr(\"class\", \"separator\").text(\"-\").style(\"float\", \"right\");\n\t\n\t      cache.inputMin = cache.root.append(\"div\").attr(\"class\", \"brush-range-input min\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMin = cache.inputMin.text();\n\t        dispatcher.call(\"rangeChanged\", this, { value: cache.rangeMin, type: \"min\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t    }\n\t\n\t    cache.inputMin.text(cache.rangeMin || \"\");\n\t    cache.inputMax.text(cache.rangeMax || \"\");\n\t  }\n\t\n\t  function drawRangeEditor() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setRangeMin(_rangeMin) {\n\t    cache.rangeMin = _rangeMin;\n\t    return this;\n\t  }\n\t\n\t  function setRangeMax(_rangeMax) {\n\t    cache.rangeMax = _rangeMax;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    drawRangeEditor: drawRangeEditor,\n\t    setRangeMin: setRangeMin,\n\t    setRangeMax: setRangeMax\n\t  };\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Label;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Label(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xAxisLabel: null,\n\t    yAxisLabel: null,\n\t    y2AxisLabel: null,\n\t    xLabel: null,\n\t    yLabel: null,\n\t    y2Label: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"axisLabelChanged\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"label-group\").style(\"position\", \"absolute\").style(\"top\", 0).style(\"white-space\", \"nowrap\");\n\t\n\t      cache.xAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label x\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        dispatcher.call(\"axisLabelChanged\", this, { value: this.innerText, type: \"x\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%)\");\n\t\n\t      cache.yAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        dispatcher.call(\"axisLabelChanged\", this, { value: this.innerText, type: \"y\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"left\", 0).style(\"transform\", \"translate(-50%) rotate(-90deg)\");\n\t\n\t      cache.y2AxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y2\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        dispatcher.call(\"axisLabelChanged\", this, { value: this.innerText, type: \"y2\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%) rotate(90deg)\");\n\t    }\n\t\n\t    cache.xAxisLabel.text(config.xLabel).style(\"top\", function top() {\n\t      var textHeight = this.getBoundingClientRect().height;\n\t      return config.height - textHeight + \"px\";\n\t    }).style(\"left\", config.margin.left + cache.chartWidth / 2 + \"px\");\n\t\n\t    cache.yAxisLabel.text(config.yLabel).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return textWidth / 2 + \"px\";\n\t    });\n\t\n\t    cache.y2AxisLabel.text(config.y2Label).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return config.width - textWidth / 2 + \"px\";\n\t    });\n\t  }\n\t\n\t  function drawLabels() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setXLabels(_xLabel) {\n\t    config.xLabel = _xLabel;\n\t    return this;\n\t  }\n\t\n\t  function setYLabels(_yLabel) {\n\t    config.yLabel = _yLabel;\n\t    return this;\n\t  }\n\t\n\t  function setY2Labels(_y2Label) {\n\t    config.y2Label = _y2Label;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setlabels(_labels) {\n\t\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXLabels: setXLabels,\n\t    setYLabels: setYLabels,\n\t    setY2Labels: setY2Labels,\n\t    drawLabels: drawLabels\n\t  };\n\t}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.merge = exports.range = exports.sum = exports.extent = exports.bisector = undefined;\n\t\n\tvar _d3Array = __webpack_require__(21);\n\t\n\tObject.defineProperty(exports, \"bisector\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.bisector;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.extent;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.sum;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.range;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.merge;\n\t  }\n\t});\n\texports.default = DataManager;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction DataManager() {\n\t  /* eslint-disable no-magic-numbers */\n\t  var config = {\n\t    keyType: \"number\", // number, string, time,\n\t    range: [0, 100],\n\t    pointCount: 200,\n\t    groupCount: 2,\n\t    lineCount: 4\n\t  };\n\t  var cache = {\n\t    data: null,\n\t    baseDate: null\n\t  };\n\t\n\t  function generateRandomString(_length) {\n\t    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5);\n\t  }\n\t\n\t  function generateSeries(_dataKeys, _range, _allowNegative) {\n\t    var value = d3.randomUniform.apply(d3, _toConsumableArray(_range))();\n\t    var variabilityRatio = 50;\n\t    var randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio;\n\t    var rnd = d3.randomNormal(0, 1);\n\t    return _dataKeys.map(function (d) {\n\t      value = value + rnd() * randomWalkStepSize;\n\t      if (!_allowNegative && value < randomWalkStepSize) {\n\t        value = value + randomWalkStepSize;\n\t      }\n\t      return {\n\t        value: value,\n\t        key: config.keyType === \"time\" ? d.toISOString() : d\n\t      };\n\t    });\n\t  }\n\t\n\t  function generateTestDataset() {\n\t    var dataKeys = null;\n\t    if (config.keyType === \"time\") {\n\t      cache.baseDate = new Date();\n\t      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate));\n\t    } else if (config.keyType === \"string\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function () {\n\t        return generateRandomString();\n\t      });\n\t      dataKeys.sort(function (a, b) {\n\t        return a.localeCompare(b, \"en\", { numeric: false });\n\t      });\n\t    } else if (config.keyType === \"number\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function (d, i) {\n\t        return i;\n\t      });\n\t    }\n\t\n\t    var series = d3.range(config.lineCount).map(function (d) {\n\t      return {\n\t        label: \"Label \" + d,\n\t        id: d,\n\t        group: d < config.groupCount ? d : 0,\n\t        values: generateSeries(dataKeys, config.range)\n\t      };\n\t    });\n\t\n\t    cache.data = { series: series\n\t\n\t      // console.log(\"generated data\", cache.data)\n\t\n\t    };return cache.data;\n\t  }\n\t\n\t  function filterByKey(_extent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      var values = series[_constants.keys.VALUES];\n\t      var allKeys = values.map(function (d) {\n\t        return d[_constants.keys.DATA];\n\t      });\n\t      var extentMinIndex = allKeys.indexOf(_extent[0]);\n\t      var extentMaxIndex = allKeys.indexOf(_extent[1]);\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].slice(extentMinIndex, extentMaxIndex);\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function filterByDate(_dateExtent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].filter(function (d) {\n\t        var epoch = new Date(d[_constants.keys.DATA]).getTime();\n\t        return epoch >= _dateExtent[0].getTime() && epoch <= _dateExtent[1].getTime();\n\t      });\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    generateTestDataset: generateTestDataset,\n\t    generateSeries: generateSeries,\n\t    filterByDate: filterByDate,\n\t    filterByKey: filterByKey,\n\t    setConfig: setConfig\n\t  };\n\t}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Observer;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Observer(_dataManager) {\n\t  var dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\");\n\t  var dataManager = _dataManager;\n\t\n\t  dispatcher.on(\"brushChange.observer\", function (_e, _brushConfig) {\n\t    var filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e) : dataManager.filterByKey(_e);\n\t    pub(\"dataFilter\", filtered);\n\t  });\n\t\n\t  function sub() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function pub(_channelName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    dispatcher.call.apply(dispatcher, [_channelName, this].concat(args));\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    sub: sub,\n\t    pub: pub\n\t  };\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// mapd3.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 043705cfd8cbd857f40c","import Chart from \"./charts/chart.js\"\nimport Tooltip from \"./charts/tooltip.js\"\nimport Legend from \"./charts/legend.js\"\nimport DataManager from \"./charts/data-manager.js\"\nimport Observer from \"./charts/observer.js\"\nimport Binning from \"./charts/binning.js\"\nimport DomainEditor from \"./charts/domain-editor.js\"\nimport BrushRangeEditor from \"./charts/brush-range-editor.js\"\nimport Label from \"./charts/label.js\"\nimport Brush from \"./charts/brush.js\"\nimport Hover from \"./charts/hover.js\"\nimport Interactors from \"./charts/interactors.js\"\nimport {colors} from \"./charts/helpers/colors.js\"\n\nexport {\n  Chart,\n  Tooltip,\n  Legend,\n  DataManager,\n  Observer,\n  Binning,\n  DomainEditor,\n  BrushRangeEditor,\n  Label,\n  Brush,\n  Hover,\n  Interactors,\n  colors\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {colors} from \"./helpers/colors\"\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, getUnique, invertScale, sortData, override, throttle} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\nimport Line from \"./line\"\nimport Bar from \"./bar\"\nimport Axis from \"./axis\"\nimport Tooltip from \"./tooltip\"\nimport Legend from \"./legend\"\nimport Brush from \"./brush\"\nimport Hover from \"./hover\"\nimport Binning from \"./binning\"\nimport DomainEditor from \"./domain-editor\"\nimport BrushRangeEditor from \"./brush-range-editor\"\nimport Label from \"./label\"\n\nexport default function Chart (_container) {\n\n  let config = {\n    // common\n    margin: {\n      top: 48,\n      right: 32,\n      bottom: 48,\n      left: 32\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    chartType: \"line\", // line, area, stackedLine, stackedArea\n    ease: d3.easeLinear,\n\n    // intro animation\n    isAnimated: false,\n    animationDuration: 1500,\n\n    // scale\n    colorSchema: colors.mapdColors.map((d) => ({value: d})),\n    defaultColor: \"skyblue\",\n\n    // axis\n    xAxisPadding: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    },\n    tickPadding: 5,\n    xAxisFormat: \"%c\",\n    tickSkip: 1,\n    tickSizes: 8,\n    yTicks: 5,\n    yTicks2: 5,\n    yAxisFormat: \".2f\",\n    yAxisFormat2: \".2f\",\n    grid: null,\n    axisTransitionDuration: 0,\n\n    xTitle: \"\",\n    yTitle: \"\",\n\n    // hover\n    dotRadius: 4,\n\n    // tooltip\n    valueFormat: \".2f\",\n    tooltipMaxTopicLength: 170,\n    tooltipBorderRadius: 3,\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: []\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    panel: null,\n    margin: null,\n    maskingRectangle: null,\n    chartWidth: null, chartHeight: null,\n    xAxis: null, yAxis: null, yAxis2: null,\n\n    dataBySeries: null,\n    dataByKey: null,\n    data: null,\n    groupKeys: [],\n    hasSecondAxis: false,\n    stackData: null,\n    stack: null,\n    flatDataSorted: null\n  }\n\n  // accessors\n  const getKey = (d) => d[keys.DATA]\n  const getGroup = (d) => d[keys.GROUP]\n\n  // events\n  const dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\")\n\n  function render () {\n    buildSVG()\n\n    if (cache.dataBySeries) {\n      buildChart()\n    }\n\n    return this\n  }\n\n  function buildSVG () {\n    const w = config.width || cache.container.clientWidth\n    const h = config.height || cache.container.clientHeight\n    cache.chartWidth = w - config.margin.left - config.margin.right\n    cache.chartHeight = h - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      const template = `<div class=\"mapd3 mapd3-container\">\n        <div class=\"header-group\"></div>\n        <svg class=\"chart\">\n          <g class=\"chart-group\"></g>\n          <g class=\"panel-group\">\n            <rect class=\"panel-background\"></rect>\n          </g>\n          <rect class=\"masking-rectangle\"></rect>\n        </svg>\n      </div>`\n\n      const base = d3.select(cache.container)\n          .html(template)\n\n      cache.container = base.select(\".mapd3-container\")\n          .style(\"position\", \"relative\")\n\n      cache.svg = base.select(\"svg\")\n      cache.headerGroup = base.select(\".header-group\")\n          .style(\"position\", \"absolute\")\n      cache.panel = cache.svg.select(\".panel-group\")\n      cache.chart = cache.svg.select(\".chart-group\")\n\n      addEvents()\n    }\n\n    cache.svg\n      .attr(\"width\", config.width)\n      .attr(\"height\", config.height)\n\n    cache.headerGroup\n      .style(\"width\", cache.chartWidth)\n      .style(\"left\", config.margin.left)\n\n    cache.panel\n      .attr(\"transform\", `translate(${config.margin.left},${config.margin.top})`)\n      .select(\".panel-background\")\n      .attr(\"width\", cache.chartWidth)\n      .attr(\"height\", cache.chartHeight)\n      .attr(\"fill\", \"transparent\")\n\n\n    return this\n  }\n\n  function buildChart () {\n    const dataObject = {\n      dataByKey: cache.dataByKey,\n      dataBySeries: cache.dataBySeries,\n      flatDataSorted: cache.flatDataSorted,\n      groupKeys: cache.groupKeys\n    }\n\n    const scale = Scale()\n      .setConfig(config)\n      .setData(dataObject)\n    scales = scale.getScales()\n\n    Axis(cache.chart)\n      .setConfig(config)\n      .setScales(scales)\n      .drawAxis()\n      .drawGridLines()\n\n    Line(cache.panel)\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawMarks()\n\n    Tooltip(cache.container)\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n\n    const legendContent = dataObject.dataBySeries\n        .map((d) => ({\n          id: d.id,\n          key: d.key,\n          label: d.label\n        }))\n\n    Legend(cache.container)\n      .setConfig(config)\n      .setScales(scales)\n      .setTitle(\"Title\")\n      .setContent(legendContent)\n      .setXPosition(cache.chartWidth - 80)\n      .setYPosition(20)\n      .drawTooltip()\n      .show()\n\n    Brush(cache.panel)\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawBrush()\n      .on(\"brushMove\", (...arg) => console.log(\"brush\", ...arg))\n\n    Hover(cache.panel)\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n\n    Binning(cache.headerGroup)\n      .setConfig(config)\n      .setBinning(\"1mo\")\n      .setAuto(true)\n      .drawBinning()\n      .on(\"change\", (...arg) => console.log(\"binning\", ...arg))\n\n    DomainEditor(cache.container)\n      .setConfig(config)\n      .setXDomain([\"a\", \"b\"])\n      .setYDomain([0, 200])\n      .setY2Domain([0, 300])\n      .drawDomainEditor()\n      .on(\"domainChanged\", (d) => console.log(d))\n      .on(\"domainLockToggled\", (d) => console.log(d))\n\n    BrushRangeEditor(cache.headerGroup)\n      .setConfig(config)\n      .setRangeMin(\"Jan 01, 2001\")\n      .setRangeMax(\"Jan 01, 2002\")\n      .drawRangeEditor()\n      .on(\"rangeChanged\", (d) => console.log(d))\n\n    Label(cache.container)\n      .setConfig(config)\n      .setXLabels(\"X Axis Label\")\n      .setYLabels(\"Y Axis Label\")\n      .setY2Labels(\"Y2 Axis Label\")\n      .drawLabels()\n      .on(\"axisLabelChanged\", (d) => console.log(d))\n\n    // const bar = Bar(config, cache)\n    // if (config.chartType === \"bar\") {\n    //   bar.drawBars()\n    // } else if (config.chartType === \"stackedBar\") {\n    //   bar.drawStackedBars()\n    // }\n\n    triggerIntroAnimation()\n\n    return this\n  }\n\n  function setData (_data) {\n    cache.data = cloneData(_data[keys.SERIES])\n    const cleanedData = cleanData(_data)\n    cache.dataBySeries = cleanedData.dataBySeries\n    cache.dataByKey = cleanedData.dataByKey\n\n    render()\n\n    return this\n  }\n\n  function cleanData (_data) {\n    const dataBySeries = cloneData(_data[keys.SERIES])\n    const flatData = []\n\n    // Normalize dataBySeries\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES] = sortData(serie[keys.VALUES], config.keyType)\n      serie[keys.VALUES].forEach((d) => {\n        d[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        d[keys.VALUE] = Number(d[keys.VALUE])\n      })\n    })\n\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES].forEach((d) => {\n        const dataPoint = {}\n        dataPoint[keys.LABEL] = serie[keys.LABEL]\n        dataPoint[keys.GROUP] = serie[keys.GROUP]\n        dataPoint[keys.ID] = serie[keys.ID]\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        dataPoint[keys.VALUE] = d[keys.VALUE]\n        flatData.push(dataPoint)\n      })\n    })\n\n    cache.flatDataSorted = sortData(flatData, config.keyType)\n\n    const dataByKey = d3.nest()\n      .key(getKey)\n      .entries(cache.flatDataSorted)\n      .map((d) => {\n        const dataPoint = {}\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key\n        dataPoint[keys.SERIES] = d.values\n        return dataPoint\n      })\n\n    const allGroupKeys = dataBySeries.map(getGroup)\n    cache.groupKeys = getUnique(allGroupKeys)\n\n    return {dataBySeries, dataByKey}\n  }\n\n  function triggerIntroAnimation () {\n    if (config.isAnimated) {\n      cache.maskingRectangle = cache.svg.d3.select(\".masking-rectangle\")\n        .attr(\"width\", cache.chartWidth - 2)\n        .attr(\"height\", cache.chartHeight)\n        .attr(\"x\", config.margin.left + 1)\n        .attr(\"y\", config.margin.top)\n\n      cache.maskingRectangle.transition()\n        .duration(config.animationDuration)\n        .ease(config.ease)\n        .attr(\"width\", 0)\n        .attr(\"x\", config.width - config.margin.right)\n        .on(\"end\", () => cache.maskingRectangle.remove())\n    }\n  }\n\n  function getNearestDataPoint (_mouseX) {\n    const keyFromInvertedX = invertScale(scales.xScale, _mouseX, config.keyType)\n    const bisectLeft = d3.bisector(getKey).left\n    const dataEntryIndex = bisectLeft(cache.dataByKey, keyFromInvertedX)\n    const dataEntryForXPosition = cache.dataByKey[dataEntryIndex]\n    let nearestDataPoint = null\n\n    if (keyFromInvertedX) {\n      nearestDataPoint = dataEntryForXPosition\n    }\n    return nearestDataPoint\n  }\n\n  function addEvents () {\n    const THROTTLE_DELAY = 20\n    const throttledDispatch = throttle((...args) => {\n      dispatcher.call(...args)\n    }, THROTTLE_DELAY)\n\n    cache.panel\n      .on(\"mouseover.dispatch\", () => {\n        dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mouseout.dispatch\", () => {\n        dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mousemove.dispatch\", () => {\n        const [mouseX, mouseY] = d3.mouse(cache.panel.node())\n        if (!cache.data) { return }\n        const xPosition = mouseX\n        const dataPoint = getNearestDataPoint(xPosition)\n\n        if (dataPoint) {\n          const dataPointXPosition = scales.xScale(dataPoint[keys.DATA])\n          throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY)\n        }\n      })\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.on(\".\", null).remove()\n  }\n\n  return {\n    render,\n    setConfig,\n    setData,\n    on,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/chart.js","export {\n\taxisBottom,\n\taxisLeft,\n\taxisRight,\n\ttimeFormat,\n\tformat,\n\tbisector,\n\textent,\n\tsum,\n\trange,\n\tmerge,\n\tnest,\n\tdispatch,\n\teaseLinear,\n\teaseQuadInOut,\n\tselect,\n\tmouse,\n\tevent,\n\ttransition,\n\trandomUniform,\n\trandomNormal,\n\ttimeDay,\n\ttimeMonth,\n\tarea,\n\tcurveCatmullRom,\n\tline,\n\tstack,\n\tstackOffsetNone,\n\tstackOrderNone,\n\tscaleTime,\n\tscalePoint,\n\tscaleBand,\n\tscaleLinear,\n\tscaleOrdinal,\n\tbrushX\n} from \"d3/build/d3\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/d3-service.js","// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.11.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function constrain(transform$$1, extent) {\n    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n    return transform$$1.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","export const mapdUI = {\n  skyBlue: \"#22A7F0\"\n}\n\nexport const mapdColors = [\n  \"#ea5545\",\n  \"#bdcf32\",\n  \"#b33dc6\",\n  \"#ef9b20\",\n  \"#87bc45\",\n  \"#f46a9b\",\n  \"#ace5c7\",\n  \"#ede15b\",\n  \"#836dc5\",\n  \"#86d87f\",\n  \"#27aeef\"\n]\n\nexport const grey = [\n  \"#F8F8FA\",\n  \"#EFF2F5\",\n  \"#D2D6DF\",\n  \"#C3C6CF\",\n  \"#ADB0B6\",\n  \"#666A73\",\n  \"#45494E\",\n  \"#363A43\",\n  \"#282C35\"\n]\n\nexport const colors = {\n  mapdUI,\n  mapdColors,\n  grey\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","export const keys = {\n  DATA: \"key\",\n  VALUE: \"value\",\n  ID: \"id\",\n  LABEL: \"label\",\n  GROUP: \"group\",\n  VALUES: \"values\",\n  SERIES: \"series\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","import {keys} from \"./constants\"\n\n/**\n * Clones the passed array of data\n * @param  {Object[]} dataToClone Data to clone\n * @return {Object[]}             Cloned data\n */\nexport function cloneData (_dataToClone) {\n  return JSON.parse(JSON.stringify(_dataToClone))\n}\n\nexport function sortData (_data, _keyType) {\n  const sortedData = cloneData(_data)\n  if (_keyType === \"time\") {\n    sortedData.forEach((d) => {\n      d[keys.DATA] = new Date(d[keys.DATA])\n    })\n    sortedData.sort((a, b) => a[keys.DATA].getTime() - b[keys.DATA].getTime())\n  } else if (_keyType === \"string\") {\n    sortedData.sort((a, b) => a[keys.DATA].localeCompare(b[keys.DATA], \"en\", {numeric: false}))\n  } else {\n    sortedData.sort((a, b) => a[keys.DATA] - b[keys.DATA])\n  }\n  return sortedData\n}\n\nexport function getUnique (arr) {\n  return [...new Set(arr)]\n}\n\nexport function invertScale (_scale, _mouseX, _keyType) {\n  if (_keyType === \"time\") {\n    return _scale.invert(_mouseX)\n  } else {\n    const bandStep = _scale.step()\n    const index = Math.round((_mouseX) / bandStep)\n    return _scale.domain()[index]\n  }\n}\n\nexport function override (a, b) {\n  const accum = {}\n  for (const x in a) {\n    if (a.hasOwnProperty(x)) {\n      accum[x] = (x in b) ? b[x] : a[x]\n    }\n  }\n  return accum\n}\n\nexport function throttle (callback, limit) {\n  let wait = false\n  let timer = null\n  return function throttleFn (...args) {\n    if (!wait) {\n      wait = true\n      clearTimeout(timer)\n      timer = setTimeout(() => {\n        wait = false\n        callback(...args)\n      }, limit)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {getUnique, override} from \"./helpers/common\"\n\nexport default function Scale () {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    height: null,\n    width: null,\n    keyType: null,\n    chartType: null,\n    colorSchema: null,\n    defaultColor: null\n  }\n\n  let data = {\n    dataByKey: null,\n    dataBySeries: null,\n    flatDataSorted: null,\n    groupKeys: null\n  }\n\n  const getID = (d) => d[keys.ID]\n  const getKey = (d) => d[keys.DATA]\n  const getValue = (d) => d[keys.VALUE]\n\n  function buildXScale (_allKeys) {\n    const chartWidth = config.width - config.margin.left - config.margin.right\n    let datesExtent = null\n    let xScale = null\n    if (config.keyType === \"time\") {\n      datesExtent = d3.extent(_allKeys)\n      xScale = d3.scaleTime()\n    } else {\n      datesExtent = _allKeys\n      xScale = (config.chartType === \"bar\" || config.chartType === \"stackedBar\") ? d3.scaleBand() : d3.scalePoint()\n      xScale.padding(0)\n    }\n\n    xScale.domain(datesExtent)\n      .range([0, chartWidth])\n\n    return xScale\n  }\n\n  function buildYScale (_extent) {\n    const chartHeight = config.height - config.margin.top - config.margin.bottom\n    const yScale = d3.scaleLinear()\n        .domain(_extent)\n        .rangeRound([chartHeight, 0])\n        .nice()\n\n    return yScale\n  }\n\n  function buildColorScale () {\n    const ids = data.dataBySeries.map(getID)\n    const colorScale = d3.scaleOrdinal()\n        .range(config.colorSchema.map((d) => d.value))\n        .domain(config.colorSchema.map((d, i) => d.key || ids[i]))\n        .unknown(config.defaultColor)\n\n    return colorScale\n  }\n\n  function splitByGroups () {\n    const groups = {}\n    data.dataBySeries.forEach((d) => {\n      const key = d[keys.GROUP]\n      if (!groups[key]) {\n        groups[key] = {\n          allValues: [],\n          allKeys: []\n        }\n      }\n      groups[key].allValues = groups[key].allValues.concat(d[keys.VALUES].map(getValue))\n      groups[key].allKeys = groups[key].allKeys.concat(d[keys.VALUES].map(getKey))\n    })\n\n    return groups\n  }\n\n  function getStackedScales () {\n    const allStackHeights = data.dataByKey.map((d) => d3.sum(d.series.map((dB) => dB.value)))\n\n    const stackData = data.dataByKey.map((d) => {\n      const points = {\n        key: d[keys.DATA]\n      }\n      d.series.forEach((dB) => {\n        points[dB[keys.ID]] = dB[keys.VALUE]\n      })\n\n      return points\n    })\n\n    const stack = d3.stack()\n      .keys(data.dataBySeries.map(getID))\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone)\n\n    const valuesExtent = d3.extent(allStackHeights)\n\n    const allKeys = data.flatDataSorted.map(getKey)\n    const allUniqueKeys = getUnique(allKeys)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale([0, valuesExtent[1]])\n\n    return {\n      stackData,\n      stack,\n      xScale,\n      yScale,\n      colorScale\n    }\n  }\n\n  function getHorizontalScales () {\n    const groups = splitByGroups()\n\n    const hasSecondAxis = data.groupKeys.length > 1\n\n    const groupAxis1 = groups[data.groupKeys[0]]\n    const allUniqueKeys = groupAxis1.allKeys\n    const valuesExtent = d3.extent(groupAxis1.allValues)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale(valuesExtent)\n\n    let yScale2 = null\n    if (hasSecondAxis) {\n      const groupAxis2 = groups[data.groupKeys[1]]\n      const valuesExtent2 = d3.extent(groupAxis2.allValues)\n\n      yScale2 = yScale.copy()\n        .domain(valuesExtent2)\n    }\n\n    return {\n      hasSecondAxis,\n      xScale,\n      yScale,\n      colorScale,\n      yScale2\n    }\n  }\n\n  function getScales () {\n    if (config.chartType === \"stackedBar\"\n      || config.chartType === \"stackedArea\") {\n      return getStackedScales()\n    } else {\n      return getHorizontalScales()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setData,\n    getScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/scale.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Line (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    yScale2: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n  }\n\n  function drawLines () {\n    const seriesLine = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale(d[keys.VALUE]))\n\n    const seriesLine2 = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale2(d[keys.VALUE]))\n        .curve(d3.curveCatmullRom)\n\n    const lines = cache.svg.selectAll(\".mark.line\")\n        .data(data.dataBySeries)\n\n    lines.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"line\"].join(\" \"))\n      .merge(lines)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === data.groupKeys[0]) {\n          return seriesLine(d[keys.VALUES])\n        } else {\n          return seriesLine2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", \"none\")\n\n    lines.exit().remove()\n  }\n\n  function drawAreas () {\n    const seriesArea = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n\n    const seriesArea2 = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale2(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n        .curve(d3.curveCatmullRom)\n\n    const areas = cache.svg.selectAll(\".mark.area\")\n        .data(data.dataBySeries)\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === data.groupKeys[0]) {\n          return seriesArea(d[keys.VALUES])\n        } else {\n          return seriesArea2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", getColor)\n\n    areas.exit().remove()\n  }\n\n  function drawStackedAreas () {\n    const seriesLine = d3.area()\n        .x((d) => scales.xScale(d.data[keys.DATA]))\n        .y0((d) => scales.yScale(d[0]))\n        .y1((d) => scales.yScale(d[1]))\n\n    const areas = cache.svg.selectAll(\".mark.stacked-area\")\n        .data(data.stack(data.stackData))\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"stacked-area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", seriesLine)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", (d) => scales.colorScale(d.key))\n\n    areas.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"area\") {\n      drawAreas()\n    } else if (config.chartType === \"line\") {\n      drawLines()\n    } else if (config.chartType === \"stackedArea\") {\n      drawStackedAreas()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","import {keys} from \"./helpers/constants\"\n\nexport default function Bar (config, cache) {\n\n  const getColor = (d) => cache.colorScale(d[keys.ID])\n\n  function drawBars () {\n    const bars = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark\")\n        .data(cache.dataBySeries[0].values)\n\n    bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", () => [\"mark\", \"rect\"].join(\" \"))\n      .merge(bars)\n      .attr(\"x\", (d) => cache.xScale(d[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[keys.VALUE]))\n      .attr(\"width\", () => cache.xScale.bandwidth())\n      .attr(\"height\", (d) => cache.chartHeight - cache.yScale(d[keys.VALUE]))\n      .style(\"stroke\", \"white\")\n      .style(\"fill\", getColor)\n\n    bars.exit().remove()\n  }\n\n  function drawStackedBars () {\n\n    const stackedBarGroups = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark-group\")\n        .data(cache.stack(cache.stackData))\n\n    const stackedUpdate = stackedBarGroups.enter()\n      .append(\"g\")\n      .attr(\"class\", \"mark-group\")\n      .merge(stackedBarGroups)\n      .attr(\"fill\", (d) => cache.colorScale(d.key))\n      .attr(\"stroke\", \"white\")\n\n    stackedBarGroups.exit().remove()\n\n    const stackedBars = stackedUpdate.selectAll(\".mark\")\n        .data((d) => d)\n\n    stackedBars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark\")\n      .merge(stackedBars)\n      .attr(\"x\", (d) => cache.xScale(d.data[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[1]))\n      .attr(\"height\", (d) => cache.yScale(d[0]) - cache.yScale(d[1]))\n      .attr(\"width\", cache.xScale.bandwidth())\n\n    stackedBars.exit().remove()\n  }\n\n  return {\n    drawBars,\n    drawStackedBars\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Axis (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    tickSizes: null,\n    tickPadding: null,\n    xAxisFormat: null,\n    keyType: null,\n    yTicks: null,\n    yAxisFormat: null,\n    xAxisPadding: null,\n    axisTransitionDuration: null,\n    ease: null,\n    grid: null,\n    hoverZoneSize: 30\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null\n  }\n\n  const cache = {\n    container: _container,\n    background: null,\n    chartHeight: null,\n    chartWidth: null,\n    xAxis: null,\n    yAxis: null,\n    yAxis2: null,\n    horizontalGridLines: null,\n    verticalGridLines: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"axis-group\", true)\n          .style(\"pointer-events\", \"none\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis x\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y2\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function buildAxis () {\n    cache.xAxis = d3.axisBottom(scales.xScale)\n        .tickSize(config.tickSizes, 0)\n        .tickPadding(config.tickPadding)\n\n    if (config.keyType === \"time\") {\n      const formatter = d3.timeFormat(config.xAxisFormat)\n      cache.xAxis.tickFormat(formatter)\n    } else {\n      cache.xAxis.tickValues(scales.xScale.domain().filter((d, i) => !(i % config.tickSkip)))\n    }\n\n    cache.yAxis = d3.axisLeft(scales.yScale)\n        .ticks(config.yTicks)\n        .tickSize([config.tickSizes])\n        .tickPadding(config.tickPadding)\n        .tickFormat(d3.format(config.yAxisFormat))\n\n    if (scales.hasSecondAxis) {\n      cache.yAxis2 = d3.axisRight(scales.yScale2)\n          .ticks(config.yTicks)\n          .tickSize([config.tickSizes])\n          .tickPadding(config.tickPadding)\n          .tickFormat(d3.format(config.yAxisFormat))\n    }\n  }\n\n  function drawAxis () {\n    buildSVG()\n    buildAxis()\n\n    cache.svg.select(\".axis.x\")\n        .attr(\"transform\", `translate(0, ${cache.chartHeight})`)\n        .call(cache.xAxis)\n\n    cache.svg.select(\".axis.y\")\n        .attr(\"transform\", `translate(${-config.xAxisPadding.left}, 0)`)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .ease(config.ease)\n        .call(cache.yAxis)\n\n    if (scales.hasSecondAxis) {\n      cache.svg.select(\".axis.y2\")\n          .attr(\"transform\", `translate(${cache.chartWidth - config.xAxisPadding.right}, 0)`)\n          .transition()\n          .duration(config.axisTransitionDuration)\n          .ease(config.ease)\n          .call(cache.yAxis2)\n    }\n\n    return this\n  }\n\n  function drawGridLines () {\n    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.horizontal-grid-line\")\n          .data(scales.yScale.ticks(config.yTicks))\n\n      cache.horizontalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"horizontal-grid-line\")\n        .merge(cache.horizontalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"x1\", (-config.xAxisPadding.left))\n        .attr(\"x2\", cache.chartWidth)\n        .attr(\"y1\", scales.yScale)\n        .attr(\"y2\", scales.yScale)\n\n      cache.horizontalGridLines.exit().remove()\n    }\n\n    if (config.grid === \"vertical\" || config.grid === \"full\") {\n      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.vertical-grid-line\")\n          .data(cache.xAxis.tickValues())\n\n      cache.verticalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"vertical-grid-line\")\n        .merge(cache.verticalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", cache.chartHeight)\n        .attr(\"x1\", scales.xScale)\n        .attr(\"x2\", scales.xScale)\n\n      cache.verticalGridLines.exit().remove()\n    }\n\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    drawAxis,\n    drawGridLines\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/axis.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override} from \"./helpers/common\"\n\nexport default function Tooltip (_container) {\n\n  let config = {\n    margin: {\n      top: 2,\n      right: 2,\n      bottom: 2,\n      left: 2\n    },\n    width: 250,\n    height: 45,\n\n    valueFormat: \".2f\",\n\n    tooltipMaxTopicLength: 170,\n    tooltipBorderRadius: 3,\n\n    // Animations\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n\n    titleHeight: 32,\n    elementHeight: 24,\n    padding: 8,\n    dotRadius: 4,\n\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: [],\n\n    // from chart\n    keyType: \"time\"\n  }\n\n  let scales = {\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    chartWidth: null,\n    chartHeight: null,\n    tooltipDivider: null,\n    tooltipBody: null,\n    tooltipTitle: null,\n    tooltipBackground: null,\n    xPosition: null,\n    yPosition: null,\n    content: null,\n    title: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"tooltip-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"pointer-events\", \"none\")\n\n      cache.tooltipTitle = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-title\")\n\n      cache.tooltipBody = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-body\")\n    }\n  }\n\n  function calculateTooltipPosition (_mouseX, _mouseY) {\n    const OFFSET = 4\n    const tooltipSize = cache.root.node().getBoundingClientRect()\n    const tooltipX = _mouseX\n    let avoidanceOffset = OFFSET\n    const tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2\n\n    if (_mouseX > (cache.chartWidth / 2)) {\n      avoidanceOffset = -tooltipSize.width - OFFSET\n    }\n\n    return [tooltipX + avoidanceOffset, tooltipY]\n  }\n\n  function move () {\n    cache.root.transition()\n      .duration(config.mouseChaseDuration)\n      .ease(config.tooltipEase)\n      .style(\"top\", `${cache.yPosition}px`)\n      .style(\"left\", `${cache.xPosition + config.margin.left}px`)\n    return this\n  }\n\n  function drawContent () {\n    const content = cache.content\n    const formatter = d3.format(config.valueFormat)\n\n    const tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\")\n        .data(content)\n    const tooltipItemsUpdate = tooltipItems.enter().append(\"div\")\n      .attr(\"class\", \"tooltip-item\")\n      .merge(tooltipItems)\n    tooltipItems.exit().remove()\n\n    const tooltipItem = tooltipItemsUpdate.selectAll(\".section\")\n      .data((d) => {\n        const legendData = [\n          {key: \"color\", value: scales.colorScale(d[keys.ID])},\n          {key: \"label\", value: d[keys.LABEL]}\n        ]\n        if (typeof d[keys.VALUE] !== \"undefined\") {\n          legendData.push({key: \"value\", value: d[keys.VALUE]})\n        }\n        return legendData\n      })\n    tooltipItem.enter().append(\"div\")\n      .merge(tooltipItem)\n      .attr(\"class\", (d) => [\"section\", d.key].join(\" \"))\n      .each(function each (d) {\n        const selection = d3.select(this)\n        if (d.key === \"color\") {\n          selection.style(\"background\", d.value)\n        } else if (d.key === \"value\") {\n          selection.html(formatter(d.value))\n        } else {\n          selection.html(d.value)\n        }\n      })\n    tooltipItem.exit().remove()\n    return this\n  }\n\n  function drawTitle () {\n    let title = cache.title\n    if (config.keyType === \"time\") {\n      title = d3.timeFormat(config.dateFormat)(_title)\n    }\n\n    cache.tooltipTitle.html(title)\n    return this\n  }\n\n  function drawTooltip () {\n    buildSVG()\n    drawTitle()\n    drawContent()\n    move()\n    return this\n  }\n\n  function setupContent (_series) {\n    let series = _series\n\n    if (config.seriesOrder.length) {\n      series = sortByTopicsOrder(_series)\n    } else if (_series.length && _series[0][keys.LABEL]) {\n      series = sortByAlpha(_series)\n    }\n\n    cache.content = series\n    return this\n  }\n\n  function sortByTopicsOrder (_series, _order = seriesOrder) {\n    return _order.map((orderName) => _series.filter(({name}) => name === orderName)[0])\n  }\n\n  function sortByAlpha (_series) {\n    const series = cloneData(_series)\n    return series.sort((a, b) => a[keys.LABEL].localeCompare(b[keys.LABEL], \"en\", {numeric: false}))\n  }\n\n  function hide () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"none\")\n    return this\n  }\n\n  function show () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"block\")\n    return this\n  }\n\n  function setupTooltip (_dataPoint, _xPosition, _yPosition) {\n    buildSVG()\n    const [tooltipX, tooltipY] = calculateTooltipPosition(_xPosition, _yPosition)\n    setXPosition(tooltipX)\n    setYPosition(tooltipY)\n    setTitle(_dataPoint[keys.DATA])\n    setupContent(_dataPoint[keys.SERIES])\n\n    drawTooltip()\n    return this\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.tooltip\", show)\n      .on(\"mouseMovePanel.tooltip\", setupTooltip)\n      .on(\"mouseOutPanel.tooltip\", hide)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setTitle (_title) {\n    cache.title = _title\n    return this\n  }\n\n  function setXPosition (_xPosition) {\n    cache.xPosition = _xPosition\n    return this\n  }\n\n  function setYPosition (_yPosition) {\n    cache.yPosition = _yPosition\n    return this\n  }\n\n  function setContent (_content) {\n    cache.content = _content\n    return this\n  }\n\n  return {\n    bindEvents,\n    setXPosition,\n    setYPosition,\n    setContent,\n    setTitle,\n    hide,\n    show,\n    drawTooltip,\n    setConfig,\n    setScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","import Tooltip from \"./tooltip\"\n\nexport default function Legend (_container) {\n  return Tooltip(_container)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData, override} from \"./helpers/common\"\n\nexport default function Brush (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null\n  }\n\n  let scales = {\n    xScale: null\n  }\n\n  const cache = {\n    container: _container,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"brush-group\", true)\n    }\n  }\n\n  function extractBrushDimension (_data) {\n    const merged = d3.merge(_data.map((d) => d[keys.VALUES]))\n    return sortData(merged, config.keyType)\n  }\n\n  function buildBrush () {\n    cache.brush = cache.brush || d3.brushX()\n        .on(\"start\", handleBrushStart)\n        .on(\"brush\", handleBrushMove)\n        .on(\"end\", handleBrushEnd)\n\n    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]])\n\n    cache.chartBrush = cache.svg.call(cache.brush)\n\n    cache.chartBrush.selectAll(\".brush-rect\")\n      .attr(\"height\", cache.chartHeight)\n  }\n\n  function getDataExtent () {\n    const selection = d3.event.selection\n    const dataExtent = selection.map((d) => invertScale(scales.xScale, d, config.keyType))\n    return dataExtent\n  }\n\n  function handleBrushStart () {\n    dispatcher.call(\"brushStart\", this, getDataExtent(), config)\n  }\n\n  function handleBrushMove () {\n    dispatcher.call(\"brushMove\", this, getDataExtent(), config)\n  }\n\n  function handleBrushEnd () {\n    // Only transition after input, ignore empty selections.\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n\n    const dataExtent = getDataExtent()\n\n    d3.select(this)\n      .transition()\n      .call(d3.event.target.move, dataExtent.map(scales.xScale))\n\n    dispatcher.call(\"brushEnd\", this, dataExtent, config)\n  }\n\n  function drawBrush () {\n    buildSVG()\n\n    if (data.dataBySeries) {\n      cache.data = extractBrushDimension(cloneData(data.dataBySeries))\n      buildBrush()\n    }\n\n    return this\n  }\n\n  // function setBrushByPercentages (_a, _b) {\n  //   const x0 = _a * cache.chartWidth\n  //   const x1 = _b * cache.chartWidth\n\n  //   brush.move(chartBrush, [x0, x1])\n  // }\n\n  // function setBrushByDates (_dateA, _dateB) {\n  //   const x0 = cache.xScale(new Date(_dateA))\n  //   const x1 = cache.xScale(new Date(_dateB))\n\n  //   cache.brush.move(cache.chartBrush, [x0, x1])\n  // }\n\n  // function updateHandlers (_dateExtent) {\n  //   if (_dateExtent === null) {\n  //     cache.handle.attr(\"display\", \"none\")\n  //   } else {\n  //     cache.handle\n  //       .attr(\"display\", null)\n  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n  //   }\n  // }\n\n  // API\n\n  /**\n   * Gets or Sets the dateRange for the selected part of the brush\n   * @param  {String[]} _x Desired dateRange for the graph\n   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n   * @public\n   */\n  // function dateRange (_x) {\n  //   if (!arguments.length) {\n  //     return dateRange\n  //   }\n  //   dateRange = _x\n\n  //   if (Array.isArray(dateRange)) {\n  //     setBrushByDates(...dateRange)\n  //   }\n\n  //   return this\n  // }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setData,\n    setScales,\n    drawBrush\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Hover (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    dotRadius: null\n  }\n\n  let scales = {\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"hover\")\n\n  // function init () {\n  //   cache.chart.on(\"mouseOver.hover\", show)\n  //     .on(\"mouseMove.hover\", update)\n  //     .on(\"mouseOut.hover\", hide)\n\n  //   render()\n  //   hide()\n  // }\n  // init()\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"hover-group\", true)\n          .style(\"pointer-events\", \"none\")\n    }\n\n    // cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function drawHover (_dataPoint, _dataPointXPosition) {\n    buildSVG()\n\n    if (_dataPointXPosition) {\n      moveVerticalMarker(_dataPointXPosition)\n      drawVerticalMarker()\n      if (config.chartType === \"stackedLine\"\n        || config.chartType === \"stackedArea\"\n        || config.chartType === \"stackedBar\") {\n        highlightStackedDataPoints(_dataPoint)\n      } else {\n        highlightDataPoints(_dataPoint)\n      }\n      dispatcher.call(\"hover\", this, _dataPoint)\n    }\n  }\n\n  function show () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"block\")\n\n    return this\n  }\n\n  function hide () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"none\")\n\n    return this\n  }\n\n  function highlightDataPoints (_dataPoint) {\n    const dotsData = _dataPoint[keys.SERIES]\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawHighlightDataPoints (_dotsData) {\n    const dots = cache.svg.selectAll(\".dot\")\n        .data(_dotsData)\n\n    dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .merge(dots)\n      .attr(\"cy\", (d) => {\n        // if (d[keys.GROUP] === chartCache.groupKeys[0]) {\n        if (d[keys.GROUP] === 0) {\n          return scales.yScale(d[keys.VALUE])\n        } else {\n          return scales.yScale2(d[keys.VALUE])\n        }\n      })\n      .attr(\"r\", config.dotRadius)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", getColor)\n\n    dots.exit().remove()\n  }\n\n  function highlightStackedDataPoints (_dataPoint) {\n    const stackedDataPoint = {key: _dataPoint[keys.DATA]}\n    _dataPoint.series.forEach((d) => {\n      const id = d[keys.ID]\n      stackedDataPoint[id] = d[keys.VALUE]\n    })\n\n    // const dotsStack = data.stack([stackedDataPoint])\n    // const dotsData = dotsStack.map((d) => {\n    //   const dot = {value: d[0][1]}\n    //   dot[keys.ID] = d.key\n    //   return dot\n    // })\n\n    // drawHighlightDataPoints(dotsData)\n  }\n\n  function drawVerticalMarker () {\n    const verticalMarkerLine = cache.svg.selectAll(\"line\")\n        .data([0])\n\n    verticalMarkerLine.enter()\n      .append(\"line\")\n      .classed(\"vertical-marker\", true)\n      .merge(verticalMarkerLine)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", cache.chartHeight)\n\n    verticalMarkerLine.exit().remove()\n  }\n\n  function moveVerticalMarker (_verticalMarkerXPosition) {\n    cache.svg.attr(\"transform\", `translate(${[_verticalMarkerXPosition, 0]})`)\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.hover\", show)\n      .on(\"mouseMovePanel.hover\", drawHover)\n      .on(\"mouseOutPanel.hover\", hide)\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    bindEvents,\n    highlightDataPoints,\n    highlightStackedDataPoints,\n    drawVerticalMarker,\n    moveVerticalMarker,\n    on\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/hover.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exclusiveToggle, toggleOnOff} from \"./interactors\"\n\nexport default function Binning (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    autoLabel: \"auto\",\n    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n    label: \"BIN:\"\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    autoItem: null,\n    binningItems: null,\n    selectedBin: null,\n    isAuto: true\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"change\")\n\n  function buildSVG () {\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"binning-group\")\n          .style(\"float\", \"left\")\n\n      cache.label = cache.root.append(\"div\")\n          .attr(\"class\", \"label\")\n          .text(config.label)\n\n      cache.autoItem = cache.root.append(\"div\")\n          .attr(\"class\", \"item item-auto toggleOnOff\")\n          .on(\"click.select\", function click (d) {\n            const isSelected = this.classList.contains(\"selected\")\n            const toggled = !isSelected\n            setAuto(toggled)\n            drawBinning()\n            dispatcher.call(\"change\", this, d, {isSelected: toggled})\n          })\n          .text(config.autoLabel)\n\n      cache.binningItems = cache.root.selectAll(\".toggleExclusive\")\n          .data(config.exclusiveToggle)\n          .enter().append(\"div\")\n          .attr(\"class\", (d) => `item item-${d} toggleExclusive`)\n          .on(\"click.select\", function click (d) {\n            setBinning(d)\n            drawBinning()\n            const isSelected = this.classList.contains(\"selected\")\n            dispatcher.call(\"change\", this, d, {isSelected})\n          })\n          .text((d) => d)\n    }\n\n    const LINE_HEIGHT = 20\n    cache.root\n      .style(\"top\", config.margin.top - LINE_HEIGHT)\n      .style(\"left\", config.margin.left)\n\n    changeBinning(cache.selectedBin)\n    toggleAuto(cache.isAuto)\n  }\n\n  function changeBinning (_selectedItemName) {\n    if (_selectedItemName) {\n      exclusiveToggle(cache.binningItems, `.item-${_selectedItemName}`)\n    }\n  }\n\n  function toggleAuto (_shouldBeSelected) {\n    cache.autoItem\n      .classed(\"selected\", _shouldBeSelected)\n      .classed(\"dimmed\", !_shouldBeSelected)\n  }\n\n  function drawBinning () {\n    buildSVG()\n    return this\n  }\n\n  function setBinning (_selectedBin) {\n    cache.selectedBin = _selectedBin\n    return this\n  }\n\n  function setAuto (_isAuto) {\n    cache.isAuto = _isAuto\n    return this\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.root.remove()\n  }\n\n  return {\n    on,\n    setConfig,\n    destroy,\n    drawBinning,\n    setBinning,\n    setAuto\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/binning.js","import * as d3 from \"./helpers/d3-service\"\n\n/**\n * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n * @param  {Number} selector A valid selector of the elements to toggle\n * @example\n * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n *\n * @return {void}\n */\n\nexport function toggleOnOff (selector, bool) {\n  const shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool\n  d3.select(selector)\n    .classed(\"selected\", shouldBeSelected)\n    .classed(\"dimmed\", !shouldBeSelected)\n}\n\nexport function exclusiveToggle (othersSelection, selector) {\n  return toggle(othersSelection, selector, {\n    toggleOffIsEnabled: false,\n    toggleMultipleIsEnabled: false\n  })\n}\n\nexport function toggle (othersSelection, selector, options = {toggleOffIsEnabled: false, toggleMultipleIsEnabled: false}) {\n  /* eslint-disable consistent-this */\n  let hasSelection = false\n  const selectionNode = document.querySelector(selector)\n\n  othersSelection.classed(\"selected\", function selectedClass () {\n    const isSelected = this.classList.contains(\"selected\")\n    const hasJustBeenClicked = this === selectionNode\n    let shouldBeSelected = false\n\n    if (hasJustBeenClicked) {\n      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true\n    } else {\n      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false\n    }\n\n    hasSelection = hasSelection || shouldBeSelected\n    return shouldBeSelected\n  })\n\n  othersSelection.classed(\"dimmed\", function dimmedClass () {\n    return hasSelection && !this.classList.contains(\"selected\")\n  })\n  /* eslint-enable consistent-this */\n}\n\nexport function blurOnEnter (selection) {\n  selection.on(\"keypress.enter\", function keypress () {\n    if (d3.event.key === \"Enter\") { this.blur() }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/interactors.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function DomainEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xHitZone: null,\n    yHitZone: null,\n    y2HitZone: null,\n    yMaxInput: null,\n    yMinInput: null,\n    yLockIcon: null,\n    y2MaxInput: null,\n    y2MinInput: null,\n    y2LockIcon: null,\n    xMinInput: null,\n    xMaxInput: null,\n    xLockIcon: null,\n    chartWidth: null,\n    chartHeight: null,\n    xDomain: null,\n    yDomain: null,\n    y2Domain: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"domainChanged\", \"domainLockToggled\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"domain-input-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n\n      // hit zones\n      cache.xHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone x\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showXEditor)\n          .on(\"mouseout.dispatch\", hideXEditor)\n\n      cache.yHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showYEditor)\n          .on(\"mouseout.dispatch\", hideYEditor)\n\n      cache.y2HitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y2\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showY2Editor)\n          .on(\"mouseout.dispatch\", hideY2Editor)\n\n      // y input group\n      cache.yMaxInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChanged\", this, {value: this.innerText, axis: \"y\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.yMinInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChanged\", this, {value: this.innerText, axis: \"y\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.yLockIcon = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggled\", this, {isLocked: !isLocked, axis: \"y\"})\n        })\n\n      // y2 input group\n      cache.y2MaxInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChanged\", this, {value: this.innerText, axis: \"y2\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.y2MinInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChanged\", this, {value: this.innerText, axis: \"y2\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.y2LockIcon = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y2\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggled\", this, {isLocked: !isLocked, axis: \"y2\"})\n        })\n\n      // x input group\n      cache.xMinInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChanged\", this, {value: this.innerText, axis: \"x\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.xMaxInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChanged\", this, {value: this.innerText, axis: \"x\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.xLockIcon = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock x\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggled\", this, {isLocked: !isLocked, axis: \"x\"})\n        })\n\n      hideYEditor()\n      hideY2Editor()\n      hideXEditor()\n    }\n\n    const HOVER_ZONE_SIZE = 40\n    const LOCK_SIZE = 12\n    const INPUT_HEIGHT = 12\n    const PADDING = 4\n    const INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING\n\n    cache.xHitZone\n      .style(\"width\", `${cache.chartWidth + HOVER_ZONE_SIZE * 2}px`)\n      .style(\"height\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top + cache.chartHeight}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.yHitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.y2HitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left + cache.chartWidth}px`)\n\n    cache.yMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .text(Array.isArray(cache.yDomain)\n          && !isNaN(cache.yDomain[1]) ? cache.yDomain[1] : \"\")\n\n    cache.yMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .text(Array.isArray(cache.yDomain)\n            && !isNaN(cache.yDomain[0]) ? cache.yDomain[0] : \"\")\n\n    cache.yLockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.y2MaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(Array.isArray(cache.y2Domain)\n          && !isNaN(cache.y2Domain[1]) ? cache.y2Domain[1] : \"\")\n\n    cache.y2MinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(Array.isArray(cache.y2Domain)\n          && !isNaN(cache.y2Domain[0]) ? cache.y2Domain[0] : \"\")\n\n    cache.y2LockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.xMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE}px`)\n      .text(Array.isArray(cache.xDomain)\n          && typeof (cache.xDomain[0]) !== \"undefined\" ? cache.xDomain[0] : \"\")\n\n    cache.xMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH}px`)\n      .text(Array.isArray(cache.xDomain)\n          && typeof (cache.xDomain[1]) !== \"undefined\" ? cache.xDomain[1] : \"\")\n\n    cache.xLockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth}px`)\n  }\n\n  function showYEditor () {\n    cache.yHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideYEditor () {\n    cache.yHitZone.style(\"opacity\", \"0\")\n  }\n\n  function showY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"0\")\n  }\n\n  function showXEditor () {\n    cache.xHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideXEditor () {\n    cache.xHitZone.style(\"opacity\", \"0\")\n  }\n\n  function drawDomainEditor () {\n    buildSVG()\n    return this\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setXDomain (_xDomain) {\n    cache.xDomain = _xDomain\n    return this\n  }\n\n  function setYDomain (_yDomain) {\n    cache.yDomain = _yDomain\n    return this\n  }\n\n  function setY2Domain (_y2Domain) {\n    cache.y2Domain = _y2Domain\n    return this\n  }\n\n  function setXLock (_xLock) {\n    cache.xLock = _xLock\n    return this\n  }\n\n  function setYLock (_yLock) {\n    cache.yLock = _yLock\n    return this\n  }\n\n  function setY2Lock (_y2Lock) {\n    cache.y2Lock = _y2Lock\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXDomain,\n    setYDomain,\n    setY2Domain,\n    setXLock,\n    setYLock,\n    setY2Lock,\n    drawDomainEditor\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/domain-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function BrushRangeEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    inputMin: null,\n    inputMax: null,\n    rangeMin: null,\n    rangeMax: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"rangeChanged\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"brush-range-input-group\")\n          .style(\"top\", 0)\n\n      cache.inputMax = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input max\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMax = cache.inputMax.text()\n          dispatcher.call(\"rangeChanged\", this, {value: cache.rangeMax, type: \"max\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n\n      cache.root.append(\"div\")\n        .attr(\"class\", \"separator\")\n        .text(\"-\")\n        .style(\"float\", \"right\")\n\n      cache.inputMin = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input min\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMin = cache.inputMin.text()\n          dispatcher.call(\"rangeChanged\", this, {value: cache.rangeMin, type: \"min\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n    }\n\n    cache.inputMin.text(cache.rangeMin || \"\")\n    cache.inputMax.text(cache.rangeMax || \"\")\n  }\n\n  function drawRangeEditor () {\n    buildSVG()\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setRangeMin (_rangeMin) {\n    cache.rangeMin = _rangeMin\n    return this\n  }\n\n  function setRangeMax (_rangeMax) {\n    cache.rangeMax = _rangeMax\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    drawRangeEditor,\n    setRangeMin,\n    setRangeMax\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush-range-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Label (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xAxisLabel: null,\n    yAxisLabel: null,\n    y2AxisLabel: null,\n    xLabel: null,\n    yLabel: null,\n    y2Label: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"axisLabelChanged\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"label-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n          .style(\"white-space\", \"nowrap\")\n\n      cache.xAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label x\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          dispatcher.call(\"axisLabelChanged\", this, {value: this.innerText, type: \"x\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%)\")\n\n      cache.yAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          dispatcher.call(\"axisLabelChanged\", this, {value: this.innerText, type: \"y\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"left\", 0)\n        .style(\"transform\", \"translate(-50%) rotate(-90deg)\")\n\n      cache.y2AxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y2\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          dispatcher.call(\"axisLabelChanged\", this, {value: this.innerText, type: \"y2\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%) rotate(90deg)\")\n    }\n\n    cache.xAxisLabel\n        .text(config.xLabel)\n        .style(\"top\", function top () {\n          const textHeight = this.getBoundingClientRect().height\n          return `${config.height - textHeight}px`\n        })\n        .style(\"left\", `${config.margin.left + cache.chartWidth / 2}px`)\n\n    cache.yAxisLabel\n      .text(config.yLabel)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${textWidth / 2}px`\n      })\n\n    cache.y2AxisLabel\n      .text(config.y2Label)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${config.width - textWidth / 2}px`\n      })\n  }\n\n  function drawLabels () {\n    buildSVG()\n    return this\n  }\n\n  function setXLabels (_xLabel) {\n    config.xLabel = _xLabel\n    return this\n  }\n\n  function setYLabels (_yLabel) {\n    config.yLabel = _yLabel\n    return this\n  }\n\n  function setY2Labels (_y2Label) {\n    config.y2Label = _y2Label\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setlabels (_labels) {\n\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXLabels,\n    setYLabels,\n    setY2Labels,\n    drawLabels\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/label.js","import * as d3 from \"./helpers/d3-service\"\nexport {bisector, extent, sum, range, merge} from \"d3-array\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData} from \"./helpers/common\"\n\nexport default function DataManager () {\n  /* eslint-disable no-magic-numbers */\n  let config = {\n    keyType: \"number\", // number, string, time,\n    range: [0, 100],\n    pointCount: 200,\n    groupCount: 2,\n    lineCount: 4\n  }\n  const cache = {\n    data: null,\n    baseDate: null\n  }\n\n  function generateRandomString (_length) {\n    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5)\n  }\n\n  function generateSeries (_dataKeys, _range, _allowNegative) {\n    let value = d3.randomUniform(..._range)()\n    const variabilityRatio = 50\n    const randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio\n    const rnd = d3.randomNormal(0, 1)\n    return _dataKeys.map((d) => {\n      value = value + rnd() * randomWalkStepSize\n      if (!_allowNegative && value < randomWalkStepSize) {\n        value = value + randomWalkStepSize\n      }\n      return {\n        value,\n        key: config.keyType === \"time\" ? d.toISOString() : d\n      }\n    })\n  }\n\n  function generateTestDataset () {\n    let dataKeys = null\n    if (config.keyType === \"time\") {\n      cache.baseDate = new Date()\n      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate))\n    } else if (config.keyType === \"string\") {\n      dataKeys = d3.range(0, config.pointCount).map(() => generateRandomString())\n      dataKeys.sort((a, b) => a.localeCompare(b, \"en\", {numeric: false}))\n    } else if (config.keyType === \"number\") {\n      dataKeys = d3.range(0, config.pointCount).map((d, i) => i)\n    }\n\n    const series = d3.range(config.lineCount).map((d) => ({\n      label: `Label ${d}`,\n      id: d,\n      group: d < config.groupCount ? d : 0,\n      values: generateSeries(dataKeys, config.range)\n    }))\n\n    cache.data = {series}\n\n    // console.log(\"generated data\", cache.data)\n\n    return cache.data\n  }\n\n  function filterByKey (_extent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      const values = series[keys.VALUES]\n      const allKeys = values.map(d => d[keys.DATA])\n      const extentMinIndex = allKeys.indexOf(_extent[0])\n      const extentMaxIndex = allKeys.indexOf(_extent[1])\n      series[keys.VALUES] = series[keys.VALUES].slice(extentMinIndex, extentMaxIndex)\n    })\n\n    return data\n  }\n\n  function filterByDate (_dateExtent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      series[keys.VALUES] = series[keys.VALUES].filter((d) => {\n        const epoch = new Date(d[keys.DATA]).getTime()\n        return epoch >= _dateExtent[0].getTime()\n          && epoch <= _dateExtent[1].getTime()\n      })\n    })\n\n    return data\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  return {\n    generateTestDataset,\n    generateSeries,\n    filterByDate,\n    filterByKey,\n    setConfig\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/data-manager.js","// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 21\n// module chunks = 0","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Observer (_dataManager) {\n  const dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\")\n  const dataManager = _dataManager\n\n  dispatcher.on(\"brushChange.observer\", (_e, _brushConfig) => {\n    const filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e)\n      : dataManager.filterByKey(_e)\n    pub(\"dataFilter\", filtered)\n  })\n\n  function sub (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function pub (_channelName, ...args) {\n    dispatcher.call(_channelName, this, ...args)\n    return this\n  }\n\n  return {\n    sub,\n    pub\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/observer.js"],"sourceRoot":""}