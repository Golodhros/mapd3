{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mapd3.min.js","webpack:///webpack/bootstrap 31c12a82867f72ab94e7","webpack:///./src/bundle.js","webpack:///./src/charts/chart.js","webpack:///./src/charts/helpers/d3-service.js","webpack:///./~/d3/build/d3.js","webpack:///./src/charts/helpers/exportChart.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/serializeWithStyles.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/scale.js","webpack:///./src/charts/line.js","webpack:///./src/charts/bar.js","webpack:///./src/charts/axis.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/brush.js","webpack:///./src/charts/hover.js","webpack:///./src/charts/binning.js","webpack:///./src/charts/interactors.js","webpack:///./src/charts/domain-editor.js","webpack:///./src/charts/data-manager.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./src/charts/observer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","Interactors","Hover","Brush","DomainEditor","Binning","Observer","DataManager","Legend","Tooltip","Chart","undefined","_chart","_chart2","_tooltip","_tooltip2","_legend","_legend2","_dataManager","_dataManager2","_observer","_observer2","_binning","_binning2","_domainEditor","_domainEditor2","_brush","_brush2","_hover","_hover2","_interactors","_interactors2","_colors","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_container","render","buildSVG","cache","dataBySeries","buildChart","w","config","width","container","clientWidth","h","height","clientHeight","chartWidth","margin","left","right","chartHeight","top","bottom","svg","template","base","d3","select","html","style","addEvents","attr","dataObject","dataByKey","flatDataSorted","groupKeys","scale","_scale2","setConfig","setData","scales","getScales","_axis2","setScales","drawAxis","drawAxisTitles","drawGridLines","_line2","drawMarks","bindEvents","dispatcher","assign","drawBrush","on","_console","_len","arguments","length","arg","Array","_key","console","log","apply","concat","triggerIntroAnimation","_data","data","_common","cloneData","_constants","keys","SERIES","cleanedData","cleanData","flatData","forEach","serie","VALUES","sortData","keyType","d","DATA","Date","VALUE","Number","dataPoint","LABEL","GROUP","ID","push","nest","getKey","entries","map","values","allGroupKeys","getGroup","getUnique","isAnimated","maskingRectangle","transition","duration","animationDuration","ease","remove","getNearestDataPoint","_mouseX","keyFromInvertedX","invertScale","xScale","bisectLeft","bisector","dataEntryIndex","dataEntryForXPosition","nearestDataPoint","THROTTLE_DELAY","throttledDispatch","throttle","mouse","mouseX","xPosition","dataPointXPosition","_config","override","destroy","chartType","easeLinear","colorSchema","mapdColors","defaultColor","xAxisPadding","tickPadding","xAxisFormat","tickSkip","tickSizes","yTicks","yTicks2","yAxisFormat","yAxisFormat2","grid","axisTransitionDuration","xTitle","yTitle","dotRadius","valueFormat","tooltipMaxTopicLength","tooltipBorderRadius","mouseChaseDuration","tooltipEase","easeQuadInOut","tooltipHeight","tooltipWidth","dateFormat","seriesOrder","yScale","yScale2","hasSecondAxis","colorScale","xAxis","yAxis","yAxis2","stackData","stack","dispatch","_d3Service","_scale","_line","_bar","_axis","_d","enumerable","get","axisBottom","axisLeft","axisRight","timeFormat","format","extent","sum","range","merge","event","randomUniform","randomNormal","timeDay","timeMonth","area","curveCatmullRom","line","stackOffsetNone","stackOrderNone","scaleTime","scalePoint","scaleBand","scaleLinear","scaleOrdinal","brushX","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","number$1","center","offset","bandwidth","round","entering","__axis","axis","orient","context","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","text","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","t","i","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","set","callback","noop","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fitExtent","projection","clip","clipExtent","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","version","hi","mid","ascendingBisect","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","transform$$1","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","sourceRandomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleIdentity","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","exportChart","require","save","d3svg","filename","title","img","createImage","convertSvgToHtml","handleImageLoad","createCanvas","addBackground","styleBackgroundString","serializer","_serializeWithStyles2","prependTitle","canvas","svgHtml","Image","src","imageSourceBase","b64EncodeUnicode","drawImageOnCanvas","image","getContext","drawImage","downloadCanvas","defaultFilename","extensionType","toDataURL","href","download","body","click","svgWidth","colorSchemas","titleTopOffset","titleFontFamily","titleFontSize","encoder","btoa","encode","str","encodeURIComponent","String","fromCharCode","chartBackground","_serializeWithStyles","mapdUI","skyBlue","initializeSerializer","computeDefaultStyleByTagName","tagName","defaultStyle","computedStyle","getDefaultStyleByTagName","defaultStylesByTagName","serializeWithStyles","elem","cssTexts","elements","nodeType","ELEMENT_NODE","el","noStyleTags","cssText","cssPropName","outerHTML","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","_toConsumableArray","arr","arr2","_dataToClone","_keyType","sortedData","getTime","localeCompare","numeric","bandStep","accum","limit","wait","Scale","buildXScale","_allKeys","datesExtent","buildYScale","_extent","buildColorScale","ids","getID","splitByGroups","allValues","allKeys","getValue","getStackedScales","allStackHeights","dB","valuesExtent","allUniqueKeys","getHorizontalScales","groupAxis1","groupAxis2","valuesExtent2","Line","drawLines","seriesLine","seriesLine2","getColor","drawAreas","seriesArea","seriesArea2","areas","drawStackedAreas","_scales","Bar","drawBars","bars","drawStackedBars","stackedBarGroups","stackedUpdate","stackedBars","Axis","buildAxis","formatter","textHeight","getBBox","horizontalGridLines","verticalGridLines","tooltipBackground","tooltipTitle","tooltipDivider","tooltipBody","setSize","hide","calculateTooltipPosition","tooltipX","tooltipY","setPosition","_xPosition","_calculateTooltipPosi","_calculateTooltipPosi2","_slicedToArray","_width","_height","titleHeight","setSeriesContent","_series","tooltipLeft","elementHeight","getValueText","tooltipRight","tooltipCircles","setTitle","_title","setContent","sortByTopicsOrder","sortByAlpha","_order","orderName","_ref","show","drawTooltip","_dataPoint","_dispatcher","sliceIterator","_arr","_n","_e","_s","_i","Symbol","iterator","done","err","extractBrushDimension","buildBrush","handleBrushStart","handleBrushMove","handleBrushEnd","chartBrush","getDataExtent","dataExtent","dateRange","drawHover","_dataPointXPosition","moveVerticalMarker","drawVerticalMarker","highlightStackedDataPoints","highlightDataPoints","dotsData","drawHighlightDataPoints","_dotsData","dots","stackedDataPoint","verticalMarkerLine","_verticalMarkerXPosition","chartCache","chart","getCache","getConfig","label","items","toggle","toggleOnOff","isSelected","itemsExclusive","exclusiveToggle","toggleOffIsEnabled","toggleMultipleIsEnabled","options","hasSelection","farthestViewportElement","hasJustBeenClicked","shouldBeSelected","parentDiv","lockSize","generateRandomString","_length","substr","generateSeries","_dataKeys","_range","_allowNegative","variabilityRatio","randomWalkStepSize","rnd","generateTestDataset","dataKeys","baseDate","pointCount","lineCount","groupCount","filterByKey","extentMinIndex","extentMaxIndex","filterByDate","_dateExtent","epoch","_d3Array","sub","pub","_channelName","dataManager","_brushConfig","filtered"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,MAAAD,IAEAD,EAAA,MAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAUL,EAAQD,EAASM,GAEhC,YAiDA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GA/CvFG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQsB,OAAStB,EAAQuB,YAAcvB,EAAQwB,MAAQxB,EAAQyB,MAAQzB,EAAQ0B,aAAe1B,EAAQ2B,QAAU3B,EAAQ4B,SAAW5B,EAAQ6B,YAAc7B,EAAQ8B,OAAS9B,EAAQ+B,QAAU/B,EAAQgC,MAAQC,ME7D7M,IAAAC,GAAA5B,EAAA,GFiEK6B,EAAUpB,EAAuBmB,GEhEtCE,EAAA9B,EAAA,IFoEK+B,EAAYtB,EAAuBqB,GEnExCE,EAAAhC,EAAA,IFuEKiC,EAAWxB,EAAuBuB,GEtEvCE,EAAAlC,EAAA,IF0EKmC,EAAgB1B,EAAuByB,GEzE5CE,EAAApC,EAAA,IF6EKqC,EAAa5B,EAAuB2B,GE5EzCE,EAAAtC,EAAA,IFgFKuC,EAAY9B,EAAuB6B,GE/ExCE,EAAAxC,EAAA,IFmFKyC,EAAiBhC,EAAuB+B,GElF7CE,EAAA1C,EAAA,IFsFK2C,EAAUlC,EAAuBiC,GErFtCE,EAAA5C,EAAA,IFyFK6C,EAAUpC,EAAuBmC,GExFtCE,EAAA9C,EAAA,IF4FK+C,EAAgBtC,EAAuBqC,GE3F5CE,EAAAhD,EAAA,EFiGCN,GE9FCgC,MF8FeG,EAAQjB,QACxBlB,EE9FC+B,QF8FiBM,EAAUnB,QAC5BlB,EE9FC8B,OF8FgBS,EAASrB,QAC1BlB,EE9FC6B,YF8FqBY,EAAcvB,QACpClB,EE9FC4B,SF8FkBe,EAAWzB,QAC9BlB,EE9FC2B,QF8FiBkB,EAAU3B,QAC5BlB,EE9FC0B,aF8FsBqB,EAAe7B,QACtClB,EE9FCyB,MF8FewB,EAAQ/B,QACxBlB,EE9FCwB,MF8Fe2B,EAAQjC,QACxBlB,EE9FCuB,YF8FqB8B,EAAcnC,QACpClB,EE9FCsB,OF8FgBgC,EAAQhC,QAIpB,SAAUrB,EAAQD,EAASM,GAEhC,YA2DA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASuC,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EGtKpP,QAASxB,GAAO4B,GA4F7B,QAASC,KAOP,MANAC,KAEIC,EAAMC,cACRC,IAGK7D,KAGT,QAAS0D,KACP,GAAMI,GAAIC,EAAOC,OAASL,EAAMM,UAAUC,YACpCC,EAAIJ,EAAOK,QAAUT,EAAMM,UAAUI,YAI3C,IAHAV,EAAMW,WAAaR,EAAIC,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MAC1Dd,EAAMe,YAAcP,EAAIJ,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,QAErDjB,EAAMkB,IAAK,CACd,GAAMC,uJAMAC,EAAOC,EAAGC,OAAOtB,EAAMM,WACxBiB,KAAKJ,EAEVC,GAAKE,OAAO,oBAAoBE,MAAM,WAAY,YAElDxB,EAAMkB,IAAME,EAAKE,OAAO,OAExBG,IAQF,MALAzB,GAAMkB,IAAIQ,KAAK,QAAStB,EAAOC,OAC5BqB,KAAK,SAAUtB,EAAOK,QACtBa,OAAO,oBACPI,KAAK,YAHR,aAGkCtB,EAAOQ,OAAOC,KAHhD,IAGwDT,EAAOQ,OAAOI,IAHtE,KAKO3E,KAGT,QAAS6D,KACP,GAAMyB,IACJC,UAAW5B,EAAM4B,UACjB3B,aAAcD,EAAMC,aACpB4B,eAAgB7B,EAAM6B,eACtBC,UAAW9B,EAAM8B,WAGbC,GAAQ,EAAAC,EAAA7E,WACX8E,UAAU7B,GACV8B,QAAQP,EAqDX,OApDAQ,GAASJ,EAAMK,aAEf,EAAAC,EAAAlF,SAAK6C,EAAMkB,KACRe,UAAU7B,GACVkC,UAAUH,GACVI,WACAC,iBACAC,iBAEH,EAAAC,EAAAvF,SAAK6C,EAAMkB,KACRe,UAAU7B,GACVkC,UAAUH,GACVD,QAAQP,GACRgB,aASH,EAAArE,EAAAnB,SAAQ6C,EAAMkB,KACXe,UAAU7B,GACVkC,UAAUH,GACVS,WAAWC,IASd,EAAA3D,EAAA/B,SAAM6C,EAAMkB,KACTe,UAAU7E,OAAO0F,UAAW1C,EAAQ+B,IACpCD,QAAQP,GACRoB,YACAC,GAAG,YAAa,kBAAAC,GAAAC,EAAAC,UAAAC,OAAIC,EAAJC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAIF,EAAJE,GAAAJ,UAAAI,EAAA,QAAYN,EAAAO,SAAQC,IAARC,MAAAT,GAAY,SAAZU,OAAwBN,OAEvD,EAAAjE,EAAAjC,SAAM6C,EAAMkB,KACTe,UAAU7B,GACVkC,UAAUH,GACVS,WAAWC,GAOde,IAEOvH,KAGT,QAAS6F,GAAS2B,GAChB7D,EAAM8D,MAAO,EAAAC,EAAAC,WAAUH,EAAMI,EAAAC,KAAKC,QAClC,IAAMC,GAAcC,EAAUR,EAM9B,OALA7D,GAAMC,aAAemE,EAAYnE,aACjCD,EAAM4B,UAAYwC,EAAYxC,UAE9B9B,IAEOzD,KAGT,QAASgI,GAAWR,GAClB,GAAM5D,IAAe,EAAA8D,EAAAC,WAAUH,EAAMI,EAAAC,KAAKC,SACpCG,IAGNrE,GAAasE,QAAQ,SAACC,GACpBA,EAAMP,EAAAC,KAAKO,SAAU,EAAAV,EAAAW,UAASF,EAAMP,EAAAC,KAAKO,QAASrE,EAAOuE,SACzDH,EAAMP,EAAAC,KAAKO,QAAQF,QAAQ,SAACK,GAC1BA,EAAEX,EAAAC,KAAKW,MAA2B,SAAnBzE,EAAOuE,QAAqB,GAAIG,MAAKF,EAAEX,EAAAC,KAAKW,OAASD,EAAEX,EAAAC,KAAKW,MAC3ED,EAAEX,EAAAC,KAAKa,OAASC,OAAOJ,EAAEX,EAAAC,KAAKa,YAIlC9E,EAAasE,QAAQ,SAACC,GACpBA,EAAMP,EAAAC,KAAKO,QAAQF,QAAQ,SAACK,GAC1B,GAAMK,KACNA,GAAUhB,EAAAC,KAAKgB,OAASV,EAAMP,EAAAC,KAAKgB,OACnCD,EAAUhB,EAAAC,KAAKiB,OAASX,EAAMP,EAAAC,KAAKiB,OACnCF,EAAUhB,EAAAC,KAAKkB,IAAMZ,EAAMP,EAAAC,KAAKkB,IAChCH,EAAUhB,EAAAC,KAAKW,MAA2B,SAAnBzE,EAAOuE,QAAqB,GAAIG,MAAKF,EAAEX,EAAAC,KAAKW,OAASD,EAAEX,EAAAC,KAAKW,MACnFI,EAAUhB,EAAAC,KAAKa,OAASH,EAAEX,EAAAC,KAAKa,OAC/BT,EAASe,KAAKJ,OAIlBjF,EAAM6B,gBAAiB,EAAAkC,EAAAW,UAASJ,EAAUlE,EAAOuE,QAEjD,IAAM/C,GAAYP,EAAGiE,OAClB5F,IAAI6F,GACJC,QAAQxF,EAAM6B,gBACd4D,IAAI,SAACb,GACJ,GAAMK,KAGN,OAFAA,GAAUhB,EAAAC,KAAKW,MAA2B,SAAnBzE,EAAOuE,QAAqB,GAAIG,MAAKF,EAAElF,KAAOkF,EAAElF,IACvEuF,EAAUhB,EAAAC,KAAKC,QAAUS,EAAEc,OACpBT,IAGLU,EAAe1F,EAAawF,IAAIG,EAGtC,OAFA5F,GAAM8B,WAAY,EAAAiC,EAAA8B,WAAUF,IAEpB1F,eAAc2B,aAGxB,QAASgC,KACHxD,EAAO0F,aACT9F,EAAM+F,iBAAmB/F,EAAMkB,IAAIG,GAAGC,OAAO,sBAC1CI,KAAK,QAAS1B,EAAMW,WAAa,GACjCe,KAAK,SAAU1B,EAAMe,aACrBW,KAAK,IAAKtB,EAAOQ,OAAOC,KAAO,GAC/Ba,KAAK,IAAKtB,EAAOQ,OAAOI,KAE3BhB,EAAM+F,iBAAiBC,aACpBC,SAAS7F,EAAO8F,mBAChBC,KAAK/F,EAAO+F,MACZzE,KAAK,QAAS,GACdA,KAAK,IAAKtB,EAAOC,MAAQD,EAAOQ,OAAOE,OACvCkC,GAAG,MAAO,iBAAMhD,GAAM+F,iBAAiBK,YAI9C,QAASC,GAAqBC,GAC5B,GAAMC,IAAmB,EAAAxC,EAAAyC,aAAYrE,EAAOsE,OAAQH,EAASlG,EAAOuE,SAC9D+B,EAAarF,EAAGsF,SAASpB,GAAQ1E,KACjC+F,EAAiBF,EAAW1G,EAAM4B,UAAW2E,GAC7CM,EAAwB7G,EAAM4B,UAAUgF,GAC1CE,EAAmB,IAKvB,OAHIP,KACFO,EAAmBD,GAEdC,EAGT,QAASrF,KACP,GAAMsF,GAAiB,GACjBC,GAAoB,EAAAjD,EAAAkD,UAAS,WACjCpE,EAAWjG,KAAX8G,MAAAb,EAAAM,YACC4D,EAEH/G,GAAMkB,IACH8B,GAAG,qBAAsB,SAAoB4B,GACvC5E,EAAM8D,MACXjB,EAAWjG,KAAK,YAAaP,KAAMuI,EAAGvD,EAAG6F,MAAM7K,SAEhD2G,GAAG,oBAAqB,SAAmB4B,GACrC5E,EAAM8D,MACXjB,EAAWjG,KAAK,WAAYP,KAAMuI,EAAGvD,EAAG6F,MAAM7K,SAE/C2G,GAAG,qBAAsB,WACxB,GAAKhD,EAAM8D,KAAX,CACA,GAAMqD,GAAS9F,EAAG6F,MAAM7K,MAAM,GACxB+K,EAAYD,EAAS/G,EAAOQ,OAAOC,KACnCoE,EAAYoB,EAAoBe,EAEtC,IAAInC,EAAW,CACb,GAAMoC,GAAqBlF,EAAOsE,OAAOxB,EAAUhB,EAAAC,KAAKW,MACxDhC,GAAWjG,KAAK,YAAaP,KAAM4I,EAAWoC,GAC9CL,EAAkB,YAAa3K,KAAM4I,EAAWoC,OASxD,QAASrE,KACP,MAAOH,GAAWG,GAAXU,MAAAb,EAAAM,WAGT,QAASlB,GAAWqF,GAElB,MADAlH,IAAS,EAAA2D,EAAAwD,UAASnH,EAAQkH,GACnBjL,KAGT,QAASmL,KACPxH,EAAMkB,IAAI8B,GAAG,IAAK,MAAMoD,SApU1B,GAAIhG,IAEFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAERR,MAAO,IACPI,OAAQ,IACRkE,QAAS,OACT8C,UAAW,OACXtB,KAAM9E,EAAGqG,WAGT5B,YAAY,EACZI,kBAAmB,KAGnByB,YAAapI,EAAAhC,OAAOqK,WAAWnC,IAAI,SAACb,GAAD,OAAStH,MAAOsH,KACnDiD,aAAc,UAGdC,cACE9G,IAAK,EACLH,KAAM,EACNI,OAAQ,EACRH,MAAO,GAETiH,YAAa,EACbC,YAAa,KACbC,SAAU,EACVC,UAAW,EACXC,OAAQ,EACRC,QAAS,EACTC,YAAa,MACbC,aAAc,MACdC,KAAM,KACNC,uBAAwB,EAExBC,OAAQ,GACRC,OAAQ,GAGRC,UAAW,EAGXC,YAAa,MACbC,sBAAuB,IACvBC,oBAAqB,EACrBC,mBAAoB,GACpBC,YAAa3H,EAAG4H,cAChBC,cAAe,GACfC,aAAc,IACdC,WAAY,YACZC,gBAGElH,GACFsE,OAAQ,KACR6C,OAAQ,KACRC,QAAS,KACTC,cAAe,KACfC,WAAY,MAGRzJ,GACJM,UAAWT,EACXqB,IAAK,KACL6E,iBAAkB,KAClBpF,WAAY,KAAMI,YAAa,KAC/B2I,MAAO,KAAMC,MAAO,KAAMC,OAAQ,KAElC3J,aAAc,KACd2B,UAAW,KACXkC,KAAM,KACNhC,aACA0H,eAAe,EACfK,UAAW,KACXC,MAAO,KACPjI,eAAgB,MAIZ0D,EAAS,SAACX,GAAD,MAAOA,GAAEX,EAAAC,KAAKW,OACvBe,EAAW,SAAChB,GAAD,MAAOA,GAAEX,EAAAC,KAAKiB,QAGzBtC,EAAaxB,EAAG0I,SAAS,YAAa,WAAY,YAAa,aA+OrE,QACEjK,SACAmC,YACAC,UACAc,KAEAwE,WHpOHpK,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QG9Gec,CAlBxB,IAAA+L,GAAAzN,EAAA,GAAY8E,EHoIF7B,EAAwBwK,GGjIlCzK,GADAhD,EAAA,GACAA,EAAA,IACA0H,EAAA1H,EAAA,GACAwH,EAAAxH,EAAA,GAEA0N,EAAA1N,EAAA,GHyIKyF,EAAUhF,EAAuBiN,GGxItCC,EAAA3N,EAAA,IH4IKmG,EAAS1F,EAAuBkN,GG3IrCC,EAAA5N,EAAA,IACA6N,GH8IapN,EAAuBmN,GG9IpC5N,EAAA,KHkJK8F,EAASrF,EAAuBoN,GGjJrC/L,EAAA9B,EAAA,IHqJK+B,EAAYtB,EAAuBqB,GGpJxCE,EAAAhC,EAAA,IACA0C,GHuJgBjC,EAAuBuB,GGvJvChC,EAAA,KH2JK2C,EAAUlC,EAAuBiC,GG1JtCE,EAAA5C,EAAA,IH8JK6C,EAAUpC,EAAuBmC,GG7JtCN,EAAAtC,EAAA,IACAwC,GHgKiB/B,EAAuB6B,GGhKxCtC,EAAA,IHoKsBS,GAAuB+B,IAoUvC,SAAU7C,EAAQD,EAASM,GAEhC,YAEAa,QAAOC,eAAepB,EAAS,cAC9BqB,OAAO,GAGR,IAAI+M,GAAK9N,EAAoB,EAE7Ba,QAAOC,eAAepB,EAAS,cAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIpgBTG,cJugBApN,OAAOC,eAAepB,EAAS,YAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIzgBTI,YJ4gBArN,OAAOC,eAAepB,EAAS,aAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI9gBTK,aJihBAtN,OAAOC,eAAepB,EAAS,cAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GInhBTM,cJshBAvN,OAAOC,eAAepB,EAAS,UAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIxhBTO,UJ2hBAxN,OAAOC,eAAepB,EAAS,YAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI7hBT1D,YJgiBAvJ,OAAOC,eAAepB,EAAS,UAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIliBTQ,UJqiBAzN,OAAOC,eAAepB,EAAS,OAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIviBTS,OJ0iBA1N,OAAOC,eAAepB,EAAS,SAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI5iBTU,SJ+iBA3N,OAAOC,eAAepB,EAAS,SAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIjjBTW,SJojBA5N,OAAOC,eAAepB,EAAS,QAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GItjBT/E,QJyjBAlI,OAAOC,eAAepB,EAAS,YAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI3jBTN,YJ8jBA3M,OAAOC,eAAepB,EAAS,cAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIhkBT3C,cJmkBAtK,OAAOC,eAAepB,EAAS,iBAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIrkBTpB,iBJwkBA7L,OAAOC,eAAepB,EAAS,UAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI1kBT/I,UJ6kBAlE,OAAOC,eAAepB,EAAS,SAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI/kBTnD,SJklBA9J,OAAOC,eAAepB,EAAS,SAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIplBTY,SJulBA7N,OAAOC,eAAepB,EAAS,cAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIzlBTrE,cJ4lBA5I,OAAOC,eAAepB,EAAS,iBAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI9lBTa,iBJimBA9N,OAAOC,eAAepB,EAAS,gBAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GInmBTc,gBJsmBA/N,OAAOC,eAAepB,EAAS,WAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIxmBTe,WJ2mBAhO,OAAOC,eAAepB,EAAS,aAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI7mBTgB,aJgnBAjO,OAAOC,eAAepB,EAAS,QAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIlnBTiB,QJqnBAlO,OAAOC,eAAepB,EAAS,mBAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIvnBTkB,mBJ0nBAnO,OAAOC,eAAepB,EAAS,QAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI5nBTmB,QJ+nBApO,OAAOC,eAAepB,EAAS,SAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIjoBTP,SJooBA1M,OAAOC,eAAepB,EAAS,mBAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GItoBToB,mBJyoBArO,OAAOC,eAAepB,EAAS,kBAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI3oBTqB,kBJ8oBAtO,OAAOC,eAAepB,EAAS,aAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIhpBTsB,aJmpBAvO,OAAOC,eAAepB,EAAS,cAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIrpBTuB,cJwpBAxO,OAAOC,eAAepB,EAAS,aAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI1pBTwB,aJ6pBAzO,OAAOC,eAAepB,EAAS,eAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GI/pBTyB,eJkqBA1O,OAAOC,eAAepB,EAAS,gBAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIpqBT0B,gBJuqBA3O,OAAOC,eAAepB,EAAS,UAC9BqO,YAAY,EACZC,IAAK,WACJ,MAAOF,GIzqBT2B,WJ+qBK,SAAU9P,EAAQD,EAASM,IKhtBjC,SAAA0P,EAAAjQ,GACAA,EAAAC,IAGCI,KAAA,SAAAJ,GAA4B,YAkC7B,SAAAiQ,GAAAC,GACA,gBAAAvH,EAAAwH,GACA,MAAAC,IAAAF,EAAAvH,GAAAwH,IAeA,QAAAE,GAAAC,EAAAC,GACA,OAAAD,EAAAC,GAwKA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,GAAAC,IAAAF,EAAAD,GAAAI,KAAAC,IAAA,EAAAH,GACAI,EAAAF,KAAAG,MAAAH,KAAArJ,IAAAoJ,GAAAC,KAAAI,MACAC,EAAAN,EAAAC,KAAAM,IAAA,GAAAJ,EACA,OAAAA,IAAA,GACAG,GAAAE,GAAA,GAAAF,GAAAG,GAAA,EAAAH,GAAAI,GAAA,KAAAT,KAAAM,IAAA,GAAAJ,IACAF,KAAAM,IAAA,IAAAJ,IAAAG,GAAAE,GAAA,GAAAF,GAAAG,GAAA,EAAAH,GAAAI,GAAA,KAGA,QAAAC,GAAAd,EAAAC,EAAAC,GACA,GAAAa,GAAAX,KAAAY,IAAAf,EAAAD,GAAAI,KAAAC,IAAA,EAAAH,GACAe,EAAAb,KAAAM,IAAA,GAAAN,KAAAG,MAAAH,KAAArJ,IAAAgK,GAAAX,KAAAI,OACAC,EAAAM,EAAAE,CAIA,OAHAR,IAAAE,GAAAM,GAAA,GACAR,GAAAG,GAAAK,GAAA,EACAR,GAAAI,KAAAI,GAAA,GACAhB,EAAAD,GAAAiB,IAoTA,QAAAvK,GAAAwB,GACA,MAAAA,GAAAxB,OAmBA,QAAAwK,GAAAxB,GACA,oBAAAA,EAAA,UAGA,QAAAyB,GAAAC,GACA,sBAAAA,EAAA,QAGA,QAAAC,GAAAhM,GACA,gBAAA6C,GACA,OAAA7C,EAAA6C,IAIA,QAAAoJ,GAAAjM,GACA,GAAAkM,GAAAnB,KAAAC,IAAA,EAAAhL,EAAAmM,YAAA,IAEA,OADAnM,GAAAoM,UAAAF,EAAAnB,KAAAqB,MAAAF,IACA,SAAArJ,GACA,OAAA7C,EAAA6C,GAAAqJ,GAIA,QAAAG,KACA,OAAA/R,KAAAgS,OAGA,QAAAC,GAAAC,EAAAxM,GAWA,QAAAuM,GAAAE,GACA,GAAA9I,GAAA,MAAA+I,EAAA1M,EAAA2M,MAAA3M,EAAA2M,MAAAhL,MAAA3B,EAAA4M,GAAA5M,EAAA6M,SAAAH,EACA7D,EAAA,MAAAiE,EAAA9M,EAAA8M,WAAA9M,EAAA8M,WAAAnL,MAAA3B,EAAA4M,GAAAG,GAAAD,EACAE,EAAAjC,KAAAC,IAAAiC,EAAA,GAAAjH,EACAgD,EAAAhJ,EAAAgJ,QACAkE,GAAAlE,EAAA,MACAmE,GAAAnE,IAAA3H,OAAA,MACA+L,GAAApN,EAAAmM,UAAAF,EAAAD,GAAAhM,EAAAqN,QACAC,EAAAb,EAAAa,UAAAb,EAAAa,YAAAb,EACAc,EAAAD,EAAAE,UAAA,WAAAzL,MAAA,OACA0L,EAAAH,EAAAE,UAAA,SAAAzL,KAAA4B,EAAA3D,GAAA0N,QACAC,EAAAF,EAAAG,OACAC,EAAAJ,EAAAK,QAAAC,OAAA,KAAApO,KAAA,gBACA8J,EAAAgE,EAAAlO,OAAA,QACAyO,EAAAP,EAAAlO,OAAA,OAEAgO,KAAAtE,MAAAsE,EAAAO,QAAAG,OAAA,gBACAtO,KAAA,kBACAA,KAAA,kBAEA8N,IAAAxE,MAAA4E,GAEApE,IAAAR,MAAA4E,EAAAE,OAAA,QACApO,KAAA,iBACAA,KAAA0K,EAAA,IAAA6D,EAAAjB,IAEAe,IAAA/E,MAAA4E,EAAAE,OAAA,QACApO,KAAA,eACAA,KAAA0K,EAAA6D,EAAAlB,GACArN,KAAA,KAAA6M,IAAAvN,GAAA,MAAAuN,IAAAtN,GAAA,oBAEAuN,IAAAa,IACAC,IAAAtJ,WAAAwI,GACAgB,IAAAxJ,WAAAwI,GACAhD,IAAAxF,WAAAwI,GACAuB,IAAA/J,WAAAwI,GAEAkB,IAAA1J,WAAAwI,GACA9M,KAAA,UAAAwO,IACAxO,KAAA,qBAAAkD,GAA0C,MAAAuL,UAAAvL,EAAAuK,EAAAvK,IAAAwL,EAAAxL,GAAAvI,KAAAgU,aAAA,eAE1CT,EACAlO,KAAA,UAAAwO,IACAxO,KAAA,qBAAAkD,GAA0C,GAAA7H,GAAAV,KAAAiU,WAAAjC,MAAgC,OAAA+B,GAAArT,GAAAoT,SAAApT,IAAA6H,IAAA7H,EAAAoS,EAAAvK,OAG1E8K,EAAAtJ,SAEAkJ,EACA5N,KAAA,IAAA6M,IAAA1N,IAAA0N,GAAAzN,GACA,IAAAmP,EAAAM,EAAA,IAAAtB,EAAA,QAAAC,EAAA,IAAAe,EAAAM,EACA,IAAAtB,EAAA,IAAAgB,EAAAM,EAAA,QAAArB,EAAA,IAAAe,EAAAM,GAEAf,EACA9N,KAAA,aACAA,KAAA,qBAAAkD,GAAwC,MAAAwL,GAAAjB,EAAAvK,MAExC4G,EACA9J,KAAA0K,EAAA,IAAA6D,EAAAjB,GAEAe,EACArO,KAAA0K,EAAA6D,EAAAlB,GACAgB,KAAAnF,GAEAyE,EAAAmB,OAAApC,GACA1M,KAAA,eACAA,KAAA,gBACAA,KAAA,4BACAA,KAAA,cAAA6M,IAAAzN,GAAA,QAAAyN,IAAA1N,GAAA,gBAEAwO,EACAoB,KAAA,WAA0BpU,KAAAgS,OAAAc,IAjF1B,GAAAR,MACAF,EAAA,KACAI,EAAA,KACAG,EAAA,EACAuB,EAAA,EACAxI,EAAA,EACAkI,EAAA1B,IAAAvN,IAAAuN,IAAA1N,IAAA,IACAuL,EAAAmC,IAAA1N,IAAA0N,IAAAzN,GAAA,QACAsP,EAAA7B,IAAAvN,IAAAuN,IAAAtN,GAAA2M,EAAAC,CAgHA,OApCAS,GAAAvM,MAAA,SAAA2O,GACA,MAAAvN,WAAAC,QAAArB,EAAA2O,EAAApC,GAAAvM,GAGAuM,EAAAI,MAAA,WACA,MAAAC,GAAAgC,GAAA/T,KAAAuG,WAAAmL,GAGAA,EAAAK,cAAA,SAAA+B,GACA,MAAAvN,WAAAC,QAAAuL,EAAA,MAAA+B,KAAAC,GAAA/T,KAAA8T,GAAApC,GAAAK,EAAAiC,SAGAtC,EAAAG,WAAA,SAAAiC,GACA,MAAAvN,WAAAC,QAAAqL,EAAA,MAAAiC,EAAA,KAAAC,GAAA/T,KAAA8T,GAAApC,GAAAG,KAAAmC,SAGAtC,EAAAO,WAAA,SAAA6B,GACA,MAAAvN,WAAAC,QAAAyL,EAAA6B,EAAApC,GAAAO,GAGAP,EAAAuC,SAAA,SAAAH,GACA,MAAAvN,WAAAC,QAAA4L,EAAAuB,GAAAG,EAAApC,GAAAU,GAGAV,EAAAU,cAAA,SAAA0B,GACA,MAAAvN,WAAAC,QAAA4L,GAAA0B,EAAApC,GAAAU,GAGAV,EAAAiC,cAAA,SAAAG,GACA,MAAAvN,WAAAC,QAAAmN,GAAAG,EAAApC,GAAAiC,GAGAjC,EAAAvG,YAAA,SAAA2I,GACA,MAAAvN,WAAAC,QAAA2E,GAAA2I,EAAApC,GAAAvG,GAGAuG,EAGA,QAAAwC,GAAA/O,GACA,MAAAuM,GAAAtN,GAAAe,GAGA,QAAA2I,GAAA3I,GACA,MAAAuM,GAAAxN,GAAAiB,GAGA,QAAAyI,GAAAzI,GACA,MAAAuM,GAAArN,GAAAc,GAGA,QAAA0I,GAAA1I,GACA,MAAAuM,GAAAzN,GAAAkB,GAKA,QAAAgI,KACA,OAA8CgH,GAA9CC,EAAA,EAAAC,EAAA9N,UAAAC,OAAAsN,KAAkDM,EAAAC,IAAOD,EAAA,CACzD,KAAAD,EAAA5N,UAAA6N,GAAA,KAAAD,IAAAL,GAAA,SAAAQ,OAAA,iBAAAH,EACAL,GAAAK,MAEA,UAAAI,GAAAT,GAGA,QAAAS,GAAAT,GACArU,KAAAqU,IAGA,QAAAU,GAAAC,EAAAC,GACA,MAAAD,GAAAE,OAAAC,MAAA,SAAA/L,IAAA,SAAAsL,GACA,GAAAU,GAAA,GAAAT,EAAAD,EAAAW,QAAA,IAEA,IADAV,GAAA,IAAAS,EAAAV,EAAAH,MAAAI,EAAA,GAAAD,IAAAH,MAAA,EAAAI,IACAD,IAAAO,EAAA1R,eAAAmR,GAAA,SAAAG,OAAA,iBAAAH,EACA,QAAYY,KAAAZ,EAAAU,UA6CZ,QAAAlH,GAAAoH,EAAAF,GACA,OAAA3U,GAAAkU,EAAA,EAAAC,EAAAU,EAAAvO,OAAqC4N,EAAAC,IAAOD,EAC5C,IAAAlU,EAAA6U,EAAAX,IAAAS,SACA,MAAA3U,GAAAQ,MAKA,QAAAsU,GAAAD,EAAAF,EAAAI,GACA,OAAAb,GAAA,EAAAC,EAAAU,EAAAvO,OAAkC4N,EAAAC,IAAOD,EACzC,GAAAW,EAAAX,GAAAS,SAAA,CACAE,EAAAX,GAAAc,GAAAH,IAAAf,MAAA,EAAAI,GAAArN,OAAAgO,EAAAf,MAAAI,EAAA,GACA,OAIA,MADA,OAAAa,GAAAF,EAAAtM,MAAmCoM,OAAAnU,MAAAuU,IACnCF,EAmBA,QAAAI,GAAAN,GACA,kBACA,GAAAO,GAAA3V,KAAA4V,cACAC,EAAA7V,KAAA8V,YACA,OAAAD,KAAAE,IAAAJ,EAAAK,gBAAAF,eAAAC,GACAJ,EAAAM,cAAAb,GACAO,EAAAO,gBAAAL,EAAAT,IAIA,QAAAe,GAAAC,GACA,kBACA,MAAApW,MAAA4V,cAAAM,gBAAAE,EAAAC,MAAAD,EAAAE,QAaA,QAAAC,KACA,UAAAC,GAGA,QAAAA,KACAxW,KAAAqU,EAAA,OAAAoC,IAAAC,SAAA,IAuDA,QAAAC,GAAAC,EAAAC,EAAAC,GAEA,MADAF,GAAAG,EAAAH,EAAAC,EAAAC,GACA,SAAAlI,GACA,GAAAoI,GAAApI,EAAAqI,aACAD,SAAAhX,MAAA,EAAAgX,EAAAE,wBAAAlX,QACA4W,EAAArW,KAAAP,KAAA4O,IAKA,QAAAmI,GAAAH,EAAAC,EAAAC,GACA,gBAAAK,GACA,GAAAC,GAAAxX,EAAAgP,KACAhP,GAAAgP,MAAAuI,CACA,KACAP,EAAArW,KAAAP,UAAAqX,SAAAR,EAAAC,GACK,QACLlX,EAAAgP,MAAAwI,IAKA,QAAAE,GAAAtC,GACA,MAAAA,GAAAE,OAAAC,MAAA,SAAA/L,IAAA,SAAAsL,GACA,GAAAU,GAAA,GAAAT,EAAAD,EAAAW,QAAA,IAEA,OADAV,IAAA,IAAAS,EAAAV,EAAAH,MAAAI,EAAA,GAAAD,IAAAH,MAAA,EAAAI,KACYW,KAAAZ,EAAAU,UAIZ,QAAAmC,GAAAC,GACA,kBACA,GAAA7Q,GAAA3G,KAAAyX,IACA,IAAA9Q,EAAA,CACA,OAAA+Q,GAAAC,EAAA,EAAAhD,GAAA,EAAAnU,EAAAmG,EAAAI,OAA6C4Q,EAAAnX,IAAOmX,EACpDD,EAAA/Q,EAAAgR,GAAAH,EAAAlC,MAAAoC,EAAApC,OAAAkC,EAAAlC,MAAAoC,EAAAtC,OAAAoC,EAAApC,KAGAzO,IAAAgO,GAAA+C,EAFA1X,KAAA4X,oBAAAF,EAAApC,KAAAoC,EAAAd,SAAAc,EAAAG,WAKAlD,EAAAhO,EAAAI,OAAA4N,QACA3U,MAAAyX,OAIA,QAAAK,GAAAN,EAAAvW,EAAA4W,GACA,GAAAE,GAAAC,GAAAzU,eAAAiU,EAAAlC,MAAAqB,EAAAI,CACA,iBAAAxO,EAAAoM,EAAAmC,GACA,GAAAY,GAAA/Q,EAAA3G,KAAAyX,KAAAb,EAAAmB,EAAA9W,EAAA0T,EAAAmC,EACA,IAAAnQ,EAAA,OAAAgR,GAAA,EAAAnX,EAAAmG,EAAAI,OAA0C4Q,EAAAnX,IAAOmX,EACjD,IAAAD,EAAA/Q,EAAAgR,IAAArC,OAAAkC,EAAAlC,MAAAoC,EAAAtC,OAAAoC,EAAApC,KAIA,MAHApV,MAAA4X,oBAAAF,EAAApC,KAAAoC,EAAAd,SAAAc,EAAAG,SACA7X,KAAAiY,iBAAAP,EAAApC,KAAAoC,EAAAd,WAAAc,EAAAG,gBACAH,EAAAzW,QAIAjB,MAAAiY,iBAAAT,EAAAlC,KAAAsB,EAAAiB,GACAH,GAASpC,KAAAkC,EAAAlC,KAAAF,KAAAoC,EAAApC,KAAAnU,QAAA2V,WAAAiB,WACTlR,EACAA,EAAAqC,KAAA0O,GADA1X,KAAAyX,MAAAC,IA0BA,QAAAQ,GAAAf,EAAAP,EAAAuB,EAAAC,GACA,GAAAhB,GAAAxX,EAAAgP,KACAuI,GAAAkB,YAAAzY,EAAAgP,MACAhP,EAAAgP,MAAAuI,CACA,KACA,MAAAP,GAAAvP,MAAA8Q,EAAAC,GACG,QACHxY,EAAAgP,MAAAwI,GA8BA,QAAAkB,MAuBA,QAAAC,KACA,SA8CA,QAAAC,GAAAC,EAAAC,GACA1Y,KAAA4V,cAAA6C,EAAA7C,cACA5V,KAAA8V,aAAA2C,EAAA3C,aACA9V,KAAA2Y,MAAA,KACA3Y,KAAA4Y,QAAAH,EACAzY,KAAAqX,SAAAqB,EAmBA,QAAAG,GAAAJ,EAAA3B,EAAAtD,EAAAsF,EAAAxF,EAAA7L,GASA,IARA,GACAsR,GADApE,EAAA,EAEAqE,EAAAlC,EAAA/P,OACAkS,EAAAxR,EAAAV,OAKQ4N,EAAAsE,IAAgBtE,GACxBoE,EAAAjC,EAAAnC,KACAoE,EAAA1B,SAAA5P,EAAAkN,GACAmE,EAAAnE,GAAAoE,GAEAvF,EAAAmB,GAAA,GAAA6D,GAAAC,EAAAhR,EAAAkN,GAKA,MAAQA,EAAAqE,IAAiBrE,GACzBoE,EAAAjC,EAAAnC,MACArB,EAAAqB,GAAAoE,GAKA,QAAAG,GAAAT,EAAA3B,EAAAtD,EAAAsF,EAAAxF,EAAA7L,EAAApE,GACA,GAAAsR,GACAoE,EAKAI,EAJAC,KACAJ,EAAAlC,EAAA/P,OACAkS,EAAAxR,EAAAV,OACAsS,EAAA,GAAApS,OAAA+R,EAKA,KAAArE,EAAA,EAAaA,EAAAqE,IAAiBrE,GAC9BoE,EAAAjC,EAAAnC,MACA0E,EAAA1E,GAAAwE,EAAAG,GAAAjW,EAAA9C,KAAAwY,IAAA1B,SAAA1C,EAAAmC,GACAqC,IAAAC,GACA9F,EAAAqB,GAAAoE,EAEAK,EAAAD,GAAAJ,EAQA,KAAApE,EAAA,EAAaA,EAAAsE,IAAgBtE,EAC7BwE,EAAAG,GAAAjW,EAAA9C,KAAAkY,EAAAhR,EAAAkN,KAAAlN,IACAsR,EAAAK,EAAAD,KACAL,EAAAnE,GAAAoE,EACAA,EAAA1B,SAAA5P,EAAAkN,GACAyE,EAAAD,GAAA,MAEA3F,EAAAmB,GAAA,GAAA6D,GAAAC,EAAAhR,EAAAkN,GAKA,KAAAA,EAAA,EAAaA,EAAAqE,IAAiBrE,GAC9BoE,EAAAjC,EAAAnC,KAAAyE,EAAAC,EAAA1E,MAAAoE,IACAzF,EAAAqB,GAAAoE,GAsGA,QAAAQ,GAAArJ,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAqJ,IAiDA,QAAAC,GAAArE,GACA,kBACApV,KAAA0Z,gBAAAtE,IAIA,QAAAuE,GAAAvD,GACA,kBACApW,KAAA4Z,kBAAAxD,EAAAC,MAAAD,EAAAE,QAIA,QAAAuD,GAAAzE,EAAAnU,GACA,kBACAjB,KAAA8Z,aAAA1E,EAAAnU,IAIA,QAAA8Y,GAAA3D,EAAAnV,GACA,kBACAjB,KAAAga,eAAA5D,EAAAC,MAAAD,EAAAE,MAAArV,IAIA,QAAAgZ,GAAA7E,EAAAnU,GACA,kBACA,GAAAiZ,GAAAjZ,EAAAoG,MAAArH,KAAA8G,UACA,OAAAoT,EAAAla,KAAA0Z,gBAAAtE,GACApV,KAAA8Z,aAAA1E,EAAA8E,IAIA,QAAAC,GAAA/D,EAAAnV,GACA,kBACA,GAAAiZ,GAAAjZ,EAAAoG,MAAArH,KAAA8G,UACA,OAAAoT,EAAAla,KAAA4Z,kBAAAxD,EAAAC,MAAAD,EAAAE,OACAtW,KAAAga,eAAA5D,EAAAC,MAAAD,EAAAE,MAAA4D,IA0BA,QAAAE,GAAAhF,GACA,kBACApV,KAAAmF,MAAAkV,eAAAjF,IAIA,QAAAkF,GAAAlF,EAAAnU,EAAAsZ,GACA,kBACAva,KAAAmF,MAAAqV,YAAApF,EAAAnU,EAAAsZ,IAIA,QAAAE,GAAArF,EAAAnU,EAAAsZ,GACA,kBACA,GAAAL,GAAAjZ,EAAAoG,MAAArH,KAAA8G,UACA,OAAAoT,EAAAla,KAAAmF,MAAAkV,eAAAjF,GACApV,KAAAmF,MAAAqV,YAAApF,EAAA8E,EAAAK,IAaA,QAAAG,GAAA3B,EAAA3D,GACA,MAAA2D,GAAA5T,MAAAwV,iBAAAvF,IACAwF,GAAA7B,GAAA8B,iBAAA9B,EAAA,MAAA4B,iBAAAvF,GAGA,QAAA0F,GAAA1F,GACA,wBACApV,MAAAoV,IAIA,QAAA2F,GAAA3F,EAAAnU,GACA,kBACAjB,KAAAoV,GAAAnU,GAIA,QAAA+Z,GAAA5F,EAAAnU,GACA,kBACA,GAAAiZ,GAAAjZ,EAAAoG,MAAArH,KAAA8G,UACA,OAAAoT,QAAAla,MAAAoV,GACApV,KAAAoV,GAAA8E,GAaA,QAAAe,GAAAC,GACA,MAAAA,GAAAhG,OAAAC,MAAA,SAGA,QAAAgG,GAAApC,GACA,MAAAA,GAAAoC,WAAA,GAAAC,GAAArC,GAGA,QAAAqC,GAAArC,GACA/Y,KAAAqb,MAAAtC,EACA/Y,KAAAsb,OAAAL,EAAAlC,EAAA/E,aAAA,cAuBA,QAAAuH,GAAAxC,EAAAyC,GAEA,IADA,GAAAC,GAAAN,EAAApC,GAAApE,GAAA,EAAAC,EAAA4G,EAAAzU,SACA4N,EAAAC,GAAA6G,EAAAC,IAAAF,EAAA7G,IAGA,QAAAgH,IAAA5C,EAAAyC,GAEA,IADA,GAAAC,GAAAN,EAAApC,GAAApE,GAAA,EAAAC,EAAA4G,EAAAzU,SACA4N,EAAAC,GAAA6G,EAAA1R,OAAAyR,EAAA7G,IAGA,QAAAiH,IAAAJ,GACA,kBACAD,EAAAvb,KAAAwb,IAIA,QAAAK,IAAAL,GACA,kBACAG,GAAA3b,KAAAwb,IAIA,QAAAM,IAAAN,EAAAva,GACA,mBACAA,EAAAoG,MAAArH,KAAA8G,WAAAyU,EAAAI,IAAA3b,KAAAwb,IAmBA,QAAAO,MACA/b,KAAAgc,YAAA,GAGA,QAAAC,IAAAhb,GACA,kBACAjB,KAAAgc,YAAA/a,GAIA,QAAAib,IAAAjb,GACA,kBACA,GAAAiZ,GAAAjZ,EAAAoG,MAAArH,KAAA8G,UACA9G,MAAAgc,YAAA,MAAA9B,EAAA,GAAAA,GAaA,QAAAiC,MACAnc,KAAAoc,UAAA,GAGA,QAAAC,IAAApb,GACA,kBACAjB,KAAAoc,UAAAnb,GAIA,QAAAqb,IAAArb,GACA,kBACA,GAAAiZ,GAAAjZ,EAAAoG,MAAArH,KAAA8G,UACA9G,MAAAoc,UAAA,MAAAlC,EAAA,GAAAA,GAaA,QAAAqC,MACAvc,KAAAwc,aAAAxc,KAAAiU,WAAAwI,YAAAzc,MAOA,QAAA0c,MACA1c,KAAA2c,iBAAA3c,KAAAiU,WAAA2I,aAAA5c,UAAAiU,WAAA4I,YAcA,QAAAC,MACA,YAWA,QAAA/S,MACA,GAAA0O,GAAAzY,KAAAiU,UACAwE,MAAAsE,YAAA/c,MAaA,QAAAgd,IAAAjE,EAAAzD,EAAA2H,GACA,GAAAC,GAAAtC,GAAA7B,GACAnK,EAAAsO,EAAAC,WAEA,mBAAAvO,GACAA,EAAA,GAAAA,GAAA0G,EAAA2H,IAEArO,EAAAsO,EAAAvH,SAAAyH,YAAA,SACAH,GAAArO,EAAAyO,UAAA/H,EAAA2H,EAAAK,QAAAL,EAAAM,YAAA3O,EAAA4O,OAAAP,EAAAO,QACA5O,EAAAyO,UAAA/H,GAAA,OAGAyD,EAAAiE,cAAApO,GAGA,QAAA6O,IAAAnI,EAAA2H,GACA,kBACA,MAAAD,IAAAhd,KAAAsV,EAAA2H,IAIA,QAAAS,IAAApI,EAAA2H,GACA,kBACA,MAAAD,IAAAhd,KAAAsV,EAAA2H,EAAA5V,MAAArH,KAAA8G,aAYA,QAAA6W,IAAAC,EAAAC,GACA7d,KAAA8d,QAAAF,EACA5d,KAAA+d,SAAAF,EAGA,QAAA7K,MACA,UAAA2K,MAAAhI,SAAAK,kBAAAtW,IAsEA,QAAAse,MACApe,EAAAgP,MAAAqP,2BAmBA,QAAAC,IAAAC,EAAAC,GACA,GAAA1e,GAAAye,EAAAxI,SAAAK,gBACAhD,EAAA/N,GAAAkZ,GAAAxX,GAAA,sBACAyX,KACApL,EAAArM,GAAA,aAAA0X,IAAA,GACAC,WAAA,WAA2BtL,EAAArM,GAAA,oBAAoC,IAE/D,iBAAAjH,GACAsT,EAAArM,GAAA,0BAEAjH,EAAAyF,MAAAoZ,cAAA7e,EAAA8e,iBACA9e,GAAA8e,YAUA,QAAAC,IAAAC,EAAApJ,EAAAqJ,EAAAte,EAAAue,EAAA7O,EAAA0B,EAAAoN,EAAAC,EAAApR,GACA1N,KAAA0e,SACA1e,KAAAsV,OACAtV,KAAA2e,UACA3e,KAAA+e,WAAA1e,EACAL,KAAA4e,SACA5e,KAAA+P,IACA/P,KAAAyR,IACAzR,KAAA6e,KACA7e,KAAA8e,KACA9e,KAAAqU,EAAA3G,EASA,QAAAsR,MACA,OAAApf,EAAAgP,MAAAqQ,OAGA,QAAAC,MACA,MAAAlf,MAAAiU,WAGA,QAAAkL,IAAA5W,GACA,aAAAA,GAAsBwH,EAAAnQ,EAAAgP,MAAAmB,EAAA0B,EAAA7R,EAAAgP,MAAA6C,GAAuClJ,EAG7D,QAAA6W,MACA,sBAAApf,MAwJA,QAAAqf,IAAA5G,EAAA6G,GACA,GAAAhc,GAAAvC,OAAAwe,OAAA9G,EAAAnV,UACA,QAAAD,KAAAic,GAAAhc,EAAAD,GAAAic,EAAAjc,EACA,OAAAC,GAGA,QAAAkc,OAiLA,QAAAC,IAAAlR,GACA,GAAA/N,EAEA,OADA+N,MAAA,IAAA2G,OAAAwK,eACAlf,EAAAmf,GAAAC,KAAArR,KAAA/N,EAAAqf,SAAArf,EAAA,UAAAsf,IAAAtf,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,KACAA,EAAAuf,GAAAH,KAAArR,IAAAyR,GAAAH,SAAArf,EAAA,SACAA,EAAAyf,GAAAL,KAAArR,IAAA,GAAAuR,IAAAtf,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAA0f,GAAAN,KAAArR,IAAA,GAAAuR,IAAA,IAAAtf,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAA2f,GAAAP,KAAArR,IAAA6R,GAAA5f,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAA6f,GAAAT,KAAArR,IAAA6R,GAAA,IAAA5f,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAA8f,GAAAV,KAAArR,IAAAgS,GAAA/f,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAAggB,GAAAZ,KAAArR,IAAAgS,GAAA/f,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACAigB,GAAAld,eAAAgL,GAAAyR,GAAAS,GAAAlS,IACA,gBAAAA,EAAA,GAAAuR,IAAAtG,YAAA,GACA,KAGA,QAAAwG,IAAApL,GACA,UAAAkL,IAAAlL,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,QAAAwL,IAAAM,EAAAC,EAAAxQ,EAAAD,GAEA,MADAA,IAAA,IAAAwQ,EAAAC,EAAAxQ,EAAAqJ,KACA,GAAAsG,IAAAY,EAAAC,EAAAxQ,EAAAD,GAGA,QAAA0Q,IAAAlJ,GAEA,MADAA,aAAA8H,MAAA9H,EAAA+H,GAAA/H,IACAA,GACAA,IAAAmJ,MACA,GAAAf,IAAApI,EAAAgJ,EAAAhJ,EAAAiJ,EAAAjJ,EAAAvH,EAAAuH,EAAAoJ,UAFA,GAAAhB,IAKA,QAAAe,IAAAH,EAAAC,EAAAxQ,EAAA2Q,GACA,WAAAha,UAAAC,OAAA6Z,GAAAF,GAAA,GAAAZ,IAAAY,EAAAC,EAAAxQ,EAAA,MAAA2Q,EAAA,EAAAA,GAGA,QAAAhB,IAAAY,EAAAC,EAAAxQ,EAAA2Q,GACA9gB,KAAA0gB,KACA1gB,KAAA2gB,KACA3gB,KAAAmQ,KACAnQ,KAAA8gB,WA+BA,QAAAP,IAAApc,EAAA4c,EAAAC,EAAA9Q,GAIA,MAHAA,IAAA,EAAA/L,EAAA4c,EAAAC,EAAAxH,IACAwH,GAAA,GAAAA,GAAA,EAAA7c,EAAA4c,EAAAvH,IACAuH,GAAA,IAAA5c,EAAAqV,KACA,GAAAyH,IAAA9c,EAAA4c,EAAAC,EAAA9Q,GAGA,QAAAgR,IAAAxJ,GACA,GAAAA,YAAAuJ,IAAA,UAAAA,IAAAvJ,EAAAvT,EAAAuT,EAAAqJ,EAAArJ,EAAAsJ,EAAAtJ,EAAAoJ,QAEA,IADApJ,YAAA8H,MAAA9H,EAAA+H,GAAA/H,KACAA,EAAA,UAAAuJ,GACA,IAAAvJ,YAAAuJ,IAAA,MAAAvJ,EACAA,KAAAmJ,KACA,IAAAH,GAAAhJ,EAAAgJ,EAAA,IACAC,EAAAjJ,EAAAiJ,EAAA,IACAxQ,EAAAuH,EAAAvH,EAAA,IACAgR,EAAA1Q,KAAA0Q,IAAAT,EAAAC,EAAAxQ,GACAO,EAAAD,KAAAC,IAAAgQ,EAAAC,EAAAxQ,GACAhM,EAAAqV,IACAuH,EAAArQ,EAAAyQ,EACAH,GAAAtQ,EAAAyQ,GAAA,CAUA,OATAJ,IACA5c,EAAAuc,IAAAhQ,GAAAiQ,EAAAxQ,GAAA4Q,EAAA,GAAAJ,EAAAxQ,GACAwQ,IAAAjQ,GAAAP,EAAAuQ,GAAAK,EAAA,GACAL,EAAAC,GAAAI,EAAA,EACAA,GAAAC,EAAA,GAAAtQ,EAAAyQ,EAAA,EAAAzQ,EAAAyQ,EACAhd,GAAA,IAEA4c,EAAAC,EAAA,GAAAA,EAAA,IAAA7c,EAEA,GAAA8c,IAAA9c,EAAA4c,EAAAC,EAAAtJ,EAAAoJ,SAGA,QAAAM,IAAAjd,EAAA4c,EAAAC,EAAAF,GACA,WAAAha,UAAAC,OAAAma,GAAA/c,GAAA,GAAA8c,IAAA9c,EAAA4c,EAAAC,EAAA,MAAAF,EAAA,EAAAA,GAGA,QAAAG,IAAA9c,EAAA4c,EAAAC,EAAAF,GACA9gB,KAAAmE,KACAnE,KAAA+gB,KACA/gB,KAAAghB,KACAhhB,KAAA8gB,WAiCA,QAAAO,IAAAld,EAAAmd,EAAAC,GACA,MAGA,MAHApd,EAAA,GAAAmd,GAAAC,EAAAD,GAAAnd,EAAA,GACAA,EAAA,IAAAod,EACApd,EAAA,IAAAmd,GAAAC,EAAAD,IAAA,IAAAnd,GAAA,GACAmd,GAeA,QAAAE,IAAA9J,GACA,GAAAA,YAAA+J,IAAA,UAAAA,IAAA/J,EAAAsJ,EAAAtJ,EAAAxH,EAAAwH,EAAAvH,EAAAuH,EAAAoJ,QACA,IAAApJ,YAAAgK,IAAA,CACA,GAAAvd,GAAAuT,EAAAvT,EAAAwd,EACA,WAAAF,IAAA/J,EAAAsJ,EAAAvQ,KAAAmR,IAAAzd,GAAAuT,EAAAjX,EAAAgQ,KAAAoR,IAAA1d,GAAAuT,EAAAjX,EAAAiX,EAAAoJ,SAEApJ,YAAAoI,MAAApI,EAAAkJ,GAAAlJ,GACA,IAAAvH,GAAA2R,GAAApK,EAAAgJ,GACAxQ,EAAA4R,GAAApK,EAAAiJ,GACAK,EAAAc,GAAApK,EAAAvH,GACAJ,EAAAgS,IAAA,SAAA5R,EAAA,SAAAD,EAAA,SAAA8Q,GAAAgB,IACAvQ,EAAAsQ,IAAA,SAAA5R,EAAA,SAAAD,EAAA,QAAA8Q,GAAAiB,IACAC,EAAAH,IAAA,SAAA5R,EAAA,QAAAD,EAAA,SAAA8Q,GAAAmB,GACA,WAAAV,IAAA,IAAAhQ,EAAA,QAAA1B,EAAA0B,GAAA,KAAAA,EAAAyQ,GAAAxK,EAAAoJ,SAGA,QAAAsB,IAAApB,EAAA9Q,EAAAC,EAAA2Q,GACA,WAAAha,UAAAC,OAAAya,GAAAR,GAAA,GAAAS,IAAAT,EAAA9Q,EAAAC,EAAA,MAAA2Q,EAAA,EAAAA,GAGA,QAAAW,IAAAT,EAAA9Q,EAAAC,EAAA2Q,GACA9gB,KAAAghB,KACAhhB,KAAAkQ,KACAlQ,KAAAmQ,KACAnQ,KAAA8gB,WA0BA,QAAAiB,IAAArN,GACA,MAAAA,GAAA2N,GAAA5R,KAAAM,IAAA2D,EAAA,KAAAA,EAAA4N,GAAAC,GAGA,QAAAC,IAAA9N,GACA,MAAAA,GAAA+N,GAAA/N,MAAA4N,IAAA5N,EAAA6N,IAGA,QAAAG,IAAA3S,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAU,KAAAM,IAAAhB,EAAA,aAGA,QAAA+R,IAAA/R,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAU,KAAAM,KAAAhB,EAAA,iBAGA,QAAA4S,IAAAjL,GACA,GAAAA,YAAAgK,IAAA,UAAAA,IAAAhK,EAAAvT,EAAAuT,EAAAjX,EAAAiX,EAAAsJ,EAAAtJ,EAAAoJ,QACApJ,aAAA+J,MAAA/J,EAAA8J,GAAA9J,GACA,IAAAvT,GAAAsM,KAAAmS,MAAAlL,EAAAvH,EAAAuH,EAAAxH,GAAA2S,EACA,WAAAnB,IAAAvd,EAAA,EAAAA,EAAA,IAAAA,EAAAsM,KAAAqS,KAAApL,EAAAxH,EAAAwH,EAAAxH,EAAAwH,EAAAvH,EAAAuH,EAAAvH,GAAAuH,EAAAsJ,EAAAtJ,EAAAoJ,SAGA,QAAAiC,IAAA5e,EAAA1D,EAAAugB,EAAAF,GACA,WAAAha,UAAAC,OAAA4b,GAAAxe,GAAA,GAAAud,IAAAvd,EAAA1D,EAAAugB,EAAA,MAAAF,EAAA,EAAAA,GAGA,QAAAY,IAAAvd,EAAA1D,EAAAugB,EAAAF,GACA9gB,KAAAmE,KACAnE,KAAAS,KACAT,KAAAghB,KACAhhB,KAAA8gB,WAwBA,QAAAkC,IAAAtL,GACA,GAAAA,YAAAuL,IAAA,UAAAA,IAAAvL,EAAAvT,EAAAuT,EAAAqJ,EAAArJ,EAAAsJ,EAAAtJ,EAAAoJ,QACApJ,aAAAoI,MAAApI,EAAAkJ,GAAAlJ,GACA,IAAAgJ,GAAAhJ,EAAAgJ,EAAA,IACAC,EAAAjJ,EAAAiJ,EAAA,IACAxQ,EAAAuH,EAAAvH,EAAA,IACA6Q,GAAAkC,GAAA/S,EAAAgT,GAAAzC,EAAA0C,GAAAzC,IAAAuC,GAAAC,GAAAC,IACAC,EAAAlT,EAAA6Q,EACApN,GAAA0P,IAAA3C,EAAAK,GAAAuC,GAAAF,GAAAG,GACAzC,EAAAtQ,KAAAqS,KAAAlP,IAAAyP,MAAAC,GAAAtC,GAAA,EAAAA,IACA7c,EAAA4c,EAAAtQ,KAAAmS,MAAAhP,EAAAyP,GAAAR,GAAA,IAAArJ,GACA,WAAAyJ,IAAA9e,EAAA,EAAAA,EAAA,IAAAA,EAAA4c,EAAAC,EAAAtJ,EAAAoJ,SAGA,QAAA2C,IAAAtf,EAAA4c,EAAAC,EAAAF,GACA,WAAAha,UAAAC,OAAAic,GAAA7e,GAAA,GAAA8e,IAAA9e,EAAA4c,EAAAC,EAAA,MAAAF,EAAA,EAAAA,GAGA,QAAAmC,IAAA9e,EAAA4c,EAAAC,EAAAF,GACA9gB,KAAAmE,KACAnE,KAAA+gB,KACA/gB,KAAAghB,KACAhhB,KAAA8gB,WA2BA,QAAA4C,IAAAjB,EAAAkB,EAAAC,EAAAC,EAAAC,GACA,GAAAxB,GAAAG,IAAAJ,EAAAC,EAAAG,CACA,aAAAA,EAAA,EAAAH,EAAAD,GAAAsB,GACA,IAAArB,EAAA,EAAAD,GAAAuB,GACA,IAAAnB,EAAA,EAAAH,EAAA,EAAAD,GAAAwB,EACAxB,EAAAyB,GAAA,EAiCA,QAAAC,IAAA7T,EAAA3H,GACA,gBAAAmM,GACA,MAAAxE,GAAAwE,EAAAnM,GAIA,QAAAyb,IAAA9T,EAAAC,EAAAsB,GACA,MAAAvB,GAAAO,KAAAM,IAAAb,EAAAuB,GAAAtB,EAAAM,KAAAM,IAAAZ,EAAAsB,GAAAvB,EAAAuB,EAAA,EAAAA,EAAA,SAAAiD,GACA,MAAAjE,MAAAM,IAAAb,EAAAwE,EAAAvE,EAAAsB,IAIA,QAAAwS,IAAA/T,EAAAC,GACA,GAAA5H,GAAA4H,EAAAD,CACA,OAAA3H,GAAAwb,GAAA7T,EAAA3H,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAkI,KAAAqB,MAAAvJ,EAAA,KAAAA,GAAA2b,GAAAC,MAAAjU,GAAAC,EAAAD,GAGA,QAAAkU,IAAA3S,GACA,YAAAA,MAAA4S,GAAA,SAAAnU,EAAAC,GACA,MAAAA,GAAAD,EAAA8T,GAAA9T,EAAAC,EAAAsB,GAAAyS,GAAAC,MAAAjU,GAAAC,EAAAD,IAIA,QAAAmU,IAAAnU,EAAAC,GACA,GAAA5H,GAAA4H,EAAAD,CACA,OAAA3H,GAAAwb,GAAA7T,EAAA3H,GAAA2b,GAAAC,MAAAjU,GAAAC,EAAAD,GAyBA,QAAAoU,IAAAC,GACA,gBAAArjB,GACA,GAIAyT,GAAA6P,EAJA5P,EAAA1T,EAAA6F,OACA2Z,EAAA,GAAAzZ,OAAA2N,GACA+L,EAAA,GAAA1Z,OAAA2N,GACAzE,EAAA,GAAAlJ,OAAA2N,EAEA,KAAAD,EAAA,EAAeA,EAAAC,IAAOD,EACtB6P,EAAA3D,GAAA3f,EAAAyT,IACA+L,EAAA/L,GAAA6P,EAAA9D,GAAA,EACAC,EAAAhM,GAAA6P,EAAA7D,GAAA,EACAxQ,EAAAwE,GAAA6P,EAAArU,GAAA,CAMA,OAJAuQ,GAAA6D,EAAA7D,GACAC,EAAA4D,EAAA5D,GACAxQ,EAAAoU,EAAApU,GACAqU,EAAA1D,QAAA,EACA,SAAApM,GAIA,MAHA8P,GAAA9D,IAAAhM,GACA8P,EAAA7D,IAAAjM,GACA8P,EAAArU,IAAAuE,GACA8P,EAAA,KA8DA,QAAAC,IAAAtU,GACA,kBACA,MAAAA,IAIA,QAAAuU,IAAAvU,GACA,gBAAAuE,GACA,MAAAvE,GAAAuE,GAAA,IAsGA,QAAAiQ,IAAA1jB,GACA,eAAAA,EAAA2jB,IACAC,QAAAlP,SAAAM,cAAA,OAAA6O,GAAAnP,SAAAK,gBAAA+O,GAAApP,SAAAiF,aACAiK,GAAA1f,MAAA4O,UAAA9S,EACAA,EAAA8jB,GAAAlK,iBAAAiK,GAAArI,YAAAoI,IAAA,MAAAlK,iBAAA,aACAmK,GAAA/H,YAAA8H,IACA5jB,IAAAsT,MAAA,MAAAY,MAAA,KACA6P,IAAA/jB,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGA,QAAAgkB,IAAAhkB,GACA,aAAAA,EAAA2jB,IACAM,QAAAvP,SAAAO,gBAAA,mCACAgP,GAAApL,aAAA,YAAA7Y,IACAA,EAAAikB,GAAAnR,UAAAoR,QAAAC,gBACAnkB,IAAAokB,OACAL,GAAA/jB,EAAAiP,EAAAjP,EAAAkP,EAAAlP,EAAAR,EAAAQ,EAAAsH,EAAAtH,EAAAqkB,EAAArkB,EAAA6O,IAFA8U,IAKA,QAAAW,IAAAC,EAAAC,EAAAC,EAAAC,GAEA,QAAAC,GAAA7E,GACA,MAAAA,GAAAha,OAAAga,EAAA6E,MAAA,OAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAlF,EAAAmF,GACA,GAAAJ,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAtR,GAAAoM,EAAA/X,KAAA,kBAAAyc,EAAA,KAAAC,EACAQ,GAAAld,MAAc2L,IAAA,EAAA5E,EAAAoW,GAAAL,EAAAE,KAAsCrR,IAAA,EAAA5E,EAAAoW,GAAAJ,EAAAE,UAC/CD,GAAAC,IACLlF,EAAA/X,KAAA,aAAAgd,EAAAP,EAAAQ,EAAAP,GAIA,QAAAU,GAAAlW,EAAAC,EAAA4Q,EAAAmF,GACAhW,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAgCA,EAAAD,EAAA,MAAAA,GAAA,KAChCgW,EAAAld,MAAc2L,EAAAoM,EAAA/X,KAAA4c,EAAA7E,GAAA,eAAA4E,GAAA,EAAA5V,EAAAoW,GAAAjW,EAAAC,MACTA,GACL4Q,EAAA/X,KAAA4c,EAAA7E,GAAA,UAAA5Q,EAAAwV,GAIA,QAAAU,GAAAnW,EAAAC,EAAA4Q,EAAAmF,GACAhW,IAAAC,EACA+V,EAAAld,MAAc2L,EAAAoM,EAAA/X,KAAA4c,EAAA7E,GAAA,cAAA4E,GAAA,EAAA5V,EAAAoW,GAAAjW,EAAAC,KACTA,GACL4Q,EAAA/X,KAAA4c,EAAA7E,GAAA,SAAA5Q,EAAAwV,GAIA,QAAAjgB,GAAAogB,EAAAC,EAAAC,EAAAC,EAAAlF,EAAAmF,GACA,GAAAJ,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAtR,GAAAoM,EAAA/X,KAAA4c,EAAA7E,GAAA,2BACAmF,GAAAld,MAAc2L,IAAA,EAAA5E,EAAAoW,GAAAL,EAAAE,KAAsCrR,IAAA,EAAA5E,EAAAoW,GAAAJ,EAAAE,SAC/C,KAAAD,GAAA,IAAAC,GACLlF,EAAA/X,KAAA4c,EAAA7E,GAAA,SAAAiF,EAAA,IAAAC,EAAA,KAIA,gBAAA/V,EAAAC,GACA,GAAA4Q,MACAmF,IAOA,OANAhW,GAAAsV,EAAAtV,GAAAC,EAAAqV,EAAArV,GACA0V,EAAA3V,EAAAqB,WAAArB,EAAAsB,WAAArB,EAAAoB,WAAApB,EAAAqB,WAAAuP,EAAAmF,GACAE,EAAAlW,EAAAkW,OAAAjW,EAAAiW,OAAArF,EAAAmF,GACAG,EAAAnW,EAAAmW,MAAAlW,EAAAkW,MAAAtF,EAAAmF,GACAxgB,EAAAwK,EAAAoW,OAAApW,EAAAqW,OAAApW,EAAAmW,OAAAnW,EAAAoW,OAAAxF,EAAAmF,GACAhW,EAAAC,EAAA,KACA,SAAAuE,GAEA,IADA,GAAAgD,GAAA/C,GAAA,EAAAC,EAAAsR,EAAAnf,SACA4N,EAAAC,GAAAmM,GAAArJ,EAAAwO,EAAAvR,OAAA+C,EAAA3H,EAAA2E,EACA,OAAAqM,GAAAyF,KAAA,MAaA,QAAAC,IAAA1W,GACA,QAAAA,EAAAU,KAAAiW,IAAA3W,IAAA,EAAAA,GAAA,EAGA,QAAA4W,IAAA5W,GACA,QAAAA,EAAAU,KAAAiW,IAAA3W,IAAA,EAAAA,GAAA,EAGA,QAAA6W,IAAA7W,GACA,QAAAA,EAAAU,KAAAiW,IAAA,EAAA3W,IAAA,IAAAA,EAAA,GAmDA,QAAA8W,IAAAC,GACA,gBAAAzW,EAAA0W,GACA,GAAA5iB,GAAA2iB,GAAAzW,EAAA+Q,GAAA/Q,IAAAlM,GAAA4iB,EAAA3F,GAAA2F,IAAA5iB,GACA4c,EAAAsD,GAAAhU,EAAA0Q,EAAAgG,EAAAhG,GACAC,EAAAqD,GAAAhU,EAAA2Q,EAAA+F,EAAA/F,GACAF,EAAAuD,GAAAhU,EAAAyQ,QAAAiG,EAAAjG,QACA,iBAAApM,GAKA,MAJArE,GAAAlM,IAAAuQ,GACArE,EAAA0Q,IAAArM,GACArE,EAAA2Q,IAAAtM,GACArE,EAAAyQ,UAAApM,GACArE,EAAA,KAQA,QAAA2W,IAAA3W,EAAA0W,GACA,GAAA/F,GAAAqD,IAAAhU,EAAA+R,GAAA/R,IAAA2Q,GAAA+F,EAAA3E,GAAA2E,IAAA/F,GACA9Q,EAAAmU,GAAAhU,EAAAH,EAAA6W,EAAA7W,GACAC,EAAAkU,GAAAhU,EAAAF,EAAA4W,EAAA5W,GACA2Q,EAAAuD,GAAAhU,EAAAyQ,QAAAiG,EAAAjG,QACA,iBAAApM,GAKA,MAJArE,GAAA2Q,IAAAtM,GACArE,EAAAH,IAAAwE,GACArE,EAAAF,IAAAuE,GACArE,EAAAyQ,UAAApM,GACArE,EAAA,IAIA,QAAA4W,IAAAH,GACA,gBAAAzW,EAAA0W,GACA,GAAA5iB,GAAA2iB,GAAAzW,EAAA0S,GAAA1S,IAAAlM,GAAA4iB,EAAAhE,GAAAgE,IAAA5iB,GACA1D,EAAA4jB,GAAAhU,EAAA5P,EAAAsmB,EAAAtmB,GACAugB,EAAAqD,GAAAhU,EAAA2Q,EAAA+F,EAAA/F,GACAF,EAAAuD,GAAAhU,EAAAyQ,QAAAiG,EAAAjG,QACA,iBAAApM,GAKA,MAJArE,GAAAlM,IAAAuQ,GACArE,EAAA5P,IAAAiU,GACArE,EAAA2Q,IAAAtM,GACArE,EAAAyQ,UAAApM,GACArE,EAAA,KAQA,QAAA6W,IAAAJ,GACA,eAAAK,GAAA1V,GAGA,QAAA2V,GAAA/W,EAAA0W,GACA,GAAA5iB,GAAA2iB,GAAAzW,EAAAoT,GAAApT,IAAAlM,GAAA4iB,EAAAtD,GAAAsD,IAAA5iB,GACA4c,EAAAsD,GAAAhU,EAAA0Q,EAAAgG,EAAAhG,GACAC,EAAAqD,GAAAhU,EAAA2Q,EAAA+F,EAAA/F,GACAF,EAAAuD,GAAAhU,EAAAyQ,QAAAiG,EAAAjG,QACA,iBAAApM,GAKA,MAJArE,GAAAlM,IAAAuQ,GACArE,EAAA0Q,IAAArM,GACArE,EAAA2Q,IAAAvQ,KAAAM,IAAA2D,EAAAjD,IACApB,EAAAyQ,UAAApM,GACArE,EAAA,IAMA,MAlBAoB,MAgBA2V,EAAAhD,MAAA+C,EAEAC,GACG,GAwBH,QAAAC,MACA,MAAAC,MAAAC,GAAAC,IAAAF,GAAAG,GAAAJ,MAAAK,IAGA,QAAAF,MACAF,GAAA,EAGA,QAAAK,MACA3nB,KAAA4nB,MACA5nB,KAAA6nB,MACA7nB,KAAA2Y,MAAA,KA0BA,QAAAmP,IAAAtS,EAAAuS,EAAAC,GACA,GAAAtT,GAAA,GAAAiT,GAEA,OADAjT,GAAAuT,QAAAzS,EAAAuS,EAAAC,GACAtT,EAGA,QAAAwT,MACAb,OACAc,EAEA,KADA,GAAA7C,GAAA5Q,EAAA0T,GACA1T,IACA4Q,EAAAgC,GAAA5S,EAAAmT,QAAA,GAAAnT,EAAAkT,MAAArnB,KAAA,KAAA+kB,GACA5Q,IAAAiE,QAEAwP,GAGA,QAAAE,MACAf,IAAAgB,GAAAb,GAAAJ,OAAAK,GACAS,GAAAI,GAAA,CACA,KACAL,KACG,QACHC,GAAA,EACAK,KACAlB,GAAA,GAIA,QAAAmB,MACA,GAAApB,GAAAI,GAAAJ,MAAAU,EAAAV,EAAAiB,EACAP,GAAAW,KAAAhB,IAAAK,EAAAO,GAAAjB,GAGA,QAAAmB,MAEA,IADA,GAAAjG,GAAAD,EAAAG,EAAA2F,GAAAJ,EAAAW,IACAlG,GACAA,EAAAmF,OACAI,EAAAvF,EAAAoF,QAAAG,EAAAvF,EAAAoF,OACAtF,EAAAE,MAAA9J,QAEA2J,EAAAG,EAAA9J,MAAA8J,EAAA9J,MAAA,KACA8J,EAAAF,IAAA5J,MAAA2J,EAAA8F,GAAA9F,EAGAsG,IAAArG,EACAsG,GAAAb,GAGA,QAAAa,IAAAb,GACA,IAAAG,GAAA,CACAI,QAAAO,aAAAP,IACA,IAAAR,GAAAC,EAAAV,EACAS,GAAA,IACAC,EAAAW,MAAAJ,GAAAjK,WAAA+J,GAAAL,EAAAP,GAAAJ,MAAAK,KACAqB,QAAAC,cAAAD,OAEAA,KAAAT,GAAAb,GAAAJ,MAAA0B,GAAAE,YAAAR,GAAAC,KACAP,GAAA,EAAAZ,GAAAc,MAwDA,QAAAa,IAAAnQ,EAAA1Y,GACA,GAAA8oB,GAAApQ,EAAAqQ,YACA,KAAAD,SAAA9oB,KAAA8oB,EAAAE,MAAAC,GAAA,SAAAzU,OAAA,WACA,OAAAsU,GAGA,QAAAI,IAAAxQ,EAAA1Y,GACA,GAAA8oB,GAAApQ,EAAAqQ,YACA,KAAAD,SAAA9oB,KAAA8oB,EAAAE,MAAAG,GAAA,SAAA3U,OAAA,WACA,OAAAsU,GAGA,QAAAM,IAAA1Q,EAAA1Y,GACA,GAAA8oB,GAAApQ,EAAAqQ,YACA,KAAAD,SAAA9oB,IAAA,SAAAwU,OAAA,WACA,OAAAsU,GAGA,QAAA5J,IAAAxG,EAAA1Y,EAAAqpB,GASA,QAAAP,GAAAQ,GACAD,EAAAL,MAAAO,GACAF,EAAA5B,MAAAG,QAAA5X,EAAAqZ,EAAA3B,MAAA2B,EAAA1B,MAGA0B,EAAA3B,OAAA4B,GAAAtZ,EAAAsZ,EAAAD,EAAA3B,OAGA,QAAA1X,GAAAsZ,GACA,GAAAhV,GAAAgD,EAAA/C,EAAA8C,CAGA,IAAAgS,EAAAL,QAAAO,GAAA,MAAAtZ,IAEA,KAAAqE,IAAAkV,GAEA,GADAnS,EAAAmS,EAAAlV,GACA+C,EAAAtC,OAAAsU,EAAAtU,KAAA,CAKA,GAAAsC,EAAA2R,QAAAS,GAAA,MAAAC,IAAA1Z,EAIAqH,GAAA2R,QAAAW,IACAtS,EAAA2R,MAAAY,GACAvS,EAAAoQ,MAAAxX,OACAoH,EAAA/Q,GAAApG,KAAA,YAAAwY,IAAA1B,SAAAK,EAAAb,MAAAa,EAAAZ,aACA+S,GAAAlV,KAMAA,EAAAtU,IACAqX,EAAA2R,MAAAY,GACAvS,EAAAoQ,MAAAxX,aACAuZ,GAAAlV,IAoBA,GAZAoV,GAAA,WACAL,EAAAL,QAAAS,KACAJ,EAAAL,MAAAW,GACAN,EAAA5B,MAAAG,QAAA9U,EAAAuW,EAAA3B,MAAA2B,EAAA1B,MACA7U,EAAAwW,MAMAD,EAAAL,MAAAG,GACAE,EAAA/iB,GAAApG,KAAA,QAAAwY,IAAA1B,SAAAqS,EAAA7S,MAAA6S,EAAA5S,OACA4S,EAAAL,QAAAG,GAAA,CAKA,IAJAE,EAAAL,MAAAS,GAGAI,EAAA,GAAAjjB,OAAA2N,EAAA8U,EAAAQ,MAAAnjB,QACA4N,EAAA,EAAAgD,GAAA,EAAuBhD,EAAAC,IAAOD,GAC9B+C,EAAAgS,EAAAQ,MAAAvV,GAAA1T,MAAAV,KAAAwY,IAAA1B,SAAAqS,EAAA7S,MAAA6S,EAAA5S,UACAoT,IAAAvS,GAAAD,EAGAwS,GAAAnjB,OAAA4Q,EAAA,GAGA,QAAAxE,GAAAwW,GAKA,IAJA,GAAAjV,GAAAiV,EAAAD,EAAA9f,SAAA8f,EAAA5f,KAAAvJ,KAAA,KAAAopB,EAAAD,EAAA9f,WAAA8f,EAAA5B,MAAAG,QAAA3X,GAAAoZ,EAAAL,MAAAc,GAAA,GACAxV,GAAA,EACAC,EAAAsV,EAAAnjB,SAEA4N,EAAAC,GACAsV,EAAAvV,GAAApU,KAAA,KAAAmU,EAIAgV,GAAAL,QAAAc,KACAT,EAAA/iB,GAAApG,KAAA,MAAAwY,IAAA1B,SAAAqS,EAAA7S,MAAA6S,EAAA5S,OACAxG,KAIA,QAAAA,KACAoZ,EAAAL,MAAAY,GACAP,EAAA5B,MAAAxX,aACAuZ,GAAAxpB,EACA,QAAAsU,KAAAkV,GAAA,aACA9Q,GAAAqQ,aApGA,GACAc,GADAL,EAAA9Q,EAAAqQ,YAKAS,GAAAxpB,GAAAqpB,EACAA,EAAA5B,SAAAqB,EAAA,EAAAO,EAAA1B,MA+HA,QAAAoC,IAAA/pB,EAAA+U,GACA,GAAAiV,GAAAC,CACA,mBACA,GAAAC,GAAAhB,GAAAvpB,KAAAK,GACA6pB,EAAAK,EAAAL,KAKA,IAAAA,IAAAG,EAAA,CACAC,EAAAD,EAAAH,CACA,QAAAvV,GAAA,EAAAC,EAAA0V,EAAAvjB,OAAwC4N,EAAAC,IAAOD,EAC/C,GAAA2V,EAAA3V,GAAAS,SAAA,CACAkV,IAAA/V,QACA+V,EAAAE,OAAA7V,EAAA,EACA,QAKA4V,EAAAL,MAAAI,GAIA,QAAAG,IAAApqB,EAAA+U,EAAAnU,GACA,GAAAopB,GAAAC,CACA,sBAAArpB,GAAA,SAAA4T,MACA,mBACA,GAAA0V,GAAAhB,GAAAvpB,KAAAK,GACA6pB,EAAAK,EAAAL,KAKA,IAAAA,IAAAG,EAAA,CACAC,GAAAD,EAAAH,GAAA3V,OACA,QAAAG,IAAoBU,OAAAnU,SAAyB0T,EAAA,EAAAC,EAAA0V,EAAAvjB,OAA2B4N,EAAAC,IAAOD,EAC/E,GAAA2V,EAAA3V,GAAAS,SAAA,CACAkV,EAAA3V,GAAAD,CACA,OAGAC,IAAAC,GAAA0V,EAAAthB,KAAA0L,GAGA6V,EAAAL,MAAAI,GAsBA,QAAAI,IAAA/gB,EAAAyL,EAAAnU,GACA,GAAAZ,GAAAsJ,EAAAghB,GAOA,OALAhhB,GAAAyK,KAAA,WACA,GAAAmW,GAAAhB,GAAAvpB,KAAAK,IACAkqB,EAAAtpB,QAAAspB,EAAAtpB,WAAiDmU,GAAAnU,EAAAoG,MAAArH,KAAA8G,aAGjD,SAAAiS,GACA,MAAA0Q,IAAA1Q,EAAA1Y,GAAAY,MAAAmU,IAYA,QAAAwV,IAAAxV,GACA,kBACApV,KAAA0Z,gBAAAtE,IAIA,QAAAyV,IAAAzU,GACA,kBACApW,KAAA4Z,kBAAAxD,EAAAC,MAAAD,EAAAE,QAIA,QAAAwU,IAAA1V,EAAA2V,EAAAC,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAnrB,KAAAgU,aAAAoB,EACA,OAAA+V,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAH,EAAAE,EAAAE,EAAAH,IAIA,QAAAI,IAAAhV,EAAA2U,EAAAC,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAnrB,KAAAqrB,eAAAjV,EAAAC,MAAAD,EAAAE,MACA,OAAA6U,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAH,EAAAE,EAAAE,EAAAH,IAIA,QAAAM,IAAAlW,EAAA2V,EAAA9pB,GACA,GAAAgqB,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAA/pB,EAAAjB,KACA,cAAAgrB,MAAAhrB,MAAA0Z,gBAAAtE,IACA+V,EAAAnrB,KAAAgU,aAAAoB,GACA+V,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,KAIA,QAAAQ,IAAApV,EAAA2U,EAAA9pB,GACA,GAAAgqB,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAH,EAAA/pB,EAAAjB,KACA,cAAAgrB,MAAAhrB,MAAA4Z,kBAAAxD,EAAAC,MAAAD,EAAAE,QACA6U,EAAAnrB,KAAAqrB,eAAAjV,EAAAC,MAAAD,EAAAE,OACA6U,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,KAYA,QAAAS,IAAArV,EAAAnV,GACA,QAAAipB,KACA,GAAAnR,GAAA/Y,KAAA2U,EAAA1T,EAAAoG,MAAA0R,EAAAjS,UACA,OAAA6N,IAAA,SAAAD,GACAqE,EAAAiB,eAAA5D,EAAAC,MAAAD,EAAAE,MAAA3B,EAAAD,KAIA,MADAwV,GAAAwB,OAAAzqB,EACAipB,EAGA,QAAAyB,IAAAvW,EAAAnU,GACA,QAAAipB,KACA,GAAAnR,GAAA/Y,KAAA2U,EAAA1T,EAAAoG,MAAA0R,EAAAjS,UACA,OAAA6N,IAAA,SAAAD,GACAqE,EAAAe,aAAA1E,EAAAT,EAAAD,KAIA,MADAwV,GAAAwB,OAAAzqB,EACAipB,EAYA,QAAA0B,IAAAvrB,EAAAY,GACA,kBACAioB,GAAAlpB,KAAAK,GAAA0nB,OAAA9mB,EAAAoG,MAAArH,KAAA8G,YAIA,QAAA+kB,IAAAxrB,EAAAY,GACA,MAAAA,MAAA,WACAioB,GAAAlpB,KAAAK,GAAA0nB,MAAA9mB,GAcA,QAAA6qB,IAAAzrB,EAAAY,GACA,kBACAsoB,GAAAvpB,KAAAK,GAAAuJ,UAAA3I,EAAAoG,MAAArH,KAAA8G,YAIA,QAAAilB,IAAA1rB,EAAAY,GACA,MAAAA,MAAA,WACAsoB,GAAAvpB,KAAAK,GAAAuJ,SAAA3I,GAcA,QAAA+qB,IAAA3rB,EAAAY,GACA,qBAAAA,GAAA,SAAA4T,MACA,mBACA0U,GAAAvpB,KAAAK,GAAAyJ,KAAA7I,GA4CA,QAAAoP,IAAA+E,GACA,OAAAA,EAAA,IAAAF,OAAAC,MAAA,SAAA8W,MAAA,SAAAvX,GACA,GAAAC,GAAAD,EAAAW,QAAA,IAEA,OADAV,IAAA,IAAAD,IAAAH,MAAA,EAAAI,KACAD,GAAA,UAAAA,IAIA,QAAAwX,IAAA7rB,EAAA+U,EAAAwB,GACA,GAAAuV,GAAAC,EAAAC,EAAAhc,GAAA+E,GAAA8T,GAAAK,EACA,mBACA,GAAAgB,GAAA8B,EAAArsB,KAAAK,GACAsG,EAAA4jB,EAAA5jB,EAKAA,KAAAwlB,IAAAC,GAAAD,EAAAxlB,GAAAoM,QAAApM,GAAAyO,EAAAwB,GAEA2T,EAAA5jB,GAAAylB,GAYA,QAAAE,IAAAjsB,GACA,kBACA,GAAAoY,GAAAzY,KAAAiU,UACA,QAAAU,KAAA3U,MAAAopB,aAAA,IAAAzU,IAAAtU,EAAA,MACAoY,MAAAsE,YAAA/c,OAwDA,QAAAusB,IAAAnX,EAAA2V,GACA,GAAAE,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAzQ,EAAA1a,KAAAoV,GACA4V,GAAAhrB,KAAAmF,MAAAkV,eAAAjF,GAAAsF,EAAA1a,KAAAoV,GACA,OAAA+V,KAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,IAIA,QAAAwB,IAAApX,GACA,kBACApV,KAAAmF,MAAAkV,eAAAjF,IAIA,QAAAqX,IAAArX,EAAA2V,EAAAC,GACA,GAAAC,GACAC,CACA,mBACA,GAAAC,GAAAzQ,EAAA1a,KAAAoV,EACA,OAAA+V,KAAAH,EAAA,KACAG,IAAAF,EAAAC,EACAA,EAAAH,EAAAE,EAAAE,EAAAH,IAIA,QAAA0B,IAAAtX,EAAA2V,EAAA9pB,GACA,GAAAgqB,GACAM,EACAL,CACA,mBACA,GAAAC,GAAAzQ,EAAA1a,KAAAoV,GACA4V,EAAA/pB,EAAAjB,KAEA,OADA,OAAAgrB,IAAAhrB,KAAAmF,MAAAkV,eAAAjF,GAAA4V,EAAAtQ,EAAA1a,KAAAoV,IACA+V,IAAAH,EAAA,KACAG,IAAAF,GAAAD,IAAAO,EAAAL,EACAA,EAAAH,EAAAE,EAAAE,EAAAI,EAAAP,IAcA,QAAA2B,IAAAvX,EAAAnU,EAAAsZ,GACA,QAAA2P,KACA,GAAAnR,GAAA/Y,KAAA2U,EAAA1T,EAAAoG,MAAA0R,EAAAjS,UACA,OAAA6N,IAAA,SAAAD,GACAqE,EAAA5T,MAAAqV,YAAApF,EAAAT,EAAAD,GAAA6F,IAIA,MADA2P,GAAAwB,OAAAzqB,EACAipB,EAWA,QAAA0C,IAAA3rB,GACA,kBACAjB,KAAAgc,YAAA/a,GAIA,QAAA4rB,IAAA5rB,GACA,kBACA,GAAA+pB,GAAA/pB,EAAAjB,KACAA,MAAAgc,YAAA,MAAAgP,EAAA,GAAAA,GAkCA,QAAA8B,IAAAlP,EAAAC,EAAAzI,EAAA/U,GACAL,KAAA8d,QAAAF,EACA5d,KAAA+d,SAAAF,EACA7d,KAAA+sB,MAAA3X,EACApV,KAAA2qB,IAAAtqB,EAGA,QAAAsJ,IAAAyL,GACA,MAAApC,MAAArJ,WAAAyL,GAGA,QAAA4X,MACA,QAAA3sB,GAgCA,QAAA4sB,IAAAvY,GACA,OAAAA,EAGA,QAAAwY,IAAAxY,GACA,MAAAA,KAGA,QAAAyY,IAAAzY,GACA,MAAAA,IAAA,EAAAA,GAGA,QAAA0Y,IAAA1Y,GACA,QAAAA,GAAA,MAAAA,SAAA,EAAAA,GAAA,KAGA,QAAA2Y,IAAA3Y,GACA,MAAAA,OAGA,QAAA4Y,IAAA5Y,GACA,QAAAA,MAAA,EAGA,QAAA6Y,IAAA7Y,GACA,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,KA4CA,QAAA8Y,IAAA9Y,GACA,SAAAjE,KAAAmR,IAAAlN,EAAA+Y,IAGA,QAAAC,IAAAhZ,GACA,MAAAjE,MAAAoR,IAAAnN,EAAA+Y,IAGA,QAAAE,IAAAjZ,GACA,SAAAjE,KAAAmR,IAAAgM,GAAAlZ,IAAA,EAGA,QAAAmZ,IAAAnZ,GACA,MAAAjE,MAAAM,IAAA,KAAA2D,EAAA,IAGA,QAAAoZ,IAAApZ,GACA,SAAAjE,KAAAM,IAAA,MAAA2D,GAGA,QAAAqZ,IAAArZ,GACA,QAAAA,GAAA,MAAAjE,KAAAM,IAAA,KAAA2D,EAAA,MAAAjE,KAAAM,IAAA,QAAA2D,IAAA,EAGA,QAAAsZ,IAAAtZ,GACA,SAAAjE,KAAAqS,KAAA,EAAApO,KAGA,QAAAuZ,IAAAvZ,GACA,MAAAjE,MAAAqS,KAAA,KAAApO,KAGA,QAAAwZ,IAAAxZ,GACA,QAAAA,GAAA,QAAAjE,KAAAqS,KAAA,EAAApO,KAAAjE,KAAAqS,KAAA,GAAApO,GAAA,GAAAA,GAAA,KAcA,QAAAyZ,IAAAzZ,GACA,SAAA0Z,GAAA,EAAA1Z,GAGA,QAAA0Z,IAAA1Z,GACA,OAAAA,MAAA2Z,GAAAC,GAAA5Z,MAAA6Z,GAAAD,IAAA5Z,GAAA8Z,IAAA9Z,EAAA+Z,GAAA/Z,EAAAga,GAAAJ,IAAA5Z,GAAAia,IAAAja,EAAAka,GAAAN,IAAA5Z,GAAAma,IAAAna,EAAAoa,GAGA,QAAAC,IAAAra,GACA,QAAAA,GAAA,QAAA0Z,GAAA,EAAA1Z,GAAA0Z,GAAA1Z,EAAA,QA6FA,QAAAsa,IAAAjW,EAAA1Y,GAEA,IADA,GAAA4uB,KACAA,EAAAlW,EAAAqQ,iBAAA6F,IAAA5uB,KACA,KAAA0Y,IAAA9E,YACA,MAAAib,IAAAlH,KAAAX,KAAA6H,EAGA,OAAAD,GA0DA,QAAAE,MACAvvB,EAAAgP,MAAAqP,2BA2FA,QAAA3I,IAAAZ,GACA,OAAUY,KAAAZ,GAIV,QAAA0a,MACA,OAAAxvB,EAAAgP,MAAAqQ,OAGA,QAAAoQ,MACA,GAAAxqB,GAAA7E,KAAAsvB,iBAAAtvB,IACA,eAAA6E,EAAAb,MAAAmhB,QAAAlkB,MAAA4D,EAAAT,OAAA+gB,QAAAlkB,QAIA,QAAAqV,IAAAyC,GACA,MAAAA,EAAAwW,SAAA,KAAAxW,IAAA9E,YAAA,MACA,OAAA8E,GAAAwW,QAGA,QAAAC,IAAAhhB,GACA,MAAAA,GAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGA,QAAAihB,IAAA1W,GACA,GAAAsQ,GAAAtQ,EAAAwW,OACA,OAAAlG,KAAAqG,IAAAC,OAAAtG,EAAArW,WAAA,KAGA,QAAArD,MACA,MAAAigB,IAAAC,IAGA,QAAAC,MACA,MAAAF,IAAAG,IAOA,QAAAH,IAAAF,GAOA,QAAAM,GAAAlZ,GACA,GAAAmZ,GAAAnZ,EACAoZ,SAAA,UAAAC,GACAjd,UAAA,YACAzL,MAAA6N,GAAA,YAEA2a,GAAAzc,QAAAC,OAAA,QACApO,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAA+qB,GAAAH,SACAthB,MAAAshB,GACA7b,KAAA;AACA,GAAA5F,GAAA8H,GAAAtW,MAAAwO,MACAvJ,IAAAjF,MACAqF,KAAA,IAAAmJ,EAAA,OACAnJ,KAAA,IAAAmJ,EAAA,OACAnJ,KAAA,QAAAmJ,EAAA,MAAAA,EAAA,OACAnJ,KAAA,SAAAmJ,EAAA,MAAAA,EAAA,SAGAsI,EAAA5D,UAAA,cACAzL,MAAA6N,GAAA,eACA9B,QAAAC,OAAA,QACApO,KAAA,qBACAA,KAAA,SAAA+qB,GAAApd,WACA3N,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,+BAEA,IAAAgrB,GAAAvZ,EAAA5D,UAAA,WACAzL,KAAAioB,EAAAY,QAAA,SAAA/nB,GAAsC,MAAAA,GAAA+M,MAEtC+a,GAAA/c,OAAAvJ,SAEAsmB,EAAA7c,QAAAC,OAAA,QACApO,KAAA,iBAAAkD,GAAoC,wBAAAA,EAAA+M,OACpCjQ,KAAA,kBAAAkD,GAAqC,MAAA6nB,IAAA7nB,EAAA+M,QAErCwB,EACA1C,KAAAmc,GACAlrB,KAAA,eACAA,KAAA,wBACAF,MAAA,+CACAwB,GAAA,mCAAA6pB,GAyCA,QAAAD,KACA,GAAAzZ,GAAA7R,GAAAjF,MACAgT,EAAAsD,GAAAtW,MAAAgT,SAEAA,IACA8D,EAAA5D,UAAA,cACA/N,MAAA,gBACAE,KAAA,IAAA2N,EAAA,OACA3N,KAAA,IAAA2N,EAAA,OACA3N,KAAA,QAAA2N,EAAA,MAAAA,EAAA,OACA3N,KAAA,SAAA2N,EAAA,MAAAA,EAAA,OAEA8D,EAAA5D,UAAA,WACA/N,MAAA,gBACAE,KAAA,aAAAkD,GAAkC,YAAAA,EAAA+M,KAAA/M,EAAA+M,KAAAvO,OAAA,GAAAiM,EAAA,MAAAyd,EAAA,EAAAzd,EAAA,MAAAyd,EAAA,IAClCprB,KAAA,aAAAkD,GAAkC,YAAAA,EAAA+M,KAAA,GAAAtC,EAAA,MAAAyd,EAAA,EAAAzd,EAAA,MAAAyd,EAAA,IAClCprB,KAAA,iBAAAkD,GAAsC,YAAAA,EAAA+M,MAAA,MAAA/M,EAAA+M,KAAAtC,EAAA,MAAAA,EAAA,MAAAyd,MACtCprB,KAAA,kBAAAkD,GAAuC,YAAAA,EAAA+M,MAAA,MAAA/M,EAAA+M,KAAAtC,EAAA,MAAAA,EAAA,MAAAyd,OAIvC3Z,EAAA5D,UAAA,sBACA/N,MAAA,kBACAE,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,QAAAqrB,GAAAvY,EAAAC,GACA,MAAAD,GAAAoX,QAAAmB,SAAA,GAAAC,GAAAxY,EAAAC,GAGA,QAAAuY,GAAAxY,EAAAC,GACApY,KAAAmY,OACAnY,KAAAoY,OACApY,KAAAqpB,MAAAlR,EAAAoX,QACAvvB,KAAA4e,OAAA,EAyBA,QAAA4R,KAqEA,QAAAI,KACA,GAAAC,GAAAhmB,GAAAsN,IACA2Y,GAAAC,GAAAC,IACAvgB,KAAAY,IAAAwf,EAAA,GAAAI,EAAA,IAAAxgB,KAAAY,IAAAwf,EAAA,GAAAI,EAAA,IAAAD,GAAA,EACAD,GAAA,GAEAE,EAAAJ,EACAK,GAAA,EACAC,KACAC,IAGA,QAAAA,KACA,GAAA1c,EAKA,QAHAmK,EAAAoS,EAAA,GAAAI,EAAA,GACAvS,EAAAmS,EAAA,GAAAI,EAAA,GAEAC,GACA,IAAAC,IACA,IAAAC,IACAC,IAAA5S,EAAApO,KAAAC,IAAAghB,EAAAC,EAAAlhB,KAAA0Q,IAAAmC,EAAAsO,EAAA/S,IAAAgT,EAAAF,EAAA9S,EAAAiT,EAAAF,EAAA/S,GACAkT,IAAAjT,EAAArO,KAAAC,IAAAshB,EAAAC,EAAAxhB,KAAA0Q,IAAA+Q,EAAAC,EAAArT,IAAAsT,EAAAH,EAAAnT,EAAAuT,EAAAF,EAAArT,EACA,MAEA,KAAAwT,IACAb,EAAA,GAAA5S,EAAApO,KAAAC,IAAAghB,EAAAC,EAAAlhB,KAAA0Q,IAAAmC,EAAAqO,EAAA9S,IAAAgT,EAAAF,EAAA9S,EAAAiT,EAAAF,GACAH,EAAA,IAAA5S,EAAApO,KAAAC,IAAAghB,EAAAE,EAAAnhB,KAAA0Q,IAAAmC,EAAAsO,EAAA/S,IAAAgT,EAAAF,EAAAG,EAAAF,EAAA/S,GACAkT,EAAA,GAAAjT,EAAArO,KAAAC,IAAAshB,EAAAC,EAAAxhB,KAAA0Q,IAAA+Q,EAAAD,EAAAnT,IAAAsT,EAAAH,EAAAnT,EAAAuT,EAAAF,GACAJ,EAAA,IAAAjT,EAAArO,KAAAC,IAAAshB,EAAAG,EAAA1hB,KAAA0Q,IAAA+Q,EAAAC,EAAArT,IAAAsT,EAAAH,EAAAI,EAAAF,EAAArT,EACA,MAEA,KAAAyT,IACAd,IAAAI,EAAAphB,KAAAC,IAAAghB,EAAAjhB,KAAA0Q,IAAAmC,EAAAqO,EAAA9S,EAAA4S,IAAAK,EAAArhB,KAAAC,IAAAghB,EAAAjhB,KAAA0Q,IAAAmC,EAAAsO,EAAA/S,EAAA4S,KACAM,IAAAK,EAAA3hB,KAAAC,IAAAshB,EAAAvhB,KAAA0Q,IAAA+Q,EAAAD,EAAAnT,EAAAiT,IAAAM,EAAA5hB,KAAAC,IAAAshB,EAAAvhB,KAAA0Q,IAAA+Q,EAAAC,EAAArT,EAAAiT,KAKAD,EAAAD,IACAJ,IAAA,EACA/c,EAAAid,IAAAC,IAAAld,EACAA,EAAAmd,IAAAC,IAAApd,EACAY,IAAAkd,KAAAvC,EAAA5qB,KAAA,SAAA+qB,GAAA9a,EAAAkd,GAAAld,MAGA+c,EAAAD,IACAL,IAAA,EACArd,EAAAud,IAAAE,IAAAzd,EACAA,EAAA0d,IAAAC,IAAA3d,EACAY,IAAAmd,KAAAxC,EAAA5qB,KAAA,SAAA+qB,GAAA9a,EAAAmd,GAAAnd,MAGA+T,EAAArW,cAAAqW,EAAArW,WACA+d,IAAAc,EAAA7e,EAAA,MAAA8e,EAAA9e,EAAA,OACAge,IAAAoB,EAAApf,EAAA,MAAAqf,EAAArf,EAAA,OAEAA,EAAA,QAAA6e,GACA7e,EAAA,QAAAof,GACApf,EAAA,QAAA8e,GACA9e,EAAA,QAAAqf,IACAhJ,EAAArW,YAAA6e,EAAAO,IAAAN,EAAAO,IACA9B,EAAAhwB,KAAA4X,GACAua,EAAA1C,SAIA,QAAA2C,KAEA,GADAxD,KACAvvB,EAAAgP,MAAAgkB,QAAA,CACA,GAAAhzB,EAAAgP,MAAAgkB,QAAA7rB,OAAA,MACA8rB,IAAA/J,aAAA+J,GACAA,EAAAvU,WAAA,WAA6CuU,EAAA,MAAsB,KACnE/b,EAAAnQ,GAAA,6DAEAuX,IAAAte,EAAAgP,MAAAuP,KAAA+S,GACA/S,EAAAxX,GAAA,+DAEAmQ,GAAAzR,KAAA,wBACA4qB,EAAA5qB,KAAA,SAAA+qB,GAAAH,SACA5G,EAAArW,cAAAqW,EAAArW,WACAwc,GAAAxc,KAAAqW,EAAArW,UAAA,KAAAud,EAAAhwB,KAAA4X,IACAua,EAAA3L,MAGA,QAAA+L,KACA,OAAAlzB,EAAAgP,MAAAmkB,SACA,QACAjC,EAAAW,GAAAM,CACA,MAEA,SACAT,IAAAgB,KACAb,IAAAG,EAAAE,EAAAjT,EAAA4S,EAAAE,EAAAE,EAAAhT,EAAA4S,GACAM,IAAAI,EAAAE,EAAAvT,EAAAiT,EAAAE,EAAAG,EAAAtT,EAAAiT,GACAT,EAAAiB,GACAnB,IAEA,MAEA,SACAE,IAAAgB,IAAAhB,IAAAiB,KACAd,EAAA,EAAAG,EAAAE,EAAAjT,EAAwC4S,EAAA,IAAAE,EAAAE,EAAAhT,GACxCkT,EAAA,EAAAI,EAAAE,EAAAvT,EAAwCiT,EAAA,IAAAE,EAAAG,EAAAtT,GACxCwS,EAAAC,GACAtB,EAAA5qB,KAAA,SAAA+qB,GAAApd,WACAoe,IAEA,MAEA,gBAEAD,KAGA,QAAA6B,KACA,OAAApzB,EAAAgP,MAAAmkB,SACA,QACAjC,IACAC,EAAAC,EAAAF,GAAA,EACAM,IAEA,MAEA,SACAE,IAAAiB,KACAd,EAAA,EAAAG,EAAAE,EAAmCL,EAAA,IAAAE,EAAAE,GACnCE,EAAA,EAAAI,EAAAE,EAAmCN,EAAA,IAAAE,EAAAG,GACnCd,EAAAgB,GACAlB,IAEA,MAEA,SACAE,IAAAC,KACA3xB,EAAAgP,MAAAqkB,QACAxB,IAAAG,EAAAE,EAAAjT,EAAA4S,EAAAE,EAAAE,EAAAhT,EAAA4S,GACAM,IAAAI,EAAAE,EAAAvT,EAAAiT,EAAAE,EAAAG,EAAAtT,EAAAiT,GACAT,EAAAiB,KAEAd,EAAA,EAAAG,EAAAE,EAAqCL,EAAA,IAAAE,EAAAE,GACrCE,EAAA,EAAAI,EAAAE,EAAqCN,EAAA,IAAAE,EAAAG,GACrCd,EAAAgB,IAEArC,EAAA5qB,KAAA,SAAA+qB,GAAA9a,IACA8b,IAEA,MAEA,gBAEAD,KA3NA,GAAAvxB,EAAAgP,MAAAgkB,SAAgC,GAAAhzB,EAAAgP,MAAAskB,eAAAnsB,OAAAnH,EAAAgP,MAAAgkB,QAAA7rB,OAAA,MAAAoqB,UAChC,IAAA0B,EAAA,MACA,IAAA1e,EAAA9M,MAAArH,KAAA8G,WAAA,CAEA,GAQA6qB,GAAAE,EACAI,EAAAG,EACAR,EAAAE,EACAK,EAAAE,EACAxT,EACAC,EACAoS,EAEAH,EACAC,EAjBA7Y,EAAAnY,KACAsV,EAAA1V,EAAAgP,MAAA8P,OAAArH,SAAA/B,KACAgc,EAAA,eAAA1xB,EAAAgP,MAAAukB,QAAA7d,EAAA,UAAAA,GAAAkc,GAAA5xB,EAAAgP,MAAAqkB,OAAAV,GAAAD,GACAb,EAAA/B,IAAAK,GAAA,KAAAqD,GAAA9d,GACAyc,EAAArC,IAAAG,GAAA,KAAAwD,GAAA/d,GACA+T,EAAA/S,GAAA6B,GACA3J,EAAA6a,EAAA7a,OACAwE,EAAAqW,EAAArW,UACA0e,EAAAljB,EAAA,MACAwjB,EAAAxjB,EAAA,MACA8U,EAAA9U,EAAA,MACA0jB,EAAA1jB,EAAA,MAIAsiB,EAAAW,GAAAM,GAAAnyB,EAAAgP,MAAA0kB,SAGAjC,EAAAxmB,GAAAsN,GACA8Y,EAAAI,EACAqB,EAAAhC,EAAAvY,EAAArR,WAAAysB,aAEA,aAAAje,EACA+T,EAAArW,cACA2e,EAAAjC,IAAAK,GAAA2B,EAAAL,EAAA,GAAAY,EAAAvC,IAAAG,GAAAmC,EAAAX,EAAA,KACAO,EAAAlC,IAAAK,GAAAzM,EAAAqO,EAAAQ,EAAAzC,IAAAG,GAAAqC,EAAAD,KAGAN,EAAA3e,EAAA,MACAif,EAAAjf,EAAA,MACA4e,EAAA5e,EAAA,MACAmf,EAAAnf,EAAA,OAGA6e,EAAAF,EACAS,EAAAH,EACAH,EAAAF,EACAS,EAAAF,CAEA,IAAArb,GAAA7R,GAAAkT,GACA9S,KAAA,yBAEA4qB,EAAAnZ,EAAA5D,UAAA,YACA7N,KAAA,SAAA+qB,GAAA9a,GAEA,IAAA1V,EAAAgP,MAAAgkB,QACA9b,EACAnQ,GAAA,kBAAAiqB,GAAA,GACAjqB,GAAA,mCAAAgsB,GAAA,OACK,CACL,GAAAxU,GAAAlZ,GAAArF,EAAAgP,MAAAuP,MACAxX,GAAA,gBAAAmsB,GAAA,GACAnsB,GAAA,cAAAqsB,GAAA,GACArsB,GAAA,kBAAAiqB,GAAA,GACAjqB,GAAA,gBAAAgsB,GAAA,EAEAa,IAAA5zB,EAAAgP,MAAAuP,MAGAgR,KACAsE,GAAAtb,GACAoY,EAAAhwB,KAAA4X,GACAua,EAAAriB,SA6JA,QAAA8f,KACA,GAAA9G,GAAArpB,KAAAuvB,UAAiCvc,UAAA,KAGjC,OAFAqW,GAAA7a,SAAAnH,MAAArH,KAAA8G,WACAuiB,EAAAqG,MACArG,EA9XA,GAIAwJ,GAJArkB,EAAA6gB,GACAlb,EAAAib,GACAsE,EAAAhmB,EAAAsiB,EAAA,uBACAS,EAAA,CA+YA,OA7VAT,GAAAoB,KAAA,SAAAta,EAAA9D,GACA8D,EAAA9D,UACA8D,EACAnQ,GAAA,yBAAyC+pB,EAAA1wB,KAAA8G,WAAAysB,cAAAljB,UACzC1J,GAAA,uCAAuD+pB,EAAA1wB,KAAA8G,WAAAigB,QACvDmD,MAAA,mBAQA,QAAAA,GAAAxV,GACA2U,EAAArW,UAAA,IAAA0B,GAAA8a,GAAAmE,GAAA,KAAAhf,EAAAD,GACA6b,EAAAhwB,KAAA4X,GACAua,EAAA1C,QAVA,GAAA7X,GAAAnY,KACAqpB,EAAAlR,EAAAoX,QACAmD,EAAAhC,EAAAvY,EAAArR,WACA8sB,EAAAvK,EAAArW,UACA2gB,EAAAjE,EAAAmE,MAAA,kBAAA7gB,KAAA3L,MAAArH,KAAA8G,WAAAkM,EAAAqW,EAAA7a,QACAmG,EAAAmf,GAAAF,EAAAD,EAQA,OAAAC,IAAAD,EAAAzJ,IAAA,KAGApT,EACA1C,KAAA,WACA,GAAA+D,GAAAnY,KACAoY,EAAAtR,UACAuiB,EAAAlR,EAAAoX,QACAoE,EAAAjE,EAAAmE,MAAA,kBAAA7gB,KAAA3L,MAAA8Q,EAAAC,GAAApF,EAAAqW,EAAA7a,QACAkkB,EAAAhC,EAAAvY,EAAAC,GAAAmb,aAEAE,IAAAtb,GACAkR,EAAArW,UAAA,MAAA2gB,GAAAnE,GAAAmE,GAAA,KAAAA,EACApD,EAAAhwB,KAAA4X,GACAua,EAAAriB,QAAA2f,QAAAjJ,SA8CA4J,EAAArtB,WACAiwB,YAAA,WAEA,MADA,OAAAvzB,KAAA4e,SAAA5e,KAAAqpB,MAAAqH,QAAA1wB,UAAA+zB,UAAA,GACA/zB,MAEAqQ,MAAA,WAEA,MADArQ,MAAA+zB,WAAA/zB,KAAA+zB,UAAA,EAAA/zB,KAAA0yB,KAAA,UACA1yB,MAEAgwB,MAAA,WAEA,MADAhwB,MAAA0yB,KAAA,SACA1yB,MAEA+mB,IAAA,WAEA,MADA,OAAA/mB,KAAA4e,eAAA5e,MAAAqpB,MAAAqH,QAAA1wB,KAAA0yB,KAAA,QACA1yB,MAEA0yB,KAAA,SAAApd,GACA4C,EAAA,GAAA8b,IAAAhE,EAAA1a,EAAAoa,EAAAC,OAAA3vB,KAAAqpB,MAAArW,YAAA0gB,EAAArsB,MAAAqsB,GAAApe,EAAAtV,KAAAmY,KAAAnY,KAAAoY,SA2OA4X,EAAAxhB,OAAA,SAAA6F,GACA,MAAAvN,WAAAC,QAAAyH,EAAA,kBAAA6F,KAAA4f,MAAA5f,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAA2b,GAAAxhB,GAGAwhB,EAAA7b,OAAA,SAAAE,GACA,MAAAvN,WAAAC,QAAAoN,EAAA,kBAAAE,KAAA4f,KAAA5f,GAAA2b,GAAA7b,GAGA6b,EAAAS,WAAA,SAAApc,GACA,MAAAvN,WAAAC,QAAA0pB,GAAApc,EAAA2b,GAAAS,GAGAT,EAAArpB,GAAA,WACA,GAAA1F,GAAAyyB,EAAA/sB,GAAAU,MAAAqsB,EAAA5sB,UACA,OAAA7F,KAAAyyB,EAAA1D,EAAA/uB,GAGA+uB,EAUA,QAAAkE,IAAAC,GACA,gBAAAjkB,EAAAC,GACA,MAAAgkB,GACAjkB,EAAAkkB,OAAAnzB,MAAAiP,EAAAwO,OAAAzd,MACAkP,EAAAikB,OAAAnzB,MAAAkP,EAAAuO,OAAAzd,QAgIA,QAAAozB,MACAr0B,KAAAs0B,IAAAt0B,KAAAu0B,IACAv0B,KAAAw0B,IAAAx0B,KAAAy0B,IAAA,KACAz0B,KAAAqU,EAAA,GAGA,QAAApB,MACA,UAAAohB,IAqHA,QAAAK,IAAAnsB,GACA,MAAAA,GAAA6rB,OAGA,QAAAO,IAAApsB,GACA,MAAAA,GAAAmW,OAGA,QAAAkW,IAAArsB,GACA,MAAAA,GAAAssB,OAGA,QAAAC,IAAAvsB,GACA,MAAAA,GAAAwsB,WAGA,QAAAC,IAAAzsB,GACA,MAAAA,GAAA0sB,SAoEA,QAAAC,OAkDA,QAAAC,IAAAC,EAAAtlB,GACA,GAAA1G,GAAA,GAAA8rB,GAGA,IAAAE,YAAAF,IAAAE,EAAAhhB,KAAA,SAAAnT,EAAAoC,GAA+D+F,EAAAmM,IAAAlS,EAAApC,SAG/D,IAAAgG,MAAAouB,QAAAD,GAAA,CACA,GAEA1d,GAFA/C,GAAA,EACAC,EAAAwgB,EAAAruB,MAGA,UAAA+I,EAAA,OAAA6E,EAAAC,GAAAxL,EAAAmM,IAAAZ,EAAAygB,EAAAzgB,QACA,QAAAA,EAAAC,GAAAxL,EAAAmM,IAAAzF,EAAA4H,EAAA0d,EAAAzgB,KAAAygB,GAAA1d,OAIA,IAAA0d,EAAA,OAAA/xB,KAAA+xB,GAAAhsB,EAAAmM,IAAAlS,EAAA+xB,EAAA/xB,GAEA,OAAA+F,GA2DA,QAAAksB,MACA,SAGA,QAAAC,IAAAH,EAAA/xB,EAAApC,GACAm0B,EAAA/xB,GAAApC,EAGA,QAAAu0B,MACA,MAAAL,MAGA,QAAAM,IAAArsB,EAAA/F,EAAApC,GACAmI,EAAAmM,IAAAlS,EAAApC,GAGA,QAAAy0B,OAoBA,QAAAC,IAAAP,EAAAtlB,GACA,GAAAyF,GAAA,GAAAmgB,GAGA,IAAAN,YAAAM,IAAAN,EAAAhhB,KAAA,SAAAnT,GAA0DsU,EAAAmG,IAAAza,SAG1D,IAAAm0B,EAAA,CACA,GAAAzgB,IAAA,EAAAC,EAAAwgB,EAAAruB,MACA,UAAA+I,EAAA,OAAA6E,EAAAC,GAAAW,EAAAmG,IAAA0Z,EAAAzgB,QACA,QAAAA,EAAAC,GAAAW,EAAAmG,IAAA5L,EAAAslB,EAAAzgB,KAAAygB,IAGA,MAAA7f,GA2BA,QAAAqgB,IAAAC,GACA,UAAAC,UAAA,eAAoCD,EAAAzsB,IAAA,SAAAgM,EAAAT,GACpC,MAAAohB,MAAAC,UAAA5gB,GAAA,OAAAT,EAAA,MACG6R,KAAA,UAGH,QAAAyP,IAAAJ,EAAA/lB,GACA,GAAAslB,GAAAQ,GAAAC,EACA,iBAAAK,EAAAvhB,GACA,MAAA7E,GAAAslB,EAAAc,GAAAvhB,EAAAkhB,IAKA,QAAAM,IAAAC,GACA,GAAAC,GAAAt1B,OAAAwe,OAAA,MACAsW,IAUA,OARAO,GAAAluB,QAAA,SAAAguB,GACA,OAAAI,KAAAJ,GACAI,IAAAD,IACAR,EAAA7sB,KAAAqtB,EAAAC,QAKAT,EAmKA,QAAAna,IAAA6a,EAAAxmB,EAAA0B,EAAAlJ,GACA,GAAA4b,MAAApU,IAAAoU,MAAA1S,GAAA,MAAA8kB,EAEA,IAAA9d,GAOA+d,EACAC,EACAC,EACAC,EACAlyB,EACAG,EACA+P,EACAgD,EAbAoB,EAAAwd,EAAAK,MACAC,GAAcpvB,KAAAc,GACduuB,EAAAP,EAAAjC,IACAyC,EAAAR,EAAAhC,IACAyC,EAAAT,EAAA/B,IACAyC,EAAAV,EAAA9B,GAWA,KAAA1b,EAAA,MAAAwd,GAAAK,MAAAC,EAAAN,CAGA,MAAAxd,EAAAhS,QAGA,IAFAtC,EAAAsL,IAAAymB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnD5xB,EAAA6M,IAAAglB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,EACpDhe,EAAAM,QAAApE,EAAA/P,GAAA,EAAAH,IAAA,MAAAgU,GAAA9D,GAAAkiB,EAAAN,CAMA,IAFAG,GAAAH,EAAAW,GAAA32B,KAAA,KAAAwY,EAAAtR,MACAkvB,GAAAJ,EAAAY,GAAA52B,KAAA,KAAAwY,EAAAtR,MACAsI,IAAA2mB,GAAAjlB,IAAAklB,EAAA,MAAAE,GAAAO,KAAAre,EAAAN,IAAA9D,GAAAkiB,EAAAN,EAAAK,MAAAC,EAAAN,CAGA,GACA9d,OAAA9D,GAAA,GAAA1N,OAAA,GAAAsvB,EAAAK,MAAA,GAAA3vB,OAAA,IACAxC,EAAAsL,IAAAymB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnD5xB,EAAA6M,IAAAglB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,SACjD9hB,EAAA/P,GAAA,EAAAH,MAAAkT,GAAAgf,GAAAF,IAAA,EAAAC,GAAAF,GACH,OAAA/d,GAAAd,GAAAoB,EAAAN,EAAA9D,GAAAkiB,EAAAN,EAGA,QAAAc,IAAA5vB,GACA,GAAAc,GAAAoM,EACA5E,EACA0B,EAFAmD,EAAAnN,EAAAV,OAGAuwB,EAAA,GAAArwB,OAAA2N,GACA2iB,EAAA,GAAAtwB,OAAA2N,GACAkiB,EAAAnO,IACAoO,EAAApO,IACAqO,IAAArO,KACAsO,IAAAtO,IAGA,KAAAhU,EAAA,EAAaA,EAAAC,IAAOD,EACpBwP,MAAApU,GAAA/P,KAAAk3B,GAAA32B,KAAA,KAAAgI,EAAAd,EAAAkN,MAAAwP,MAAA1S,GAAAzR,KAAAm3B,GAAA52B,KAAA,KAAAgI,MACA+uB,EAAA3iB,GAAA5E,EACAwnB,EAAA5iB,GAAAlD,EACA1B,EAAA+mB,MAAA/mB,GACAA,EAAAinB,MAAAjnB,GACA0B,EAAAslB,MAAAtlB,GACAA,EAAAwlB,MAAAxlB,GAWA,KAPAulB,EAAAF,MAAA92B,KAAAs0B,IAAA0C,EAAAh3B,KAAAw0B,KACAyC,EAAAF,MAAA/2B,KAAAu0B,IAAA0C,EAAAj3B,KAAAy0B,KAGAz0B,KAAAw3B,MAAAV,EAAAC,GAAAS,MAAAR,EAAAC,GAGAtiB,EAAA,EAAaA,EAAAC,IAAOD,EACpB+G,GAAA1b,KAAAs3B,EAAA3iB,GAAA4iB,EAAA5iB,GAAAlN,EAAAkN,GAGA,OAAA3U,MAmNA,QAAAy3B,IAAAhwB,GACA,OAAAkN,GAAA,EAAAC,EAAAnN,EAAAV,OAAkC4N,EAAAC,IAAOD,EAAA3U,KAAA+J,OAAAtC,EAAAkN,GACzC,OAAA3U,MAkDA,QAAA03B,IAAAnvB,GACA,MAAAA,GAAA,GAOA,QAAAovB,IAAApvB,GACA,MAAAA,GAAA,GAOA,QAAAqvB,IAAAC,EAAA9nB,EAAA0B,GACA,GAAA8kB,GAAA,GAAAuB,IAAA,MAAA/nB,EAAA2nB,GAAA3nB,EAAA,MAAA0B,EAAAkmB,GAAAlmB,EAAA+H,gBACA,cAAAqe,EAAAtB,IAAAc,OAAAQ,GAGA,QAAAC,IAAA/nB,EAAA0B,EAAAqlB,EAAAC,EAAAC,EAAAC,GACAj3B,KAAAk3B,GAAAnnB,EACA/P,KAAAm3B,GAAA1lB,EACAzR,KAAAs0B,IAAAwC,EACA92B,KAAAu0B,IAAAwC,EACA/2B,KAAAw0B,IAAAwC,EACAh3B,KAAAy0B,IAAAwC,EACAj3B,KAAA42B,MAAA/0B,OAGA,QAAAk2B,IAAAlB,GAEA,IADA,GAAA9jB,IAActL,KAAAovB,EAAApvB,MAAgB2vB,EAAArkB,EAC9B8jB,IAAAO,gBAA+C3vB,KAAAovB,EAAApvB,KAC/C,OAAAsL,GA2CA,QAAAhD,IAAAxH,GACA,MAAAA,GAAAwH,EAAAxH,EAAAyvB,GAGA,QAAAvmB,IAAAlJ,GACA,MAAAA,GAAAkJ,EAAAlJ,EAAA0vB,GA0FA,QAAAphB,IAAAtO,GACA,MAAAA,GAAAsO,MAGA,QAAAqhB,IAAAC,EAAAC,GACA,GAAArf,GAAAof,EAAAjqB,IAAAkqB,EACA,KAAArf,EAAA,SAAAlE,OAAA,YAAAujB,EACA,OAAArf,GA0GA,QAAAsf,IAAA9vB,GACA,MAAAA,GAAAwH,EAGA,QAAAuoB,IAAA/vB,GACA,MAAAA,GAAAkJ,EAueA,QAAA8mB,IAAAC,GACA,UAAAC,IAAAD,GAKA,QAAAC,IAAAD,GACA,KAAAE,EAAAC,GAAA/Y,KAAA4Y,IAAA,SAAA3jB,OAAA,mBAAA2jB,EAEA,IAAAE,GACAE,EAAAF,EAAA,QACAG,EAAAH,EAAA,QACAI,EAAAJ,EAAA,QACAK,EAAAL,EAAA,OACAjU,IAAAiU,EAAA,GACA10B,EAAA00B,EAAA,KAAAA,EAAA,GACAM,IAAAN,EAAA,GACAO,EAAAP,EAAA,KAAAA,EAAA,GAAAnkB,MAAA,GACAe,EAAAojB,EAAA,MAGA,OAAApjB,GAAA0jB,GAAA,EAAA1jB,EAAA,KAGA4jB,GAAA5jB,OAAA,KAGAmP,GAAA,MAAAmU,GAAA,MAAAC,KAAApU,GAAA,EAAAmU,EAAA,IAAAC,EAAA,KAEA74B,KAAA44B,OACA54B,KAAA64B,QACA74B,KAAA84B,OACA94B,KAAA+4B,SACA/4B,KAAAykB,OACAzkB,KAAAgE,QACAhE,KAAAg5B,QACAh5B,KAAAi5B,YACAj5B,KAAAsV,OAuJA,QAAA6jB,IAAA7Z,GAIA,MAHA8Z,IAAAC,GAAA/Z,GACA1f,EAAA2O,OAAA6qB,GAAA7qB,OACA3O,EAAA05B,aAAAF,GAAAE,aACAF,GA2BA,QAAAG,MACAv5B,KAAAw5B,QAsBA,QAAAC,IAAAC,EAAAxpB,EAAAC,GACA,GAAAJ,GAAA2pB,EAAA3Y,EAAA7Q,EAAAC,EACAwpB,EAAA5pB,EAAAG,EACA0pB,EAAA7pB,EAAA4pB,CACAD,GAAAhlB,EAAAxE,EAAA0pB,GAAAzpB,EAAAwpB,GA2BA,QAAAE,IAAA9pB,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAA+pB,GAAArpB,KAAAopB,KAAA9pB,GAGA,QAAAgqB,IAAAhqB,GACA,MAAAA,GAAA,EAAAiqB,GAAAjqB,GAAA,GAAAiqB,GAAAvpB,KAAAspB,KAAAhqB,GAGA,QAAAkqB,IAAAlqB,GACA,OAAAA,EAAAmqB,GAAAnqB,EAAA,IAAAA,EAGA,QAAAoqB,OAEA,QAAAC,IAAAC,EAAAC,GACAD,GAAAE,GAAAh3B,eAAA82B,EAAA/kB,OACAilB,GAAAF,EAAA/kB,MAAA+kB,EAAAC,GA8CA,QAAAE,IAAAC,EAAAH,EAAAI,GACA,GAAAC,GAAAhmB,GAAA,EAAAC,EAAA6lB,EAAA1zB,OAAA2zB,CAEA,KADAJ,EAAAM,cACAjmB,EAAAC,GAAA+lB,EAAAF,EAAA9lB,GAAA2lB,EAAArJ,MAAA0J,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAL,GAAAO,UAGA,QAAAC,IAAAL,EAAAH,GACA,GAAA3lB,IAAA,EAAAC,EAAA6lB,EAAA1zB,MAEA,KADAuzB,EAAAS,iBACApmB,EAAAC,GAAA4lB,GAAAC,EAAA9lB,GAAA2lB,EAAA,EACAA,GAAAU,aAuCA,QAAAC,MACAC,GAAAjK,MAAAkK,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAK,EAAAC,GACAP,GAAAjK,MAAAoK,GACAC,GAAAE,EAAAD,GAAAE,EACAD,GAAAE,GAAAD,GAAAC,GACAC,GAAAH,EAAAI,GAAAC,GAAAJ,IAAA,EAAAK,IAAAC,GAAA7B,GAAAuB,GAGA,QAAAJ,IAAAG,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAD,IAAA,EAAAK,EAKA,IAAAE,GAAAR,EAAAG,GACAM,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAAN,GAAAJ,GACAW,EAAAlC,GAAAuB,GACA7nB,EAAAmoB,GAAAK,EACAC,EAAAT,GAAAO,EAAAvoB,EAAAioB,GAAAK,GACAhiB,EAAAtG,EAAAqoB,EAAA/B,GAAAgC,EACAI,IAAA5gB,IAAAkH,GAAA1I,EAAAmiB,IAGAV,GAAAH,EAAAI,GAAAO,EAAAJ,GAAAK,EASA,QAAAG,IAAAC,GACA,OAAA5Z,GAAA4Z,EAAA,GAAAA,EAAA,IAAAzC,GAAAyC,EAAA,KAGA,QAAAA,IAAAD,GACA,GAAAf,GAAAe,EAAA,GAAAd,EAAAc,EAAA,GAAAJ,EAAAN,GAAAJ,EACA,QAAAU,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAgB,IAAAvsB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAAusB,IAAAxsB,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAIA,QAAAwsB,IAAAzsB,EAAAC,GACAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAGA,QAAAysB,IAAAC,EAAAjpB,GACA,OAAAipB,EAAA,GAAAjpB,EAAAipB,EAAA,GAAAjpB,EAAAipB,EAAA,GAAAjpB,GAIA,QAAAkpB,IAAAv0B,GACA,GAAAyY,GAAA8B,GAAAva,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAAyY,EAAAzY,EAAA,IAAAyY,EAAAzY,EAAA,IAAAyY,EAsCA,QAAA+b,IAAAvB,EAAAC,GACAuB,GAAAh0B,KAAA0F,IAAAuuB,GAAAzB,EAAA0B,GAAA1B,IACAC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GAGA,QAAA4B,IAAA7B,EAAAC,GACA,GAAA/6B,GAAA87B,IAAAhB,EAAAE,GAAAD,EAAAC,IACA,IAAA4B,GAAA,CACA,GAAAC,GAAAb,GAAAY,GAAA58B,GACA88B,GAAAD,EAAA,IAAAA,EAAA,MACAE,EAAAf,GAAAc,EAAAD,EACAT,IAAAW,GACAA,EAAAlB,GAAAkB,EACA,IAGAC,GAHAC,EAAAnC,EAAAoC,GACAC,EAAAF,EAAA,OACAG,EAAAL,EAAA,GAAAM,GAAAF,EAEAG,EAAA3sB,GAAAssB,GAAA,GACAK,IAAAH,EAAAD,GAAAE,KAAAD,EAAArC,IACAkC,EAAAD,EAAA,GAAAM,GACAL,EAAAN,QAAAM,KACKI,KAAA,aAAAE,GAAAH,EAAAD,GAAAE,KAAAD,EAAArC,IACLkC,GAAAD,EAAA,GAAAM,GACAL,EAAAP,QAAAO,KAEAjC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,KAEAuC,EACAxC,EAAAoC,GACAK,GAAAhB,GAAAzB,GAAAyC,GAAAhB,GAAAC,SAAA1B,GAEAyC,GAAAzC,EAAA0B,IAAAe,GAAAhB,GAAAC,MAAAD,GAAAzB,GAGA0B,IAAAD,IACAzB,EAAAyB,QAAAzB,GACAA,EAAA0B,QAAA1B,IAEAA,EAAAoC,GACAK,GAAAhB,GAAAzB,GAAAyC,GAAAhB,GAAAC,SAAA1B,GAEAyC,GAAAzC,EAAA0B,IAAAe,GAAAhB,GAAAC,MAAAD,GAAAzB,OAKAwB,IAAAh0B,KAAA0F,IAAAuuB,GAAAzB,EAAA0B,GAAA1B,GAEAC,GAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GACA6B,GAAA58B,EAAAk9B,GAAApC,EAGA,QAAA0C,MACAC,GAAAlN,MAAAoM,GAGA,QAAAe,MACA1vB,GAAA,GAAAuuB,GAAAvuB,GAAA,GAAAwuB,GACAiB,GAAAlN,MAAA8L,GACAO,GAAA,KAGA,QAAAe,IAAA7C,EAAAC,GACA,GAAA6B,GAAA,CACA,GAAAK,GAAAnC,EAAAoC,EACAU,IAAA5iB,IAAArK,GAAAssB,GAAA,IAAAA,KAAA,YAAAA,OAEAY,IAAA/C,EAAAgD,GAAA/C,CAEAP,IAAAjK,MAAAuK,EAAAC,GACA4B,GAAA7B,EAAAC,GAGA,QAAAgD,MACAvD,GAAAN,YAGA,QAAA8D,MACAL,GAAAE,GAAAC,IACAtD,GAAAL,UACAxpB,GAAAitB,IAAAK,KAAA1B,KAAAC,GAAA,MACAxuB,GAAA,GAAAuuB,GAAAvuB,GAAA,GAAAwuB,GACAI,GAAA,KAMA,QAAAW,IAAAtC,EAAAuB,GACA,OAAAA,GAAAvB,GAAA,EAAAuB,EAAA,IAAAA,EAGA,QAAA0B,IAAA1uB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAGA,QAAA0uB,IAAAnwB,EAAAqB,GACA,MAAArB,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAqB,MAAArB,EAAA,GAAAqB,EAAArB,EAAA,IAAAA,EAAA,GAAAqB,EAyEA,QAAA+uB,IAAAtD,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACAsD,IAAA5C,EAAAN,GAAAL,GAAAW,EAAAjC,GAAAsB,GAAAtB,GAAAuB,IAGA,QAAAsD,IAAAhvB,EAAA0B,EAAAyQ,KACA8c,GACAC,KAAAlvB,EAAAkvB,IAAAD,GACAE,KAAAztB,EAAAytB,IAAAF,GACAG,KAAAjd,EAAAid,IAAAH,GAGA,QAAAI,MACAC,GAAApO,MAAAqO,GAGA,QAAAA,IAAA9D,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,EACA3E,IAAAqF,EAAAN,GAAAL,GACAzE,GAAAoF,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACA4D,GAAApO,MAAAuO,GACAT,GAAAjI,GAAAC,GAAAwI,IAGA,QAAAC,IAAAhE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACA1rB,EAAAosB,EAAAN,GAAAL,GACA/pB,EAAA0qB,EAAAjC,GAAAsB,GACAtZ,EAAAgY,GAAAuB,GACA33B,EAAA8e,GAAAE,IAAAhf,EAAAizB,GAAA7U,EAAAqd,GAAA9tB,GAAA3N,KAAAy7B,GAAAxvB,EAAA+mB,GAAA5U,GAAApe,KAAAgzB,GAAArlB,EAAAslB,GAAAhnB,GAAAjM,GAAAgzB,GAAA/mB,EAAAgnB,GAAAtlB,EAAA8tB,GAAArd,EACAud,KAAA37B,EACA47B,IAAA57B,GAAAgzB,OAAA/mB,IACA4vB,IAAA77B,GAAAizB,OAAAtlB,IACAmuB,IAAA97B,GAAAy7B,OAAArd,IACA6c,GAAAjI,GAAAC,GAAAwI,IAGA,QAAAM,MACAR,GAAApO,MAAA6N,GAKA,QAAAgB,MACAT,GAAApO,MAAA8O,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IACAd,GAAApO,MAAA6N,GAGA,QAAAiB,IAAAvE,EAAAC,GACAyE,GAAA1E,EAAA2E,GAAA1E,EACAD,GAAAE,GAAAD,GAAAC,GACA2D,GAAApO,MAAAgP,EACA,IAAA9D,GAAAN,GAAAJ,EACA3E,IAAAqF,EAAAN,GAAAL,GACAzE,GAAAoF,EAAAjC,GAAAsB,GACA+D,GAAArF,GAAAuB,GACAsD,GAAAjI,GAAAC,GAAAwI,IAGA,QAAAU,IAAAzE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAAN,GAAAJ,GACA1rB,EAAAosB,EAAAN,GAAAL,GACA/pB,EAAA0qB,EAAAjC,GAAAsB,GACAtZ,EAAAgY,GAAAuB,GACA2E,EAAArJ,GAAA7U,EAAAqd,GAAA9tB,EACA4uB,EAAAd,GAAAxvB,EAAA+mB,GAAA5U,EACAoe,EAAAxJ,GAAArlB,EAAAslB,GAAAhnB,EACAvP,EAAAsiB,GAAAsd,IAAAC,IAAAC,KACAx8B,EAAAi2B,GAAAv5B,GACA0Z,EAAA1Z,IAAAsD,EAAAtD,CACA+/B,KAAArmB,EAAAkmB,EACAI,IAAAtmB,EAAAmmB,EACAI,IAAAvmB,EAAAomB,EACAb,IAAA37B,EACA47B,IAAA57B,GAAAgzB,OAAA/mB,IACA4vB,IAAA77B,GAAAizB,OAAAtlB,IACAmuB,IAAA97B,GAAAy7B,OAAArd,IACA6c,GAAAjI,GAAAC,GAAAwI,IA+CA,QAAAmB,IAAAlF,EAAAC,GACA,OAAAD,EAAA1B,GAAA0B,EAAAmF,GAAAnF,GAAA1B,GAAA0B,EAAAmF,GAAAnF,EAAAC,GAKA,QAAAmF,IAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAF,IAAAG,GAAAC,EAAAC,GAAAC,GAAAJ,GAAAK,GAAAJ,EAAAC,IACAE,GAAAJ,GACAC,GAAAC,EAAAG,GAAAJ,EAAAC,GACAL,GAGA,QAAAS,IAAAN,GACA,gBAAArF,EAAAC,GACA,MAAAD,IAAAqF,GAAArF,EAAA1B,GAAA0B,EAAAmF,GAAAnF,GAAA1B,GAAA0B,EAAAmF,GAAAnF,EAAAC,IAIA,QAAAwF,IAAAJ,GACA,GAAAO,GAAAD,GAAAN,EAEA,OADAO,GAAAC,OAAAF,IAAAN,GACAO,EAGA,QAAAF,IAAAJ,EAAAC,GAMA,QAAAK,GAAA5F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACA1rB,EAAA8rB,GAAAL,GAAAW,EACA1qB,EAAAyoB,GAAAsB,GAAAW,EACAja,EAAAgY,GAAAuB,GACA7nB,EAAAsO,EAAAof,EAAAvxB,EAAAwxB,CACA,QACA3e,GAAAnR,EAAA+vB,EAAA5tB,EAAA6tB,EAAA1xB,EAAAuxB,EAAApf,EAAAqf,GACAxH,GAAAnmB,EAAA4tB,EAAA/vB,EAAAgwB,IAbA,GAAAH,GAAAzF,GAAAiF,GACAS,EAAArH,GAAA4G,GACAU,EAAA3F,GAAAkF,GACAU,EAAAvH,GAAA6G,EA0BA,OAZAK,GAAAC,OAAA,SAAA7F,EAAAC,GACA,GAAAU,GAAAN,GAAAJ,GACA1rB,EAAA8rB,GAAAL,GAAAW,EACA1qB,EAAAyoB,GAAAsB,GAAAW,EACAja,EAAAgY,GAAAuB,GACA7nB,EAAAsO,EAAAsf,EAAA/vB,EAAAgwB,CACA,QACA7e,GAAAnR,EAAA+vB,EAAAtf,EAAAuf,EAAA1xB,EAAAuxB,EAAA1tB,EAAA2tB,GACAxH,GAAAnmB,EAAA0tB,EAAAvxB,EAAAwxB,KAIAH,EAoBA,QAAAM,IAAApH,EAAAzF,EAAA8I,EAAAgE,EAAApf,EAAAE,GACA,GAAAkb,EAAA,CACA,GAAAiE,GAAA/F,GAAAhH,GACAgN,EAAA3H,GAAArF,GACArkB,EAAAmxB,EAAAhE,CACA,OAAApb,GACAA,EAAAsS,EAAA8M,EAAAhB,GACAle,EAAAoS,EAAArkB,EAAA,IAEA+R,EAAAuf,GAAAF,EAAArf,GACAE,EAAAqf,GAAAF,EAAAnf,IACAkf,EAAA,EAAApf,EAAAE,EAAAF,EAAAE,KAAAF,GAAAof,EAAAhB,IAEA,QAAA1P,GAAAvc,EAAA6N,EAAyBof,EAAA,EAAAjtB,EAAA+N,EAAA/N,EAAA+N,EAAiC/N,GAAAlE,EAC1DygB,EAAAsL,IAAAqF,GAAAC,EAAAhG,GAAAnnB,IAAAmtB,EAAA3H,GAAAxlB,KACA4lB,EAAArJ,QAAA,GAAAA,EAAA,KAKA,QAAA6Q,IAAAF,EAAA3Q,GACAA,EAAAuL,GAAAvL,KAAA,IAAA2Q,EACA9E,GAAA7L,EACA,IAAA4D,GAAAgF,IAAA5I,EAAA,GACA,UAAAA,EAAA,MAAA4D,KAAA8L,GAAAhC,IAAAgC,GAsEA,QAAAoB,IAAA9Q,EAAA+Q,EAAAC,EAAAC,GACAliC,KAAA+P,EAAAkhB,EACAjxB,KAAAkiB,EAAA8f,EACAhiC,KAAA0X,EAAAuqB,EACAjiC,KAAAslB,EAAA4c,EACAliC,KAAAka,GAAA,EACAla,KAAA4U,EAAA5U,KAAAU,EAAA,KA+EA,QAAAyhC,IAAAC,GACA,GAAAxtB,EAAAwtB,EAAAr7B,OAAA,CAKA,IAJA,GAAA6N,GAGAzE,EAFAwE,EAAA,EACAzE,EAAAkyB,EAAA,KAEAztB,EAAAC,GACA1E,EAAA0E,EAAAzE,EAAAiyB,EAAAztB,GACAxE,EAAAzP,EAAAwP,EACAA,EAAAC,CAEAD,GAAA0E,EAAAzE,EAAAiyB,EAAA,GACAjyB,EAAAzP,EAAAwP,GAuLA,QAAAmyB,IAAAC,GACA,MAAAA,GAAAv7B,OAAA,EAKA,QAAAw7B,IAAAryB,EAAAC,GACA,QAAAD,IAAAH,GAAA,KAAAG,EAAA,GAAA8pB,GAAA2E,GAAA3E,GAAA9pB,EAAA,MACAC,IAAAJ,GAAA,KAAAI,EAAA,GAAA6pB,GAAA2E,GAAA3E,GAAA7pB,EAAA,IAaA,QAAAqyB,IAAAlI,GACA,GAGAmI,GAHA9G,EAAAniB,IACA2jB,EAAA3jB,IACAkpB,EAAAlpB,GAGA,QACAohB,UAAA,WACAN,EAAAM,YACA6H,EAAA,GAEAxR,MAAA,SAAAiM,EAAAE,GACA,GAAAuF,GAAAzF,EAAA,EAAApD,OACA6D,EAAAtsB,GAAA6rB,EAAAvB,EACAtqB,IAAAssB,EAAA7D,IAAA6E,IACArE,EAAArJ,MAAA0K,EAAAwB,KAAAC,GAAA,IAAApD,QACAM,EAAArJ,MAAAyR,EAAAvF,GACA7C,EAAAO,UACAP,EAAAM,YACAN,EAAArJ,MAAA0R,EAAAxF,GACA7C,EAAArJ,MAAAiM,EAAAC,GACAsF,EAAA,GACOC,IAAAC,GAAAhF,GAAA7D,KACPzoB,GAAAsqB,EAAA+G,GAAA/D,KAAAhD,GAAA+G,EAAA/D,IACAttB,GAAA6rB,EAAAyF,GAAAhE,KAAAzB,GAAAyF,EAAAhE,IACAxB,EAAAyF,GAAAjH,EAAAwB,EAAAD,EAAAE,GACA9C,EAAArJ,MAAAyR,EAAAvF,GACA7C,EAAAO,UACAP,EAAAM,YACAN,EAAArJ,MAAA0R,EAAAxF,GACAsF,EAAA,GAEAnI,EAAArJ,MAAA0K,EAAAuB,EAAAC,EAAAC,GACAsF,EAAAC,GAEA9H,QAAA,WACAP,EAAAO,UACAc,EAAAwB,EAAA3jB,KAEAipB,MAAA,WACA,SAAAA,IAKA,QAAAG,IAAAjH,EAAAwB,EAAAD,EAAAE,GACA,GAAAxB,GACAiH,EACAC,EAAA5I,GAAAyB,EAAAuB,EACA,OAAA7rB,IAAAyxB,GAAAnE,GACAoE,IAAA7I,GAAAiD,IAAA0F,EAAAhH,GAAAuB,IAAAlD,GAAAgD,GACAhD,GAAAkD,IAAAxB,EAAAC,GAAAsB,IAAAjD,GAAAyB,KACAC,EAAAiH,EAAAC,KACA3F,EAAAC,GAAA,EAGA,QAAA4F,IAAAC,EAAAC,EAAAvB,EAAArH,GACA,GAAAmB,EACA,UAAAwH,EACAxH,EAAAkG,EAAA3H,GACAM,EAAArJ,OAAA6I,GAAA2B,GACAnB,EAAArJ,MAAA,EAAAwK,GACAnB,EAAArJ,MAAA6I,GAAA2B,GACAnB,EAAArJ,MAAA6I,GAAA,GACAQ,EAAArJ,MAAA6I,IAAA2B,GACAnB,EAAArJ,MAAA,GAAAwK,GACAnB,EAAArJ,OAAA6I,IAAA2B,GACAnB,EAAArJ,OAAA6I,GAAA,GACAQ,EAAArJ,OAAA6I,GAAA2B,OACG,IAAApqB,GAAA4xB,EAAA,GAAAC,EAAA,IAAAvE,GAAA,CACH,GAAAnD,GAAAyH,EAAA,GAAAC,EAAA,GAAApJ,MACA2B,GAAAkG,EAAAnG,EAAA,EACAlB,EAAArJ,OAAAuK,EAAAC,GACAnB,EAAArJ,MAAA,EAAAwK,GACAnB,EAAArJ,MAAAuK,EAAAC,OAEAnB,GAAArJ,MAAAiS,EAAA,GAAAA,EAAA,IAuPA,QAAAC,IAAArM,EAAAC,EAAAC,EAAAC,GAEA,QAAAmM,GAAArzB,EAAA0B,GACA,MAAAqlB,IAAA/mB,MAAAinB,GAAAD,GAAAtlB,MAAAwlB,EAGA,QAAAoM,GAAAJ,EAAAC,EAAAvB,EAAArH,GACA,GAAApqB,GAAA,EAAAozB,EAAA,CACA,UAAAL,IACA/yB,EAAAqzB,EAAAN,EAAAtB,OAAA2B,EAAAC,EAAAL,EAAAvB,KACA6B,EAAAP,EAAAC,GAAA,EAAAvB,EAAA,GACA,EAAArH,GAAArJ,MAAA,IAAA/gB,GAAA,IAAAA,EAAA4mB,EAAAE,EAAA9mB,EAAA,EAAA+mB,EAAAF,UACA7mB,KAAAyxB,EAAA,QAAA2B,OAEAhJ,GAAArJ,MAAAiS,EAAA,GAAAA,EAAA,IAIA,QAAAK,GAAA7iC,EAAAihC,GACA,MAAAtwB,IAAA3Q,EAAA,GAAAo2B,GAAA6H,GAAAgD,EAAA,MACAtwB,GAAA3Q,EAAA,GAAAs2B,GAAA2H,GAAAgD,EAAA,MACAtwB,GAAA3Q,EAAA,GAAAq2B,GAAA4H,GAAAgD,EAAA,MACAA,EAAA,MAGA,QAAAY,GAAAryB,EAAAC,GACA,MAAAqzB,GAAAtzB,EAAAH,EAAAI,EAAAJ,GAGA,QAAAyzB,GAAAtzB,EAAAC,GACA,GAAAszB,GAAAF,EAAArzB,EAAA,GACAwzB,EAAAH,EAAApzB,EAAA,EACA,OAAAszB,KAAAC,EAAAD,EAAAC,EACA,IAAAD,EAAAtzB,EAAA,GAAAD,EAAA,GACA,IAAAuzB,EAAAvzB,EAAA,GAAAC,EAAA,GACA,IAAAszB,EAAAvzB,EAAA,GAAAC,EAAA,GACAA,EAAA,GAAAD,EAAA,GAGA,gBAAAoqB,GAmBA,QAAArJ,GAAAlhB,EAAA0B,GACA2xB,EAAArzB,EAAA0B,IAAAkyB,EAAA1S,MAAAlhB,EAAA0B,GAGA,QAAAmyB,KAGA,OAFAC,GAAA,EAEAlvB,EAAA,EAAAC,EAAAkvB,EAAA/8B,OAAyC4N,EAAAC,IAAOD,EAChD,OAAAovB,GAAAT,EAAAU,EAAAF,EAAAnvB,GAAAgD,EAAA,EAAAnX,EAAAwjC,EAAAj9B,OAAAkqB,EAAA+S,EAAA,GAAA1V,EAAA2C,EAAA,GAAA5C,EAAA4C,EAAA,GAAkHtZ,EAAAnX,IAAOmX,EACzHosB,EAAAzV,EAAAgV,EAAAjV,EAAA4C,EAAA+S,EAAArsB,GAAA2W,EAAA2C,EAAA,GAAA5C,EAAA4C,EAAA,GACAqS,GAAArM,EAAyB5I,EAAA4I,IAAA3I,EAAAyV,IAAA9M,EAAAqM,IAAAjV,EAAAiV,IAAAxM,EAAAiN,MAAAF,EACTxV,GAAA4I,IAAA3I,EAAAyV,IAAA9M,EAAAqM,IAAAjV,EAAAiV,IAAAxM,EAAAiN,MAAAF,CAIhB,OAAAA,GAIA,QAAA9I,KACA4I,EAAAM,EAAAC,KAAAJ,KAAArB,GAAA,EAGA,QAAAzH,KACA,GAAAmJ,GAAAP,IACAQ,EAAA3B,GAAA0B,EACAf,GAAAc,EAAAv1B,GAAAu1B,IAAAn9B,QACAq9B,GAAAhB,KACA9I,EAAAS,eACAqJ,IACA9J,EAAAM,YACAyI,EAAA,YAAA/I,GACAA,EAAAO,WAEAuI,GACAiB,GAAAH,EAAA3B,EAAA4B,EAAAd,EAAA/I,GAEAA,EAAAU,cAEA2I,EAAArJ,EAAA4J,EAAAJ,EAAAE,EAAA,KAGA,QAAApJ,KACA0J,EAAArT,MAAAoM,EACAyG,KAAA96B,KAAAg7B,MACAO,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAAlrB,IAMA,QAAAqhB,KACAqJ,IACA7G,EAAAsH,EAAAC,GACAC,GAAAL,GAAAP,EAAAa,SACAZ,EAAAl7B,KAAAi7B,EAAAc,WAEAT,EAAArT,QACAuT,GAAAb,EAAA9I,UAGA,QAAAwC,GAAAttB,EAAA0B,GACA,GAAAyI,GAAAkpB,EAAArzB,EAAA0B,EAEA,IADAqyB,GAAAE,EAAAh7B,MAAA+G,EAAA0B,IACA8yB,EACAI,EAAA50B,EAAA60B,EAAAnzB,EAAAozB,EAAA3qB,EACAqqB,GAAA,EACArqB,IACAypB,EAAA/I,YACA+I,EAAA1S,MAAAlhB,EAAA0B,QAGA,IAAAyI,GAAAsqB,EAAAb,EAAA1S,MAAAlhB,EAAA0B,OACA,CACA,GAAAvB,IAAAu0B,EAAAh0B,KAAAC,IAAAs0B,GAAAv0B,KAAA0Q,IAAA8jB,GAAAR,IAAAC,EAAAj0B,KAAAC,IAAAs0B,GAAAv0B,KAAA0Q,IAAA8jB,GAAAP,KACAv0B,GAAAJ,EAAAU,KAAAC,IAAAs0B,GAAAv0B,KAAA0Q,IAAA8jB,GAAAl1B,IAAA0B,EAAAhB,KAAAC,IAAAs0B,GAAAv0B,KAAA0Q,IAAA8jB,GAAAxzB,IACAyzB,IAAAh1B,EAAAC,EAAA2mB,EAAAC,EAAAC,EAAAC,IACAuN,IACAb,EAAA/I,YACA+I,EAAA1S,MAAA/gB,EAAA,GAAAA,EAAA,KAEAyzB,EAAA1S,MAAA9gB,EAAA,GAAAA,EAAA,IACA+J,GAAAypB,EAAA9I,UACA4H,GAAA,GACWvoB,IACXypB,EAAA/I,YACA+I,EAAA1S,MAAAlhB,EAAA0B,GACAgxB,GAAA,GAIAgC,EAAA10B,EAAA20B,EAAAjzB,EAAA+yB,EAAAtqB,EA/GA,GAEAgqB,GACAJ,EACAE,EACAW,EAAAC,EAAAC,EACAJ,EAAAC,EAAAF,EACAD,EACA9B,EARAkB,EAAArJ,EACA2J,EAAAkB,KASAb,GACArT,QACA2J,YACAC,UACAE,eACAC,aAmGA,OAAAsJ,IAqCA,QAAAc,MACAC,GAAApU,MAAAqU,GACAD,GAAAxK,QAAA0K,GAGA,QAAAA,MACAF,GAAApU,MAAAoU,GAAAxK,QAAAV,GAGA,QAAAmL,IAAA9J,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACA8J,GAAAhK,EAAAiK,GAAAvL,GAAAuB,GAAAiK,GAAA7J,GAAAJ,GACA4J,GAAApU,MAAA0U,GAGA,QAAAA,IAAAnK,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAU,GAAAlC,GAAAuB,GACAU,EAAAN,GAAAJ,GACAkC,EAAAtsB,GAAAmqB,EAAAgK,IACAI,EAAA/J,GAAA8B,GACAkI,EAAA3L,GAAAyD,GACA5tB,EAAAosB,EAAA0J,EACAp0B,EAAAi0B,GAAAtJ,EAAAqJ,GAAAtJ,EAAAyJ,EACA1jB,EAAAujB,GAAArJ,EAAAsJ,GAAAvJ,EAAAyJ,CACAE,IAAApqB,IAAAkH,GAAAE,GAAA/S,IAAA0B,KAAAyQ,IACAsjB,GAAAhK,EAAAiK,GAAArJ,EAAAsJ,GAAAvJ,EAgEA,QAAA4J,IAAA1L,EAAApJ,GACA,SAAAoJ,IAAA2L,GAAAziC,eAAA82B,EAAA/kB,QACA0wB,GAAA3L,EAAA/kB,MAAA+kB,EAAApJ,GAIA,QAAAgV,IAAAxL,EAAAxJ,GACA,WAAAiV,GAAAzL,EAAAxJ,GAGA,QAAAkV,IAAA1L,EAAAxJ,GACA,GAAAmV,GAAAF,GAAAzL,EAAA,GAAAA,EAAA,IACA4L,EAAAH,GAAAzL,EAAA,GAAAxJ,GACAqV,EAAAJ,GAAAjV,EAAAwJ,EAAA,GACA,OAAA4L,GAAAC,GAAAF,EAAAzH,GAGA,QAAA4H,IAAA9L,EAAAxJ,GACA,QAAAuV,GAAA/L,EAAArxB,IAAAq9B,IAAAC,GAAAzV,IAGA,QAAAwV,IAAAzC,GACA,MAAAA,KAAA56B,IAAAs9B,IAAA1C,EAAApe,MAAAoe,EAGA,QAAA0C,IAAAzV,GACA,OAAAA,EAAA,GAAAyK,GAAAzK,EAAA,GAAAyK,IASA,QAAAiL,IAAA5P,EAAAE,EAAAnY,GACA,GAAArN,GAAAm1B,GAAA7P,EAAAE,EAAA0H,GAAA7f,GAAAxX,OAAA2vB,EACA,iBAAAlnB,GAAsB,MAAA0B,GAAArI,IAAA,SAAAqI,GAA2B,OAAA1B,EAAA0B,MAGjD,QAAAo1B,IAAA/P,EAAAE,EAAAnY,GACA,GAAA9O,GAAA62B,GAAA9P,EAAAE,EAAA2H,GAAA9f,GAAAvX,OAAA0vB,EACA,iBAAAvlB,GAAsB,MAAA1B,GAAA3G,IAAA,SAAA2G,GAA2B,OAAAA,EAAA0B,MAGjD,QAAAq1B,MAOA,QAAAA,KACA,OAAYxxB,KAAA,kBAAAmlB,YAAAsM,KAGZ,QAAAA,KACA,MAAAH,IAAAI,GAAA/H,EAAAgI,KAAAvH,EAAAuH,GAAA79B,IAAAymB,GACAvoB,OAAAs/B,GAAAI,GAAA9H,EAAAgI,KAAAvH,EAAAuH,GAAA99B,IAAA2mB,IACAzoB,OAAAs/B,GAAAI,GAAAlQ,EAAAjY,KAAAmY,EAAAnY,GAAA1K,OAAA,SAAApE,GAAyE,MAAAsB,IAAAtB,EAAAk3B,GAAAtI,KAAkCv1B,IAAA2G,IAC3GzI,OAAAs/B,GAAAI,GAAAjQ,EAAAjY,KAAAmY,EAAAnY,GAAA3K,OAAA,SAAA1C,GAAyE,MAAAJ,IAAAI,EAAAy1B,GAAAvI,KAAkCv1B,IAAAqI,IAd3G,GAAAulB,GAAAF,EAAA4I,EAAAT,EACAhI,EAAAF,EAAA4I,EAAAT,EAEAnvB,EAAA0B,EAAAoe,EAAAE,EADAlR,EAAA,GAAAC,EAAAD,EAAAooB,EAAA,GAAAC,EAAA,IAEAjO,EAAA,GA+EA,OAlEA6N,GAAAC,MAAA,WACA,MAAAA,KAAA39B,IAAA,SAAAqxB,GAA8C,OAASnlB,KAAA,aAAAmlB,kBAGvDqM,EAAAK,QAAA,WACA,OACA7xB,KAAA,UACAmlB,aACA5K,EAAAoP,GAAA33B,OACAyoB,EAAA4P,GAAAprB,MAAA,GACAsb,EAAA6P,GAAA0H,UAAA7yB,MAAA,GACAwb,EAAAmP,GAAAkI,UAAA7yB,MAAA,OAKAuyB,EAAAt4B,OAAA,SAAA6F,GACA,MAAAvN,WAAAC,OACA+/B,EAAAO,YAAAhzB,GAAAizB,YAAAjzB,GADAyyB,EAAAQ,eAIAR,EAAAO,YAAA,SAAAhzB,GACA,MAAAvN,WAAAC,QACAk4B,GAAA5qB,EAAA,MAAAqrB,GAAArrB,EAAA,MACA6qB,GAAA7qB,EAAA,MAAAsrB,GAAAtrB,EAAA,MACA4qB,EAAAS,IAAArrB,EAAA4qB,IAAAS,IAAArrB,GACA6qB,EAAAS,IAAAtrB,EAAA6qB,IAAAS,IAAAtrB,GACAyyB,EAAA7N,gBALAgG,EAAAC,IAAAQ,EAAAC,KAQAmH,EAAAQ,YAAA,SAAAjzB,GACA,MAAAvN,WAAAC,QACA+vB,GAAAziB,EAAA,MAAA2iB,GAAA3iB,EAAA,MACA0iB,GAAA1iB,EAAA,MAAA4iB,GAAA5iB,EAAA,MACAyiB,EAAAE,IAAA3iB,EAAAyiB,IAAAE,IAAA3iB,GACA0iB,EAAAE,IAAA5iB,EAAA0iB,IAAAE,IAAA5iB,GACAyyB,EAAA7N,gBALAnC,EAAAC,IAAAC,EAAAC,KAQA6P,EAAAt2B,KAAA,SAAA6D,GACA,MAAAvN,WAAAC,OACA+/B,EAAAS,UAAAlzB,GAAAmzB,UAAAnzB,GADAyyB,EAAAU,aAIAV,EAAAS,UAAA,SAAAlzB,GACA,MAAAvN,WAAAC,QACAkgC,GAAA5yB,EAAA,GAAA6yB,GAAA7yB,EAAA,GACAyyB,IAFAG,EAAAC,IAKAJ,EAAAU,UAAA,SAAAnzB,GACA,MAAAvN,WAAAC,QACA8X,GAAAxK,EAAA,GAAAyK,GAAAzK,EAAA,GACAyyB,IAFAjoB,EAAAC,IAKAgoB,EAAA7N,UAAA,SAAA5kB,GACA,MAAAvN,WAAAC,QACAkyB,GAAA5kB,EACAtE,EAAA42B,GAAA5P,EAAAE,EAAA,IACAxlB,EAAAo1B,GAAA/P,EAAAE,EAAAiC,GACApJ,EAAA8W,GAAAzH,EAAAS,EAAA,IACA5P,EAAA8W,GAAA5H,EAAAS,EAAAzG,GACA6N,GANA7N,GASA6N,EACAO,eAAA,QAAA1I,KAAA,OAAAA,MACA2I,eAAA,QAAA3I,KAAA,OAAAA,MAGA,QAAA8I,MACA,MAAAX,QAqEA,QAAAY,MACAC,GAAA1W,MAAA2W,GAGA,QAAAA,IAAA73B,EAAA0B,GACAk2B,GAAA1W,MAAA4W,GACAC,GAAAC,GAAAh4B,EAAAi4B,GAAAC,GAAAx2B,EAGA,QAAAo2B,IAAA93B,EAAA0B,GACAy2B,GAAAxsB,IAAAusB,GAAAl4B,EAAAg4B,GAAAt2B,GACAs2B,GAAAh4B,EAAAk4B,GAAAx2B,EAGA,QAAA02B,MACAN,GAAAC,GAAAE,IAqBA,QAAAI,IAAAr4B,EAAA0B,GACA1B,EAAAs4B,QAAAt4B,GACAA,EAAAinB,QAAAjnB,GACA0B,EAAA62B,QAAA72B,GACAA,EAAAwlB,QAAAxlB,GA4CA,QAAA82B,IAAAx4B,EAAA0B,GACA+2B,IAAAz4B,EACA04B,IAAAh3B,IACAi3B,GAGA,QAAAC,MACAC,GAAA3X,MAAA4X,GAGA,QAAAA,IAAA94B,EAAA0B,GACAm3B,GAAA3X,MAAA6X,GACAP,GAAAQ,GAAAh5B,EAAAi5B,GAAAv3B,GAGA,QAAAq3B,IAAA/4B,EAAA0B,GACA,GAAAoN,GAAA9O,EAAAg5B,GAAAjqB,EAAArN,EAAAu3B,GAAA9mB,EAAAY,GAAAjE,IAAAC,IACAmqB,KAAA/mB,GAAA6mB,GAAAh5B,GAAA,EACAm5B,IAAAhnB,GAAA8mB,GAAAv3B,GAAA,EACA03B,IAAAjnB,EACAqmB,GAAAQ,GAAAh5B,EAAAi5B,GAAAv3B,GAGA,QAAA23B,MACAR,GAAA3X,MAAAsX,GAGA,QAAAc,MACAT,GAAA3X,MAAAqY,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAv5B,EAAA0B,GACAm3B,GAAA3X,MAAAuY,GACAjB,GAAAkB,GAAAV,GAAAh5B,EAAA25B,GAAAV,GAAAv3B,GAGA,QAAA+3B,IAAAz5B,EAAA0B,GACA,GAAAoN,GAAA9O,EAAAg5B,GACAjqB,EAAArN,EAAAu3B,GACA9mB,EAAAY,GAAAjE,IAAAC,IAEAmqB,KAAA/mB,GAAA6mB,GAAAh5B,GAAA,EACAm5B,IAAAhnB,GAAA8mB,GAAAv3B,GAAA,EACA03B,IAAAjnB,EAEAA,EAAA8mB,GAAAj5B,EAAAg5B,GAAAt3B,EACAk4B,IAAAznB,GAAA6mB,GAAAh5B,GACA65B,IAAA1nB,GAAA8mB,GAAAv3B,GACAo4B,IAAA,EAAA3nB,EACAqmB,GAAAQ,GAAAh5B,EAAAi5B,GAAAv3B,GAGA,QAAAq4B,IAAA33B,GACAnS,KAAA+pC,SAAA53B,EAuEA,QAAA63B,IAAAj6B,EAAA0B,GACAw4B,GAAAhZ,MAAAiZ,GACAC,GAAAC,GAAAr6B,EAAAs6B,GAAAC,GAAA74B,EAGA,QAAAy4B,IAAAn6B,EAAA0B,GACA24B,IAAAr6B,EAAAu6B,IAAA74B,EACA84B,GAAA7uB,IAAAoH,GAAAsnB,MAAAE,QACAF,GAAAr6B,EAAAu6B,GAAA74B,EAGA,QAAA+4B,MACAxqC,KAAAyqC,WAoDA,QAAAC,IAAA7V,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IA8DA,QAAA8V,IAAAC,GACA,gBAAAtQ,GACA,GAAAvZ,GAAA,GAAA8pB,GACA,QAAAxnC,KAAAunC,GAAA7pB,EAAA1d,GAAAunC,EAAAvnC,EAEA,OADA0d,GAAAuZ,SACAvZ,GAIA,QAAA8pB,OAYA,QAAAC,IAAAC,EAAAv8B,EAAA4mB,GACA,GAAAtxB,GAAA0K,EAAA,MAAAA,EAAA,MACArK,EAAAqK,EAAA,MAAAA,EAAA,MACAw8B,EAAAD,EAAAE,YAAAF,EAAAE,YAEAF,GACArlC,MAAA,KACAmgB,WAAA,MAEA,MAAAmlB,GAAAD,EAAAE,WAAA,MAEAC,GAAA9V,EAAA2V,EAAAzQ,OAAA6Q,IAEA,IAAAh7B,GAAAg7B,GAAApG,SACAnxB,EAAAnD,KAAA0Q,IAAArd,GAAAqM,EAAA,MAAAA,EAAA,OAAAhM,GAAAgM,EAAA,MAAAA,EAAA,QACAJ,GAAAvB,EAAA,OAAA1K,EAAA8P,GAAAzD,EAAA,MAAAA,EAAA,UACAsB,GAAAjD,EAAA,OAAArK,EAAAyP,GAAAzD,EAAA,MAAAA,EAAA,SAIA,OAFA,OAAA66B,GAAAD,EAAAE,WAAAD,GAEAD,EACArlC,MAAA,IAAAkO,GACAiS,WAAA9V,EAAA0B,IAGA,QAAA25B,IAAAL,EAAAM,EAAAjW,GACA,MAAA0V,IAAAC,IAAA,KAAAM,GAAAjW,GAUA,QAAAkW,IAAAC,GACA,MAAAZ,KACA1Z,MAAA,SAAAlhB,EAAA0B,GACA1B,EAAAw7B,EAAAx7B,EAAA0B,GACAzR,KAAAs6B,OAAArJ,MAAAlhB,EAAA,GAAAA,EAAA,OAKA,QAAAy7B,IAAAD,EAAAE,GAEA,QAAAC,GAAA5U,EAAAC,EAAA4E,EAAAoI,EAAAzV,EAAAqd,EAAA3U,EAAAC,EAAAiG,EAAAoG,EAAAjV,EAAAud,EAAAC,EAAAvR,GACA,GAAAzb,GAAAmY,EAAAF,EACAhY,EAAAmY,EAAAF,EACA+U,EAAAjtB,IAAAC,GACA,IAAAgtB,EAAA,EAAAL,GAAAI,IAAA,CACA,GAAA37B,GAAA6zB,EAAAT,EACAnzB,EAAAme,EAAAD,EACA5tB,EAAAkrC,EAAAC,EACAprC,EAAAsiB,GAAA5S,IAAAC,IAAA1P,KACAsrC,EAAAhS,GAAAt5B,GAAAD,GACAo9B,EAAAvsB,MAAA5Q,GAAA,GAAAk+B,IAAAttB,GAAAsqB,EAAAuB,GAAAyB,IAAAhD,EAAAuB,GAAA,EAAAta,GAAAzS,EAAAD,GACAxP,EAAA6qC,EAAA3N,EAAAmO,GACAC,EAAAtrC,EAAA,GACAurC,EAAAvrC,EAAA,GACAwrC,EAAAF,EAAAlV,EACAqV,EAAAF,EAAAlV,EACAqV,EAAAttB,EAAAotB,EAAArtB,EAAAstB,GACAC,IAAAN,EAAAL,GACAp6B,IAAAwN,EAAAqtB,EAAAptB,EAAAqtB,GAAAL,EAAA,QACA/H,EAAAT,EAAAhV,EAAAD,EAAAsd,EAAAC,EAAAS,MACAX,EAAA5U,EAAAC,EAAA4E,EAAAoI,EAAAzV,EAAAqd,EAAAK,EAAAC,EAAArO,EAAA1tB,GAAA1P,EAAA2P,GAAA3P,EAAAC,EAAAorC,EAAAvR,GACAA,EAAArJ,MAAA+a,EAAAC,GACAP,EAAAM,EAAAC,EAAArO,EAAA1tB,EAAAC,EAAA1P,EAAAu2B,EAAAC,EAAAiG,EAAAoG,EAAAjV,EAAAud,EAAAC,EAAAvR,KAIA,gBAAAA,GAYA,QAAArJ,GAAAlhB,EAAA0B,GACA1B,EAAAw7B,EAAAx7B,EAAA0B,GACA6oB,EAAArJ,MAAAlhB,EAAA,GAAAA,EAAA,IAGA,QAAA6qB,KACA9D,EAAAtd,IACA8yB,EAAArb,MAAAoM,EACA/C,EAAAM,YAGA,QAAAyC,GAAA7B,EAAAC,GACA,GAAAh7B,GAAA+7B,IAAAhB,EAAAC,IAAA/6B,EAAA6qC,EAAA/P,EAAAC,EACAiQ,GAAA5U,EAAAC,EAAA4E,EAAAoI,EAAAzV,EAAAqd,EAAA7U,EAAAp2B,EAAA,GAAAq2B,EAAAr2B,EAAA,GAAAi7B,EAAAH,EAAAuI,EAAAtjC,EAAA,GAAA6tB,EAAA7tB,EAAA,GAAAkrC,EAAAlrC,EAAA,GAAA8rC,GAAAjS,GACAA,EAAArJ,MAAA6F,EAAAC,GAGA,QAAA8D,KACAyR,EAAArb,QACAqJ,EAAAO,UAGA,QAAA2R,KACA5R,IACA0R,EAAArb,MAAAwb,EACAH,EAAAzR,QAAA6R,EAGA,QAAAD,GAAAjR,EAAAC,GACA4B,EAAA/B,EAAAE,EAAAC,GAAAqM,EAAAhR,EAAAkR,EAAAjR,EAAA4V,EAAA5I,EAAA6I,EAAAte,EAAAue,EAAAlB,EACAW,EAAArb,MAAAoM,EAGA,QAAAqP,KACAhB,EAAA5U,EAAAC,EAAA4E,EAAAoI,EAAAzV,EAAAqd,EAAA7D,EAAAE,EAAA1M,EAAAqR,EAAAC,EAAAC,EAAAN,GAAAjS,GACAgS,EAAAzR,UACAA,IA/CA,GAAAS,GAAAwM,EAAAE,EAAA2E,EAAAC,EAAAC,EACAlR,EAAA7E,EAAAC,EAAAgN,EAAAzV,EAAAqd,EAEAW,GACArb,QACA2J,YACAC,UACAE,aAAA,WAAgCT,EAAAS,eAAuBuR,EAAA1R,UAAA4R,GACvDxR,WAAA,WAA8BV,EAAAU,aAAqBsR,EAAA1R,aA0CnD,OAAA0R,IAUA,QAAAQ,IAAA1mB,GACA,MAAAukB,KACA1Z,MAAA,SAAAlhB,EAAA0B,GACA,GAAAiP,GAAA0F,EAAArW,EAAA0B,EACA,OAAAzR,MAAAs6B,OAAArJ,MAAAvQ,EAAA,GAAAA,EAAA,OAKA,QAAAqqB,IAAAQ,GACA,MAAAwB,IAAA,WAAuC,MAAAxB,OAGvC,QAAAwB,IAAAC,GAYA,QAAAjC,GAAA9Z,GAEA,MADAA,GAAAgc,EAAAhc,EAAA,GAAAyK,GAAAzK,EAAA,GAAAyK,KACAzK,EAAA,GAAArd,EAAAiL,EAAAC,EAAAmS,EAAA,GAAArd,GAGA,QAAAytB,GAAApQ,GAEA,MADAA,GAAAgc,EAAA5L,QAAApQ,EAAA,GAAApS,GAAAjL,GAAAkL,EAAAmS,EAAA,IAAArd,GACAqd,MAAA,GAAA8M,GAAA9M,EAAA,GAAA8M,IAGA,QAAAmP,GAAAn9B,EAAA0B,GACA,MAAA1B,GAAAw7B,EAAAx7B,EAAA0B,IAAA1B,EAAA,GAAA6D,EAAAiL,EAAAC,EAAA/O,EAAA,GAAA6D,GAmDA,QAAAu5B,KACAF,EAAAjM,GAAA5a,EAAAwa,GAAAC,EAAAC,EAAAC,GAAAwK,EACA,IAAA55B,GAAA45B,EAAA/P,EAAAC,EAGA,OAFA5c,GAAA9O,EAAA4B,EAAA,GAAAiC,EACAkL,EAAArN,EAAAE,EAAA,GAAAiC,EACA4lB,IAGA,QAAAA,KAEA,MADA71B,GAAAypC,EAAA,KACArC,EAnFA,GAAAQ,GAGA1sB,EAAAC,EACAsH,EAAA6mB,EAEAlW,EAAAC,EAAAC,EAEAtzB,EACAypC,EARAx5B,EAAA,IACA7D,EAAA,IAAA0B,EAAA,IACA+pB,EAAA,EAAAC,EAAA,EACAoF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAsM,EAAA,KAAAC,EAAAC,GACAzW,EAAA,KAAA0W,EAAAC,GACAhC,EAAA,GAAAiC,EAAAC,GAAAT,EAAAzB,EA+EA,OA7DAV,GAAAzQ,OAAA,SAAAA,GACA,MAAA32B,IAAAypC,IAAA9S,EAAA32B,IAAAiqC,GAAAd,GAAA1mB,GAAAknB,EAAAI,EAAAF,EAAAJ,EAAA9S,QAGAyQ,EAAAuC,QAAA,SAAAj5B,GACA,MAAAvN,WAAAC,QAAAumC,EAAAj5B,EAAAg5B,EAAAxrC,OAAA23B,KAAA8T,GAGAvC,EAAAyC,SAAA,SAAAn5B,GACA,MAAAvN,WAAAC,QAAAymC,EAAAn5B,EAAAyiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAuC,KAAAgU,GAGAzC,EAAA8C,UAAA,SAAAx5B,GACA,MAAAvN,WAAAC,QAAAumC,GAAAj5B,EAAAy5B,GAAAT,EAAAh5B,EAAAqnB,KAAA2R,EAAA,KAAAE,IAAA/T,KAAA6T,EAAAtP,IAGAgN,EAAAE,WAAA,SAAA52B,GACA,MAAAvN,WAAAC,QAAAymC,EAAA,MAAAn5B,GAAAyiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAwW,IAAAtK,GAAArM,GAAAziB,EAAA,MAAA0iB,GAAA1iB,EAAA,MAAA2iB,GAAA3iB,EAAA,MAAA4iB,GAAA5iB,EAAA,OAAAmlB,KAAA,MAAA1C,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAGA8T,EAAArlC,MAAA,SAAA2O,GACA,MAAAvN,WAAAC,QAAA6M,GAAAS,EAAA84B,KAAAv5B,GAGAm3B,EAAAllB,UAAA,SAAAxR,GACA,MAAAvN,WAAAC,QAAAgJ,GAAAsE,EAAA,GAAA5C,GAAA4C,EAAA,GAAA84B,MAAAp9B,EAAA0B,IAGAs5B,EAAAp5B,OAAA,SAAA0C,GACA,MAAAvN,WAAAC,QAAAy0B,EAAAnnB,EAAA,OAAAqnB,GAAAD,EAAApnB,EAAA,OAAAqnB,GAAAyR,MAAA3R,EAAAuC,GAAAtC,EAAAsC,KAGAgN,EAAA3kB,OAAA,SAAA/R,GACA,MAAAvN,WAAAC,QAAA85B,EAAAxsB,EAAA,OAAAqnB,GAAAoF,EAAAzsB,EAAA,OAAAqnB,GAAAqF,EAAA1sB,EAAAtN,OAAA,EAAAsN,EAAA,OAAAqnB,GAAA,EAAAyR,MAAAtM,EAAA9C,GAAA+C,EAAA/C,GAAAgD,EAAAhD,KAGAgN,EAAA9R,UAAA,SAAA5kB,GACA,MAAAvN,WAAAC,QAAA2mC,EAAAC,GAAAT,EAAAzB,EAAAp3B,KAAAmlB,KAAA1W,GAAA2oB,IAGAV,EAAAD,UAAA,SAAAt8B,EAAA4mB,GACA,MAAA0V,IAAAC,EAAAv8B,EAAA4mB,IAGA2V,EAAAK,QAAA,SAAAC,EAAAjW,GACA,MAAAgW,IAAAL,EAAAM,EAAAjW,IAgBA,WAGA,MAFAmW,GAAAyB,EAAA3lC,MAAArH,KAAA8G,WACAikC,EAAA1J,OAAAkK,EAAAlK,UACA8L,KAIA,QAAAY,IAAAf,GACA,GAAA7P,GAAA,EACAC,EAAAtD,GAAA,EACAt5B,EAAAusC,GAAAC,GACAtsC,EAAAF,EAAA28B,EAAAC,EAMA,OAJA18B,GAAAstC,UAAA,SAAA35B,GACA,MAAAvN,WAAAC,OAAAvG,EAAA28B,EAAA9oB,EAAA,GAAAqnB,GAAA0B,EAAA/oB,EAAA,GAAAqnB,KAAAyB,EAAAY,GAAAX,EAAAW,KAGAr9B,EAGA,QAAAutC,IAAA9Q,GAGA,QAAA+Q,GAAA1S,EAAAC,GACA,OAAAD,EAAAI,EAAA1B,GAAAuB,GAAAG,GAHA,GAAAA,GAAAC,GAAAsB,EAUA,OAJA+Q,GAAA7M,OAAA,SAAAtxB,EAAA0B,GACA,OAAA1B,EAAA6rB,EAAA7B,GAAAtoB,EAAAmqB,KAGAsS,EAGA,QAAAC,IAAApX,EAAAE,GAQA,QAAAsU,GAAAx7B,EAAA0B,GACA,GAAAiP,GAAAoC,GAAAriB,EAAA,EAAAmU,EAAAslB,GAAAzoB,IAAAmD,CACA,QAAA8L,EAAAwZ,GAAAnqB,GAAA6E,GAAAw5B,EAAA1tB,EAAAmb,GAAA9rB,IATA,GAAAs+B,GAAAnU,GAAAnD,GAAAniB,GAAAy5B,EAAAnU,GAAAjD,IAAA,CAGA,IAAA5lB,GAAAuD,GAAA+pB,GAAA,MAAAsP,IAAAlX,EAEA,IAAAt2B,GAAA,EAAA4tC,GAAA,EAAAz5B,EAAAy5B,GAAAD,EAAAtrB,GAAAriB,GAAAmU,CAYA,OALA22B,GAAAlK,OAAA,SAAAtxB,EAAA0B,GACA,GAAA68B,GAAAF,EAAA38B,CACA,QAAAmR,GAAA7S,EAAAsB,GAAAi9B,IAAA15B,EAAAkkB,GAAAwV,GAAAvU,IAAAt5B,GAAAsP,IAAAu+B,KAAA15B,MAAA,EAAAA,MAGA22B,EAoBA,QAAAgD,IAAAC,GACA,GAAA55B,GAAA45B,EAAAznC,MACA,QACAkqB,MAAA,SAAAlhB,EAAA0B,GAAuC,IAAZ,GAAAkD,IAAA,IAAYA,EAAAC,GAAA45B,EAAA75B,GAAAsc,MAAAlhB,EAAA0B,IACvCg9B,OAAA,WAAoC,IAAZ,GAAA95B,IAAA,IAAYA,EAAAC,GAAA45B,EAAA75B,GAAA85B,UACpC7T,UAAA,WAAuC,IAAZ,GAAAjmB,IAAA,IAAYA,EAAAC,GAAA45B,EAAA75B,GAAAimB,aACvCC,QAAA,WAAqC,IAAZ,GAAAlmB,IAAA,IAAYA,EAAAC,GAAA45B,EAAA75B,GAAAkmB,WACrCE,aAAA,WAA0C,IAAZ,GAAApmB,IAAA,IAAYA,EAAAC,GAAA45B,EAAA75B,GAAAomB,gBAC1CC,WAAA,WAAwC,IAAZ,GAAArmB,IAAA,IAAYA,EAAAC,GAAA45B,EAAA75B,GAAAqmB,eAyFxC,QAAA0T,IAAAhpC,GACA,gBAAAqK,EAAA0B,GACA,GAAA2uB,GAAAvE,GAAA9rB,GACAswB,EAAAxE,GAAApqB,GACAmC,EAAAlO,EAAA06B,EAAAC,EACA,QACAzsB,EAAAysB,EAAAnG,GAAAnqB,GACA6D,EAAAsmB,GAAAzoB,KAKA,QAAAk9B,IAAA1Q,GACA,gBAAAluB,EAAA0B,GACA,GAAAyQ,GAAAY,GAAA/S,IAAA0B,KACAhR,EAAAw9B,EAAA/b,GACA0sB,EAAA1U,GAAAz5B,GACAouC,EAAAhT,GAAAp7B,EACA,QACAmiB,GAAA7S,EAAA6+B,EAAA1sB,EAAA2sB,GACA9U,GAAA7X,GAAAzQ,EAAAm9B,EAAA1sB,KAiCA,QAAA4sB,IAAAtT,EAAAC,GACA,OAAAD,EAAAp0B,GAAA2nC,IAAA/U,GAAAyB,GAAA,KAYA,QAAAuT,IAAAzD,GAwBA,QAAA0D,KACA,GAAAr7B,GAAAkmB,GAAAp0B,IACAgP,EAAAlU,EAAA4gC,GAAA5gC,EAAA4lB,UAAAib,QAAA,MACA,OAAA4J,GAAA,MAAAnU,IACApiB,EAAA,GAAAd,EAAAc,EAAA,GAAAd,IAAAc,EAAA,GAAAd,EAAAc,EAAA,GAAAd,IAAA23B,IAAAuD,KACAr+B,KAAAC,IAAAgE,EAAA,GAAAd,EAAAkjB,GAAAC,IAAAtmB,KAAA0Q,IAAAzM,EAAA,GAAAd,EAAAojB,GAAAC,MACAH,EAAArmB,KAAAC,IAAAgE,EAAA,GAAAd,EAAAmjB,KAAAC,EAAAvmB,KAAA0Q,IAAAzM,EAAA,GAAAd,EAAAqjB,MA7BA,GAKAF,GAAAC,EAAAC,EALAz2B,EAAAuqC,GAAAQ,GACA55B,EAAAnR,EAAAmR,OACAjM,EAAAlF,EAAAkF,MACAmgB,EAAArlB,EAAAqlB,UACAolB,EAAAzqC,EAAAyqC,WACAnU,EAAA,IA2BA,OAzBAt2B,GAAAkF,MAAA,SAAA2O,GACA,MAAAvN,WAAAC,QAAArB,EAAA2O,GAAA46B,KAAAvpC,KAGAlF,EAAAqlB,UAAA,SAAAxR,GACA,MAAAvN,WAAAC,QAAA8e,EAAAxR,GAAA46B,KAAAppB,KAGArlB,EAAAmR,OAAA,SAAA0C,GACA,MAAAvN,WAAAC,QAAA4K,EAAA0C,GAAA46B,KAAAt9B,KAGAnR,EAAAyqC,WAAA,SAAA52B,GACA,MAAAvN,WAAAC,QAAA,MAAAsN,EAAAyiB,EAAAC,EAAAC,EAAAC,EAAA,MAAAH,GAAAziB,EAAA,MAAA0iB,GAAA1iB,EAAA,MAAA2iB,GAAA3iB,EAAA,MAAA4iB,GAAA5iB,EAAA,OAAA46B,KAAA,MAAAnY,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAYAgY,IAGA,QAAAC,IAAAz9B,GACA,MAAAs9B,KAAA/U,GAAAvoB,GAAA,GAGA,QAAA09B,IAAApY,EAAAE,GAOA,QAAAsU,GAAAx7B,EAAA0B,GACA3B,EAAA,EAAgB2B,GAAAuoB,GAAA2E,KAAAltB,GAAAuoB,GAAA2E,IACNltB,EAAAuoB,GAAA2E,KAAAltB,EAAAuoB,GAAA2E,GACV,IAAAje,GAAA5Q,EAAAiB,GAAAm+B,GAAAz9B,GAAAmD,EACA,QAAA8L,EAAAwZ,GAAAtlB,EAAA7E,GAAAD,EAAA4Q,EAAAmb,GAAAjnB,EAAA7E,IAVA,GAAAq/B,GAAAvT,GAAA9E,GACAniB,EAAAmiB,IAAAE,EAAAiD,GAAAnD,GAAA3vB,GAAAgoC,EAAAvT,GAAA5E,IAAA7vB,GAAA8nC,GAAAjY,GAAAiY,GAAAnY,IACAjnB,EAAAs/B,EAAAr+B,GAAAm+B,GAAAnY,GAAAniB,IAEA,OAAAA,IASA22B,EAAAlK,OAAA,SAAAtxB,EAAA0B,GACA,GAAA49B,GAAAv/B,EAAA2B,EAAAiP,EAAAoY,GAAAlkB,GAAAkO,GAAA/S,IAAAs/B,IACA,QAAAzsB,GAAA7S,EAAAsB,GAAAg+B,IAAAz6B,EAAAkkB,GAAAuW,GAAA,EAAAtM,GAAAhyB,GAAAjB,EAAA4Q,EAAA,EAAA9L,IAAAolB,KAGAuR,GAdAuD,GAuBA,QAAAQ,IAAA9T,EAAAC,GACA,OAAAD,EAAAC,GAUA,QAAA8T,IAAAxY,EAAAE,GAOA,QAAAsU,GAAAx7B,EAAA0B,GACA,GAAA+9B,GAAA7uB,EAAAlP,EAAAg+B,EAAA76B,EAAA7E,CACA,QAAAy/B,EAAAtV,GAAAuV,GAAA9uB,EAAA6uB,EAAA3T,GAAA4T,IARA,GAAAL,GAAAvT,GAAA9E,GACAniB,EAAAmiB,IAAAE,EAAAiD,GAAAnD,IAAAqY,EAAAvT,GAAA5E,OAAAF,GACApW,EAAAyuB,EAAAx6B,EAAAmiB,CAEA,OAAA1lB,IAAAuD,GAAA+pB,GAAA2Q,IAOA/D,EAAAlK,OAAA,SAAAtxB,EAAA0B,GACA,GAAA+9B,GAAA7uB,EAAAlP,CACA,QAAAmR,GAAA7S,EAAAsB,GAAAm+B,IAAA56B,EAAAkkB,GAAA0W,GAAA7uB,EAAAmY,GAAAlkB,GAAAkO,GAAA/S,IAAAy/B,OAGAjE,GASA,QAAAmE,IAAA3/B,EAAA0B,GACA,GAAA4uB,GAAAxE,GAAApqB,GAAAmC,EAAAioB,GAAA9rB,GAAAswB,CACA,QAAAA,EAAAnG,GAAAnqB,GAAA6D,EAAAsmB,GAAAzoB,GAAAmC,GAWA,QAAA+7B,IAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAH,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EAAAtC,GAAA9C,IACA1Z,MAAA,SAAAlhB,EAAA0B,GACAzR,KAAAs6B,OAAArJ,MAAAlhB,EAAA6/B,EAAAE,EAAAr+B,EAAAo+B,EAAAE,MAiDA,QAAAC,IAAAxU,EAAAC,GACA,GAAAsQ,GAAAtQ,IAAAwU,EAAAlE,GACA,QACAvQ,GAAA,cAAAuQ,EAAAkE,IAAA,QAAAA,GAAA,QAAAlE,EAAA,QAAAkE,KACAxU,GAAA,SAAAsQ,GAAA,QAAAkE,IAAA,gBAAAlE,EAAA,QAAAkE,MAsBA,QAAAC,IAAAngC,EAAA0B,GACA,OAAAoqB,GAAApqB,GAAAyoB,GAAAnqB,GAAAmqB,GAAAzoB,IAWA,QAAA0+B,IAAApgC,EAAA0B,GACA,GAAA4uB,GAAAxE,GAAApqB,GAAAmC,EAAA,EAAAioB,GAAA9rB,GAAAswB,CACA,QAAAA,EAAAnG,GAAAnqB,GAAA6D,EAAAsmB,GAAAzoB,GAAAmC,GAaA,QAAAw8B,IAAA5U,EAAAC,GACA,OAAAr0B,GAAA2nC,IAAA/U,GAAAyB,GAAA,KAAAD,GAwBA,QAAA6U,IAAAngC,EAAAC,GACA,MAAAD,GAAAuI,SAAAtI,EAAAsI,OAAA,IAGA,QAAA63B,IAAAC,GACA,MAAAA,GAAAC,OAAAC,GAAA,GAAAF,EAAAxpC,OAGA,QAAA0pC,IAAA1gC,EAAAtP,GACA,MAAAsP,GAAAtP,EAAAsP,EAGA,QAAA2gC,IAAAH,GACA,SAAAA,EAAAC,OAAAG,GAAA,GAGA,QAAAA,IAAAl/B,EAAAhR,GACA,MAAAgQ,MAAAC,IAAAe,EAAAhR,EAAAgR,GAGA,QAAAm/B,IAAA73B,GAEA,IADA,GAAAw3B,GACAA,EAAAx3B,EAAAw3B,UAAAx3B,EAAAw3B,EAAA,EACA,OAAAx3B,GAGA,QAAA83B,IAAA93B,GAEA,IADA,GAAAw3B,GACAA,EAAAx3B,EAAAw3B,UAAAx3B,EAAAw3B,IAAAxpC,OAAA,EACA,OAAAgS,GAwDA,QAAAxI,IAAAwI,GACA,GAAAtK,GAAA,EACA8hC,EAAAx3B,EAAAw3B,SACA57B,EAAA47B,KAAAxpC,MACA,IAAA4N,EACA,OAAAA,GAAA,GAAAlG,GAAA8hC,EAAA57B,GAAA1T,UADAwN,GAAA,CAEAsK,GAAA9X,MAAAwN,EAgFA,QAAAqiC,IAAA5gC,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EACA,IAAA6gC,GAAA7gC,EAAA8gC,YACAC,EAAA9gC,EAAA6gC,YACAvwC,EAAA,IAGA,KAFAyP,EAAA6gC,EAAAnrB,MACAzV,EAAA8gC,EAAArrB,MACA1V,IAAAC,GACA1P,EAAAyP,EACAA,EAAA6gC,EAAAnrB,MACAzV,EAAA8gC,EAAArrB,KAEA,OAAAnlB,GAuCA,QAAAywC,IAAAzpC,EAAA8oC,GACA,GAEAx3B,GAEAo4B,EACAC,EACAz8B,EACAC,EAPAlV,EAAA,GAAA2xC,IAAA5pC,GACA6pC,GAAA7pC,EAAAxG,QAAAvB,EAAAuB,MAAAwG,EAAAxG,OAEA42B,GAAAn4B,EAQA,KAFA,MAAA6wC,MAAAgB,IAEAx4B,EAAA8e,EAAAjS,OAEA,GADA0rB,IAAAv4B,EAAA9X,OAAA8X,EAAAtR,KAAAxG,QACAmwC,EAAAb,EAAAx3B,EAAAtR,SAAAmN,EAAAw8B,EAAArqC,QAEA,IADAgS,EAAAw3B,SAAA,GAAAtpC,OAAA2N,GACAD,EAAAC,EAAA,EAAqBD,GAAA,IAAQA,EAC7BkjB,EAAA7uB,KAAAmoC,EAAAp4B,EAAAw3B,SAAA57B,GAAA,GAAA08B,IAAAD,EAAAz8B,KACAw8B,EAAA14B,OAAAM,EACAo4B,EAAAtF,MAAA9yB,EAAA8yB,MAAA,CAKA,OAAAnsC,GAAA8xC,WAAAC,IAGA,QAAAC,MACA,MAAAR,IAAAlxC,MAAAwxC,WAAAG,IAGA,QAAAJ,IAAAhpC,GACA,MAAAA,GAAAgoC,SAGA,QAAAoB,IAAA54B,GACAA,EAAAtR,KAAAsR,EAAAtR,UAGA,QAAAgqC,IAAA14B,GACA,GAAA3U,GAAA,CACA,GAAA2U,GAAA3U,gBACA2U,IAAAN,SAAAM,EAAA3U,YAGA,QAAAitC,IAAA5pC,GACAzH,KAAAyH,OACAzH,KAAA6rC,MACA7rC,KAAAoE,OAAA,EACApE,KAAAyY,OAAA,KAqBA,QAAAm5B,IAAAxP,GAKA,IAJA,GACA1tB,GACAC,EAFAnU,EAAA4hC,EAAAr7B,OAIAvG,GACAmU,EAAAlE,KAAAohC,SAAArxC,IAAA,EACAkU,EAAA0tB,EAAA5hC,GACA4hC,EAAA5hC,GAAA4hC,EAAAztB,GACAytB,EAAAztB,GAAAD,CAGA,OAAA0tB,GAeA,QAAA0P,IAAAC,EAAArxC,GACA,GAAAiU,GAAAgD,CAEA,IAAAq6B,GAAAtxC,EAAAqxC,GAAA,OAAArxC,EAGA,KAAAiU,EAAA,EAAaA,EAAAo9B,EAAAhrC,SAAc4N,EAC3B,GAAAs9B,GAAAvxC,EAAAqxC,EAAAp9B,KACAq9B,GAAAE,GAAAH,EAAAp9B,GAAAjU,GAAAqxC,GACA,OAAAA,EAAAp9B,GAAAjU,EAKA,KAAAiU,EAAA,EAAaA,EAAAo9B,EAAAhrC,OAAA,IAAkB4N,EAC/B,IAAAgD,EAAAhD,EAAA,EAAmBgD,EAAAo6B,EAAAhrC,SAAc4Q,EACjC,GAAAs6B,GAAAC,GAAAH,EAAAp9B,GAAAo9B,EAAAp6B,IAAAjX,IACAuxC,GAAAC,GAAAH,EAAAp9B,GAAAjU,GAAAqxC,EAAAp6B,KACAs6B,GAAAC,GAAAH,EAAAp6B,GAAAjX,GAAAqxC,EAAAp9B,KACAq9B,GAAAG,GAAAJ,EAAAp9B,GAAAo9B,EAAAp6B,GAAAjX,GAAAqxC,GACA,OAAAA,EAAAp9B,GAAAo9B,EAAAp6B,GAAAjX,EAMA,UAAAmU,OAGA,QAAAo9B,IAAA/hC,EAAAC,GACA,GAAAiiC,GAAAliC,EAAAwQ,EAAAvQ,EAAAuQ,EAAA7B,EAAA1O,EAAAJ,EAAAG,EAAAH,EAAA+O,EAAA3O,EAAAsB,EAAAvB,EAAAuB,CACA,OAAA2gC,GAAA,GAAAA,IAAAvzB,IAAAC,IAGA,QAAAuzB,IAAAniC,EAAAC,GACA,GAAAiiC,GAAAliC,EAAAwQ,EAAAvQ,EAAAuQ,EAAA,KAAA7B,EAAA1O,EAAAJ,EAAAG,EAAAH,EAAA+O,EAAA3O,EAAAsB,EAAAvB,EAAAuB,CACA,OAAA2gC,GAAA,GAAAA,IAAAvzB,IAAAC,IAGA,QAAAkzB,IAAA9hC,EAAA6hC,GACA,OAAAp9B,GAAA,EAAiBA,EAAAo9B,EAAAhrC,SAAc4N,EAC/B,IAAA09B,GAAAniC,EAAA6hC,EAAAp9B,IACA,QAGA,UAGA,QAAA29B,IAAAP,GACA,OAAAA,EAAAhrC,QACA,aAAAwrC,IAAAR,EAAA,GACA,cAAAG,IAAAH,EAAA,GAAAA,EAAA,GACA,cAAAI,IAAAJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAIA,QAAAQ,IAAAriC,GACA,OACAH,EAAAG,EAAAH,EACA0B,EAAAvB,EAAAuB,EACAiP,EAAAxQ,EAAAwQ,GAIA,QAAAwxB,IAAAhiC,EAAAC,GACA,GAAA6mB,GAAA9mB,EAAAH,EAAAknB,EAAA/mB,EAAAuB,EAAA+gC,EAAAtiC,EAAAwQ,EACAsrB,EAAA77B,EAAAJ,EAAAk8B,EAAA97B,EAAAsB,EAAAghC,EAAAtiC,EAAAuQ,EACAgyB,EAAA1G,EAAAhV,EAAA2b,EAAA1G,EAAAhV,EAAA2b,EAAAH,EAAAD,EACAxxB,EAAAvQ,KAAAqS,KAAA4vB,IAAAC,IACA,QACA5iC,GAAAinB,EAAAgV,EAAA0G,EAAA1xB,EAAA4xB,GAAA,EACAnhC,GAAAwlB,EAAAgV,EAAA0G,EAAA3xB,EAAA4xB,GAAA,EACAlyB,GAAAM,EAAAwxB,EAAAC,GAAA,GAIA,QAAAN,IAAAjiC,EAAAC,EAAA1P,GACA,GAAAu2B,GAAA9mB,EAAAH,EAAAknB,EAAA/mB,EAAAuB,EAAA+gC,EAAAtiC,EAAAwQ,EACAsrB,EAAA77B,EAAAJ,EAAAk8B,EAAA97B,EAAAsB,EAAAghC,EAAAtiC,EAAAuQ,EACAmyB,EAAApyC,EAAAsP,EAAA+iC,EAAAryC,EAAAgR,EAAAshC,EAAAtyC,EAAAigB,EACAsyB,EAAAhc,EAAAgV,EACAiH,EAAAjc,EAAA6b,EACArkB,EAAAyI,EAAAgV,EACA1d,EAAA0I,EAAA6b,EACAI,EAAAT,EAAAD,EACAW,EAAAJ,EAAAP,EACAY,EAAApc,IAAAC,IAAAub,IACA1G,EAAAsH,EAAApH,IAAAC,IAAAwG,IACAztC,EAAAouC,EAAAP,IAAAC,IAAAC,IACA3M,EAAA6M,EAAAzkB,EAAAwkB,EAAAzkB,EACAzI,GAAA0I,EAAAxpB,EAAAupB,EAAAud,IAAA,EAAA1F,GAAApP,EACAhR,GAAAuI,EAAA2kB,EAAA1kB,EAAA2kB,GAAA/M,EACArgB,GAAAktB,EAAAnH,EAAAkH,EAAAhuC,IAAA,EAAAohC,GAAAnP,EACAhR,GAAA+sB,EAAAG,EAAAF,EAAAC,GAAA9M,EACAiN,EAAArtB,IAAAC,IAAA,EACA8rB,EAAA,GAAAS,EAAA1sB,EAAAE,EAAAD,EAAAE,GACA1C,EAAAuC,IAAAC,IAAAysB,IACA9xB,IAAA2yB,GAAAtB,EAAAthC,KAAAqS,KAAAivB,IAAA,EAAAsB,EAAA9vB,KAAA,EAAA8vB,GAAA9vB,EAAAwuB,EACA,QACAhiC,EAAAinB,EAAAlR,EAAAE,EAAAtF,EACAjP,EAAAwlB,EAAAlR,EAAAE,EAAAvF,EACAA,KAIA,QAAA4yB,IAAApjC,EAAAC,EAAA1P,GACA,GAAA8yC,GAAArjC,EAAAH,EACAyjC,EAAAtjC,EAAAuB,EACAgiC,EAAAtjC,EAAAuQ,EAAAjgB,EAAAigB,EACAgzB,EAAAxjC,EAAAwQ,EAAAjgB,EAAAigB,EACA7B,EAAA1O,EAAAJ,EAAAwjC,EACAz0B,EAAA3O,EAAAsB,EAAA+hC,EACAG,EAAA90B,IAAAC,GACA,IAAA60B,EAAA,CACA,GAAA5jC,GAAA,KAAA2jC,OAAAD,QAAA,EAAAE,GACAliC,EAAAhB,KAAAqS,KAAArS,KAAAC,IAAA,IAAA+iC,GAAAC,EAAAC,IAAAD,GAAAC,GAAAD,EAAAD,OAAA,EAAAE,EACAlzC,GAAAsP,EAAAwjC,EAAAxjC,EAAA8O,EAAApN,EAAAqN,EACAre,EAAAgR,EAAA+hC,EAAAzjC,EAAA+O,EAAArN,EAAAoN,MAEApe,GAAAsP,EAAAwjC,EAAAG,EACAjzC,EAAAgR,EAAA+hC,EAIA,QAAAI,IAAA1jC,EAAAC,GACA,GAAA0O,GAAA1O,EAAAJ,EAAAG,EAAAH,EACA+O,EAAA3O,EAAAsB,EAAAvB,EAAAuB,EACA2gC,EAAAliC,EAAAwQ,EAAAvQ,EAAAuQ,CACA,OAAA0xB,KAAA,KAAAvzB,IAAAC,IAGA,QAAA+0B,IAAA96B,GACA,GAAA7I,GAAA6I,EAAA1E,EACAlE,EAAA4I,EAAAqe,KAAA/iB,EACA+xB,EAAAl2B,EAAAwQ,EAAAvQ,EAAAuQ,EACA7B,GAAA3O,EAAAH,EAAAI,EAAAuQ,EAAAvQ,EAAAJ,EAAAG,EAAAwQ,GAAA0lB,EACAtnB,GAAA5O,EAAAuB,EAAAtB,EAAAuQ,EAAAvQ,EAAAsB,EAAAvB,EAAAwQ,GAAA0lB,CACA,OAAAvnB,KAAAC,IAGA,QAAAg1B,IAAAC,GACA/zC,KAAAqU,EAAA0/B,EACA/zC,KAAAo3B,KAAA,KACAp3B,KAAAg0C,SAAA,KAGA,QAAAC,IAAAC,GACA,KAAAt/B,EAAAs/B,EAAAntC,QAAA,QAEA,IAAAmJ,GAAAC,EAAA1P,EAAAmU,EAAAu/B,EAAA1Q,EAAA9uB,EAAAgD,EAAA/D,EAAAwgC,EAAAC,CAIA,IADAnkC,EAAAgkC,EAAA,GAAAhkC,EAAAH,EAAA,EAAAG,EAAAuB,EAAA,IACAmD,EAAA,SAAA1E,GAAAwQ,CAIA,IADAvQ,EAAA+jC,EAAA,GAAAhkC,EAAAH,GAAAI,EAAAuQ,EAAAvQ,EAAAJ,EAAAG,EAAAwQ,EAAAvQ,EAAAsB,EAAA,IACAmD,EAAA,SAAA1E,GAAAwQ,EAAAvQ,EAAAuQ,CAGA4yB,IAAAnjC,EAAAD,EAAAzP,EAAAyzC,EAAA,IAGAhkC,EAAA,GAAA4jC,IAAA5jC,GAAAC,EAAA,GAAA2jC,IAAA3jC,GAAA1P,EAAA,GAAAqzC,IAAArzC,GACAyP,EAAAknB,KAAA32B,EAAAuzC,SAAA7jC,EACAA,EAAAinB,KAAAlnB,EAAA8jC,SAAAvzC,EACAA,EAAA22B,KAAAjnB,EAAA6jC,SAAA9jC,CAGAokC,GAAA,IAAA3/B,EAAA,EAAmBA,EAAAC,IAAOD,EAAA,CAC1B2+B,GAAApjC,EAAAmE,EAAAlE,EAAAkE,EAAA5T,EAAAyzC,EAAAv/B,IAAAlU,EAAA,GAAAqzC,IAAArzC,GAKAkX,EAAAxH,EAAAinB,KAAAxjB,EAAA1D,EAAA8jC,SAAAI,EAAAjkC,EAAAkE,EAAAqM,EAAA2zB,EAAAnkC,EAAAmE,EAAAqM,CACA,GACA,IAAA0zB,GAAAC,EAAA,CACA,GAAAT,GAAAj8B,EAAAtD,EAAA5T,EAAA4T,GAAA,CACAlE,EAAAwH,EAAAzH,EAAAknB,KAAAjnB,IAAA6jC,SAAA9jC,IAAAyE,CACA,SAAA2/B,GAEAF,GAAAz8B,EAAAtD,EAAAqM,EAAA/I,IAAAyf,SACO,CACP,GAAAwc,GAAAhgC,EAAAS,EAAA5T,EAAA4T,GAAA,CACAnE,EAAA0D,EAAA1D,EAAAknB,KAAAjnB,IAAA6jC,SAAA9jC,IAAAyE,CACA,SAAA2/B,GAEAD,GAAAzgC,EAAAS,EAAAqM,EAAA9M,IAAAogC,eAEKr8B,IAAA/D,EAAAwjB,KAOL,KAJA32B,EAAAuzC,SAAA9jC,EAAAzP,EAAA22B,KAAAjnB,EAAAD,EAAAknB,KAAAjnB,EAAA6jC,SAAA7jC,EAAA1P,EAGA0zC,EAAAN,GAAA3jC,IACAzP,IAAA22B,QAAAjnB,IACAszB,EAAAoQ,GAAApzC,IAAA0zC,IACAjkC,EAAAzP,EAAA0zC,EAAA1Q,EAGAtzB,GAAAD,EAAAknB,KAImB,IAAnBlnB,GAAAC,EAAAkE,GAAA5T,EAAA0P,GAAmB1P,IAAA22B,QAAAjnB,GAAAD,EAAAlH,KAAAvI,EAAA4T,EAGnB,KAH2D5T,EAAA8zC,GAAArkC,GAG3DyE,EAAA,EAAaA,EAAAC,IAAOD,EAAAzE,EAAAgkC,EAAAv/B,GAAAzE,EAAAH,GAAAtP,EAAAsP,EAAAG,EAAAuB,GAAAhR,EAAAgR,CAEpB,OAAAhR,GAAAigB,EAQA,QAAA8zB,IAAA1kC,GACA,aAAAA,EAAA,KAAA2kC,GAAA3kC,GAGA,QAAA2kC,IAAA3kC,GACA,qBAAAA,GAAA,SAAA+E,MACA,OAAA/E,GAGA,QAAA4kC,MACA,SASA,QAAAC,IAAApsC,GACA,MAAAkI,MAAAqS,KAAAva,EAAAtH,OAuCA,QAAA2zC,IAAA/f,GACA,gBAAA9b,GACAA,EAAAw3B,WACAx3B,EAAA2H,EAAAjQ,KAAAC,IAAA,GAAAmkB,EAAA9b,IAAA,KAKA,QAAA87B,IAAAC,EAAAlhC,GACA,gBAAAmF,GACA,GAAAw3B,EAAAx3B,EAAAw3B,SAAA,CACA,GAAAA,GACA57B,EAGA2Q,EAFA1Q,EAAA27B,EAAAxpC,OACA2Z,EAAAo0B,EAAA/7B,GAAAnF,GAAA,CAGA,IAAA8M,EAAA,IAAA/L,EAAA,EAAwBA,EAAAC,IAAOD,EAAA47B,EAAA57B,GAAA+L,IAE/B,IADA4E,EAAA2uB,GAAA1D,GACA7vB,EAAA,IAAA/L,EAAA,EAAwBA,EAAAC,IAAOD,EAAA47B,EAAA57B,GAAA+L,IAC/B3H,GAAA2H,EAAA4E,EAAA5E,IAKA,QAAAq0B,IAAAnhC,GACA,gBAAAmF,GACA,GAAAN,GAAAM,EAAAN,MACAM,GAAA2H,GAAA9M,EACA6E,IACAM,EAAAhJ,EAAA0I,EAAA1I,EAAA6D,EAAAmF,EAAAhJ,EACAgJ,EAAAtH,EAAAgH,EAAAhH,EAAAmC,EAAAmF,EAAAtH,IA+EA,QAAAujC,IAAAzsC,GACA,MAAAA,GAAAlI,GAGA,QAAA40C,IAAA1sC,GACA,MAAAA,GAAA2sC,SA8DA,QAAAC,IAAAjlC,EAAAC,GACA,MAAAD,GAAAuI,SAAAtI,EAAAsI,OAAA,IAWA,QAAA28B,IAAAl7B,GACA,GAAAq2B,GAAAr2B,EAAAq2B,QACA,OAAAA,KAAA,GAAAr2B,EAAAxF,EAIA,QAAA2gC,IAAAn7B,GACA,GAAAq2B,GAAAr2B,EAAAq2B,QACA,OAAAA,OAAAxpC,OAAA,GAAAmT,EAAAxF,EAKA,QAAA4gC,IAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,GAAAD,EAAA7gC,EAAA4gC,EAAA5gC,EACA6gC,GAAA/0C,GAAAi1C,EACAF,EAAAz0B,GAAA00B,EACAF,EAAA90C,GAAAi1C,EACAF,EAAAtzB,GAAAuzB,EACAD,EAAAh1C,GAAAi1C,EAMA,QAAAE,IAAAz7B,GAMA,IALA,GAIApW,GAJA2xC,EAAA,EACAC,EAAA,EACAnF,EAAAr2B,EAAAq2B,SACA57B,EAAA47B,EAAAxpC,SAEA4N,GAAA,GACA7Q,EAAAysC,EAAA57B,GACA7Q,EAAAoe,GAAAuzB,EACA3xC,EAAAtD,GAAAi1C,EACAA,GAAA3xC,EAAAid,GAAA20B,GAAA5xC,EAAArD,GAMA,QAAAm1C,IAAAC,EAAA37B,EAAA47B,GACA,MAAAD,GAAA3lC,EAAAuI,SAAAyB,EAAAzB,OAAAo9B,EAAA3lC,EAAA4lC,EAGA,QAAAC,IAAAh9B,EAAApE,GACA3U,KAAAqU,EAAA0E,EACA/Y,KAAAyY,OAAA,KACAzY,KAAAuwC,SAAA,KACAvwC,KAAAqzC,EAAA,KACArzC,KAAAkQ,EAAAlQ,KACAA,KAAAkiB,EAAA,EACAliB,KAAAQ,EAAA,EACAR,KAAAS,EAAA,EACAT,KAAA+gB,EAAA,EACA/gB,KAAA0U,EAAA,KACA1U,KAAA2U,IAKA,QAAAqhC,IAAAt2C,GASA,IARA,GACAqZ,GAEAo4B,EACAZ,EACA57B,EACAC,EANA2hB,EAAA,GAAAwf,IAAAr2C,EAAA,GAEAm4B,GAAAtB,GAMAxd,EAAA8e,EAAAjS,OACA,GAAA2qB,EAAAx3B,EAAA1E,EAAAk8B,SAEA,IADAx3B,EAAAw3B,SAAA,GAAAtpC,OAAA2N,EAAA27B,EAAAxpC,QACA4N,EAAAC,EAAA,EAAqBD,GAAA,IAAQA,EAC7BkjB,EAAA7uB,KAAAmoC,EAAAp4B,EAAAw3B,SAAA57B,GAAA,GAAAohC,IAAAxF,EAAA57B,OACAw8B,EAAA14B,OAAAM,CAMA,QADAwd,EAAA9d,OAAA,GAAAs9B,IAAA,SAAAxF,UAAAha,GACAA,EA8JA,QAAA0f,IAAAC,EAAAz9B,EAAAqe,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,GAEAf,GACAigB,EAIAt3B,EAAAC,EAEAs3B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAfAtgB,KACAyB,EAAApf,EAAA83B,SAGAoG,EAAA,EACAC,EAAA,EACAhiC,EAAAijB,EAAA9wB,OAEA9F,EAAAwX,EAAAxX,MASA01C,EAAA/hC,GAAA,CACAiK,EAAAmY,EAAAF,EAAAhY,EAAAmY,EAAAF,CAGA,GAAAqf,GAAAve,EAAA+e,KAAA31C,aAAoCm1C,GAAAQ,EAAAhiC,EAOpC,KANAyhC,EAAAC,EAAAF,EACAK,EAAAhmC,KAAAC,IAAAoO,EAAAD,IAAAC,IAAA7d,EAAAi1C,GACAQ,EAAAN,IAAAK,EACAD,EAAA/lC,KAAAC,IAAA4lC,EAAAI,IAAAL,GAGUO,EAAAhiC,IAAQgiC,EAAA,CAMlB,GALAR,GAAAD,EAAAte,EAAA+e,GAAA31C,MACAk1C,EAAAE,MAAAF,GACAA,EAAAG,MAAAH,GACAO,EAAAN,IAAAK,EACAF,EAAA9lC,KAAAC,IAAA4lC,EAAAI,IAAAL,GACAE,EAAAC,EAAA,CAAgCJ,GAAAD,CAAuB,OACvDK,EAAAD,EAIAngB,EAAAptB,KAAAktB,GAAqBj1B,MAAAm1C,EAAAS,KAAAh4B,EAAAC,EAAAyxB,SAAA1Y,EAAAtjB,MAAAoiC,EAAAC,KACrB1gB,EAAA2gB,KAAAC,GAAA5gB,EAAAY,EAAAC,EAAAC,EAAA/1B,EAAA81B,GAAAjY,EAAAs3B,EAAAn1C,EAAAg2B,GACA8f,GAAA7gB,EAAAY,EAAAC,EAAA91B,EAAA61B,GAAAjY,EAAAu3B,EAAAn1C,EAAA+1B,EAAAC,GACAh2B,GAAAm1C,EAAAO,EAAAC,EAGA,MAAAxgB,GA2OA,QAAA4gB,IAAA9mC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAMA,QAAA8mC,IAAAjV,GAKA,OAJAptB,GAAAotB,EAAAj7B,OACAmwC,GAAA,KACA7L,EAAA,EAEA12B,EAAA,EAAiBA,EAAAC,IAAOD,EAAA,CACxB,KAAA02B,EAAA,GAAA8L,GAAAnV,EAAAkV,EAAA7L,EAAA,IAAArJ,EAAAkV,EAAA7L,EAAA,IAAArJ,EAAArtB,KAAA,KAAA02B,CACA6L,GAAA7L,KAAA12B,EAGA,MAAAuiC,GAAA3iC,MAAA,EAAA82B,GA4EA,QAAA+L,IAAA/L,GACArrC,KAAAq3C,MAAAhM,EACArrC,KAAA4nB,MACA5nB,KAAAs3C,OAAA,KACAt3C,KAAAu3C,UACAv3C,KAAAwH,SACAxH,KAAAw3C,SACAx3C,KAAAy3C,QACAz3C,KAAA03C,OACA13C,KAAA23C,OAAA,EAmCA,QAAAC,IAAA1xB,GACA,IAAAA,EAAAyxB,OACA,IAASE,GAAA3xB,GACT,MAAAZ,GACA,GAAAY,EAAAqxB,OAAArxB,EAAAwxB,OAAAxxB,EAAAuxB,QAAA,GAAAK,GAAA5xB,EAAAZ,OACA,KAAAY,EAAA1e,MAAA,KAAA8d,IAKA,QAAAuyB,IAAA3xB,GACA,KAAAA,EAAAyxB,OAAAzxB,EAAAsxB,UAAAtxB,EAAAuxB,QAAAvxB,EAAAmxB,OAAA,CACA,GAAA1iC,GAAAuR,EAAAwxB,OAAAxxB,EAAAuxB,QACA/iC,EAAAwR,EAAAqxB,OAAA5iC,GACAgD,EAAAjD,EAAA3N,OAAA,EACAtG,EAAAiU,EAAAiD,EACAjD,GAAAiD,GAAAoP,GAAAb,EAAAvR,KACAuR,EAAAsxB,WAAAtxB,EAAAuxB,QACA/iC,EAAAjU,EAAA4G,MAAA,KAAAqN,GACAwR,EAAAqxB,OAAA5iC,KACAuR,EAAAqxB,OAAA5iC,GAAAD,GAAAqjC,KAIA,QAAAhxB,IAAAb,EAAAvR,GACA,gBAAA2Q,EAAA5E,GACAwF,EAAAqxB,OAAA5iC,OACAuR,EAAAuxB,UAAAvxB,EAAAwxB,OACAxxB,EAAAqxB,OAAA5iC,GAAA,KACA,MAAAuR,EAAAoxB,SACA,MAAAhyB,EACAwyB,GAAA5xB,EAAAZ,IAEAY,EAAA1e,MAAAmN,GAAA+L,EACAwF,EAAAsxB,SAAAI,GAAA1xB,GACA8xB,GAAA9xB,OAKA,QAAA4xB,IAAA5xB,EAAAZ,GACA,GAAA5Q,GAAAC,EAAAuR,EAAAqxB,OAAAxwC,MAKA,KAJAmf,EAAAoxB,OAAAhyB,EACAY,EAAA1e,MAAA3F,OACAqkB,EAAAsxB,SAAAh+B,MAEA7E,GAAA,GACA,IAAAD,EAAAwR,EAAAqxB,OAAA5iC,MACAuR,EAAAqxB,OAAA5iC,GAAA,KACAD,EAAAojC,OACA,IAAapjC,EAAAojC,QACb,MAAAxyB,IAKAY,EAAAuxB,QAAAj+B,IACAw+B,GAAA9xB,GAGA,QAAA8xB,IAAA9xB,GACA,IAAAA,EAAAuxB,SAAAvxB,EAAA0B,MAAA,CACA,GAAArf,GAAA2d,EAAA1e,KACA0e,GAAA1e,MAAA3F,OACAqkB,EAAA0B,MAAA1B,EAAAoxB,OAAA/uC,IAIA,QAAA0vC,IAAAC,GACA,SAAAA,IAAAvvB,QACA,OAAAuvB,OAAA,YAAArjC,OAAA,sBACA,WAAAuiC,IAAAc;CA6OA,QAAAC,IAAA3iC,GACA,gBAAA1E,EAAAsnC,GACA5iC,EAAA,MAAA1E,EAAAsnC,EAAA,OAIA,QAAAC,IAAAD,GACA,GAAA9iC,GAAA8iC,EAAAE,YACA,OAAAhjC,IAAA,SAAAA,EACA8iC,EAAAG,SACAH,EAAAI,aA0CA,QAAAC,IAAAjzB,EAAA0Q,GACA,gBAAAwiB,GACA,MAAAlzB,GAAAkzB,EAAAF,aAAAtiB,IAeA,QAAAyiB,IAAAjqC,GAOA,QAAAhJ,GAAA6C,GACA,GAAAlF,GAAAkF,EAAA,GAAAoM,EAAAkC,EAAA3I,IAAA7K,EACA,KAAAsR,EAAA,CACA,GAAAikC,IAAAC,GAAA,MAAAD,EACA/hC,GAAAtB,IAAAlS,EAAAsR,EAAApC,EAAAvJ,KAAAT,IAEA,MAAAmG,IAAAiG,EAAA,GAAAjG,EAAA3H,QAZA,GAAA8P,GAAAse,KACA5iB,KACAqmC,EAAAC,EAoCA,OAlCAnqC,GAAA,MAAAA,KAAAoqC,GAAAv4C,KAAAmO,GAWAhJ,EAAA6M,OAAA,SAAA8B,GACA,IAAAvN,UAAAC,OAAA,MAAAwL,GAAAgC,OACAhC,MAAAsE,EAAAse,IAEA,KADA,GAAA5sB,GAAAlF,EAAAsR,GAAA,EAAAC,EAAAP,EAAAtN,SACA4N,EAAAC,GAAAiC,EAAAkiC,IAAA11C,GAAAkF,EAAA8L,EAAAM,IAAA,KAAAkC,EAAAtB,IAAAlS,EAAAkP,EAAAvJ,KAAAT,GACA,OAAA7C,IAGAA,EAAAgJ,MAAA,SAAA2F,GACA,MAAAvN,WAAAC,QAAA2H,EAAAoqC,GAAAv4C,KAAA8T,GAAA3O,GAAAgJ,EAAA6F,SAGA7O,EAAAkzC,QAAA,SAAAvkC,GACA,MAAAvN,WAAAC,QAAA6xC,EAAAvkC,EAAA3O,GAAAkzC,GAGAlzC,EAAAqN,KAAA,WACA,MAAA4lC,MACApmC,UACA7D,SACAkqC,YAGAlzC,EAGA,QAAAszC,MAcA,QAAAC,KACA,GAAArkC,GAAArC,IAAAxL,OACAqgC,EAAA8R,EAAA,GAAAA,EAAA,GACA7oC,EAAA6oC,EAAA9R,EAAA,GACA92B,EAAA4oC,EAAA,EAAA9R,EACA52B,IAAAF,EAAAD,GAAAI,KAAAC,IAAA,EAAAkE,EAAAukC,EAAA,EAAAC,GACAtnC,IAAAtB,EAAAC,KAAAG,MAAAJ,IACAH,IAAAC,EAAAD,EAAAG,GAAAoE,EAAAukC,IAAAtgB,EACAhnB,EAAArB,GAAA,EAAA2oC,GACArnC,IAAAzB,EAAAI,KAAAqB,MAAAzB,GAAAwB,EAAApB,KAAAqB,MAAAD,GACA,IAAAxI,GAAAu9B,GAAAhyB,GAAAxL,IAAA,SAAAuL,GAA8C,MAAAtE,GAAAG,EAAAmE,GAC9C,OAAA0kC,GAAAjS,EAAA/9B,EAAA+9B,UAAA/9B,GAxBA,GAIAmH,GACAqB,EALAnM,EAAAizC,KAAAC,QAAA/2C,QACA0Q,EAAA7M,EAAA6M,OACA8mC,EAAA3zC,EAAAgJ,MACAwqC,GAAA,KAGApnC,GAAA,EACAqnC,EAAA,EACAC,EAAA,EACAvgB,EAAA,EAoEA,cAlEAnzB,GAAAkzC,QAgBAlzC,EAAA6M,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAAwL,EAAA8B,GAAA4kC,KAAA1mC,KAGA7M,EAAAgJ,MAAA,SAAA2F,GACA,MAAAvN,WAAAC,QAAAmyC,IAAA7kC,EAAA,IAAAA,EAAA,IAAA4kC,KAAAC,EAAA3kC,SAGA7O,EAAA4zC,WAAA,SAAAjlC,GACA,MAAA6kC,KAAA7kC,EAAA,IAAAA,EAAA,IAAAvC,GAAA,EAAAmnC,KAGAvzC,EAAAmM,UAAA,WACA,MAAAA,IAGAnM,EAAA8K,KAAA,WACA,MAAAA,IAGA9K,EAAAoM,MAAA,SAAAuC,GACA,MAAAvN,WAAAC,QAAA+K,IAAAuC,EAAA4kC,KAAAnnC,GAGApM,EAAAovC,QAAA,SAAAzgC,GACA,MAAAvN,WAAAC,QAAAoyC,EAAAC,EAAA3oC,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,EAAA9M,IAAA4kC,KAAAE,GAGAzzC,EAAAyzC,aAAA,SAAA9kC,GACA,MAAAvN,WAAAC,QAAAoyC,EAAA1oC,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,EAAA9M,IAAA4kC,KAAAE,GAGAzzC,EAAA0zC,aAAA,SAAA/kC,GACA,MAAAvN,WAAAC,QAAAqyC,EAAA3oC,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,EAAA9M,IAAA4kC,KAAAG,GAGA1zC,EAAAmzB,MAAA,SAAAxkB,GACA,MAAAvN,WAAAC,QAAA8xB,EAAApoB,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,EAAA9M,IAAA4kC,KAAApgB,GAGAnzB,EAAAqN,KAAA,WACA,MAAAimC,MACAzmC,YACA7D,MAAAwqC,GACApnC,SACAqnC,gBACAC,gBACAvgB,UAGAogB,IAGA,QAAAM,IAAA7zC,GACA,GAAAqN,GAAArN,EAAAqN,IAUA,OARArN,GAAAovC,QAAApvC,EAAA0zC,mBACA1zC,GAAAyzC,mBACAzzC,GAAA0zC,aAEA1zC,EAAAqN,KAAA,WACA,MAAAwmC,IAAAxmC,MAGArN,EAGA,QAAA8zC,MACA,MAAAD,IAAAP,KAAAG,aAAA,IAeA,QAAAM,IAAAvpC,EAAAC,GACA,OAAAA,GAAAD,MACA,SAAAH,GAAqB,OAAAA,EAAAG,GAAAC,GACrBupC,GAAAvpC,GAGA,QAAAwpC,IAAAC,GACA,gBAAA1pC,EAAAC,GACA,GAAA5H,GAAAqxC,EAAA1pC,KAAAC,KACA,iBAAAJ,GAAwB,MAAAA,IAAAG,EAAA,EAAAH,GAAAI,EAAA,EAAA5H,EAAAwH,KAIxB,QAAA8pC,IAAA1zB,GACA,gBAAAjW,EAAAC,GACA,GAAAuQ,GAAAyF,EAAAjW,KAAAC,KACA,iBAAAuE,GAAwB,MAAAA,IAAA,EAAAxE,EAAAwE,GAAA,EAAAvE,EAAAuQ,EAAAhM,KAIxB,QAAAolC,IAAAvnC,EAAA7D,EAAAkrC,EAAAzzB,GACA,GAAA4zB,GAAAxnC,EAAA,GAAA6gC,EAAA7gC,EAAA,GAAA67B,EAAA1/B,EAAA,GAAA8jC,EAAA9jC,EAAA,EAGA,OAFA0kC,GAAA2G,KAAAH,EAAAxG,EAAA2G,GAAA3L,EAAAjoB,EAAAqsB,EAAApE,KACA2L,EAAAH,EAAAG,EAAA3G,GAAAhF,EAAAjoB,EAAAioB,EAAAoE,IACA,SAAAziC,GAAsB,MAAAq+B,GAAA2L,EAAAhqC,KAGtB,QAAAiqC,IAAAznC,EAAA7D,EAAAkrC,EAAAzzB,GACA,GAAAxO,GAAAlH,KAAA0Q,IAAA5O,EAAAxL,OAAA2H,EAAA3H,QAAA,EACAwB,EAAA,GAAAtB,OAAA0Q,GACA+I,EAAA,GAAAzZ,OAAA0Q,GACAhD,GAAA,CAQA,KALApC,EAAAoF,GAAApF,EAAA,KACAA,IAAAgC,QAAA6yB,UACA14B,IAAA6F,QAAA6yB,aAGAzyB,EAAAgD,GACApP,EAAAoM,GAAAilC,EAAArnC,EAAAoC,GAAApC,EAAAoC,EAAA,IACA+L,EAAA/L,GAAAwR,EAAAzX,EAAAiG,GAAAjG,EAAAiG,EAAA,GAGA,iBAAA5E,GACA,GAAA4E,GAAAslC,GAAA1nC,EAAAxC,EAAA,EAAA4H,GAAA,CACA,OAAA+I,GAAA/L,GAAApM,EAAAoM,GAAA5E,KAIA,QAAAgD,IAAAqhB,EAAA1V,GACA,MAAAA,GACAnM,OAAA6hB,EAAA7hB,UACA7D,MAAA0lB,EAAA1lB,SACA20B,YAAAjP,EAAAiP,eACA6W,MAAA9lB,EAAA8lB,SAKA,QAAAC,IAAAP,EAAAzzB,GASA,QAAA8yB,KAGA,MAFAmB,GAAA3pC,KAAA0Q,IAAA5O,EAAAxL,OAAA2H,EAAA3H,QAAA,EAAAizC,GAAAF,GACAnqB,EAAAkE,EAAA,KACAnuB,EAGA,QAAAA,GAAAqK,GACA,OAAA4f,MAAAyqB,EAAA7nC,EAAA7D,EAAAwrC,EAAAP,GAAAC,KAAA7uB,MAAAhb,GAfA,GAIAqqC,GACAzqB,EACAkE,EANAthB,EAAA8nC,GACA3rC,EAAA2rC,GACAtvB,EAAA+I,GACAomB,GAAA,CAuCA,OAxBAx0C,GAAA27B,OAAA,SAAA5vB,GACA,OAAAoiB,MAAAumB,EAAA1rC,EAAA6D,EAAAknC,GAAAS,EAAAL,GAAA1zB,SAAA1U,IAGA/L,EAAA6M,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAAwL,EAAA+nC,GAAA/5C,KAAA8T,EAAAkmC,IAAAtB,KAAA1mC,EAAAgC,SAGA7O,EAAAgJ,MAAA,SAAA2F,GACA,MAAAvN,WAAAC,QAAA2H,EAAAoqC,GAAAv4C,KAAA8T,GAAA4kC,KAAAvqC,EAAA6F,SAGA7O,EAAA4zC,WAAA,SAAAjlC,GACA,MAAA3F,GAAAoqC,GAAAv4C,KAAA8T,GAAA0W,EAAAyvB,GAAAvB,KAGAvzC,EAAAw0C,MAAA,SAAA7lC,GACA,MAAAvN,WAAAC,QAAAmzC,IAAA7lC,EAAA4kC,KAAAiB,GAGAx0C,EAAA29B,YAAA,SAAAhvB,GACA,MAAAvN,WAAAC,QAAAgkB,EAAA1W,EAAA4kC,KAAAluB,GAGAkuB,IAgCA,QAAAwB,IAAA/0C,GACA,GAAA6M,GAAA7M,EAAA6M,MAmDA,OAjDA7M,GAAA2M,MAAA,SAAA9B,GACA,GAAAhI,GAAAgK,GACA,OAAAF,IAAA9J,EAAA,GAAAA,IAAAxB,OAAA,SAAAwJ,EAAA,GAAAA,IAGA7K,EAAA8M,WAAA,SAAAjC,EAAAioB,GACA,MAAAhmB,IAAAD,IAAAhC,EAAAioB,IAGA9yB,EAAAg1C,KAAA,SAAAnqC,GACA,MAAAA,MAAA,GAEA,IAKAC,GALAjI,EAAAgK,IACAokC,EAAA,EACAC,EAAAruC,EAAAxB,OAAA,EACAsJ,EAAA9H,EAAAouC,GACArmC,EAAA/H,EAAAquC,EA8BA,OA3BAtmC,GAAAD,IACAG,EAAAH,IAAAC,IAAAE,EACAA,EAAAmmC,IAAAC,IAAApmC,GAGAA,EAAAJ,EAAAC,EAAAC,EAAAC,GAEAC,EAAA,GACAH,EAAAI,KAAAG,MAAAP,EAAAG,KACAF,EAAAG,KAAAu2B,KAAA12B,EAAAE,KACAA,EAAAJ,EAAAC,EAAAC,EAAAC,IACKC,EAAA,IACLH,EAAAI,KAAAu2B,KAAA32B,EAAAG,KACAF,EAAAG,KAAAG,MAAAN,EAAAE,KACAA,EAAAJ,EAAAC,EAAAC,EAAAC,IAGAC,EAAA,GACAjI,EAAAouC,GAAAlmC,KAAAG,MAAAP,EAAAG,KACAjI,EAAAquC,GAAAnmC,KAAAu2B,KAAA12B,EAAAE,KACA+B,EAAAhK,IACKiI,EAAA,IACLjI,EAAAouC,GAAAlmC,KAAAu2B,KAAA32B,EAAAG,KACAjI,EAAAquC,GAAAnmC,KAAAG,MAAAN,EAAAE,KACA+B,EAAAhK,IAGA7C,GAGAA,EAGA,QAAAi1C,MACA,GAAAj1C,GAAAy0C,GAAAV,GAAAtzB,GAMA,OAJAzgB,GAAAqN,KAAA,WACA,MAAAA,IAAArN,EAAAi1C,OAGAF,GAAA/0C,GAGA,QAAAk1C,MAGA,QAAAl1C,GAAAqK,GACA,OAAAA,EAHA,GAAAwC,IAAA,IAgBA,OAVA7M,GAAA27B,OAAA37B,EAEAA,EAAA6M,OAAA7M,EAAAgJ,MAAA,SAAA2F,GACA,MAAAvN,WAAAC,QAAAwL,EAAA+nC,GAAA/5C,KAAA8T,EAAAkmC,IAAA70C,GAAA6M,EAAAgC,SAGA7O,EAAAqN,KAAA,WACA,MAAA6nC,MAAAroC,WAGAkoC,GAAA/0C,GAsBA,QAAAk0C,IAAA1pC,EAAAC,GACA,OAAAA,EAAAM,KAAArJ,IAAA+I,EAAAD,IACA,SAAAH,GAAqB,MAAAU,MAAArJ,IAAA2I,EAAAG,GAAAC,GACrBupC,GAAAvpC,GAGA,QAAA0qC,IAAA3qC,EAAAC,GACA,MAAAD,GAAA,EACA,SAAAwE,GAAqB,OAAAjE,KAAAM,KAAAZ,EAAAuE,GAAAjE,KAAAM,KAAAb,EAAA,EAAAwE,IACrB,SAAAA,GAAqB,MAAAjE,MAAAM,IAAAZ,EAAAuE,GAAAjE,KAAAM,IAAAb,EAAA,EAAAwE,IAGrB,QAAAomC,IAAA/qC,GACA,MAAA+D,UAAA/D,KAAA,KAAAA,KAAA,IAAAA,EAGA,QAAAgrC,IAAAh2C,GACA,YAAAA,EAAA+1C,GACA/1C,IAAA0L,KAAA6S,EAAA7S,KAAAiW,IACA,SAAA3W,GAAqB,MAAAU,MAAAM,IAAAhM,EAAAgL,IAGrB,QAAAirC,IAAAj2C,GACA,MAAAA,KAAA0L,KAAA6S,EAAA7S,KAAArJ,IACA,KAAArC,GAAA0L,KAAAwqC,OACA,IAAAl2C,GAAA0L,KAAAyqC,OACAn2C,EAAA0L,KAAArJ,IAAArC,GAAA,SAAAgL,GAA8C,MAAAU,MAAArJ,IAAA2I,GAAAhL,IAG9C,QAAAo2C,IAAArrC,GACA,gBAAAC,GACA,OAAAD,GAAAC,IAIA,QAAAqrC,MAOA,QAAAnC,KAGA,MAFAoC,GAAAL,GAAAj2C,GAAAu2C,EAAAP,GAAAh2C,GACAwN,IAAA,OAAA8oC,EAAAF,GAAAE,GAAAC,EAAAH,GAAAG,IACA51C,EATA,GAAAA,GAAAy0C,GAAAP,GAAAiB,IAAAtoC,QAAA,OACAA,EAAA7M,EAAA6M,OACAxN,EAAA,GACAs2C,EAAAL,GAAA,IACAM,EAAAP,GAAA,GAgFA,OAxEAr1C,GAAAX,KAAA,SAAAsP,GACA,MAAAvN,WAAAC,QAAAhC,GAAAsP,EAAA4kC,KAAAl0C,GAGAW,EAAA6M,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAAwL,EAAA8B,GAAA4kC,KAAA1mC,KAGA7M,EAAA2M,MAAA,SAAA9B,GACA,GAGAmQ,GAHAnY,EAAAgK,IACA8pB,EAAA9zB,EAAA,GACA2R,EAAA3R,IAAAxB,OAAA,IAGA2Z,EAAAxG,EAAAmiB,KAAA1nB,EAAA0nB,IAAAniB,IAAAvF,EAEA,IAEAjU,GACAkT,EACAc,EAJAC,EAAA0mC,EAAAhf,GACA1kB,EAAA0jC,EAAAnhC,GAIAtF,EAAA,MAAArE,EAAA,IAAAA,EACA2R,IAEA,MAAAnd,EAAA,IAAA4S,EAAAhD,EAAAC,GAEA,GADAD,EAAAlE,KAAAqB,MAAA6C,GAAA,EAAAgD,EAAAlH,KAAAqB,MAAA6F,GAAA,EACA0kB,EAAA,QAAuB1nB,EAAAgD,IAAOhD,EAC9B,IAAAf,EAAA,EAAAlT,EAAA46C,EAAA3mC,GAAgCf,EAAA7O,IAAU6O,EAE1C,GADAc,EAAAhU,EAAAkT,IACAc,EAAA2nB,GAAA,CACA,GAAA3nB,EAAAwF,EAAA,KACAgI,GAAAlZ,KAAA0L,QAEO,MAAYC,EAAAgD,IAAOhD,EAC1B,IAAAf,EAAA7O,EAAA,EAAArE,EAAA46C,EAAA3mC,GAAuCf,GAAA,IAAQA,EAE/C,GADAc,EAAAhU,EAAAkT,IACAc,EAAA2nB,GAAA,CACA,GAAA3nB,EAAAwF,EAAA,KACAgI,GAAAlZ,KAAA0L,QAIAwN,GAAA7P,GAAAsC,EAAAgD,EAAAlH,KAAA0Q,IAAAxJ,EAAAhD,EAAAC,IAAAxL,IAAAkyC,EAGA,OAAA56B,GAAAwB,EAAAklB,UAAAllB,GAGAxc,EAAA8M,WAAA,SAAAjC,EAAAioB,GAGA,GAFA,MAAAA,MAAA,KAAAzzB,EAAA,WACA,kBAAAyzB,OAAA54B,EAAA2O,OAAAiqB,IACAjoB,IAAAoY,IAAA,MAAA6P,EACA,OAAAjoB,MAAA,GACA,IAAAqD,GAAAnD,KAAAC,IAAA,EAAA3L,EAAAwL,EAAA7K,EAAA2M,QAAAtL,OACA,iBAAAwB,GACA,GAAAoM,GAAApM,EAAA+yC,EAAA7qC,KAAAqB,MAAAupC,EAAA9yC,IAEA,OADAoM,GAAA5P,IAAA,KAAA4P,GAAA5P,GACA4P,GAAAf,EAAA4kB,EAAAjwB,GAAA,KAIA7C,EAAAg1C,KAAA,WACA,MAAAnoC,GAAAmoC,GAAAnoC,KACA3B,MAAA,SAAAb,GAA0B,MAAAurC,GAAA7qC,KAAAG,MAAAyqC,EAAAtrC,MAC1Bi3B,KAAA,SAAAj3B,GAAyB,MAAAurC,GAAA7qC,KAAAu2B,KAAAqU,EAAAtrC,UAIzBrK,EAAAqN,KAAA,WACA,MAAAA,IAAArN,EAAA01C,KAAAr2C,UAGAW,EAGA,QAAA61C,IAAAxrC,EAAAyrC,GACA,MAAAzrC,GAAA,GAAAU,KAAAM,KAAAhB,EAAAyrC,GAAA/qC,KAAAM,IAAAhB,EAAAyrC,GAGA,QAAAC,MAKA,QAAA7B,GAAA1pC,EAAAC,GACA,OAAAA,EAAAorC,GAAAprC,EAAAqrC,IAAAtrC,EAAAqrC,GAAArrC,EAAAsrC,KACA,SAAAzrC,GAAuB,OAAAwrC,GAAAxrC,EAAAyrC,GAAAtrC,GAAAC,GACvBupC,GAAAvpC,GAGA,QAAAgW,GAAAjW,EAAAC,GAEA,MADAA,GAAAorC,GAAAprC,EAAAqrC,IAAAtrC,EAAAqrC,GAAArrC,EAAAsrC,IACA,SAAA9mC,GAAwB,MAAA6mC,IAAArrC,EAAAC,EAAAuE,EAAA,EAAA8mC,IAZxB,GAAAA,GAAA,EACA91C,EAAAy0C,GAAAP,EAAAzzB,GACA5T,EAAA7M,EAAA6M,MAqBA,OARA7M,GAAA81C,SAAA,SAAAnnC,GACA,MAAAvN,WAAAC,QAAAy0C,GAAAnnC,EAAA9B,QAAAipC,GAGA91C,EAAAqN,KAAA,WACA,MAAAA,IAAArN,EAAA+1C,KAAAD,cAGAf,GAAA/0C,GAGA,QAAAg2C,MACA,MAAAD,MAAAD,SAAA,IAGA,QAAAG,MAKA,QAAA1C,KACA,GAAAtkC,GAAA,EAAAC,EAAAnE,KAAAC,IAAA,EAAAhC,EAAA3H,OAEA,KADA60C,EAAA,GAAA30C,OAAA2N,EAAA,KACAD,EAAAC,GAAAgnC,EAAAjnC,EAAA,GAAAknC,GAAAtpC,EAAAoC,EAAAC,EACA,OAAAlP,GAGA,QAAAA,GAAAqK,GACA,IAAAoU,MAAApU,MAAA,MAAArB,GAAAurC,GAAA2B,EAAA7rC,IAZA,GAAAwC,MACA7D,KACAktC,IA2CA,OA9BAl2C,GAAAo2C,aAAA,SAAArqC,GACA,GAAAkD,GAAAjG,EAAA2G,QAAA5D,EACA,OAAAkD,GAAA,GAAA6E,UACA7E,EAAA,EAAAinC,EAAAjnC,EAAA,GAAApC,EAAA,GACAoC,EAAAinC,EAAA70C,OAAA60C,EAAAjnC,GAAApC,IAAAxL,OAAA,KAIArB,EAAA6M,OAAA,SAAA8B,GACA,IAAAvN,UAAAC,OAAA,MAAAwL,GAAAgC,OACAhC,KACA,QAAAhK,GAAAoM,EAAA,EAAAC,EAAAP,EAAAtN,OAAoC4N,EAAAC,IAAOD,EAAApM,EAAA8L,EAAAM,GAAA,MAAApM,GAAA4b,MAAA5b,OAAAgK,EAAAvJ,KAAAT,EAE3C,OADAgK,GAAAwpC,KAAA/rC,IACAipC,KAGAvzC,EAAAgJ,MAAA,SAAA2F,GACA,MAAAvN,WAAAC,QAAA2H,EAAAoqC,GAAAv4C,KAAA8T,GAAA4kC,KAAAvqC,EAAA6F,SAGA7O,EAAAs2C,UAAA,WACA,MAAAJ,GAAArnC,SAGA7O,EAAAqN,KAAA,WACA,MAAA4oC,MACAppC,UACA7D,UAGAhJ,EAGA,QAAAu2C,MAOA,QAAAv2C,GAAAqK,GACA,GAAAA,KAAA,MAAArB,GAAAurC,GAAA1nC,EAAAxC,EAAA,EAAA6E,IAGA,QAAAqkC,KACA,GAAAtkC,IAAA,CAEA,KADApC,EAAA,GAAAtL,OAAA2N,KACAD,EAAAC,GAAArC,EAAAoC,OAAA,GAAAqiB,GAAAriB,EAAAC,GAAAkiB,IAAAliB,EAAA,EACA,OAAAlP,GAdA,GAAAoxB,GAAA,EACAE,EAAA,EACApiB,EAAA,EACArC,GAAA,IACA7D,GAAA,IAmCA,OAtBAhJ,GAAA6M,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAA+vB,GAAAziB,EAAA,GAAA2iB,GAAA3iB,EAAA,GAAA4kC,MAAAniB,EAAAE,IAGAtxB,EAAAgJ,MAAA,SAAA2F,GACA,MAAAvN,WAAAC,QAAA6N,GAAAlG,EAAAoqC,GAAAv4C,KAAA8T,IAAAtN,OAAA,EAAAkyC,KAAAvqC,EAAA6F,SAGA7O,EAAAo2C,aAAA,SAAArqC,GACA,GAAAkD,GAAAjG,EAAA2G,QAAA5D,EACA,OAAAkD,GAAA,GAAA6E,SACA7E,EAAA,GAAAmiB,EAAAvkB,EAAA,IACAoC,GAAAC,GAAArC,EAAAqC,EAAA,GAAAoiB,IACAzkB,EAAAoC,EAAA,GAAApC,EAAAoC,KAGAjP,EAAAqN,KAAA,WACA,MAAAkpC,MACA1pC,QAAAukB,EAAAE,IACAtoB,UAGA+rC,GAAA/0C,GAGA,QAAAw2C,MAKA,QAAAx2C,GAAAqK,GACA,GAAAA,KAAA,MAAArB,GAAAurC,GAAA1nC,EAAAxC,EAAA,EAAA6E,IALA,GAAArC,IAAA,IACA7D,GAAA,KACAkG,EAAA,CAyBA,OAnBAlP,GAAA6M,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAAwL,EAAAumC,GAAAv4C,KAAA8T,GAAAO,EAAAnE,KAAA0Q,IAAA5O,EAAAxL,OAAA2H,EAAA3H,OAAA,GAAArB,GAAA6M,EAAAgC,SAGA7O,EAAAgJ,MAAA,SAAA2F,GACA,MAAAvN,WAAAC,QAAA2H,EAAAoqC,GAAAv4C,KAAA8T,GAAAO,EAAAnE,KAAA0Q,IAAA5O,EAAAxL,OAAA2H,EAAA3H,OAAA,GAAArB,GAAAgJ,EAAA6F,SAGA7O,EAAAo2C,aAAA,SAAArqC,GACA,GAAAkD,GAAAjG,EAAA2G,QAAA5D,EACA,QAAAc,EAAAoC,EAAA,GAAApC,EAAAoC,KAGAjP,EAAAqN,KAAA,WACA,MAAAmpC,MACA3pC,UACA7D,UAGAhJ,EAMA,QAAAy2C,IAAAC,EAAAC,EAAA9rC,EAAA+rC,GAEA,QAAAvzB,GAAAwzB,GACA,MAAAH,GAAAG,EAAA,GAAA9zC,OAAA8zC,MA2DA,MAxDAxzB,GAAAnY,MAAAmY,EAEAA,EAAAie,KAAA,SAAAuV,GACA,MAAAH,GAAAG,EAAA,GAAA9zC,MAAA8zC,EAAA,IAAAF,EAAAE,EAAA,GAAAH,EAAAG,MAGAxzB,EAAAjX,MAAA,SAAAyqC,GACA,GAAAxC,GAAAhxB,EAAAwzB,GACAnJ,EAAArqB,EAAAie,KAAAuV,EACA,OAAAA,GAAAxC,EAAA3G,EAAAmJ,EAAAxC,EAAA3G,GAGArqB,EAAAnX,OAAA,SAAA2qC,EAAA/rC,GACA,MAAA6rC,GAAAE,EAAA,GAAA9zC,OAAA8zC,GAAA,MAAA/rC,EAAA,EAAAC,KAAAG,MAAAJ,IAAA+rC,GAGAxzB,EAAAra,MAAA,SAAA2B,EAAAC,EAAAE,GACA,GAAA9B,KAGA,IAFA2B,EAAA0Y,EAAAie,KAAA32B,GACAG,EAAA,MAAAA,EAAA,EAAAC,KAAAG,MAAAJ,KACAH,EAAAC,GAAAE,EAAA,SAAA9B,EACA,GAAAA,GAAA1F,KAAA,GAAAP,OAAA4H,UAAoCgsC,EAAAhsC,EAAAG,GAAA4rC,EAAA/rC,KAAAC,EACpC,OAAA5B,IAGAqa,EAAA5U,OAAA,SAAAqoC,GACA,MAAAL,IAAA,SAAAI,GACA,GAAAA,KAAA,KAAAH,EAAAG,IAAAC,EAAAD,MAAAE,QAAAF,EAAA,IACK,SAAAA,EAAA/rC,GACL,GAAA+rC,KACA,GAAA/rC,EAAA,SAAAA,GAAA,GACA,KAAA6rC,EAAAE,GAAA,IAAAC,EAAAD,SACS,QAAA/rC,GAAA,GACT,KAAA6rC,EAAAE,EAAA,IAAAC,EAAAD,SAMAhsC,IACAwY,EAAAxY,MAAA,SAAAF,EAAA0W,GAGA,MAFA21B,IAAAD,SAAApsC,GAAAssC,GAAAF,SAAA11B,GACAq1B,EAAAM,IAAAN,EAAAO,IACAlsC,KAAAG,MAAAL,EAAAmsC,GAAAC,MAGA5zB,EAAAkD,MAAA,SAAAzb,GAEA,MADAA,GAAAC,KAAAG,MAAAJ,GACAsD,SAAAtD,MAAA,EACAA,EAAA,EACAuY,EAAA5U,OAAAmoC,EACA,SAAA/zC,GAA6B,MAAA+zC,GAAA/zC,GAAAiI,IAAA,GAC7B,SAAAjI,GAA6B,MAAAwgB,GAAAxY,MAAA,EAAAhI,GAAAiI,IAAA,IAH7BuY,EADA,OAQAA,EAmFA,QAAA6zB,IAAAjoC,GACA,MAAAwnC,IAAA,SAAAI,GACAA,EAAAM,QAAAN,EAAAO,WAAAP,EAAAQ,SAAA,EAAApoC,GAAA,GACA4nC,EAAAS,SAAA,UACG,SAAAT,EAAA/rC,GACH+rC,EAAAM,QAAAN,EAAAO,UAAA,EAAAtsC,IACG,SAAAH,EAAA0W,GACH,OAAAA,EAAA1W,GAAA0W,EAAAk2B,oBAAA5sC,EAAA4sC,qBAAAC,IAAAC,KA6FA,QAAAC,IAAAzoC,GACA,MAAAwnC,IAAA,SAAAI,GACAA,EAAAc,WAAAd,EAAAe,cAAAf,EAAAgB,YAAA,EAAA5oC,GAAA,GACA4nC,EAAAiB,YAAA,UACG,SAAAjB,EAAA/rC,GACH+rC,EAAAc,WAAAd,EAAAe,aAAA,EAAA9sC,IACG,SAAAH,EAAA0W,GACH,OAAAA,EAAA1W,GAAA8sC,KAyDA,QAAAM,IAAAl1C,GACA,MAAAA,EAAAkJ,GAAAlJ,EAAAkJ,EAAA,KACA,GAAA8qC,GAAA,GAAA9zC,OAAA,EAAAF,EAAA/H,EAAA+H,MAAAm1C,EAAAn1C,EAAAo1C,EAAAp1C,EAAA2pB,EAAA3pB,EAAAq1C,EAEA,OADArB,GAAAsB,YAAAt1C,EAAAkJ,GACA8qC,EAEA,UAAA9zC,MAAAF,EAAAkJ,EAAAlJ,EAAA/H,EAAA+H,MAAAm1C,EAAAn1C,EAAAo1C,EAAAp1C,EAAA2pB,EAAA3pB,EAAAq1C,GAGA,QAAAE,IAAAv1C,GACA,MAAAA,EAAAkJ,GAAAlJ,EAAAkJ,EAAA,KACA,GAAA8qC,GAAA,GAAA9zC,WAAAs1C,KAAA,EAAAx1C,EAAA/H,EAAA+H,MAAAm1C,EAAAn1C,EAAAo1C,EAAAp1C,EAAA2pB,EAAA3pB,EAAAq1C,GAEA,OADArB,GAAAyB,eAAAz1C,EAAAkJ,GACA8qC,EAEA,UAAA9zC,WAAAs1C,IAAAx1C,EAAAkJ,EAAAlJ,EAAA/H,EAAA+H,MAAAm1C,EAAAn1C,EAAAo1C,EAAAp1C,EAAA2pB,EAAA3pB,EAAAq1C,IAGA,QAAAK,IAAAxsC,GACA,OAAUA,IAAAjR,EAAA,EAAA+H,EAAA,EAAAm1C,EAAA,EAAAC,EAAA,EAAAzrB,EAAA,EAAA0rB,EAAA,GAGV,QAAAM,IAAA9kB,GA8GA,QAAA+kB,GAAA3lB,EAAA4lB,GACA,gBAAA7B,GACA,GAIA97C,GACA49C,EACA9vC,EANA2M,KACAvG,GAAA,EACAgD,EAAA,EACA/C,EAAA4jB,EAAAzxB,MAOA,KAFAw1C,YAAA9zC,QAAA8zC,EAAA,GAAA9zC,OAAA8zC,MAEA5nC,EAAAC,GACA,KAAA4jB,EAAA8lB,WAAA3pC,KACAuG,EAAAlS,KAAAwvB,EAAAjkB,MAAAoD,EAAAhD,IACA,OAAA0pC,EAAAE,GAAA99C,EAAA+3B,EAAAgmB,SAAA7pC,KAAAlU,EAAA+3B,EAAAgmB,SAAA7pC,GACA0pC,EAAA,MAAA59C,EAAA,SACA8N,EAAA6vC,EAAA39C,QAAA8N,EAAAguC,EAAA8B,IACAnjC,EAAAlS,KAAAvI,GACAkX,EAAAhD,EAAA,EAKA,OADAuG,GAAAlS,KAAAwvB,EAAAjkB,MAAAoD,EAAAhD,IACAuG,EAAAsL,KAAA,KAIA,QAAAi4B,GAAAjmB,EAAAkmB,GACA,gBAAAxjC,GACA,GAAA3S,GAAA01C,GAAA,MACAtpC,EAAAgqC,EAAAp2C,EAAAiwB,EAAAtd,GAAA,KACA,IAAAvG,GAAAuG,EAAAnU,OAAA,WAMA,IAHA,KAAAwB,OAAAm1C,EAAAn1C,EAAAm1C,EAAA,MAAAn1C,EAAA7H,GAGA,KAAA6H,IAAA,KAAAA,GAAA,CACA,KAAAA,OAAAzE,EAAA,KAAAyE,GAAA,IACA,IAAAq2C,GAAA,KAAAr2C,GAAAu1C,GAAAG,GAAA11C,EAAAkJ,IAAA8rC,YAAAmB,EAAAT,GAAA11C,EAAAkJ,IAAAsrC,QACAx0C,GAAA/H,EAAA,EACA+H,IAAA,KAAAA,MAAAzE,EAAA,OAAAyE,EAAAmpB,GAAAktB,EAAA,KAAAr2C,EAAAzE,EAAA,EAAAyE,EAAAs2C,GAAAD,EAAA,KAKA,WAAAr2C,IACAA,EAAAm1C,GAAAn1C,EAAAu2C,EAAA,MACAv2C,EAAAo1C,GAAAp1C,EAAAu2C,EAAA,IACAhB,GAAAv1C,IAIAm2C,EAAAn2C,IAIA,QAAAo2C,GAAAp2C,EAAAiwB,EAAAtd,EAAAvD,GAOA,IANA,GAGAlX,GACA+kB,EAJA7Q,EAAA,EACAC,EAAA4jB,EAAAzxB,OACAvG,EAAA0a,EAAAnU,OAIA4N,EAAAC,GAAA,CACA,GAAA+C,GAAAnX,EAAA,QAEA,IADAC,EAAA+3B,EAAA8lB,WAAA3pC,KACA,KAAAlU,GAGA,GAFAA,EAAA+3B,EAAAgmB,OAAA7pC,KACA6Q,EAAAu5B,EAAAt+C,IAAA89C,IAAA/lB,EAAAgmB,OAAA7pC,KAAAlU,IACA+kB,IAAA7N,EAAA6N,EAAAjd,EAAA2S,EAAAvD,IAAA,eACO,IAAAlX,GAAAya,EAAAojC,WAAA3mC,KACP,SAIA,MAAAA,GAGA,QAAAqnC,GAAAz2C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAqqC,EAAAr/B,KAAA1E,EAAA3G,MAAAI,GACA,OAAAC,IAAArM,EAAA7H,EAAAw+C,EAAAtqC,EAAA,GAAA8K,eAAA/K,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAo4C,GAAA52C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwqC,EAAAx/B,KAAA1E,EAAA3G,MAAAI,GACA,OAAAC,IAAArM,EAAAzE,EAAAu7C,EAAAzqC,EAAA,GAAA8K,eAAA/K,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAu4C,GAAA/2C,EAAA2S,EAAAvG,GACA,GAAAC,GAAA2qC,EAAA3/B,KAAA1E,EAAA3G,MAAAI,GACA,OAAAC,IAAArM,EAAAzE,EAAA07C,EAAA5qC,EAAA,GAAA8K,eAAA/K,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAA04C,GAAAl3C,EAAA2S,EAAAvG,GACA,GAAAC,GAAA8qC,EAAA9/B,KAAA1E,EAAA3G,MAAAI,GACA,OAAAC,IAAArM,EAAA/H,EAAAm/C,EAAA/qC,EAAA,GAAA8K,eAAA/K,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAA64C,GAAAr3C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAirC,EAAAjgC,KAAA1E,EAAA3G,MAAAI,GACA,OAAAC,IAAArM,EAAA/H,EAAAs/C,EAAAlrC,EAAA,GAAA8K,eAAA/K,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAg5C,GAAAx3C,EAAA2S,EAAAvG,GACA,MAAAgqC,GAAAp2C,EAAAy3C,EAAA9kC,EAAAvG,GAGA,QAAAsrC,GAAA13C,EAAA2S,EAAAvG,GACA,MAAAgqC,GAAAp2C,EAAA23C,EAAAhlC,EAAAvG,GAGA,QAAAwrC,GAAA53C,EAAA2S,EAAAvG,GACA,MAAAgqC,GAAAp2C,EAAA63C,EAAAllC,EAAAvG,GAGA,QAAA0rC,GAAA93C,GACA,MAAA+3C,GAAA/3C,EAAAw0C,UAGA,QAAAwD,GAAAh4C,GACA,MAAAi4C,GAAAj4C,EAAAw0C,UAGA,QAAA0D,GAAAl4C,GACA,MAAAm4C,GAAAn4C,EAAAo4C,YAGA,QAAAC,GAAAr4C,GACA,MAAAs4C,GAAAt4C,EAAAo4C,YAGA,QAAAG,GAAAv4C,GACA,MAAAw4C,KAAAx4C,EAAAy4C,YAAA,KAGA,QAAAC,GAAA14C,GACA,MAAA+3C,GAAA/3C,EAAAg1C,aAGA,QAAA2D,GAAA34C,GACA,MAAAi4C,GAAAj4C,EAAAg1C,aAGA,QAAA4D,GAAA54C,GACA,MAAAm4C,GAAAn4C,EAAA64C,eAGA,QAAAC,GAAA94C,GACA,MAAAs4C,GAAAt4C,EAAA64C,eAGA,QAAAE,GAAA/4C,GACA,MAAAw4C,KAAAx4C,EAAAg5C,eAAA,KAvQA,GAAAvB,GAAA5mB,EAAAooB,SACAtB,EAAA9mB,EAAAmjB,KACA6D,EAAAhnB,EAAApR,KACA+4B,EAAA3nB,EAAAqoB,QACAjB,EAAApnB,EAAAsoB,KACApB,EAAAlnB,EAAAuoB,UACAd,EAAAznB,EAAAwoB,OACAlB,EAAAtnB,EAAAyoB,YAEA5C,EAAA6C,GAAAf,GACA7B,EAAA6C,GAAAhB,GACAxB,EAAAuC,GAAAtB,GACAhB,EAAAuC,GAAAvB,GACApB,EAAA0C,GAAAxB,GACAjB,EAAA0C,GAAAzB,GACAT,EAAAiC,GAAAjB,GACAf,EAAAiC,GAAAlB,GACAnB,EAAAoC,GAAApB,GACAf,EAAAoC,GAAArB,GAEAtC,GACAluC,EAAAmwC,EACAhN,EAAAkN,EACApwC,EAAAswC,EACA1O,EAAA6O,EACAngD,EAAA,KACA8H,EAAAy5C,GACA18B,EAAA08B,GACAtE,EAAAuE,GACAC,EAAAC,GACAxqC,EAAAyqC,GACAxE,EAAAyE,GACA7hD,EAAA8hD,GACA3E,EAAA4E,GACA7hD,EAAAogD,EACA5uB,EAAAswB,GACA3D,EAAA4D,GACA3+C,EAAA4+C,GACAhxB,EAAAixB,GACA5yC,EAAA,KACA8f,EAAA,KACApe,EAAAmxC,GACA7yB,EAAA8yB,GACA/D,EAAAgE,GACAC,IAAAC,IAGAC,GACA/yC,EAAA+wC,EACA5N,EAAA6N,EACA/wC,EAAAgxC,EACApP,EAAAsP,EACA5gD,EAAA,KACA8H,EAAA26C,GACA59B,EAAA49B,GACAxF,EAAAyF,GACAjB,EAAAkB,GACAzrC,EAAA0rC,GACAzF,EAAA0F,GACA9iD,EAAA+iD,GACA5F,EAAA6F,GACA9iD,EAAA4gD,EACApvB,EAAAuxB,GACA5E,EAAA6E,GACA5/C,EAAA6/C,GACAjyB,EAAAkyB,GACA7zC,EAAA,KACA8f,EAAA,KACApe,EAAAoyC,GACA9zB,EAAA+zB,GACAhF,EAAAiF,GACAhB,IAAAC,IAGAjE,GACA7uC,EAAAivC,EACA9L,EAAAiM,EACAnvC,EAAAsvC,EACA1N,EAAA6N,EACAn/C,EAAAs/C,EACAx3C,EAAAy7C,GACA1+B,EAAA0+B,GACAtG,EAAAuG,GACA/B,EAAA+B,GACAtsC,EAAAusC,GACAtG,EAAAuG,GACA3jD,EAAA4jD,GACAzG,EAAA0G,GACA3jD,EAAAs+C,EACA9sB,EAAAoyB,GACAzF,EAAA0F,GACAzgD,EAAA0gD,GACA9yB,EAAA+yB,GACA10C,EAAAkwC,EACApwB,EAAAswB,EACA1uC,EAAAizC,GACA30B,EAAA40B,GACA7F,EAAA8F,GACA7B,IAAA8B,GAwKA,OApKAzG,GAAAruC,EAAAouC,EAAA+B,EAAA9B,GACAA,EAAAvuB,EAAAsuB,EAAAiC,EAAAhC,GACAA,EAAA39C,EAAA09C,EAAA6B,EAAA5B,GACA6E,EAAAlzC,EAAAouC,EAAA+B,EAAA+C,GACAA,EAAApzB,EAAAsuB,EAAAiC,EAAA6C,GACAA,EAAAxiD,EAAA09C,EAAA6B,EAAAiD,IAgKA10C,OAAA,SAAAiqB,GACA,GAAA1oB,GAAAquC,EAAA3lB,GAAA,GAAA4lB,EAEA,OADAtuC,GAAA4G,SAAA,WAA+B,MAAA8hB,IAC/B1oB,GAEA0V,MAAA,SAAAgT,GACA,GAAA93B,GAAA+9C,EAAAjmB,GAAA,GAAAilB,GAEA,OADA/8C,GAAAgW,SAAA,WAA+B,MAAA8hB,IAC/B93B,GAEAokD,UAAA,SAAAtsB,GACA,GAAA1oB,GAAAquC,EAAA3lB,GAAA,GAAAyqB,EAEA,OADAnzC,GAAA4G,SAAA,WAA+B,MAAA8hB,IAC/B1oB,GAEAi1C,SAAA,SAAAvsB,GACA,GAAA93B,GAAA+9C,EAAAjmB,EAAAslB,GAEA,OADAp9C,GAAAgW,SAAA,WAA+B,MAAA8hB,IAC/B93B,IAUA,QAAA29C,IAAAp9C,EAAA23B,EAAA50B,GACA,GAAA80B,GAAA73B,EAAA,SACAia,GAAA4d,GAAA73B,KAAA,GACA8F,EAAAmU,EAAAnU,MACA,OAAA+xB,IAAA/xB,EAAA/C,EAAA,GAAAiD,OAAAjD,EAAA+C,EAAA,GAAAyf,KAAAoS,GAAA1d,KAGA,QAAA8pC,IAAAjkC,GACA,MAAAA,GAAAkkC,QAAAC,GAAA,QAGA,QAAApD,IAAAtmC,GACA,UAAA2pC,QAAA,OAAA3pC,EAAApS,IAAA47C,IAAAx+B,KAAA,cAGA,QAAAu7B,IAAAvmC,GAEA,IADA,GAAApS,MAAcuL,GAAA,EAAAC,EAAA4G,EAAAzU,SACd4N,EAAAC,GAAAxL,EAAAoS,EAAA7G,GAAA+K,eAAA/K,CACA,OAAAvL,GAGA,QAAAo7C,IAAAj8C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAAzE,GAAA8Q,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAw9C,IAAAh8C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,GACA,OAAAC,IAAArM,EAAAs2C,GAAAjqC,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAA09C,IAAAl8C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,GACA,OAAAC,IAAArM,EAAAmpB,GAAA9c,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAA49C,IAAAp8C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAAkJ,GAAAmD,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAA29C,IAAAn8C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAAkJ,GAAAmD,EAAA,KAAAA,EAAA,gBAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAA69C,IAAAr8C,EAAA2S,EAAAvG,GACA,GAAAC,GAAA,gCAAAgL,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAAu2C,EAAAlqC,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAq9C,IAAA77C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAA/H,EAAAoU,EAAA,KAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAi9C,IAAAz7C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,KAAAqM,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAm9C,IAAA37C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAA/H,EAAA,EAAA+H,KAAAqM,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAk9C,IAAA17C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAAm1C,GAAA9oC,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAs9C,IAAA97C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAAo1C,GAAA/oC,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAu9C,IAAA/7C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAA2pB,GAAAtd,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAAo9C,IAAA57C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAwwC,GAAAxlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,IAAArM,EAAAq1C,GAAAhpC,EAAA,GAAAD,EAAAC,EAAA,GAAA7N,SAAA,EAGA,QAAA89C,IAAAt8C,EAAA2S,EAAAvG,GACA,GAAAC,GAAAywC,GAAAzlC,KAAA1E,EAAA3G,MAAAI,IAAA,GACA,OAAAC,GAAAD,EAAAC,EAAA,GAAA7N,QAAA,EAGA,QAAAi7C,IAAAz5C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAu0C,UAAAp8C,EAAA,GAGA,QAAAuhD,IAAA15C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAy4C,WAAAtgD,EAAA,GAGA,QAAAyhD,IAAA55C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAy4C,WAAA,OAAAtgD,EAAA,GAGA,QAAA0hD,IAAA75C,EAAA7H,GACA,MAAA29C,IAAA,EAAAiH,GAAA/0C,MAAAg1C,GAAAh9C,MAAA7H,EAAA,GAGA,QAAA2hD,IAAA95C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAi9C,kBAAA9kD,EAAA,GAGA,QAAA4hD,IAAA/5C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAo4C,WAAA,EAAAjgD,EAAA,GAGA,QAAA6hD,IAAAh6C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAk9C,aAAA/kD,EAAA,GAGA,QAAA8hD,IAAAj6C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAm9C,aAAAhlD,EAAA,GAGA,QAAA+hD,IAAAl6C,EAAA7H,GACA,MAAA29C,IAAAsH,GAAAp1C,MAAAg1C,GAAAh9C,MAAA7H,EAAA,GAGA,QAAAgiD,IAAAn6C,GACA,MAAAA,GAAAw0C,SAGA,QAAA4F,IAAAp6C,EAAA7H,GACA,MAAA29C,IAAAuH,GAAAr1C,MAAAg1C,GAAAh9C,MAAA7H,EAAA,GAGA,QAAAkiD,IAAAr6C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAs9C,cAAA,IAAAnlD,EAAA,GAGA,QAAAmiD,IAAAt6C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAs9C,cAAA,IAAAnlD,EAAA,GAGA,QAAAoiD,IAAAv6C,GACA,GAAA2Z,GAAA3Z,EAAA00C,mBACA,QAAA/6B,EAAA,OAAAA,IAAA,QACAm8B,GAAAn8B,EAAA,YACAm8B,GAAAn8B,EAAA,UAGA,QAAAghC,IAAA36C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAA+0C,aAAA58C,EAAA,GAGA,QAAAyiD,IAAA56C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAg5C,cAAA7gD,EAAA,GAGA,QAAA0iD,IAAA76C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAg5C,cAAA,OAAA7gD,EAAA,GAGA,QAAA2iD,IAAA96C,EAAA7H,GACA,MAAA29C,IAAA,EAAAyH,GAAAv1C,MAAAw1C,GAAAx9C,MAAA7H,EAAA,GAGA,QAAA4iD,IAAA/6C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAAy9C,qBAAAtlD,EAAA,GAGA,QAAA6iD,IAAAh7C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAA64C,cAAA,EAAA1gD,EAAA,GAGA,QAAA8iD,IAAAj7C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAA09C,gBAAAvlD,EAAA,GAGA,QAAA+iD,IAAAl7C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAA29C,gBAAAxlD,EAAA,GAGA,QAAAgjD,IAAAn7C,EAAA7H,GACA,MAAA29C,IAAA8H,GAAA51C,MAAAw1C,GAAAx9C,MAAA7H,EAAA,GAGA,QAAAijD,IAAAp7C,GACA,MAAAA,GAAAg1C,YAGA,QAAAqG,IAAAr7C,EAAA7H,GACA,MAAA29C,IAAA+H,GAAA71C,MAAAw1C,GAAAx9C,MAAA7H,EAAA,GAGA,QAAAmjD,IAAAt7C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAA89C,iBAAA,IAAA3lD,EAAA,GAGA,QAAAojD,IAAAv7C,EAAA7H,GACA,MAAA29C,IAAA91C,EAAA89C,iBAAA,IAAA3lD,EAAA,GAGA,QAAAqjD,MACA,cAGA,QAAAf,MACA,UAoBA,QAAAsD,IAAAhnC,GAMA,MALAinC,IAAArI,GAAA5+B,GACA1f,EAAA0O,WAAAi4C,GAAAh4C,OACA3O,EAAA4mD,UAAAD,GAAA/gC,MACA5lB,EAAAklD,UAAAyB,GAAAzB,UACAllD,EAAAmlD,SAAAwB,GAAAxB,SACAwB,GAKA,QAAAE,IAAAlK,GACA,MAAAA,GAAAmK,cAOA,QAAAC,IAAAzrC,GACA,GAAAqhC,GAAA,GAAA9zC,MAAAyS,EACA,OAAAiJ,OAAAo4B,GAAA,KAAAA,EAeA,QAAAqK,IAAAlyC,GACA,UAAAjM,MAAAiM,GAGA,QAAAmyC,IAAAnyC,GACA,MAAAA,aAAAjM,OAAAiM,GAAA,GAAAjM,OAAAiM,GAGA,QAAAoyC,IAAAC,EAAAC,EAAAC,EAAArI,EAAAsI,EAAAC,EAAAC,EAAAC,EAAA94C,GAmCA,QAAAiE,GAAA+pC,GACA,OAAA6K,EAAA7K,KAAA+K,EACAH,EAAA5K,KAAAgL,EACAL,EAAA3K,KAAAiL,EACA5I,EAAArC,KAAAkL,EACAT,EAAAzK,KAAA0K,EAAA1K,KAAAmL,EAAAC,EACAZ,EAAAxK,KAAAqE,EACAgC,GAAArG,GAGA,QAAAqL,GAAA7+B,EAAA1Y,EAAAC,EAAAE,GAMA,GALA,MAAAuY,MAAA,IAKA,gBAAAA,GAAA,CACA,GAAArK,GAAAjO,KAAAY,IAAAf,EAAAD,GAAA0Y,EACApU,EAAArK,GAAA,SAAAqK,GAAoC,MAAAA,GAAA,KAAelQ,MAAAojD,EAAAnpC,EACnD/J,KAAAkzC,EAAA9gD,QACAyJ,EAAAW,EAAAd,EAAAy3C,GAAAx3C,EAAAw3C,GAAA/+B,GACAA,EAAAg+B,GACOpyC,GACPA,EAAAkzC,EAAAnpC,EAAAmpC,EAAAlzC,EAAA,MAAAkzC,EAAAlzC,GAAA,GAAA+J,EAAA/J,EAAA,EAAAA,GACAnE,EAAAmE,EAAA,GACAoU,EAAApU,EAAA,KAEAnE,EAAAW,EAAAd,EAAAC,EAAAyY,GACAA,EAAAs+B,GAIA,aAAA72C,EAAAuY,IAAAkD,MAAAzb,GAlEA,GAAA9K,GAAAy0C,GAAAV,GAAAtzB,IACAkb,EAAA37B,EAAA27B,OACA9uB,EAAA7M,EAAA6M,OAEA+0C,EAAA/4C,EAAA,OACAg5C,EAAAh5C,EAAA,OACAi5C,EAAAj5C,EAAA,SACAk5C,EAAAl5C,EAAA,SACAm5C,EAAAn5C,EAAA,SACAo5C,EAAAp5C,EAAA,SACAqyC,EAAAryC,EAAA,MACAq0C,EAAAr0C,EAAA,MAEAs5C,IACAT,EAAA,EAAAW,KACAX,EAAA,IAAAW,KACAX,EAAA,MAAAW,KACAX,EAAA,MAAAW,KACAZ,EAAA,EAAAa,KACAb,EAAA,IAAAa,KACAb,EAAA,MAAAa,KACAb,EAAA,MAAAa,KACAd,EAAA,EAAAe,KACAf,EAAA,IAAAe,KACAf,EAAA,IAAAe,KACAf,EAAA,MAAAe,KACArJ,EAAA,EAAAsJ,KACAtJ,EAAA,IAAAsJ,KACAjB,EAAA,EAAAkB,KACAnB,EAAA,EAAAoB,KACApB,EAAA,IAAAoB,KACArB,EAAA,EAAAe,IAyEA,OAnCApiD,GAAA27B,OAAA,SAAA5vB,GACA,UAAAhJ,MAAA44B,EAAA5vB,KAGA/L,EAAA6M,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,OAAAwL,EAAA+nC,GAAA/5C,KAAA8T,EAAAwyC,KAAAt0C,IAAAnJ,IAAAw9C,KAGAlhD,EAAA2M,MAAA,SAAA0W,EAAAvY,GACA,GAIAkE,GAJAnM,EAAAgK,IACAgQ,EAAAha,EAAA,GACAka,EAAAla,IAAAxB,OAAA,GACA2Z,EAAA+B,EAAAF,CAKA,OAHA7B,KAAAhM,EAAA6N,IAAAE,IAAA/N,GACAA,EAAAkzC,EAAA7+B,EAAAxG,EAAAE,EAAAjS,GACAkE,MAAAhG,MAAA6T,EAAAE,EAAA,MACA/B,EAAAhM,EAAA0yB,UAAA1yB,GAGAhP,EAAA8M,WAAA,SAAAjC,EAAAioB,GACA,aAAAA,EAAAhmB,EAAAjE,EAAAiqB,IAGA9yB,EAAAg1C,KAAA,SAAA3xB,EAAAvY,GACA,GAAAjI,GAAAgK,GACA,QAAAwW,EAAA6+B,EAAA7+B,EAAAxgB,EAAA,GAAAA,IAAAxB,OAAA,GAAAyJ,IACA+B,EAAAmoC,GAAAnyC,EAAAwgB,IACArjB,GAGAA,EAAAqN,KAAA,WACA,MAAAA,IAAArN,EAAAohD,GAAAC,EAAAC,EAAAC,EAAArI,EAAAsI,EAAAC,EAAAC,EAAAC,EAAA94C,KAGA7I,EA0CA,QAAA2iD,IAAA35C,GACA,GAAAkG,GAAAlG,EAAA3H,MACA,iBAAA2N,GACA,MAAAhG,GAAA+B,KAAAC,IAAA,EAAAD,KAAA0Q,IAAAvM,EAAA,EAAAnE,KAAAG,MAAA8D,EAAAE,OAYA,QAAA0zC,IAAAC,GAKA,QAAA7iD,GAAAqK,GACA,GAAA2E,IAAA3E,EAAA+mB,IAAAE,EAAAF,EACA,OAAAyxB,GAAArO,EAAAzpC,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,EAAAzM,OANA,GAAAoiB,GAAA,EACAE,EAAA,EACAkjB,GAAA,CAuBA,OAhBAx0C,GAAA6M,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAA+vB,GAAAziB,EAAA,GAAA2iB,GAAA3iB,EAAA,GAAA3O,IAAAoxB,EAAAE,IAGAtxB,EAAAw0C,MAAA,SAAA7lC,GACA,MAAAvN,WAAAC,QAAAmzC,IAAA7lC,EAAA3O,GAAAw0C,GAGAx0C,EAAA6iD,aAAA,SAAAl0C,GACA,MAAAvN,WAAAC,QAAAwhD,EAAAl0C,EAAA3O,GAAA6iD,GAGA7iD,EAAAqN,KAAA,WACA,MAAAu1C,IAAAC,GAAAh2C,QAAAukB,EAAAE,IAAAkjB,UAGAO,GAAA/0C,GAsBA,QAAA8iD,IAAAz4C,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAA04C,GAAAh4C,KAAAopB,KAAA9pB,GAGA,QAAA24C,IAAA34C,GACA,MAAAA,IAAA,EAAA44C,GAAA54C,IAAA,GAAA44C,GAAAl4C,KAAAspB,KAAAhqB,GAGA,QAAA64C,IAAArgD,GACA,MAAAA,GAAAsgD,YAGA,QAAAC,IAAAvgD,GACA,MAAAA,GAAAwgD,YAGA,QAAAC,IAAAzgD,GACA,MAAAA,GAAAwsB,WAGA,QAAAk0B,IAAA1gD,GACA,MAAAA,GAAA0sB,SAGA,QAAAi0B,IAAA3gD,GACA,MAAAA,MAAA4gD,SAGA,QAAAC,IAAAtyB,EAAAC,EAAAC,EAAAC,EAAA+U,EAAAC,EAAA4G,EAAAC,GACA,GAAAuW,GAAAryB,EAAAF,EAAAwyB,EAAAryB,EAAAF,EACAwyB,EAAA1W,EAAA7G,EAAAwd,EAAA1W,EAAA7G,EACAv3B,GAAA60C,GAAAxyB,EAAAkV,GAAAud,GAAA1yB,EAAAkV,KAAAwd,EAAAH,EAAAE,EAAAD,EACA,QAAAxyB,EAAApiB,EAAA20C,EAAAtyB,EAAAriB,EAAA40C,GAKA,QAAAG,IAAA3yB,EAAAC,EAAAC,EAAAC,EAAAub,EAAAkX,EAAAC,GACA,GAAAC,GAAA9yB,EAAAE,EACA6yB,EAAA9yB,EAAAE,EACA6yB,GAAAH,EAAAD,MAAAK,GAAAH,IAAAC,KACAG,EAAAF,EAAAD,EACAI,GAAAH,EAAAF,EACAM,EAAApzB,EAAAkzB,EACAG,EAAApzB,EAAAkzB,EACAZ,EAAAryB,EAAAgzB,EACAV,EAAAryB,EAAAgzB,EACAniB,GAAAoiB,EAAAb,GAAA,EACArhB,GAAAmiB,EAAAb,GAAA,EACAzqC,EAAAwqC,EAAAa,EACAprC,EAAAwqC,EAAAa,EACAre,EAAAjtB,IAAAC,IACA4B,EAAA8xB,EAAAkX,EACAlmC,EAAA0mC,EAAAZ,EAAAD,EAAAc,EACA5hD,GAAAuW,EAAA,QAAAirC,GAAAK,GAAA,EAAA1pC,IAAAorB,EAAAtoB,MACA6mC,GAAA7mC,EAAA1E,EAAAD,EAAAtW,GAAAujC,EACAsD,IAAA5rB,EAAA3E,EAAAC,EAAAvW,GAAAujC,EACAwe,GAAA9mC,EAAA1E,EAAAD,EAAAtW,GAAAujC,EACAye,IAAA/mC,EAAA3E,EAAAC,EAAAvW,GAAAujC,EACA0e,EAAAH,EAAAviB,EACA2iB,EAAArb,EAAApH,EACA0iB,EAAAJ,EAAAxiB,EACA6iB,EAAAJ,EAAAviB,CAMA,OAFAwiB,KAAAC,IAAAC,IAAAC,MAAAN,EAAAC,EAAAlb,EAAAmb,IAGAnqB,GAAAiqB,EACAhqB,GAAA+O,EACAwa,KAAAI,EACAH,KAAAI,EACAC,IAAAG,GAAA7X,EAAA9xB,EAAA,GACAypC,IAAA/a,GAAAoD,EAAA9xB,EAAA,IA8LA,QAAAkqC,IAAAz4C,GACAnS,KAAA+pC,SAAA53B,EA+BA,QAAA04C,IAAAnqD,GACA,MAAAA,GAAA,GAGA,QAAAoqD,IAAApqD,GACA,MAAAA,GAAA,GAmPA,QAAAqqD,IAAAC,GACAhrD,KAAAirD,OAAAD,EAqBA,QAAAE,IAAAF,GAEA,QAAAG,GAAAh5C,GACA,UAAA44C,IAAAC,EAAA74C,IAKA,MAFAg5C,GAAAF,OAAAD,EAEAG,EAGA,QAAAC,IAAApqC,GACA,GAAAvgB,GAAAugB,EAAAgqC,KASA,OAPAhqC,GAAAid,MAAAjd,EAAAjR,QAAAiR,GAAAjR,EACAiR,EAAA6T,OAAA7T,EAAAvP,QAAAuP,GAAAvP,EAEAuP,EAAAgqC,MAAA,SAAA32C,GACA,MAAAvN,WAAAC,OAAAtG,EAAAyqD,GAAA72C,IAAA5T,IAAAwqD,QAGAjqC,EAuCA,QAAAqqC,IAAA9iD,GACA,MAAAA,GAAA6rB,OAGA,QAAAk3B,IAAA/iD,GACA,MAAAA,GAAAmW,OAGA,QAAA6sC,IAAAP,GAOA,QAAAQ,KACA,GAAAC,GAAAC,EAAAC,GAAAprD,KAAAuG,WAAAia,EAAAqT,EAAA/sB,MAAArH,KAAA0rD,GAAAh3C,EAAAgK,EAAArX,MAAArH,KAAA0rD,EAGA,IAFAv5C,MAAAs5C,EAAAx4C,MACA+3C,EAAA74C,GAAAy5C,EAAAvkD,MAAArH,MAAA0rD,EAAA,GAAA3qC,EAAA2qC,KAAAG,EAAAxkD,MAAArH,KAAA0rD,IAAAE,EAAAvkD,MAAArH,MAAA0rD,EAAA,GAAAh3C,EAAAg3C,KAAAG,EAAAxkD,MAAArH,KAAA0rD,IACAD,EAAA,MAAAt5C,GAAA,KAAAs5C,EAAA,SAVA,GAAAr3B,GAAAi3B,GACA3sC,EAAA4sC,GACAM,EAAAf,GACAgB,EAAAf,GACA34C,EAAA,IA6BA,OApBAq5C,GAAAp3B,OAAA,SAAA/f,GACA,MAAAvN,WAAAC,QAAAqtB,EAAA/f,EAAAm3C,GAAAp3B,GAGAo3B,EAAA9sC,OAAA,SAAArK,GACA,MAAAvN,WAAAC,QAAA2X,EAAArK,EAAAm3C,GAAA9sC,GAGA8sC,EAAAz7C,EAAA,SAAAsE,GACA,MAAAvN,WAAAC,QAAA6kD,EAAA,kBAAAv3C,KAAAy3C,IAAAz3C,GAAAm3C,GAAAI,GAGAJ,EAAA/5C,EAAA,SAAA4C,GACA,MAAAvN,WAAAC,QAAA8kD,EAAA,kBAAAx3C,KAAAy3C,IAAAz3C,GAAAm3C,GAAAK,GAGAL,EAAAr5C,QAAA,SAAAkC,GACA,MAAAvN,WAAAC,QAAAoL,EAAA,MAAAkC,EAAA,KAAAA,EAAAm3C,GAAAr5C,GAGAq5C,EAGA,QAAAO,IAAA55C,EAAA2kB,EAAAC,EAAAC,EAAAC,GACA9kB,EAAA65C,OAAAl1B,EAAAC,GACA5kB,EAAA85C,cAAAn1B,KAAAE,GAAA,EAAAD,EAAAD,EAAAG,EAAAD,EAAAC,GAGA,QAAAi1B,IAAA/5C,EAAA2kB,EAAAC,EAAAC,EAAAC,GACA9kB,EAAA65C,OAAAl1B,EAAAC,GACA5kB,EAAA85C,cAAAn1B,EAAAC,KAAAE,GAAA,EAAAD,EAAAD,EAAAC,EAAAC,GAGA,QAAAk1B,IAAAh6C,EAAA2kB,EAAAC,EAAAC,EAAAC,GACA,GAAAqG,GAAA8uB,GAAAt1B,EAAAC,GACAs1B,EAAAD,GAAAt1B,EAAAC,KAAAE,GAAA,GACAq1B,EAAAF,GAAAp1B,EAAAD,GACAw1B,EAAAH,GAAAp1B,EAAAC,EACA9kB,GAAA65C,OAAA1uB,EAAA,GAAAA,EAAA,IACAnrB,EAAA85C,cAAAI,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,IAGA,QAAAC,MACA,MAAAjB,IAAAQ,IAGA,QAAAU,MACA,MAAAlB,IAAAW,IAGA,QAAAQ,MACA,GAAA1rC,GAAAuqC,GAAAY,GAGA,OAFAnrC,GAAAid,MAAAjd,EAAAjR,QAAAiR,GAAAjR,EACAiR,EAAA6T,OAAA7T,EAAAvP,QAAAuP,GAAAvP,EACAuP,EA0JA,QAAA2rC,IAAAx0C,EAAApI,EAAA0B,GACA0G,EAAA4xB,SAAAkiB,eACA,EAAA9zC,EAAAmc,IAAAnc,EAAAqc,KAAA,GACA,EAAArc,EAAAoc,IAAApc,EAAAsc,KAAA,GACAtc,EAAAmc,IAAA,EAAAnc,EAAAqc,KAAA,GACArc,EAAAoc,IAAA,EAAApc,EAAAsc,KAAA,GACAtc,EAAAmc,IAAA,EAAAnc,EAAAqc,IAAAzkB,GAAA,GACAoI,EAAAoc,IAAA,EAAApc,EAAAsc,IAAAhjB,GAAA,GAIA,QAAAm7C,IAAAz6C,GACAnS,KAAA+pC,SAAA53B,EAwCA,QAAA06C,IAAA16C,GACAnS,KAAA+pC,SAAA53B,EAiDA,QAAA26C,IAAA36C,GACAnS,KAAA+pC,SAAA53B,EAqCA,QAAA46C,IAAA56C,EAAAukC,GACA12C,KAAAgtD,OAAA,GAAAJ,IAAAz6C,GACAnS,KAAAitD,MAAAvW,EAqDA,QAAAwW,IAAA/0C,EAAApI,EAAA0B,GACA0G,EAAA4xB,SAAAkiB,cACA9zC,EAAAqc,IAAArc,EAAAg1C,IAAAh1C,EAAAi1C,IAAAj1C,EAAAmc,KACAnc,EAAAsc,IAAAtc,EAAAg1C,IAAAh1C,EAAAk1C,IAAAl1C,EAAAoc,KACApc,EAAAi1C,IAAAj1C,EAAAg1C,IAAAh1C,EAAAqc,IAAAzkB,GACAoI,EAAAk1C,IAAAl1C,EAAAg1C,IAAAh1C,EAAAsc,IAAAhjB,GACA0G,EAAAi1C,IACAj1C,EAAAk1C,KAIA,QAAAC,IAAAn7C,EAAAo7C,GACAvtD,KAAA+pC,SAAA53B,EACAnS,KAAAmtD,IAAA,EAAAI,GAAA,EAiDA,QAAAC,IAAAr7C,EAAAo7C,GACAvtD,KAAA+pC,SAAA53B,EACAnS,KAAAmtD,IAAA,EAAAI,GAAA,EAyDA,QAAAE,IAAAt7C,EAAAo7C,GACAvtD,KAAA+pC,SAAA53B,EACAnS,KAAAmtD,IAAA,EAAAI,GAAA,EA8CA,QAAAG,IAAAv1C,EAAApI,EAAA0B,GACA,GAAAulB,GAAA7e,EAAAqc,IACAyC,EAAA9e,EAAAsc,IACAuX,EAAA7zB,EAAAi1C,IACAnhB,EAAA9zB,EAAAk1C,GAEA,IAAAl1C,EAAAw1C,OAAAC,GAAA,CACA,GAAA19C,GAAA,EAAAiI,EAAA01C,QAAA,EAAA11C,EAAAw1C,OAAAx1C,EAAA21C,OAAA31C,EAAA41C,QACAn5C,EAAA,EAAAuD,EAAAw1C,QAAAx1C,EAAAw1C,OAAAx1C,EAAA21C,OACA92B,MAAA9mB,EAAAiI,EAAAmc,IAAAnc,EAAA41C,QAAA51C,EAAAi1C,IAAAj1C,EAAA01C,SAAAj5C,EACAqiB,KAAA/mB,EAAAiI,EAAAoc,IAAApc,EAAA41C,QAAA51C,EAAAk1C,IAAAl1C,EAAA01C,SAAAj5C,EAGA,GAAAuD,EAAA61C,OAAAJ,GAAA,CACA,GAAAz9C,GAAA,EAAAgI,EAAA81C,QAAA,EAAA91C,EAAA61C,OAAA71C,EAAA21C,OAAA31C,EAAA41C,QACAvtD,EAAA,EAAA2X,EAAA61C,QAAA71C,EAAA61C,OAAA71C,EAAA21C,OACA9hB,MAAA77B,EAAAgI,EAAAqc,IAAArc,EAAA81C,QAAAl+C,EAAAoI,EAAA41C,SAAAvtD,EACAyrC,KAAA97B,EAAAgI,EAAAsc,IAAAtc,EAAA81C,QAAAx8C,EAAA0G,EAAA41C,SAAAvtD,EAGA2X,EAAA4xB,SAAAkiB,cAAAj1B,EAAAC,EAAA+U,EAAAC,EAAA9zB,EAAAi1C,IAAAj1C,EAAAk1C,KAGA,QAAAa,IAAA/7C,EAAAskC,GACAz2C,KAAA+pC,SAAA53B,EACAnS,KAAAmuD,OAAA1X,EA6DA,QAAA2X,IAAAj8C,EAAAskC,GACAz2C,KAAA+pC,SAAA53B,EACAnS,KAAAmuD,OAAA1X,EAqEA,QAAA4X,IAAAl8C,EAAAskC,GACAz2C,KAAA+pC,SAAA53B,EACAnS,KAAAmuD,OAAA1X,EA0DA,QAAA6X,IAAAn8C,GACAnS,KAAA+pC,SAAA53B,EAuBA,QAAAo8C,IAAAx+C,GACA,MAAAA,GAAA,OAOA,QAAAy+C,IAAAr2C,EAAA6zB,EAAAC,GACA,GAAAwiB,GAAAt2C,EAAAqc,IAAArc,EAAAmc,IACAo6B,EAAA1iB,EAAA7zB,EAAAqc,IACArC,GAAAha,EAAAsc,IAAAtc,EAAAoc,MAAAk6B,GAAAC,EAAA,OACAr8B,GAAA4Z,EAAA9zB,EAAAsc,MAAAi6B,GAAAD,EAAA,OACA/tD,GAAAyxB,EAAAu8B,EAAAr8B,EAAAo8B,MAAAC,EACA,QAAAH,GAAAp8B,GAAAo8B,GAAAl8B,IAAA5hB,KAAA0Q,IAAA1Q,KAAAY,IAAA8gB,GAAA1hB,KAAAY,IAAAghB,GAAA,GAAA5hB,KAAAY,IAAA3Q,KAAA,EAIA,QAAAiuD,IAAAx2C,EAAAzD,GACA,GAAAvQ,GAAAgU,EAAAqc,IAAArc,EAAAmc,GACA,OAAAnwB,IAAA,GAAAgU,EAAAsc,IAAAtc,EAAAoc,KAAApwB,EAAAuQ,GAAA,EAAAA,EAMA,QAAAk6C,IAAAz2C,EAAAoK,EAAAE,GACA,GAAAqU,GAAA3e,EAAAmc,IACAyC,EAAA5e,EAAAoc,IACAyC,EAAA7e,EAAAqc,IACAyC,EAAA9e,EAAAsc,IACA5V,GAAAmY,EAAAF,GAAA,CACA3e,GAAA4xB,SAAAkiB,cAAAn1B,EAAAjY,EAAAkY,EAAAlY,EAAA0D,EAAAyU,EAAAnY,EAAAoY,EAAApY,EAAA4D,EAAAuU,EAAAC,GAGA,QAAA43B,IAAA18C,GACAnS,KAAA+pC,SAAA53B,EA0CA,QAAA28C,IAAA38C,GACAnS,KAAA+pC,SAAA,GAAAglB,IAAA58C,GAOA,QAAA48C,IAAA58C,GACAnS,KAAA+pC,SAAA53B,EAUA,QAAA68C,IAAA78C,GACA,UAAA08C,IAAA18C,GAGA,QAAA88C,IAAA98C,GACA,UAAA28C,IAAA38C,GAGA,QAAA+8C,IAAA/8C,GACAnS,KAAA+pC,SAAA53B,EA2CA,QAAAg9C,IAAAp/C,GACA,GAAA4E,GAEAnU,EADAoU,EAAA7E,EAAAhJ,OAAA,EAEAmJ,EAAA,GAAAjJ,OAAA2N,GACAzE,EAAA,GAAAlJ,OAAA2N,GACA8L,EAAA,GAAAzZ,OAAA2N,EAEA,KADA1E,EAAA,KAAAC,EAAA,KAAAuQ,EAAA,GAAA3Q,EAAA,KAAAA,EAAA,GACA4E,EAAA,EAAaA,EAAAC,EAAA,IAAWD,EAAAzE,EAAAyE,GAAA,EAAAxE,EAAAwE,GAAA,EAAA+L,EAAA/L,GAAA,EAAA5E,EAAA4E,GAAA,EAAA5E,EAAA4E,EAAA,EAExB,KADAzE,EAAA0E,EAAA,KAAAzE,EAAAyE,EAAA,KAAA8L,EAAA9L,EAAA,KAAA7E,EAAA6E,EAAA,GAAA7E,EAAA6E,GACAD,EAAA,EAAaA,EAAAC,IAAOD,EAAAnU,EAAA0P,EAAAyE,GAAAxE,EAAAwE,EAAA,GAAAxE,EAAAwE,IAAAnU,EAAAkgB,EAAA/L,IAAAnU,EAAAkgB,EAAA/L,EAAA,EAEpB,KADAzE,EAAA0E,EAAA,GAAA8L,EAAA9L,EAAA,GAAAzE,EAAAyE,EAAA,GACAD,EAAAC,EAAA,EAAiBD,GAAA,IAAQA,EAAAzE,EAAAyE,IAAA+L,EAAA/L,GAAAzE,EAAAyE,EAAA,IAAAxE,EAAAwE,EAEzB,KADAxE,EAAAyE,EAAA,IAAA7E,EAAA6E,GAAA1E,EAAA0E,EAAA,MACAD,EAAA,EAAaA,EAAAC,EAAA,IAAWD,EAAAxE,EAAAwE,GAAA,EAAA5E,EAAA4E,EAAA,GAAAzE,EAAAyE,EAAA,EACxB,QAAAzE,EAAAC,GAOA,QAAAi/C,IAAAj9C,EAAAuC,GACA1U,KAAA+pC,SAAA53B,EACAnS,KAAAqvD,GAAA36C,EA4CA,QAAA46C,IAAAn9C,GACA,UAAAi9C,IAAAj9C,EAAA,GAGA,QAAAo9C,IAAAp9C,GACA,UAAAi9C,IAAAj9C,EAAA,GAmBA,QAAAq9C,IAAAjnD,EAAAlF,GACA,MAAAkF,GAAAlF,GAiHA,QAAAosD,IAAAC,GAEA,IADA,GAAAx1C,GAAA6G,EAAA,EAAApM,GAAA,EAAAC,EAAA86C,EAAA3oD,SACA4N,EAAAC,IAAAsF,GAAAw1C,EAAA/6C,GAAA,MAAAoM,GAAA7G,EACA,OAAA6G,GA0CA,QAAA4uC,IAAApnD,GACA,MAAAA,GAAA,GAGA,QAAAqnD,IAAArnD,GACA,MAAAA,GAAA,GAGA,QAAAsnD,MACA7vD,KAAAqU,EAAA,KAGA,QAAAy7C,IAAA/2C,GACAA,EAAA8lC,EACA9lC,EAAAwK,EACAxK,EAAA6kC,EACA7kC,EAAAg3C,EACAh3C,EAAAi3C,EACAj3C,EAAAiZ,EAAA,KAuLA,QAAAi+B,IAAA15B,EAAAxd,GACA,GAAArY,GAAAqY,EACAmN,EAAAnN,EAAAg3C,EACAt3C,EAAA/X,EAAAm+C,CAEApmC,GACAA,EAAAmlC,IAAAl9C,EAAA+X,EAAAmlC,EAAA13B,EACAzN,EAAAs3C,EAAA7pC,EAEAqQ,EAAAliB,EAAA6R,EAGAA,EAAA24B,EAAApmC,EACA/X,EAAAm+C,EAAA34B,EACAxlB,EAAAqvD,EAAA7pC,EAAA03B,EACAl9C,EAAAqvD,IAAArvD,EAAAqvD,EAAAlR,EAAAn+C,GACAwlB,EAAA03B,EAAAl9C,EAGA,QAAAwvD,IAAA35B,EAAAxd,GACA,GAAArY,GAAAqY,EACAmN,EAAAnN,EAAA6kC,EACAnlC,EAAA/X,EAAAm+C,CAEApmC,GACAA,EAAAmlC,IAAAl9C,EAAA+X,EAAAmlC,EAAA13B,EACAzN,EAAAs3C,EAAA7pC,EAEAqQ,EAAAliB,EAAA6R,EAGAA,EAAA24B,EAAApmC,EACA/X,EAAAm+C,EAAA34B,EACAxlB,EAAAk9C,EAAA13B,EAAA6pC,EACArvD,EAAAk9C,IAAAl9C,EAAAk9C,EAAAiB,EAAAn+C,GACAwlB,EAAA6pC,EAAArvD,EAGA,QAAAyvD,IAAAp3C,GACA,KAAAA,EAAA6kC,GAAA7kC,IAAA6kC,CACA,OAAA7kC,GAGA,QAAAq3C,IAAA5rD,EAAAC,EAAAkf,EAAAC,GACA,GAAAysC,IAAA,WACAx5C,EAAAy5C,GAAAtnD,KAAAqnD,GAAA,CAOA,OANAA,GAAA7rD,OACA6rD,EAAA5rD,QACAkf,GAAA4sC,GAAAF,EAAA7rD,EAAAC,EAAAkf,GACAC,GAAA2sC,GAAAF,EAAA5rD,EAAAD,EAAAof,GACA4sC,GAAAhsD,EAAAqS,OAAA45C,UAAAznD,KAAA6N,GACA25C,GAAA/rD,EAAAoS,OAAA45C,UAAAznD,KAAA6N,GACAw5C,EAGA,QAAAK,IAAAlsD,EAAAmf,EAAAC,GACA,GAAAysC,IAAA1sC,EAAAC,EAEA,OADAysC,GAAA7rD,OACA6rD,EAGA,QAAAE,IAAAF,EAAA7rD,EAAAC,EAAAksD,GACAN,EAAA,IAAAA,EAAA,GAIGA,EAAA7rD,OAAAC,EACH4rD,EAAA,GAAAM,EAEAN,EAAA,GAAAM,GANAN,EAAA,GAAAM,EACAN,EAAA7rD,OACA6rD,EAAA5rD,SASA,QAAAmsD,IAAAP,EAAAv5B,EAAAC,EAAAC,EAAAC,GACA,GAUAvW,GAVAxQ,EAAAmgD,EAAA,GACAlgD,EAAAkgD,EAAA,GACA9c,EAAArjC,EAAA,GACAsjC,EAAAtjC,EAAA,GACA2gD,EAAA1gD,EAAA,GACA2gD,EAAA3gD,EAAA,GACAoS,EAAA,EACAE,EAAA,EACA5D,EAAAgyC,EAAAtd,EACAz0B,EAAAgyC,EAAAtd,CAIA,IADA9yB,EAAAoW,EAAAyc,EACA10B,KAAA6B,EAAA,IAEA,GADAA,GAAA7B,EACAA,EAAA,GACA,GAAA6B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,OACG,IAAA7B,EAAA,GACH,GAAA6B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,GAIA,GADAA,EAAAsW,EAAAuc,EACA10B,KAAA6B,EAAA,IAEA,GADAA,GAAA7B,EACAA,EAAA,GACA,GAAA6B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,OACG,IAAA7B,EAAA,GACH,GAAA6B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,GAIA,GADAA,EAAAqW,EAAAyc,EACA10B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,GAIA,GADAA,EAAAuW,EAAAuc,EACA10B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,GAGA,QAAA6B,EAAA,GAAAE,EAAA,KAEAF,EAAA,IAAA8tC,EAAA,IAAA9c,EAAAhxB,EAAA1D,EAAA20B,EAAAjxB,EAAAzD,IACA2D,EAAA,IAAA4tC,EAAA,IAAA9c,EAAA9wB,EAAA5D,EAAA20B,EAAA/wB,EAAA3D,KACA,OAGA,QAAAiyC,IAAAV,EAAAv5B,EAAAC,EAAAC,EAAAC,GACA,GAAArT,GAAAysC,EAAA,EACA,IAAAzsC,EAAA,QAEA,IASAotC,GACAC,EAVAttC,EAAA0sC,EAAA,GACA7rD,EAAA6rD,EAAA7rD,KACAC,EAAA4rD,EAAA5rD,MACAysD,EAAA1sD,EAAA,GACA2sD,EAAA3sD,EAAA,GACA4sD,EAAA3sD,EAAA,GACA4sD,EAAA5sD,EAAA,GACA6sD,GAAAJ,EAAAE,GAAA,EACA/hB,GAAA8hB,EAAAE,GAAA,CAIA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAx6B,GAAAw6B,GAAAt6B,EAAA,MACA,IAAAk6B,EAAAE,EAAA,CACA,GAAAztC,GACA,GAAAA,EAAA,IAAAsT,EAAA,WADAtT,IAAA2tC,EAAAv6B,EAEAnT,IAAA0tC,EAAAr6B,OACK,CACL,GAAAtT,GACA,GAAAA,EAAA,GAAAoT,EAAA,WADApT,IAAA2tC,EAAAr6B,EAEArT,IAAA0tC,EAAAv6B,QAKA,IAFAi6B,GAAAE,EAAAE,IAAAC,EAAAF,GACAF,EAAA5hB,EAAA2hB,EAAAM,EACAN,GAAA,GAAAA,EAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAAztC,GACA,GAAAA,EAAA,IAAAsT,EAAA,WADAtT,KAAAoT,EAAAk6B,GAAAD,EAAAj6B,EAEAnT,KAAAqT,EAAAg6B,GAAAD,EAAA/5B,OACO,CACP,GAAAtT,GACA,GAAAA,EAAA,GAAAoT,EAAA,WADApT,KAAAsT,EAAAg6B,GAAAD,EAAA/5B,EAEArT,KAAAmT,EAAAk6B,GAAAD,EAAAj6B,OAGA,IAAAo6B,EAAAE,EAAA,CACA,GAAA1tC,GACA,GAAAA,EAAA,IAAAqT,EAAA,WADArT,IAAAmT,EAAAk6B,EAAAl6B,EAAAm6B,EAEArtC,IAAAoT,EAAAg6B,EAAAh6B,EAAAi6B,OACO,CACP,GAAAttC,GACA,GAAAA,EAAA,GAAAmT,EAAA,WADAnT,IAAAqT,EAAAg6B,EAAAh6B,EAAAi6B,EAEArtC,IAAAkT,EAAAk6B,EAAAl6B,EAAAm6B,GAOA,MAFAZ,GAAA,GAAA1sC,EACA0sC,EAAA,GAAAzsC,GACA,EAGA,QAAA2tC,IAAAz6B,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GACAo5B,GADA17C,EAAA27C,GAAAvpD,OAGA4N,KACAo8C,GAAAV,EAAAC,GAAA37C,GAAAmiB,EAAAC,EAAAC,EAAAC,IACA25B,GAAAP,EAAAv5B,EAAAC,EAAAC,EAAAC,KACAxmB,KAAAY,IAAAg/C,EAAA,MAAAA,EAAA,OAAAmB,IACA/gD,KAAAY,IAAAg/C,EAAA,MAAAA,EAAA,OAAAmB,WACAlB,IAAA37C,GAKA,QAAA88C,IAAAC,GACA,MAAAlB,IAAAkB,EAAA76C,QACA66C,OACAjB,cAIA,QAAAkB,IAAAC,EAAAvB,GACA,GAAAqB,GAAAE,EAAAF,KACAG,EAAAxB,EAAA7rD,KACAstD,EAAAzB,EAAA5rD,KAEA,OADAitD,KAAAI,MAAAD,IAAAH,GACAI,EAAArhD,KAAAmS,MAAAkvC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAH,IAAAG,KAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,KACAwB,EAAAxB,EAAA,GAAAyB,EAAAzB,EAAA,IACA5/C,KAAAmS,MAAAivC,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGA,QAAAE,IAAAH,EAAAvB,GACA,MAAAA,OAAA7rD,OAAAotD,EAAAF,OAGA,QAAAM,IAAAJ,EAAAvB,GACA,MAAAA,OAAA7rD,OAAAotD,EAAAF,OAGA,QAAAO,MACA,OAAAL,GAAAnB,EAAA94C,EAAAnX,EAAAmU,EAAA,EAAAC,EAAA47C,GAAAzpD,OAA0D4N,EAAAC,IAAOD,EACjE,IAAAi9C,EAAApB,GAAA77C,MAAAnU,GAAAiwD,EAAAmB,EAAAnB,WAAA1pD,QAAA,CACA,GAAA8P,GAAA,GAAA5P,OAAAzG,GACA4hC,EAAA,GAAAn7B,OAAAzG,EACA,KAAAmX,EAAA,EAAiBA,EAAAnX,IAAOmX,EAAAd,EAAAc,KAAAyqB,EAAAzqB,GAAAg6C,GAAAC,EAAAtB,GAAAG,EAAA94C,IAExB,KADAd,EAAAklC,KAAA,SAAApnC,EAAAgD,GAAiC,MAAAyqB,GAAAzqB,GAAAyqB,EAAAztB,KACjCgD,EAAA,EAAiBA,EAAAnX,IAAOmX,EAAAyqB,EAAAzqB,GAAA84C,EAAA55C,EAAAc,GACxB,KAAAA,EAAA,EAAiBA,EAAAnX,IAAOmX,EAAA84C,EAAA94C,GAAAyqB,EAAAzqB,IAKxB,QAAAu6C,IAAAp7B,EAAAC,EAAAC,EAAAC,GACA,GACAk7B,GACAP,EACAF,EACAU,EACA3B,EACA4B,EACAhiD,EACAiiD,EACAC,EACAxrC,EACAyrC,EACAC,EAZAC,EAAAlC,GAAAzpD,OAaAywB,GAAA,CAEA,KAAA26B,EAAA,EAAiBA,EAAAO,IAAgBP,EACjC,GAAAP,EAAApB,GAAA2B,GAAA,CAMA,IALAT,EAAAE,EAAAF,KACAjB,EAAAmB,EAAAnB,UACA2B,EAAA3B,EAAA1pD,OAGAqrD,KACA9B,GAAAG,EAAA2B,KACA3B,EAAAjmC,OAAA4nC,EAAA,EAMA,KADAA,EAAA,EAAAC,EAAA5B,EAAA1pD,OACAqrD,EAAAC,GACAtrC,EAAAirC,GAAAJ,EAAAtB,GAAAG,EAAA2B,KAAAI,EAAAzrC,EAAA,GAAA0rC,EAAA1rC,EAAA,GACA1W,EAAA0hD,GAAAH,EAAAtB,GAAAG,IAAA2B,EAAAC,KAAAC,EAAAjiD,EAAA,GAAAkiD,EAAAliD,EAAA,IACAI,KAAAY,IAAAmhD,EAAAF,GAAAd,IAAA/gD,KAAAY,IAAAohD,EAAAF,GAAAf,MACAf,EAAAjmC,OAAA4nC,EAAA,EAAA9B,GAAAtnD,KAAA0nD,GAAAgB,EAAA3qC,EACAtW,KAAAY,IAAAmhD,EAAA17B,GAAA06B,IAAAv6B,EAAAw7B,EAAAjB,IAAA16B,EAAArmB,KAAAY,IAAAihD,EAAAx7B,GAAA06B,GAAAe,EAAAt7B,GACAxmB,KAAAY,IAAAohD,EAAAx7B,GAAAu6B,IAAAx6B,EAAAw7B,EAAAhB,IAAA/gD,KAAAY,IAAAkhD,EAAAt7B,GAAAu6B,GAAAc,EAAAt7B,EAAAC,GACAxmB,KAAAY,IAAAmhD,EAAAx7B,GAAAw6B,IAAAiB,EAAA17B,EAAAy6B,IAAAx6B,EAAAvmB,KAAAY,IAAAihD,EAAAt7B,GAAAw6B,GAAAe,EAAAx7B,GACAtmB,KAAAY,IAAAohD,EAAA17B,GAAAy6B,IAAAgB,EAAA17B,EAAA06B,IAAA/gD,KAAAY,IAAAkhD,EAAAx7B,GAAAy6B,GAAAc,EAAAx7B,EAAAC,GACA,YACAs7B,EAIAA,KAAA76B,GAAA,GAMA,GAAAA,EAAA,CACA,GAAA3Y,GAAAC,EAAAgtB,EAAA6H,EAAAhrB,GAEA,KAAAwpC,EAAA,EAAA36B,EAAA,KAAiC26B,EAAAO,IAAgBP,GACjDP,EAAApB,GAAA2B,MACAT,EAAAE,EAAAF,KACA7yC,EAAA6yC,EAAA,GAAA56B,EACAhY,EAAA4yC,EAAA,GAAA36B,EACA+U,EAAAjtB,IAAAC,IACAgtB,EAAA6H,MAAA7H,EAAAtU,EAAAo6B,GAIA,IAAAp6B,EAAA,CACA,GAAAm7B,IAAA77B,EAAAC,GAAA67B,GAAA97B,EAAAG,GAAA47B,GAAA77B,EAAAC,GAAA67B,GAAA97B,EAAAD,EACAS,GAAAi5B,UAAAznD,KACAsnD,GAAAtnD,KAAA0nD,GAAAgB,EAAAl6B,EAAAk6B,KAAAiB,EAAAC,IAAA,EACAtC,GAAAtnD,KAAA0nD,GAAAgB,EAAAkB,EAAAC,IAAA,EACAvC,GAAAtnD,KAAA0nD,GAAAgB,EAAAmB,EAAAC,IAAA,EACAxC,GAAAtnD,KAAA0nD,GAAAgB,EAAAoB,EAAAH,IAAA,IAMA,IAAAR,EAAA,EAAiBA,EAAAO,IAAgBP,GACjCP,EAAApB,GAAA2B,MACAP,EAAAnB,UAAA1pD,cACAypD,IAAA2B,IAUA,QAAAY,MACAjD,GAAA9vD,MACAA,KAAA+P,EACA/P,KAAAyR,EACAzR,KAAAgzD,IACAhzD,KAAA0xD,KACA1xD,KAAAqgC,GAAA,KAGA,QAAA4yB,IAAAD,GACA,GAAAE,GAAAF,EAAAhD,EACAmD,EAAAH,EAAAhhC,CAEA,IAAAkhC,GAAAC,EAAA,CAEA,GAAAC,GAAAF,EAAAxB,KACA2B,EAAAL,EAAAtB,KACA4B,EAAAH,EAAAzB,IAEA,IAAA0B,IAAAE,EAAA,CAEA,GAAAzC,GAAAwC,EAAA,GACAvC,EAAAuC,EAAA,GACA9f,EAAA6f,EAAA,GAAAvC,EACArd,EAAA4f,EAAA,GAAAtC,EACA1wB,EAAAkzB,EAAA,GAAAzC,EACAxwB,EAAAizB,EAAA,GAAAxC,EAEAvoD,EAAA,GAAAgrC,EAAAlT,EAAAmT,EAAApT,EACA,MAAA73B,IAAAgrD,IAAA,CAEA,GAAAC,GAAAjgB,IAAAC,IACAigB,EAAArzB,IAAAC,IACAtwB,GAAAswB,EAAAmzB,EAAAhgB,EAAAigB,GAAAlrD,EACAkJ,GAAA8hC,EAAAkgB,EAAArzB,EAAAozB,GAAAjrD,EAEAwrC,EAAA2f,GAAA9tC,OAAA,GAAAmtC,GACAhf,GAAAif,MACAjf,EAAA2d,KAAA2B,EACAtf,EAAAhkC,IAAA8gD,EACA9c,EAAAtiC,GAAAsiC,EAAA1T,GAAA5uB,EAAAq/C,GAAArgD,KAAAqS,KAAA/S,IAAA0B,KAEAuhD,EAAAjf,QAKA,KAHA,GAAA4f,GAAA,KACA56C,EAAAm7B,GAAA7/B,EAEA0E,GACA,GAAAg7B,EAAAtiC,EAAAsH,EAAAtH,GAAAsiC,EAAAtiC,IAAAsH,EAAAtH,GAAAsiC,EAAAhkC,GAAAgJ,EAAAhJ,EAAA,CACA,IAAAgJ,EAAA6kC,EACA,CAAY+V,EAAA56C,EAAAi3C,CAAiB,OAD7Bj3C,IAAA6kC,MAEK,CACL,IAAA7kC,EAAAg3C,EACA,CAAY4D,EAAA56C,CAAe,OAD3BA,IAAAg3C,EAKA7b,GAAAvgC,OAAAggD,EAAA5f,GACA4f,IAAAC,GAAA7f,MAGA,QAAA8f,IAAAb,GACA,GAAAjf,GAAAif,EAAAjf,MACAA,KACAA,EAAAic,IAAA4D,GAAA7f,EAAA/hB,GACAkiB,GAAAnqC,OAAAgqC,GACA2f,GAAA1qD,KAAA+qC,GACA+b,GAAA/b,GACAif,EAAAjf,OAAA,MAMA,QAAA+f,MACAhE,GAAA9vD,MACAA,KAAAqwD,KACArwD,KAAA0xD,KACA1xD,KAAA+zC,OAAA,KAGA,QAAAggB,IAAArC,GACA,GAAAsC,GAAAC,GAAAruC,OAAA,GAAAkuC,GAEA,OADAE,GAAAtC,OACAsC,EAGA,QAAAE,IAAAF,GACAH,GAAAG,GACAG,GAAApqD,OAAAiqD,GACAC,GAAAjrD,KAAAgrD,GACAlE,GAAAkE,GAGA,QAAAI,IAAAJ,GACA,GAAAjgB,GAAAigB,EAAAjgB,OACAhkC,EAAAgkC,EAAAhkC,EACA0B,EAAAsiC,EAAA1T,GACAswB,GAAA5gD,EAAA0B,GACAuiC,EAAAggB,EAAAhE,EACA54B,EAAA48B,EAAAhiC,EACAqiC,GAAAL,EAEAE,IAAAF,EAGA,KADA,GAAAd,GAAAlf,EACAkf,EAAAnf,QACAtjC,KAAAY,IAAAtB,EAAAmjD,EAAAnf,OAAAhkC,GAAAyhD,IACA/gD,KAAAY,IAAAI,EAAAyhD,EAAAnf,OAAA1T,IAAAmxB,IACAxd,EAAAkf,EAAAlD,EACAqE,EAAAC,QAAApB,GACAgB,GAAAhB,GACAA,EAAAlf,CAGAqgB,GAAAC,QAAApB,GACAW,GAAAX,EAGA,KADA,GAAAC,GAAA/7B,EACA+7B,EAAApf,QACAtjC,KAAAY,IAAAtB,EAAAojD,EAAApf,OAAAhkC,GAAAyhD,IACA/gD,KAAAY,IAAAI,EAAA0hD,EAAApf,OAAA1T,IAAAmxB,IACAp6B,EAAA+7B,EAAAnhC,EACAqiC,EAAArrD,KAAAmqD,GACAe,GAAAf,GACAA,EAAA/7B,CAGAi9B,GAAArrD,KAAAmqD,GACAU,GAAAV,EAEA,IACAoB,GADAC,EAAAH,EAAAttD,MAEA,KAAAwtD,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BpB,EAAAkB,EAAAE,GACArB,EAAAmB,EAAAE,EAAA,GACAhE,GAAA4C,EAAA9C,KAAA6C,EAAAxB,KAAAyB,EAAAzB,KAAAf,EAGAuC,GAAAmB,EAAA,GACAlB,EAAAkB,EAAAG,EAAA,GACArB,EAAA9C,KAAAD,GAAA8C,EAAAxB,KAAAyB,EAAAzB,KAAA,KAAAf,GAEAsC,GAAAC,GACAD,GAAAE,GAGA,QAAAsB,IAAA/C,GASA,IARA,GAEAwB,GACAC,EACAuB,EACAC,EALA5kD,EAAA2hD,EAAA,GACAkD,EAAAlD,EAAA,GAKA34C,EAAAo7C,GAAA9/C,EAEA0E,GAEA,GADA27C,EAAAG,GAAA97C,EAAA67C,GAAA7kD,EACA2kD,EAAAlD,GAAAz4C,IAAA6kC,MAAuC,CAEvC,GADA+W,EAAA5kD,EAAA+kD,GAAA/7C,EAAA67C,KACAD,EAAAnD,IAMO,CACPkD,GAAAlD,IACA0B,EAAAn6C,EAAAi3C,EACAmD,EAAAp6C,GACS47C,GAAAnD,IACT0B,EAAAn6C,EACAo6C,EAAAp6C,EAAAiZ,GAEAkhC,EAAAC,EAAAp6C,CAEA,OAfA,IAAAA,EAAAg3C,EAAA,CACAmD,EAAAn6C,CACA,OAEAA,IAAAg3C,EAgBA0B,GAAAC,EACA,IAAAqD,GAAAhB,GAAArC,EAGA,IAFAyC,GAAAxgD,OAAAu/C,EAAA6B,GAEA7B,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,MANAU,IAAAX,GACAC,EAAAY,GAAAb,EAAAxB,MACAyC,GAAAxgD,OAAAohD,EAAA5B,GACA4B,EAAA1E,KAAA8C,EAAA9C,KAAAD,GAAA8C,EAAAxB,KAAAqD,EAAArD,MACAuB,GAAAC,OACAD,IAAAE,EAIA,KAAAA,EAEA,YADA4B,EAAA1E,KAAAD,GAAA8C,EAAAxB,KAAAqD,EAAArD,MAKAmC,IAAAX,GACAW,GAAAV,EAEA,IAAAC,GAAAF,EAAAxB,KACAne,EAAA6f,EAAA,GACA5f,EAAA4f,EAAA,GACAvC,EAAAa,EAAA,GAAAne,EACAud,EAAAY,EAAA,GAAAle,EACA8f,EAAAH,EAAAzB,KACAtxB,EAAAkzB,EAAA,GAAA/f,EACAlT,EAAAizB,EAAA,GAAA9f,EACAjrC,EAAA,GAAAsoD,EAAAxwB,EAAAywB,EAAA1wB,GACA40B,EAAAnE,IAAAC,IACA2C,EAAArzB,IAAAC,IACAswB,IAAAtwB,EAAA20B,EAAAlE,EAAA2C,GAAAlrD,EAAAgrC,GAAAsd,EAAA4C,EAAArzB,EAAA40B,GAAAzsD,EAAAirC,EAEA+c,IAAA4C,EAAA9C,KAAA+C,EAAAE,EAAA3C,GACAoE,EAAA1E,KAAAD,GAAAgD,EAAA1B,EAAA,KAAAf,GACAwC,EAAA9C,KAAAD,GAAAsB,EAAA4B,EAAA,KAAA3C,GACAsC,GAAAC,GACAD,GAAAE,IAGA,QAAA0B,IAAA7B,EAAA4B,GACA,GAAAlD,GAAAsB,EAAAtB,KACAuD,EAAAvD,EAAA,GACAwD,EAAAxD,EAAA,GACAyD,EAAAD,EAAAN,CAEA,KAAAO,EAAA,MAAAF,EAEA,IAAA/B,GAAAF,EAAAhD,CACA,KAAAkD,EAAA,QAAAvqC,IAEA+oC,GAAAwB,EAAAxB,IACA,IAAA0D,GAAA1D,EAAA,GACA2D,EAAA3D,EAAA,GACA4D,EAAAD,EAAAT,CAEA,KAAAU,EAAA,MAAAF,EAEA,IAAAG,GAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACAnlD,EAAAolD,EAAAD,CAEA,OAAAE,KAAArlD,EAAAM,KAAAqS,KAAA3S,IAAA,EAAAqlD,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GAEAA,EAAAG,GAAA,EAGA,QAAAN,IAAA9B,EAAA4B,GACA,GAAAzB,GAAAH,EAAAhhC,CACA,IAAAmhC,EAAA,MAAA0B,IAAA1B,EAAAyB,EACA,IAAAlD,GAAAsB,EAAAtB,IACA,OAAAA,GAAA,KAAAkD,EAAAlD,EAAA,GAAA/oC,IAUA,QAAA8sC,IAAAvlD,EAAAC,EAAA1P,GACA,OAAAyP,EAAA,GAAAzP,EAAA,KAAA0P,EAAA,GAAAD,EAAA,KAAAA,EAAA,GAAAC,EAAA,KAAA1P,EAAA,GAAAyP,EAAA,IAGA,QAAAwlD,IAAAxlD,EAAAC,GACA,MAAAA,GAAA,GAAAD,EAAA,IACAC,EAAA,GAAAD,EAAA,GAGA,QAAAylD,IAAAC,EAAApnD,GACA,GACAuB,GACA0B,EACAsiC,EAHA2d,EAAAkE,EAAA7Z,KAAA2Z,IAAA9vC,KAUA,KALA0qC,MACAE,GAAA,GAAAvpD,OAAA2uD,EAAA7uD,QACAotD,GAAA,GAAAtE,IACA3b,GAAA,GAAA2b,MAIA,GADA9b,EAAA6f,GACAlC,KAAA3d,GAAA2d,EAAA,GAAA3d,EAAAtiC,GAAAigD,EAAA,KAAA3d,EAAAtiC,GAAAigD,EAAA,GAAA3d,EAAAhkC,GACA2hD,EAAA,KAAA3hD,GAAA2hD,EAAA,KAAAjgD,IACAgjD,GAAA/C,GACA3hD,EAAA2hD,EAAA,GAAAjgD,EAAAigD,EAAA,IAEAA,EAAAkE,EAAAhwC,UACK,KAAAmuB,EAGL,KAFAqgB,IAAArgB,EAAAif,KAQA,GAFAf,KAEAzjD,EAAA,CACA,GAAAsoB,IAAAtoB,EAAA,MACAuoB,GAAAvoB,EAAA,MACAwoB,GAAAxoB,EAAA,MACAyoB,GAAAzoB,EAAA,KACA+iD,IAAAz6B,EAAAC,EAAAC,EAAAC,GACAi7B,GAAAp7B,EAAAC,EAAAC,EAAAC,GAGAj3B,KAAAswD,SACAtwD,KAAAwwD,SAEA2D,GACAjgB,GACAoc,GACAE,GAAA,KAiIA,QAAAqF,IAAAn3C,EAAApJ,EAAAvB,GACA/T,KAAA0e,SACA1e,KAAAsV,OACAtV,KAAA+T,YAGA,QAAA+hD,IAAAliD,EAAA7D,EAAA0B,GACAzR,KAAA4T,IACA5T,KAAA+P,IACA/P,KAAAyR,IA4CA,QAAAskD,IAAAh9C,GACA,MAAAA,GAAAi9C,QAAAC,GAGA,QAAAC,MACAt2D,EAAAgP,MAAAqP,2BASA,QAAAk4C,MACA,OAAAv2D,EAAAgP,MAAAqQ,OAGA,QAAAm3C,MACA,GAAAtyD,GAAAK,EAAAmhB,EAAAtlB,IASA,OARAslB,aAAA+wC,aACA/wC,IAAAgK,iBAAAhK,EACAxhB,EAAAwhB,EAAAthB,MAAAmhB,QAAAlkB,MACAkD,EAAAmhB,EAAAlhB,OAAA+gB,QAAAlkB,QAEA6C,EAAAwhB,EAAAphB,YACAC,EAAAmhB,EAAAjhB,gBAEA,MAAAP,EAAAK,IAGA,QAAAmyD,MACA,MAAAt2D,MAAAg2D,QAAAC,GAGA,QAAAM,MACA,OAAA32D,EAAAgP,MAAA4nD,QAAA52D,EAAAgP,MAAA6nD,UAAA,WAGA,QAAAC,MACA,sBAAA12D,MAn2fA,GAAA22D,IAAA,SAEA3mD,GAAA,SAAAE,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAqJ,KAGAlP,GAAA,SAAA6pB,GAEA,MADA,KAAAA,EAAAptB,SAAAotB,EAAAtkB,EAAAskB,KAEA3vB,KAAA,SAAA0L,EAAAH,EAAA+5C,EAAA8M,GAGA,IAFA,MAAA9M,MAAA,GACA,MAAA8M,MAAA1mD,EAAAnJ,QACA+iD,EAAA8M,GAAA,CACA,GAAAC,GAAA/M,EAAA8M,IAAA,CACAziC,GAAAjkB,EAAA2mD,GAAA9mD,GAAA,EAAA+5C,EAAA+M,EAAA,EACAD,EAAAC,EAEA,MAAA/M,IAEArlD,MAAA,SAAAyL,EAAAH,EAAA+5C,EAAA8M,GAGA,IAFA,MAAA9M,MAAA,GACA,MAAA8M,MAAA1mD,EAAAnJ,QACA+iD,EAAA8M,GAAA,CACA,GAAAC,GAAA/M,EAAA8M,IAAA,CACAziC,GAAAjkB,EAAA2mD,GAAA9mD,GAAA,EAAA6mD,EAAAC,EACA/M,EAAA+M,EAAA,EAEA,MAAA/M,MAWAgN,GAAAxsD,GAAA0F,IACAiqC,GAAA6c,GAAAryD,MACA4F,GAAAysD,GAAAtyD,KAEAuyD,GAAA,SAAA30B,EAAAtyB,GACA,MAAAA,MAAAG,EAEA,KADA,GAAA0E,GAAA,EAAAC,EAAAwtB,EAAAr7B,OAAA,EAAArG,EAAA0hC,EAAA,GAAA20B,EAAA,GAAA9vD,OAAA2N,EAAA,IAAAA,GACAD,EAAAC,GAAAmiD,EAAApiD,GAAA7E,EAAApP,IAAA0hC,IAAAztB,GACA,OAAAoiD,IAOAC,GAAA,SAAAC,EAAAC,EAAA1mB,GACA,GAGAmG,GACAC,EACAjiC,EACAwW,EANA8G,EAAAglC,EAAAlwD,OACAqrB,EAAA8kC,EAAAnwD,OACAsC,EAAA,GAAApC,OAAAgrB,EAAAG,EAQA,KAFA,MAAAoe,MAAAvgC,GAEA0mC,EAAAhiC,EAAA,EAAkBgiC,EAAA1kB,IAAS0kB,EAC3B,IAAAxrB,EAAA8rC,EAAAtgB,GAAAC,EAAA,EAAsCA,EAAAxkB,IAASwkB,IAAAjiC,EAC/CtL,EAAAsL,GAAA67B,EAAArlB,EAAA+rC,EAAAtgB,GAIA,OAAAvtC,IAGA8tD,GAAA,SAAAjnD,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAsJ,KAGA49C,GAAA,SAAArnD,GACA,cAAAA,EAAAyJ,KAAAzJ,GAGAsnD,GAAA,SAAAhuD,EAAAiuD,GACA,GAIAr2D,GACA08B,EALA/oB,EAAAvL,EAAAtC,OACAvG,EAAA,EACAmU,GAAA,EACA4iD,EAAA,EAGA9oD,EAAA,CAEA,UAAA6oD,EACA,OAAA3iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,GAAA/tD,EAAAsL,OACAgpB,EAAA18B,EAAAs2D,EACAA,GAAA55B,IAAAn9B,EACAiO,GAAAkvB,GAAA18B,EAAAs2D,QAMA,QAAA5iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,GAAAE,EAAAjuD,EAAAsL,KAAAtL,OACAs0B,EAAA18B,EAAAs2D,EACAA,GAAA55B,IAAAn9B,EACAiO,GAAAkvB,GAAA18B,EAAAs2D,GAKA,IAAA/2D,EAAA,QAAAiO,IAAAjO,EAAA,IAGAg3D,GAAA,SAAAp1B,EAAAtyB,GACA,GAAAoK,GAAAm9C,GAAAj1B,EAAAtyB,EACA,OAAAoK,GAAAzJ,KAAAqS,KAAA5I,MAGA1L,GAAA,SAAAnF,EAAAiuD,GACA,GAEAr2D,GACAkgB,EACAzQ,EAJAkE,EAAAvL,EAAAtC,OACA4N,GAAA,CAKA,UAAA2iD,GACA,OAAA3iD,EAAAC,GACA,UAAA3T,EAAAoI,EAAAsL,KAAA1T,KAEA,IADAkgB,EAAAzQ,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAoI,EAAAsL,MACAwM,EAAAlgB,IAAAkgB,EAAAlgB,GACAyP,EAAAzP,IAAAyP,EAAAzP,QAQA,QAAA0T,EAAAC,GACA,UAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,KAEA,IADAkgB,EAAAzQ,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,MACA8X,EAAAlgB,IAAAkgB,EAAAlgB,GACAyP,EAAAzP,IAAAyP,EAAAzP,GAOA,QAAAkgB,EAAAzQ,IAGA0xB,GAAAn7B,MAAA3D,UAEAiR,GAAA6tB,GAAA7tB,MACAnL,GAAAg5B,GAAAh5B,IAEAquD,GAAA,SAAA1nD,GACA,kBACA,MAAAA,KAIA2nD,GAAA,SAAA3nD,GACA,MAAAA,IAGA62B,GAAA,SAAAv2B,EAAAC,EAAAE,GACAH,KAAAC,KAAAE,GAAAoE,EAAA9N,UAAAC,QAAA,GAAAuJ,EAAAD,IAAA,KAAAuE,EAAA,KAAApE,CAMA,KAJA,GAAAmE,IAAA,EACAC,EAAA,EAAAnE,KAAAC,IAAA,EAAAD,KAAAu2B,MAAA12B,EAAAD,GAAAG,IACA9B,EAAA,GAAAzH,OAAA2N,KAEAD,EAAAC,GACAlG,EAAAiG,GAAAtE,EAAAsE,EAAAnE,CAGA,OAAA9B,IAGAsC,GAAAP,KAAAqS,KAAA,IACA7R,GAAAR,KAAAqS,KAAA,IACA5R,GAAAT,KAAAqS,KAAA,GAEAzQ,GAAA,SAAAhC,EAAAC,EAAAC,GACA,GAAA62B,GAEAxyB,EACAvC,EACA7B,EAHAmE,GAAA,CAMA,IADArE,KAAAD,KAAAE,KACAF,IAAAC,GAAAC,EAAA,SAAAF,EAEA,KADA+2B,EAAA92B,EAAAD,KAAAuE,EAAAvE,IAAAC,IAAAsE,GACA,KAAApE,EAAAJ,EAAAC,EAAAC,EAAAC,MAAAuD,SAAAtD,GAAA,QAEA,IAAAA,EAAA,EAIA,IAHAH,EAAAI,KAAAu2B,KAAA32B,EAAAG,GACAF,EAAAG,KAAAG,MAAAN,EAAAE,GACA6B,EAAA,GAAApL,OAAA2N,EAAAnE,KAAAu2B,KAAA12B,EAAAD,EAAA,MACAsE,EAAAC,GAAAvC,EAAAsC,IAAAtE,EAAAsE,GAAAnE,MAKA,KAHAH,EAAAI,KAAAG,MAAAP,EAAAG,GACAF,EAAAG,KAAAu2B,KAAA12B,EAAAE,GACA6B,EAAA,GAAApL,OAAA2N,EAAAnE,KAAAu2B,KAAA32B,EAAAC,EAAA,MACAqE,EAAAC,GAAAvC,EAAAsC,IAAAtE,EAAAsE,GAAAnE,CAKA,OAFA42B,IAAA/0B,EAAA+0B,UAEA/0B,GAsBAslD,GAAA,SAAAtuD,GACA,MAAAoH,MAAAu2B,KAAAv2B,KAAArJ,IAAAiC,EAAAtC,QAAA0J,KAAAmnD,KAAA,GAGAC,GAAA,WAKA,QAAAA,GAAApwD,GACA,GAAAkN,GAEA5E,EADA6E,EAAAnN,EAAAV,OAEAsC,EAAA,GAAApC,OAAA2N,EAEA,KAAAD,EAAA,EAAeA,EAAAC,IAAOD,EACtBtL,EAAAsL,GAAA1T,EAAAwG,EAAAkN,KAAAlN,EAGA,IAAA6vB,GAAA/kB,EAAAlJ,GACAytB,EAAAQ,EAAA,GACAN,EAAAM,EAAA,GACAwgC,EAAAjc,EAAAxyC,EAAAytB,EAAAE,EAGA/vB,OAAAouB,QAAAyiC,KACAA,EAAA3mD,EAAA2lB,EAAAE,EAAA8gC,GACAA,EAAAlxB,GAAAn2B,KAAAu2B,KAAAlQ,EAAAghC,KAAArnD,KAAAG,MAAAomB,EAAA8gC,QAKA,KADA,GAAAt3D,GAAAs3D,EAAA/wD,OACA+wD,EAAA,IAAAhhC,GAAAghC,EAAAriB,UAAAj1C,CACA,MAAAs3D,EAAAt3D,EAAA,GAAAw2B,GAAA8gC,EAAAlyC,QAAAplB,CAEA,IACAu3D,GADAC,EAAA,GAAA/wD,OAAAzG,EAAA,EAIA,KAAAmU,EAAA,EAAeA,GAAAnU,IAAQmU,EACvBojD,EAAAC,EAAArjD,MACAojD,EAAAjhC,GAAAniB,EAAA,EAAAmjD,EAAAnjD,EAAA,GAAAmiB,EACAihC,EAAA/gC,GAAAriB,EAAAnU,EAAAs3D,EAAAnjD,GAAAqiB,CAIA,KAAAriB,EAAA,EAAeA,EAAAC,IAAOD,EACtB5E,EAAA1G,EAAAsL,GACAmiB,GAAA/mB,MAAAinB,GACAghC,EAAA/d,GAAA6d,EAAA/nD,EAAA,EAAAvP,IAAAwI,KAAAvB,EAAAkN,GAIA,OAAAqjD,GAhDA,GAAA/2D,GAAAy2D,GACAnlD,EAAA/D,GACAqtC,EAAA8b,EA6DA,OAZAE,GAAA52D,MAAA,SAAAoT,GACA,MAAAvN,WAAAC,QAAA9F,EAAA,kBAAAoT,KAAAojD,GAAApjD,GAAAwjD,GAAA52D,GAGA42D,EAAAtlD,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAAwL,EAAA,kBAAA8B,KAAAojD,IAAApjD,EAAA,GAAAA,EAAA,KAAAwjD,GAAAtlD,GAGAslD,EAAAjc,WAAA,SAAAvnC,GACA,MAAAvN,WAAAC,QAAA80C,EAAA,kBAAAxnC,KAAAojD,GAAAxwD,MAAAouB,QAAAhhB,GAAAE,GAAAhU,KAAA8T,MAAAwjD,GAAAhc,GAGAgc,GAGAhc,GAAA,SAAAxyC,EAAA3I,EAAA42D,GAEA,GADA,MAAAA,MAAAF,IACAxiD,EAAAvL,EAAAtC,OAAA,CACA,IAAArG,OAAA,GAAAkU,EAAA,SAAA0iD,EAAAjuD,EAAA,KAAAA,EACA,IAAA3I,GAAA,SAAA42D,EAAAjuD,EAAAuL,EAAA,GAAAA,EAAA,EAAAvL,EACA,IAAAuL,GACAD,GAAAC,EAAA,GAAAlU,EACAi2C,EAAAlmC,KAAAG,MAAA+D,GACAwW,GAAAmsC,EAAAjuD,EAAAstC,KAAAttC,GACA2hB,GAAAssC,EAAAjuD,EAAAstC,EAAA,GAAAA,EAAA,EAAAttC,EACA,OAAA8hB,IAAAH,EAAAG,IAAAxW,EAAAgiC,KAGAshB,GAAA,SAAA5uD,EAAA8X,EAAAzQ,GAEA,MADArH,GAAAD,GAAA7I,KAAA8I,EAAA+tD,IAAArb,KAAA/rC,IACAS,KAAAu2B,MAAAt2B,EAAAyQ,IAAA,GAAA06B,GAAAxyC,EAAA,KAAAwyC,GAAAxyC,EAAA,MAAAoH,KAAAM,IAAA1H,EAAAtC,QAAA,QAGAmxD,GAAA,SAAA7uD,EAAA8X,EAAAzQ,GACA,MAAAD,MAAAu2B,MAAAt2B,EAAAyQ,IAAA,IAAAq2C,GAAAnuD,GAAAoH,KAAAM,IAAA1H,EAAAtC,QAAA,QAGA2J,GAAA,SAAArH,EAAAiuD,GACA,GAEAr2D,GACAyP,EAHAkE,EAAAvL,EAAAtC,OACA4N,GAAA,CAIA,UAAA2iD,GACA,OAAA3iD,EAAAC,GACA,UAAA3T,EAAAoI,EAAAsL,KAAA1T,KAEA,IADAyP,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAoI,EAAAsL,KAAA1T,EAAAyP,IACAA,EAAAzP,OAQA,QAAA0T,EAAAC,GACA,UAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,KAEA,IADAyP,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,EAAAyP,IACAA,EAAAzP,EAOA,OAAAyP,IAGA6mD,GAAA,SAAAluD,EAAAiuD,GACA,GAGAr2D,GAHA2T,EAAAvL,EAAAtC,OACAvG,EAAAoU,EACAD,GAAA,EAEAlG,EAAA,CAEA,UAAA6oD,EACA,OAAA3iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,GAAA/tD,EAAAsL,OACAnU,EADAiO,GAAAxN,MAMA,QAAA0T,EAAAC,GACAuP,MAAAljB,EAAAm2D,GAAAE,EAAAjuD,EAAAsL,KAAAtL,OACA7I,EADAiO,GAAAxN;AAKA,GAAAT,EAAA,MAAAiO,GAAAjO,GAGA23D,GAAA,SAAA9uD,EAAAiuD,GACA,GAEAr2D,GAFA2T,EAAAvL,EAAAtC,OACA4N,GAAA,EAEAyjD,IAEA,UAAAd,EACA,OAAA3iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,GAAA/tD,EAAAsL,MACAyjD,EAAApvD,KAAA/H,OAMA,QAAA0T,EAAAC,GACAuP,MAAAljB,EAAAm2D,GAAAE,EAAAjuD,EAAAsL,KAAAtL,MACA+uD,EAAApvD,KAAA/H,EAKA,OAAA46C,IAAAuc,EAAArc,KAAA/rC,IAAA,KAGArB,GAAA,SAAA0pD,GAQA,IAPA,GACA73D,GAGA83D,EACAl2B,EALAxtB,EAAAyjD,EAAAtxD,OAEA4N,GAAA,EACAgD,EAAA,IAIAhD,EAAAC,GAAA+C,GAAA0gD,EAAA1jD,GAAA5N,MAGA,KAFAuxD,EAAA,GAAArxD,OAAA0Q,KAEA/C,GAAA,GAGA,IAFAwtB,EAAAi2B,EAAAzjD,GACApU,EAAA4hC,EAAAr7B,SACAvG,GAAA,GACA83D,IAAA3gD,GAAAyqB,EAAA5hC,EAIA,OAAA83D,IAGAn3C,GAAA,SAAA9X,EAAAiuD,GACA,GAEAr2D,GACAkgB,EAHAvM,EAAAvL,EAAAtC,OACA4N,GAAA,CAIA,UAAA2iD,GACA,OAAA3iD,EAAAC,GACA,UAAA3T,EAAAoI,EAAAsL,KAAA1T,KAEA,IADAkgB,EAAAlgB,IACA0T,EAAAC,GACA,OAAA3T,EAAAoI,EAAAsL,KAAAwM,EAAAlgB,IACAkgB,EAAAlgB,OAQA,QAAA0T,EAAAC,GACA,UAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,KAEA,IADAkgB,EAAAlgB,IACA0T,EAAAC,GACA,OAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAA8X,EAAAlgB,IACAkgB,EAAAlgB,EAOA,OAAAkgB,IAGAo3C,GAAA,SAAAn2B,EAAA8U,GAEA,IADA,GAAAviC,GAAAuiC,EAAAnwC,OAAAyxD,EAAA,GAAAvxD,OAAA0N,GACAA,KAAA6jD,EAAA7jD,GAAAytB,EAAA8U,EAAAviC,GACA,OAAA6jD,IAGAC,GAAA,SAAApvD,EAAA8qB,GACA,GAAAvf,EAAAvL,EAAAtC,OAAA,CACA,GAAA6N,GAGA8jD,EAFA/jD,EAAA,EACAgD,EAAA,EAEAghD,EAAAtvD,EAAAsO,EAIA,KAFA,MAAAwc,MAAAnkB,MAEA2E,EAAAC,IACAuf,EAAAukC,EAAArvD,EAAAsL,GAAAgkD,GAAA,OAAAxkC,EAAAwkC,QACAA,EAAAD,EAAA/gD,EAAAhD,EAIA,YAAAwf,EAAAwkC,KAAAhhD,EAAA,SAGAihD,GAAA,SAAAx2B,EAAAuU,EAAAC,GAKA,IAJA,GACAliC,GACAC,EAFAnU,GAAA,MAAAo2C,EAAAxU,EAAAr7B,OAAA6vC,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIAn2C,GACAmU,EAAAlE,KAAAohC,SAAArxC,IAAA,EACAkU,EAAA0tB,EAAA5hC,EAAAm2C,GACAvU,EAAA5hC,EAAAm2C,GAAAvU,EAAAztB,EAAAgiC,GACAvU,EAAAztB,EAAAgiC,GAAAjiC,CAGA,OAAA0tB,IAGA3zB,GAAA,SAAApF,EAAAiuD,GACA,GAEAr2D,GAFA2T,EAAAvL,EAAAtC,OACA4N,GAAA,EAEAlG,EAAA,CAEA,UAAA6oD,EACA,OAAA3iD,EAAAC,IACA3T,GAAAoI,EAAAsL,MAAAlG,GAAAxN,OAKA,QAAA0T,EAAAC,IACA3T,GAAAq2D,EAAAjuD,EAAAsL,KAAAtL,MAAAoF,GAAAxN,EAIA,OAAAwN,IAGAoqD,GAAA,SAAAxzC,GACA,KAAAzQ,EAAAyQ,EAAAte,QAAA,QACA,QAAA4N,IAAA,EAAAnU,EAAA2gB,GAAAkE,EAAAte,GAAA8xD,EAAA,GAAA5xD,OAAAzG,KAAqEmU,EAAAnU,GACrE,OAAAoU,GAAA+C,GAAA,EAAAue,EAAA2iC,EAAAlkD,GAAA,GAAA1N,OAAA2N,KAA0D+C,EAAA/C,GAC1DshB,EAAAve,GAAA0N,EAAA1N,GAAAhD,EAGA,OAAAkkD,IAOAC,GAAA,WACA,MAAAD,IAAA/xD,YAGAwN,GAAArN,MAAA3D,UAAAiR,MAEA9B,GAAA,SAAA1C,GACA,MAAAA,IAGApL,GAAA,EACAF,GAAA,EACAG,GAAA,EACAJ,GAAA,EACAqP,GAAA,KAwKA4B,IAAYxU,MAAA,aAuBZ6T,GAAAxR,UAAAoK,EAAApK,WACAy1D,YAAAjkD,EACAnO,GAAA,SAAA6Q,EAAAhC,GACA,GAEAd,GAFAL,EAAArU,KAAAqU,EACA2kD,EAAAjkD,EAAAyC,EAAA,GAAAnD,GAEAM,GAAA,EACAC,EAAAokD,EAAAjyD,MAGA,OAAAD,UAAAC,OAAA,IAOA,SAAAyO,GAAA,kBAAAA,GAAA,SAAAX,OAAA,qBAAAW,EACA,QAAAb,EAAAC,GACA,GAAAF,GAAA8C,EAAAwhD,EAAArkD,IAAAW,KAAAjB,EAAAK,GAAAa,EAAAlB,EAAAK,GAAA8C,EAAApC,KAAAI,OACA,UAAAA,EAAA,IAAAd,IAAAL,KAAAK,GAAAa,EAAAlB,EAAAK,GAAA8C,EAAApC,KAAA,KAGA,OAAApV,MAZA,OAAA2U,EAAAC,GAAA,IAAAF,GAAA8C,EAAAwhD,EAAArkD,IAAAW,QAAAZ,EAAAxG,EAAAmG,EAAAK,GAAA8C,EAAApC,OAAA,MAAAV,KAcA3B,KAAA,WACA,GAAAA,MAAiBsB,EAAArU,KAAAqU,CACjB,QAAAK,KAAAL,GAAAtB,EAAA2B,GAAAL,EAAAK,GAAAH,OACA,WAAAO,GAAA/B,IAEAxS,KAAA,SAAA+U,EAAA6C,GACA,IAAAvD,EAAA9N,UAAAC,OAAA,YAAA6N,GAAAF,EAAA0D,EAAA,GAAAnR,OAAA2N,GAAAD,EAAA,EAAkFA,EAAAC,IAAOD,EAAAyD,EAAAzD,GAAA7N,UAAA6N,EAAA,EACzF,KAAA3U,KAAAqU,EAAA9Q,eAAA+R,GAAA,SAAAT,OAAA,iBAAAS,EACA,KAAAZ,EAAA1U,KAAAqU,EAAAiB,GAAAX,EAAA,EAAAC,EAAAF,EAAA3N,OAA+C4N,EAAAC,IAAOD,EAAAD,EAAAC,GAAA1T,MAAAoG,MAAA8Q,EAAAC,IAEtD/Q,MAAA,SAAAiO,EAAA6C,EAAAC,GACA,IAAApY,KAAAqU,EAAA9Q,eAAA+R,GAAA,SAAAT,OAAA,iBAAAS,EACA,QAAAZ,GAAA1U,KAAAqU,EAAAiB,GAAAX,EAAA,EAAAC,EAAAF,EAAA3N,OAAmD4N,EAAAC,IAAOD,EAAAD,EAAAC,GAAA1T,MAAAoG,MAAA8Q,EAAAC,IAuB1D,IAAArC,IAAA,+BAEAkjD,IACAp0D,IAAA,6BACAkR,SACAmjD,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCAGAC,GAAA,SAAAjkD,GACA,GAAAkkD,GAAAlkD,GAAA,GAAAT,EAAA2kD,EAAAjkD,QAAA,IAEA,OADAV,IAAA,cAAA2kD,EAAAlkD,EAAAb,MAAA,EAAAI,MAAAS,IAAAb,MAAAI,EAAA,IACAskD,GAAA11D,eAAA+1D,IAA8CjjD,MAAA4iD,GAAAK,GAAAhjD,MAAAlB,GAAuCA,GAmBrFmkD,GAAA,SAAAnkD,GACA,GAAAgB,GAAAijD,GAAAjkD,EACA,QAAAgB,EAAAE,MACAH,EACAT,GAAAU,IAGAK,GAAA,CAUAD,GAAAlT,UAAAiT,EAAAjT,WACAy1D,YAAAviD,EACAtI,IAAA,SAAA6K,GAEA,IADA,GAAA1Y,GAAAL,KAAAqU,IACAhU,IAAA0Y,KAAA,KAAAA,IAAA9E,YAAA,MACA,OAAA8E,GAAA1Y,IAEAkV,IAAA,SAAAwD,EAAA9X,GACA,MAAA8X,GAAA/Y,KAAAqU,GAAApT,GAEA8I,OAAA,SAAAgP,GACA,MAAA/Y,MAAAqU,IAAA0E,aAAA/Y,KAAAqU,IAEAqC,SAAA,WACA,MAAA1W,MAAAqU,GAIA,IAAAmlD,IAAA,SAAAC,GACA,kBACA,MAAAz5D,MAAA05D,QAAAD,IAIA,uBAAA9jD,UAAA,CACA,GAAAgkD,IAAAhkD,SAAAK,eACA,KAAA2jD,GAAAD,QAAA,CACA,GAAAE,IAAAD,GAAAE,uBACAF,GAAAG,mBACAH,GAAAI,oBACAJ,GAAAK,gBACAR,IAAA,SAAAC,GACA,kBACA,MAAAG,IAAAr5D,KAAAP,KAAAy5D,MAMA,GAAAQ,IAAAT,GAEAxhD,KAIA,IAFApY,EAAAgP,MAAA,KAEA,mBAAA+G,UAAA,CACA,GAAAukD,IAAAvkD,SAAAK,eACA,iBAAAkkD,MACAliD,IAAoBmiD,WAAA,YAAAC,WAAA,aAqEpB,GAAAC,IAAA,SAAA7iD,EAAAvW,EAAA4W,GACA,GAAAlD,GAAAD,EAAAM,EAAAsC,EAAAE,EAAA,IAAA5C,EAAAI,EAAAjO,MAEA,OAAAD,UAAAC,OAAA,IAcA,IAFAJ,EAAA1F,EAAA6W,EAAAP,EACA,MAAAM,OAAA,GACAlD,EAAA,EAAaA,EAAAC,IAAOD,EAAA3U,KAAAoU,KAAAzN,EAAAqO,EAAAL,GAAA1T,EAAA4W,GACpB,OAAA7X,MAdA,GAAA2G,GAAA3G,KAAA+Y,OAAAtB,IACA,IAAA9Q,EAAA,OAAA+Q,GAAAC,EAAA,EAAAnX,EAAAmG,EAAAI,OAA6C4Q,EAAAnX,IAAOmX,EACpD,IAAAhD,EAAA,EAAA+C,EAAA/Q,EAAAgR,GAA4BhD,EAAAC,IAAOD,EACnC,IAAAD,EAAAM,EAAAL,IAAAW,OAAAoC,EAAApC,MAAAZ,EAAAU,OAAAsC,EAAAtC,KACA,MAAAsC,GAAAzW,QAwBAoX,GAAA,WAEA,IADA,GAAA+b,GAAAkmC,EAAA16D,EAAAgP,MACAwlB,EAAAkmC,EAAAjiD,aAAAiiD,EAAAlmC,CACA,OAAAkmC,IAGArpC,GAAA,SAAAlY,EAAAnK,GACA,GAAA/J,GAAAkU,EAAAuW,iBAAAvW,CAEA,IAAAlU,EAAA01D,eAAA,CACA,GAAAtpC,GAAApsB,EAAA01D,gBAGA,OAFAtpC,GAAAlhB,EAAAnB,EAAA4rD,QAAAvpC,EAAAxf,EAAA7C,EAAA6rD,QACAxpC,IAAAypC,gBAAA3hD,EAAA4hD,eAAAC,YACA3pC,EAAAlhB,EAAAkhB,EAAAxf,GAGA,GAAAopD,GAAA9hD,EAAA+hD,uBACA,QAAAlsD,EAAA4rD,QAAAK,EAAAr2D,KAAAuU,EAAAgiD,WAAAnsD,EAAA6rD,QAAAI,EAAAl2D,IAAAoU,EAAAiiD,YAGAnwD,GAAA,SAAAkO,GACA,GAAAnK,GAAAyJ,IAEA,OADAzJ,GAAAskB,iBAAAtkB,IAAAskB,eAAA,IACAjC,GAAAlY,EAAAnK,IAKA6qD,GAAA,SAAAA,GACA,aAAAA,EAAAnhD,EAAA,WACA,MAAAtY,MAAAi7D,cAAAxB,KAIAyB,GAAA,SAAAj2D,GACA,kBAAAA,OAAAw0D,GAAAx0D,GAEA,QAAA2Y,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAAo0D,EAAA,GAAAl0D,OAAAzG,GAAAmX,EAAA,EAAqFA,EAAAnX,IAAOmX,EAC5F,OAAAoB,GAAAqiD,EAAAtkD,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAAs0D,EAAAF,EAAAxjD,GAAA,GAAA1Q,OAAA2N,GAAAD,EAAA,EAA+GA,EAAAC,IAAOD,GACtHoE,EAAAjC,EAAAnC,MAAAymD,EAAAn2D,EAAA1E,KAAAwY,IAAA1B,SAAA1C,EAAAmC,MACA,YAAAiC,KAAAqiD,EAAA/jD,SAAA0B,EAAA1B,UACAgkD,EAAA1mD,GAAAymD,EAKA,WAAAz9C,IAAAw9C,EAAAn7D,KAAA+d,WAOAu9C,GAAA,SAAA7B,GACA,aAAAA,EAAAlhD,EAAA,WACA,MAAAvY,MAAAu7D,iBAAA9B,KAIA+B,GAAA,SAAAv2D,GACA,kBAAAA,OAAAq2D,GAAAr2D,GAEA,QAAA2Y,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAAo0D,KAAAt9C,KAAAlG,EAAA,EAAyFA,EAAAnX,IAAOmX,EAChG,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAA4N,EAAA,EAA8DA,EAAAC,IAAOD,GACrEoE,EAAAjC,EAAAnC,MACAwmD,EAAAnyD,KAAA/D,EAAA1E,KAAAwY,IAAA1B,SAAA1C,EAAAmC,IACA+G,EAAA7U,KAAA+P,GAKA,WAAA4E,IAAAw9C,EAAAt9C,IAGA49C,GAAA,SAAA/iC,GACA,kBAAAA,OAAAuhC,GAAAvhC,GAEA,QAAA9a,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAAo0D,EAAA,GAAAl0D,OAAAzG,GAAAmX,EAAA,EAAqFA,EAAAnX,IAAOmX,EAC5F,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAAs0D,EAAAF,EAAAxjD,MAAAhD,EAAA,EAA4FA,EAAAC,IAAOD,GACnGoE,EAAAjC,EAAAnC,KAAA+jB,EAAAn4B,KAAAwY,IAAA1B,SAAA1C,EAAAmC,IACAukD,EAAAryD,KAAA+P,EAKA,WAAA4E,IAAAw9C,EAAAn7D,KAAA+d,WAGA29C,GAAA,SAAA5iD,GACA,UAAA7R,OAAA6R,EAAA/R,SAGA40D,GAAA,WACA,UAAAh+C,IAAA3d,KAAA47D,QAAA57D,KAAA8d,QAAA1U,IAAAsyD,IAAA17D,KAAA+d,UAWAvF,GAAAlV,WACAy1D,YAAAvgD,EACAiE,YAAA,SAAA00B,GAAgC,MAAAnxC,MAAA4Y,QAAAgE,aAAAu0B,EAAAnxC,KAAA2Y,QAChCiE,aAAA,SAAAu0B,EAAA/Z,GAAuC,MAAAp3B,MAAA4Y,QAAAgE,aAAAu0B,EAAA/Z,IACvC6jC,cAAA,SAAAxB,GAAqC,MAAAz5D,MAAA4Y,QAAAqiD,cAAAxB,IACrC8B,iBAAA,SAAA9B,GAAwC,MAAAz5D,MAAA4Y,QAAA2iD,iBAAA9B,IAGxC,IAAAoC,IAAA,SAAA9rD,GACA,kBACA,MAAAA,KAIAuJ,GAAA,IAwEAwiD,GAAA,SAAA76D,EAAAoC,GACA,IAAApC,EAGA,MAFAwG,GAAA,GAAAR,OAAAjH,KAAAqrC,QAAA1zB,GAAA,EACA3X,KAAAoU,KAAA,SAAA7L,GAA2Bd,IAAAkQ,GAAApP,IAC3Bd,CAGA,IAAAs0D,GAAA14D,EAAA6V,EAAAL,EACAgF,EAAA7d,KAAA+d,SACAH,EAAA5d,KAAA8d,OAEA,mBAAA7c,OAAA46D,GAAA56D,GAEA,QAAAT,GAAAod,EAAA7W,OAAA+R,EAAA,GAAA7R,OAAAzG,GAAAgT,EAAA,GAAAvM,OAAAzG,GAAA8S,EAAA,GAAArM,OAAAzG,GAAAmX,EAAA,EAAsGA,EAAAnX,IAAOmX,EAAA,CAC7G,GAAAc,GAAAoF,EAAAlG,GACAb,EAAA8G,EAAAjG,GACAqB,EAAAlC,EAAA/P,OACAU,EAAAxG,EAAAV,KAAAkY,OAAApB,SAAAM,EAAAkG,GACA5E,EAAAxR,EAAAV,OACAi1D,EAAAxoD,EAAAmE,GAAA,GAAA1Q,OAAAgS,GACAgjD,EAAAnjD,EAAAnB,GAAA,GAAA1Q,OAAAgS,GACAijD,EAAA5oD,EAAAqE,GAAA,GAAA1Q,OAAA+R,EAEA+iD,GAAAtjD,EAAA3B,EAAAklD,EAAAC,EAAAC,EAAAz0D,EAAApE,EAKA,QAAA2wC,GAAA5c,EAAAuf,EAAA,EAAAC,EAAA,EAA4CD,EAAA19B,IAAiB09B,EAC7D,GAAA3C,EAAAgoB,EAAArlB,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACAvf,EAAA6kC,EAAArlB,SAAA39B,IACA+6B,EAAAr7B,MAAAye,GAAA,MAQA,MAHAte,GAAA,GAAA6E,IAAA7E,EAAA+E,GACA/E,EAAA8iD,OAAApoD,EACAsF,EAAAqjD,MAAA7oD,EACAwF,GAGAsjD,GAAA,WACA,UAAAz+C,IAAA3d,KAAAm8D,OAAAn8D,KAAA8d,QAAA1U,IAAAsyD,IAAA17D,KAAA+d,WAGAs+C,GAAA,SAAAC,GAEA,OAAAC,GAAAv8D,KAAA8d,QAAA0+C,EAAAF,EAAAx+C,QAAA2+C,EAAAF,EAAAx1D,OAAAua,EAAAk7C,EAAAz1D,OAAAvG,EAAAiQ,KAAA0Q,IAAAs7C,EAAAn7C,GAAAo7C,EAAA,GAAAz1D,OAAAw1D,GAAA9kD,EAAA,EAAiKA,EAAAnX,IAAOmX,EACxK,OAAAoB,GAAA4jD,EAAAJ,EAAA5kD,GAAAilD,EAAAJ,EAAA7kD,GAAA/C,EAAA+nD,EAAA51D,OAAA4H,EAAA+tD,EAAA/kD,GAAA,GAAA1Q,OAAA2N,GAAAD,EAAA,EAAwHA,EAAAC,IAAOD,GAC/HoE,EAAA4jD,EAAAhoD,IAAAioD,EAAAjoD,MACAhG,EAAAgG,GAAAoE,EAKA,MAAQpB,EAAA8kD,IAAQ9kD,EAChB+kD,EAAA/kD,GAAA4kD,EAAA5kD,EAGA,WAAAgG,IAAA++C,EAAA18D,KAAA+d,WAGA8+C,GAAA,WAEA,OAAAj/C,GAAA5d,KAAA8d,QAAAnG,GAAA,EAAAnX,EAAAod,EAAA7W,SAA4D4Q,EAAAnX,GAC5D,OAAAuY,GAAAjC,EAAA8G,EAAAjG,GAAAhD,EAAAmC,EAAA/P,OAAA,EAAAqwB,EAAAtgB,EAAAnC,KAA4EA,GAAA,IAC5EoE,EAAAjC,EAAAnC,MACAyiB,OAAAre,EAAAyD,aAAA4a,EAAAnjB,WAAA2I,aAAA7D,EAAAqe,GACAA,EAAAre,EAKA,OAAA/Y,OAGA88D,GAAA,SAAA3oC,GAGA,QAAA4oC,GAAA7sD,EAAAC,GACA,MAAAD,IAAAC,EAAAgkB,EAAAjkB,EAAAmH,SAAAlH,EAAAkH,WAAAnH,GAAAC,EAHAgkB,MAAA5a,EAMA,QAAAqE,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAAi2D,EAAA,GAAA/1D,OAAAzG,GAAAmX,EAAA,EAAsFA,EAAAnX,IAAOmX,EAAA,CAC7F,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAAk2D,EAAAD,EAAArlD,GAAA,GAAA1Q,OAAA2N,GAAAD,EAAA,EAAwGA,EAAAC,IAAOD,GAC/GoE,EAAAjC,EAAAnC,MACAsoD,EAAAtoD,GAAAoE,EAGAkkD,GAAAlhB,KAAAghB,GAGA,UAAAp/C,IAAAq/C,EAAAh9D,KAAA+d,UAAA3K,SAOA8pD,GAAA,WACA,GAAA1nD,GAAA1O,UAAA,EAGA,OAFAA,WAAA,GAAA9G,KACAwV,EAAAnO,MAAA,KAAAP,WACA9G,MAGAm9D,GAAA,WACA,GAAAtlC,GAAA,GAAA5wB,OAAAjH,KAAAqrC,QAAA12B,GAAA,CAEA,OADA3U,MAAAoU,KAAA,WAAwByjB,IAAAljB,GAAA3U,OACxB63B,GAGAulC,GAAA,WAEA,OAAAx/C,GAAA5d,KAAA8d,QAAAnG,EAAA,EAAAnX,EAAAod,EAAA7W,OAA2D4Q,EAAAnX,IAAOmX,EAClE,OAAAb,GAAA8G,EAAAjG,GAAAhD,EAAA,EAAAC,EAAAkC,EAAA/P,OAAwD4N,EAAAC,IAAOD,EAAA,CAC/D,GAAAoE,GAAAjC,EAAAnC,EACA,IAAAoE,EAAA,MAAAA,GAIA,aAGAskD,GAAA,WACA,GAAAhyB,GAAA,CAEA,OADArrC,MAAAoU,KAAA,aAAwBi3B,IACxBA,GAGAiyB,GAAA,WACA,OAAAt9D,KAAA+Y,QAGAwkD,GAAA,SAAA/nD,GAEA,OAAAoI,GAAA5d,KAAA8d,QAAAnG,EAAA,EAAAnX,EAAAod,EAAA7W,OAA2D4Q,EAAAnX,IAAOmX,EAClE,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAAhD,EAAA,EAAAC,EAAAkC,EAAA/P,OAA8D4N,EAAAC,IAAOD,GACrEoE,EAAAjC,EAAAnC,KAAAa,EAAAjV,KAAAwY,IAAA1B,SAAA1C,EAAAmC,EAIA,OAAA9W,OA2CAw9D,GAAA,SAAApoD,EAAAnU,GACA,GAAAmV,GAAAijD,GAAAjkD,EAEA,IAAAtO,UAAAC,OAAA,GACA,GAAAgS,GAAA/Y,KAAA+Y,MACA,OAAA3C,GAAAE,MACAyC,EAAAsS,eAAAjV,EAAAC,MAAAD,EAAAE,OACAyC,EAAA/E,aAAAoC,GAGA,MAAApW,MAAAoU,MAAA,MAAAnT,EACAmV,EAAAE,MAAAqD,EAAAF,EAAA,kBAAAxY,GACAmV,EAAAE,MAAA6D,EAAAF,EACA7D,EAAAE,MAAAyD,EAAAF,GAAAzD,EAAAnV,KAGA2Z,GAAA,SAAA7B,GACA,MAAAA,GAAAnD,eAAAmD,EAAAnD,cAAAgF,aACA7B,EAAApD,UAAAoD,GACAA,EAAA6B,aAuBA6iD,GAAA,SAAAroD,EAAAnU,EAAAsZ,GACA,MAAAzT,WAAAC,OAAA,EACA/G,KAAAoU,MAAA,MAAAnT,EACAmZ,EAAA,kBAAAnZ,GACAwZ,EACAH,GAAAlF,EAAAnU,EAAA,MAAAsZ,EAAA,GAAAA,IACAG,EAAA1a,KAAA+Y,OAAA3D,IA4BAsoD,GAAA,SAAAtoD,EAAAnU,GACA,MAAA6F,WAAAC,OAAA,EACA/G,KAAAoU,MAAA,MAAAnT,EACA6Z,EAAA,kBAAA7Z,GACA+Z,EACAD,GAAA3F,EAAAnU,IACAjB,KAAA+Y,OAAA3D,GAgBAgG,GAAA9X,WACAoY,IAAA,SAAAtG,GACA,GAAAT,GAAA3U,KAAAsb,OAAAjG,QAAAD,EACAT,GAAA,IACA3U,KAAAsb,OAAAtS,KAAAoM,GACApV,KAAAqb,MAAAvB,aAAA,QAAA9Z,KAAAsb,OAAAkL,KAAA,QAGAzc,OAAA,SAAAqL,GACA,GAAAT,GAAA3U,KAAAsb,OAAAjG,QAAAD,EACAT,IAAA,IACA3U,KAAAsb,OAAAkP,OAAA7V,EAAA,GACA3U,KAAAqb,MAAAvB,aAAA,QAAA9Z,KAAAsb,OAAAkL,KAAA,QAGAm3C,SAAA,SAAAvoD,GACA,MAAApV,MAAAsb,OAAAjG,QAAAD,IAAA,GAgCA,IAAAwoD,IAAA,SAAAxoD,EAAAnU,GACA,GAAAua,GAAAP,EAAA7F,EAAA,GAEA,IAAAtO,UAAAC,OAAA,GAEA,IADA,GAAA0U,GAAAN,EAAAnb,KAAA+Y,QAAApE,GAAA,EAAAC,EAAA4G,EAAAzU,SACA4N,EAAAC,GAAA,IAAA6G,EAAAkiD,SAAAniD,EAAA7G,IAAA,QACA,UAGA,MAAA3U,MAAAoU,MAAA,kBAAAnT,GACA6a,GAAA7a,EACA2a,GACAC,IAAAL,EAAAva,KAoBA48D,GAAA,SAAA58D,GACA,MAAA6F,WAAAC,OACA/G,KAAAoU,KAAA,MAAAnT,EACA8a,IAAA,kBAAA9a,GACAib,GACAD,IAAAhb,IACAjB,KAAA+Y,OAAAiD,aAoBA8hD,GAAA,SAAA78D,GACA,MAAA6F,WAAAC,OACA/G,KAAAoU,KAAA,MAAAnT,EACAkb,IAAA,kBAAAlb,GACAqb,GACAD,IAAApb,IACAjB,KAAA+Y,OAAAqD,WAOA2hD,GAAA,WACA,MAAA/9D,MAAAoU,KAAAmI,KAOAyhD,GAAA,WACA,MAAAh+D,MAAAoU,KAAAsI,KAGAuhD,GAAA,SAAA7oD,GACA,GAAAmK,GAAA,kBAAAnK,KAAAmkD,GAAAnkD,EACA,OAAApV,MAAAiF,OAAA,WACA,MAAAjF,MAAAyc,YAAA8C,EAAAlY,MAAArH,KAAA8G,eAQAo3D,GAAA,SAAA9oD,EAAAu+C,GACA,GAAAp0C,GAAA,kBAAAnK,KAAAmkD,GAAAnkD,GACAnQ,EAAA,MAAA0uD,EAAA72C,GAAA,kBAAA62C,KAAA8F,GAAA9F,EACA,OAAA3zD,MAAAiF,OAAA,WACA,MAAAjF,MAAA4c,aAAA2C,EAAAlY,MAAArH,KAAA8G,WAAA7B,EAAAoC,MAAArH,KAAA8G,YAAA,SASAq3D,GAAA,WACA,MAAAn+D,MAAAoU,KAAArK,KAGAq0D,GAAA,SAAAn9D,GACA,MAAA6F,WAAAC,OACA/G,KAAAkwB,SAAA,WAAAjvB,GACAjB,KAAA+Y,OAAA1B,UA8BAgnD,GAAA,SAAA/oD,EAAA2H,GACA,MAAAjd,MAAAoU,MAAA,kBAAA6I,GACAS,GACAD,IAAAnI,EAAA2H,KAGAvd,IAAA,KAWAie,IAAAra,UAAA0P,GAAA1P,WACAy1D,YAAAp7C,GACA1Y,OAAAi2D,GACAhoD,UAAAsoD,GACArnD,OAAAsnD,GACAh0D,KAAAq0D,GACAtoD,MAAAmoD,GACAroD,KAAA8oD,GACAztD,MAAA0tD,GACAjpD,MAAAypD,GACA9gB,KAAA+gB,GACAv8D,KAAA28D,GACArlC,MAAAslC,GACApkD,KAAAqkD,GACA/xB,KAAAgyB,GACA7tC,MAAA8tC,GACAlpD,KAAAmpD,GACAl4D,KAAAm4D,GACAr4D,MAAAs4D,GACAvtC,SAAAwtC,GACAY,QAAAV,GACAlqD,KAAAmqD,GACA34D,KAAA44D,GACAvhD,MAAAwhD,GACArhD,MAAAshD,GACAvqD,OAAAwqD,GACAtqD,OAAAuqD,GACAn0D,OAAAo0D,GACAzlD,MAAA0lD,GACAz3D,GAAA0zD,GACA3sD,SAAA2wD,GAGA,IAAAp5D,IAAA,SAAAw0D,GACA,sBAAAA,GACA,GAAA97C,MAAAhI,SAAAslD,cAAAxB,MAAA9jD,SAAAK,kBACA,GAAA2H,MAAA87C,IAAA/5D,KAGAwT,GAAA,SAAAumD,GACA,sBAAAA,GACA,GAAA97C,KAAAhI,SAAA4lD,iBAAA9B,KAAA9jD,SAAAK,kBACA,GAAA2H,KAAA,MAAA87C,QAAA/5D,KAGA6+D,GAAA,SAAAxlD,EAAA6Z,EAAA7T,GACAjY,UAAAC,OAAA,IAAAgY,EAAA6T,IAAAva,KAAA6a,eAEA,QAAAqrC,GAAA5pD,EAAA,EAAAC,EAAAge,IAAA7rB,OAAA,EAA0D4N,EAAAC,IAAOD,EACjE,IAAA4pD,EAAA3rC,EAAAje,IAAAoK,eACA,MAAAkS,IAAAlY,EAAAwlD,EAIA,cAGA3rC,GAAA,SAAA7Z,EAAA6Z,GACA,MAAAA,MAAAva,KAAAua,QAEA,QAAAje,GAAA,EAAAC,EAAAge,IAAA7rB,OAAA,EAAAi7B,EAAA,GAAA/6B,OAAA2N,GAA0ED,EAAAC,IAAOD,EACjFqtB,EAAArtB,GAAAsc,GAAAlY,EAAA6Z,EAAAje,GAGA,OAAAqtB,IAOA3jB,GAAA,WACAze,EAAAgP,MAAA4vD,iBACA5+D,EAAAgP,MAAAqP,4BAGAuV,GAAA,SAAArV,GACA,GAAAze,GAAAye,EAAAxI,SAAAK,gBACAhD,EAAA/N,GAAAkZ,GAAAxX,GAAA,iBAAA0X,IAAA,EACA,kBAAA3e,GACAsT,EAAArM,GAAA,mBAAA0X,IAAA,IAEA3e,EAAA8e,WAAA9e,EAAAyF,MAAAoZ,cACA7e,EAAAyF,MAAAoZ,cAAA,SAmBAkgD,GAAA,SAAA1uD,GACA,kBACA,MAAAA,IAiBA0O,IAAAnb,UAAAqD,GAAA,WACA,GAAA1F,GAAAjB,KAAAqU,EAAA1N,GAAAU,MAAArH,KAAAqU,EAAAvN,UACA,OAAA7F,KAAAjB,KAAAqU,EAAArU,KAAAiB,EAoBA,IAAAy9D,IAAA,WAcA,QAAAA,GAAA1rD,GACAA,EACArM,GAAA,iBAAAg4D,GACAxqD,OAAAyqD,GACAj4D,GAAA,kBAAAk4D,GACAl4D,GAAA,iBAAAm4D,GACAn4D,GAAA,iCAAAo4D,GACA55D,MAAA,uBACAA,MAAA,+CAGA,QAAAw5D,KACA,IAAA9rC,GAAA1e,EAAA9M,MAAArH,KAAA8G,WAAA,CACA,GAAAk4D,GAAAzrC,EAAA,QAAAtvB,EAAAoD,MAAArH,KAAA8G,WAAA+D,GAAA7K,KAAA8G,UACAk4D,KACA/5D,GAAArF,EAAAgP,MAAAuP,MAAAxX,GAAA,iBAAAs4D,GAAA,GAAAt4D,GAAA,eAAAu4D,GAAA,GACA1rC,GAAA5zB,EAAAgP,MAAAuP,MACAH,KACAmhD,GAAA,EACAC,EAAAx/D,EAAAgP,MAAA4rD,QACA6E,EAAAz/D,EAAAgP,MAAA6rD,QACAuE,EAAA,WAGA,QAAAC,KAEA,GADA5gD,MACA8gD,EAAA,CACA,GAAAtgD,GAAAjf,EAAAgP,MAAA4rD,QAAA4E,EAAAtgD,EAAAlf,EAAAgP,MAAA6rD,QAAA4E,CACAF,GAAAtgD,IAAAC,IAAAwgD,EAEAC,EAAA10D,MAAA,QAGA,QAAAq0D,KACAj6D,GAAArF,EAAAgP,MAAAuP,MAAAxX,GAAA,oCACAuX,GAAAte,EAAAgP,MAAAuP,KAAAghD,GACA9gD,KACAkhD,EAAA10D,MAAA,OAGA,QAAAg0D,KACA,GAAA1qD,EAAA9M,MAAArH,KAAA8G,WAAA,CACA,GAEA6N,GAAAqqD,EAFApsC,EAAAhzB,EAAAgP,MAAAskB,eACAzyB,EAAAwD,EAAAoD,MAAArH,KAAA8G,WACA8N,EAAAge,EAAA7rB,MAEA,KAAA4N,EAAA,EAAeA,EAAAC,IAAOD,GACtBqqD,EAAAzrC,EAAAX,EAAAje,GAAAoK,WAAAte,EAAA89D,GAAAv+D,KAAA8G,cACAkX,KACAghD,EAAA,WAKA,QAAAF,KACA,GACAnqD,GAAAqqD,EADApsC,EAAAhzB,EAAAgP,MAAAskB,eACAte,EAAAge,EAAA7rB,MAEA,KAAA4N,EAAA,EAAeA,EAAAC,IAAOD,GACtBqqD,EAAAO,EAAA3sC,EAAAje,GAAAoK,eACAV,KACA2gD,EAAA,SAKA,QAAAD,KACA,GACApqD,GAAAqqD,EADApsC,EAAAhzB,EAAAgP,MAAAskB,eACAte,EAAAge,EAAA7rB,MAIA,KAFA8rB,GAAA/J,aAAA+J,GACAA,EAAAvU,WAAA,WAAyCuU,EAAA,MAAsB,KAC/Dle,EAAA,EAAeA,EAAAC,IAAOD,GACtBqqD,EAAAO,EAAA3sC,EAAAje,GAAAoK,eACAf,KACAghD,EAAA,QAKA,QAAAzrC,GAAAlzB,EAAA4D,EAAAgtB,EAAA9Y,EAAAC,GACA,GAAA2I,GAAAlC,EAAAC,EAAApe,EAAAuwB,EAAAhtB,EAAA5D,GACAm/D,EAAA9rC,EAAA3gB,MAEA,IAAAmF,EAAA,GAAAuG,IAAAigD,EAAA,cAAA39C,EAAA1gB,EAAAue,EAAAle,EAAA,GAAAA,EAAA,OAAA8+D,GAAA,WACA,cAAA5/D,EAAAgP,MAAA+P,QAAAoC,EAAApC,EAAAtX,MAAA8Q,EAAAC,MACAyG,EAAAkC,EAAAhR,EAAArP,EAAA,MACAoe,EAAAiC,EAAAtP,EAAA/Q,EAAA,OACA,KAGA,eAAAs+D,GAAA1pD,GACA,GAAAV,GAAA0oB,EAAA58B,CACA,QAAA4U,GACA,YAAAiqD,EAAAl/D,GAAA2+D,EAAApqD,EAAAgK,GAA2D,MAC3D,iBAAA2gD,GAAAl/D,KAAAue,CACA,YAAAle,EAAAuwB,EAAAhtB,EAAA5D,GAAAuU,EAAAgK,EAEA1G,EAAA,GAAAuG,IAAAigD,EAAAppD,EAAAyL,EAAA1gB,EAAAuU,EAAAlU,EAAA,GAAAme,EAAAne,EAAA,GAAAoe,EAAApe,EAAA,GAAA48B,EAAA,GAAA58B,EAAA,GAAA48B,EAAA,GAAAkiC,KAAAn4D,MAAAm4D,GAAAlqD,EAAA6C,EAAAC,KA/GA,GAOAgnD,GACAC,EACAF,EACAtsC,EAVA1e,EAAA6K,GACA/a,EAAAib,GACAP,EAAAQ,GACAy/C,EAAAx/C,GACAmgD,KACA7rC,EAAAhmB,EAAA,sBACAkR,EAAA,EAKA0gD,EAAA,CAiIA,OAzBAZ,GAAAvqD,OAAA,SAAAE,GACA,MAAAvN,WAAAC,QAAAoN,EAAA,kBAAAE,KAAAoqD,KAAApqD,GAAAqqD,GAAAvqD,GAGAuqD,EAAAz6D,UAAA,SAAAoQ,GACA,MAAAvN,WAAAC,QAAA9C,EAAA,kBAAAoQ,KAAAoqD,GAAApqD,GAAAqqD,GAAAz6D,GAGAy6D,EAAA//C,QAAA,SAAAtK,GACA,MAAAvN,WAAAC,QAAA4X,EAAA,kBAAAtK,KAAAoqD,GAAApqD,GAAAqqD,GAAA//C,GAGA+/C,EAAAE,UAAA,SAAAvqD,GACA,MAAAvN,WAAAC,QAAA63D,EAAA,kBAAAvqD,KAAAoqD,KAAApqD,GAAAqqD,GAAAE,GAGAF,EAAA/3D,GAAA,WACA,GAAA1F,GAAAyyB,EAAA/sB,GAAAU,MAAAqsB,EAAA5sB,UACA,OAAA7F,KAAAyyB,EAAAgrC,EAAAz9D,GAGAy9D,EAAAe,cAAA,SAAAprD,GACA,MAAAvN,WAAAC,QAAAu4D,GAAAjrD,QAAAqqD,GAAAjuD,KAAAqS,KAAAw8C,IAGAZ,GAGA5+D,GAAA,SAAAi5D,EAAAp5D,EAAA2D,GACAy1D,EAAAz1D,UAAA3D,EAAA2D,YACAA,EAAAy1D,eAWA2G,GAAA,GACAC,GAAA,EAAAD,GAEAE,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACAngD,GAAA,mBACAI,GAAA,mBACAE,GAAA,GAAAklC,QAAA,WAAAya,UAAA,QACA1/C,GAAA,GAAAilC,QAAA,WAAA2a,UAAA,QACA3/C,GAAA,GAAAglC,QAAA,YAAAya,SAAAC,IAAA,QACAx/C,GAAA,GAAA8kC,QAAA,YAAA2a,SAAAD,IAAA,QACAv/C,GAAA,GAAA6kC,QAAA,WAAA0a,GAAAC,OAAA,QACAt/C,GAAA,GAAA2kC,QAAA,YAAA0a,GAAAC,MAAAD,IAAA,QAEAp/C,IACAs/C,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAx5B,IAAA,SACAy5B,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,SAGAnpE,IAAA0f,GAAAC,IACAypD,YAAA,WACA,MAAAlpE,MAAA6gB,MAAAqoD,eAEAxyD,SAAA,WACA,MAAA1W,MAAA6gB,MAAA,MA+CA/gB,GAAAggB,GAAAe,GAAAxB,GAAAG,IACAmgD,SAAA,SAAA/rD,GAEA,MADAA,GAAA,MAAAA,EAAA+rD,GAAAlvD,KAAAM,IAAA4uD,GAAA/rD,GACA,GAAAkM,IAAA9f,KAAA0gB,EAAA9M,EAAA5T,KAAA2gB,EAAA/M,EAAA5T,KAAAmQ,EAAAyD,EAAA5T,KAAA8gB,UAEA4+C,OAAA,SAAA9rD,GAEA,MADAA,GAAA,MAAAA,EAAA8rD,GAAAjvD,KAAAM,IAAA2uD,GAAA9rD,GACA,GAAAkM,IAAA9f,KAAA0gB,EAAA9M,EAAA5T,KAAA2gB,EAAA/M,EAAA5T,KAAAmQ,EAAAyD,EAAA5T,KAAA8gB,UAEAD,IAAA,WACA,MAAA7gB,OAEAkpE,YAAA,WACA,UAAAlpE,KAAA0gB,GAAA1gB,KAAA0gB,GAAA,KACA,GAAA1gB,KAAA2gB,GAAA3gB,KAAA2gB,GAAA,KACA,GAAA3gB,KAAAmQ,GAAAnQ,KAAAmQ,GAAA,KACA,GAAAnQ,KAAA8gB,SAAA9gB,KAAA8gB,SAAA,GAEApK,SAAA,WACA,GAAAxG,GAAAlQ,KAAA8gB,OACA,OADyB5Q,GAAAiU,MAAAjU,GAAA,EAAAO,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,EAAAjR,KACzB,IAAAA,EAAA,gBACAO,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,IAAA1Q,KAAAqB,MAAA9R,KAAA0gB,IAAA,SACAjQ,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,IAAA1Q,KAAAqB,MAAA9R,KAAA2gB,IAAA,SACAlQ,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,IAAA1Q,KAAAqB,MAAA9R,KAAAmQ,IAAA,KACA,IAAAD,EAAA,SAAAA,EAAA,SAgDApQ,GAAAmhB,GAAAG,GAAA/B,GAAAG,IACAmgD,SAAA,SAAA/rD,GAEA,MADAA,GAAA,MAAAA,EAAA+rD,GAAAlvD,KAAAM,IAAA4uD,GAAA/rD,GACA,GAAAqN,IAAAjhB,KAAAmE,EAAAnE,KAAA+gB,EAAA/gB,KAAAghB,EAAApN,EAAA5T,KAAA8gB,UAEA4+C,OAAA,SAAA9rD,GAEA,MADAA,GAAA,MAAAA,EAAA8rD,GAAAjvD,KAAAM,IAAA2uD,GAAA9rD,GACA,GAAAqN,IAAAjhB,KAAAmE,EAAAnE,KAAA+gB,EAAA/gB,KAAAghB,EAAApN,EAAA5T,KAAA8gB,UAEAD,IAAA,WACA,GAAA1c,GAAAnE,KAAAmE,EAAA,SAAAnE,KAAAmE,EAAA,GACA4c,EAAAoD,MAAAhgB,IAAAggB,MAAAnkB,KAAA+gB,GAAA,EAAA/gB,KAAA+gB,EACAC,EAAAhhB,KAAAghB,EACAO,EAAAP,KAAA,GAAAA,EAAA,EAAAA,GAAAD,EACAO,EAAA,EAAAN,EAAAO,CACA,WAAAzB,IACAuB,GAAAld,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAmd,EAAAC,GACAF,GAAAld,EAAAmd,EAAAC,GACAF,GAAAld,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAmd,EAAAC,GACAvhB,KAAA8gB,UAGAooD,YAAA,WACA,UAAAlpE,KAAA+gB,GAAA/gB,KAAA+gB,GAAA,GAAAoD,MAAAnkB,KAAA+gB,KACA,GAAA/gB,KAAAghB,GAAAhhB,KAAAghB,GAAA,GACA,GAAAhhB,KAAA8gB,SAAA9gB,KAAA8gB,SAAA,KAYA,IAAAa,IAAAlR,KAAA04D,GAAA,IACAtmD,GAAA,IAAApS,KAAA04D,GAEAC,GAAA,GACApnD,GAAA,OACAC,GAAA,EACAE,GAAA,QACAI,GAAA,KACAE,GAAA,KACAH,GAAA,EAAAG,MACAJ,GAAAI,QA6BA3iB,IAAA2hB,GAAAW,GAAA/C,GAAAG,IACAmgD,SAAA,SAAA/rD,GACA,UAAA6N,IAAAzhB,KAAAghB,EAAAooD,IAAA,MAAAx1D,EAAA,EAAAA,GAAA5T,KAAAkQ,EAAAlQ,KAAAmQ,EAAAnQ,KAAA8gB,UAEA4+C,OAAA,SAAA9rD,GACA,UAAA6N,IAAAzhB,KAAAghB,EAAAooD,IAAA,MAAAx1D,EAAA,EAAAA,GAAA5T,KAAAkQ,EAAAlQ,KAAAmQ,EAAAnQ,KAAA8gB,UAEAD,IAAA,WACA,GAAApP,IAAAzR,KAAAghB,EAAA,QACAjR,EAAAoU,MAAAnkB,KAAAkQ,GAAAuB,IAAAzR,KAAAkQ,EAAA,IACAgS,EAAAiC,MAAAnkB,KAAAmQ,GAAAsB,IAAAzR,KAAAmQ,EAAA,GAIA,OAHAsB,GAAAwQ,GAAAO,GAAA/Q,GACA1B,EAAAiS,GAAAQ,GAAAzS,GACAmS,EAAAC,GAAAK,GAAAN,GACA,GAAApC,IACA4C,GAAA,UAAA3S,EAAA,UAAA0B,EAAA,SAAAyQ,GACAQ,IAAA,QAAA3S,EAAA,UAAA0B,EAAA,QAAAyQ,GACAQ,GAAA,SAAA3S,EAAA,SAAA0B,EAAA,UAAAyQ,GACAliB,KAAA8gB,aAuCAhhB,GAAA4hB,GAAAqB,GAAA1D,GAAAG,IACAmgD,SAAA,SAAA/rD,GACA,UAAA8N,IAAA1hB,KAAAmE,EAAAnE,KAAAS,EAAAT,KAAAghB,EAAAooD,IAAA,MAAAx1D,EAAA,EAAAA,GAAA5T,KAAA8gB,UAEA4+C,OAAA,SAAA9rD,GACA,UAAA8N,IAAA1hB,KAAAmE,EAAAnE,KAAAS,EAAAT,KAAAghB,EAAAooD,IAAA,MAAAx1D,EAAA,EAAAA,GAAA5T,KAAA8gB,UAEAD,IAAA,WACA,MAAAW,IAAAxhB,MAAA6gB,SAIA,IAAAwyB,KAAA,OACAtB,GAAA,QACAxuB,IAAA,OACAC,IAAA,OACAF,GAAA,QACAH,GAAAG,GAAAE,GACAJ,GAAAE,GAAAyuB,GACA7uB,GAAA6uB,GAAAxuB,GAAAC,GAAA6vB,EA2BAvzC,IAAAmjB,GAAAQ,GAAApE,GAAAG,IACAmgD,SAAA,SAAA/rD,GAEA,MADAA,GAAA,MAAAA,EAAA+rD,GAAAlvD,KAAAM,IAAA4uD,GAAA/rD,GACA,GAAAqP,IAAAjjB,KAAAmE,EAAAnE,KAAA+gB,EAAA/gB,KAAAghB,EAAApN,EAAA5T,KAAA8gB,UAEA4+C,OAAA,SAAA9rD,GAEA,MADAA,GAAA,MAAAA,EAAA8rD,GAAAjvD,KAAAM,IAAA2uD,GAAA9rD,GACA,GAAAqP,IAAAjjB,KAAAmE,EAAAnE,KAAA+gB,EAAA/gB,KAAAghB,EAAApN,EAAA5T,KAAA8gB,UAEAD,IAAA,WACA,GAAA1c,GAAAggB,MAAAnkB,KAAAmE,GAAA,GAAAnE,KAAAmE,EAAA,KAAAwd,GACAX,GAAAhhB,KAAAghB,EACA9Q,EAAAiU,MAAAnkB,KAAA+gB,GAAA,EAAA/gB,KAAA+gB,EAAAC,GAAA,EAAAA,GACAyF,EAAAhW,KAAAmR,IAAAzd,GACAwiB,EAAAlW,KAAAoR,IAAA1d,EACA,WAAA2b,IACA,KAAAkB,EAAA9Q,GAAAmjC,GAAA5sB,EAAAsrB,GAAAprB,IACA,KAAA3F,EAAA9Q,GAAAqT,GAAAkD,EAAAjD,GAAAmD,IACA,KAAA3F,EAAA9Q,GAAAoT,GAAAmD,IACAzmB,KAAA8gB,YAaA,IA4QA+D,IACAC,GACAC,GACAG,GA4OAkD,GACAQ,GA5fAygD,GAAA,SAAAhgE,GACA,GAAAuL,GAAAvL,EAAAtC,OAAA,CACA,iBAAA2N,GACA,GAAAC,GAAAD,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAE,EAAA,GAAAnE,KAAAG,MAAA8D,EAAAE,GACAgP,EAAAva,EAAAsL,GACAkP,EAAAxa,EAAAsL,EAAA,GACAgP,EAAAhP,EAAA,EAAAtL,EAAAsL,EAAA,KAAAiP,EAAAC,EACAC,EAAAnP,EAAAC,EAAA,EAAAvL,EAAAsL,EAAA,KAAAkP,EAAAD,CACA,OAAAF,KAAAhP,EAAAC,EAAAC,KAAA+O,EAAAC,EAAAC,EAAAC,KAIAwlD,GAAA,SAAAjgE,GACA,GAAAuL,GAAAvL,EAAAtC,MACA,iBAAA2N,GACA,GAAAC,GAAAlE,KAAAG,QAAA8D,GAAA,OAAAA,KAAAE,GACA+O,EAAAta,GAAAsL,EAAAC,EAAA,GAAAA,GACAgP,EAAAva,EAAAsL,EAAAC,GACAiP,EAAAxa,GAAAsL,EAAA,GAAAC,GACAkP,EAAAza,GAAAsL,EAAA,GAAAC,EACA,OAAA8O,KAAAhP,EAAAC,EAAAC,KAAA+O,EAAAC,EAAAC,EAAAC,KAIAI,GAAA,SAAAnU,GACA,kBACA,MAAAA,KAgCAw5D,GAAA,QAAAC,GAAA/3D,GAGA,QAAAg4D,GAAAp5D,EAAA0W,GACA,GAAArG,GAAA8D,GAAAnU,EAAAwQ,GAAAxQ,IAAAqQ,GAAAqG,EAAAlG,GAAAkG,IAAArG,GACAC,EAAA6D,EAAAnU,EAAAsQ,EAAAoG,EAAApG,GACAxQ,EAAAqU,EAAAnU,EAAAF,EAAA4W,EAAA5W,GACA2Q,EAAAuD,GAAAhU,EAAAyQ,QAAAiG,EAAAjG,QACA,iBAAApM,GAKA,MAJArE,GAAAqQ,IAAAhM,GACArE,EAAAsQ,IAAAjM,GACArE,EAAAF,IAAAuE,GACArE,EAAAyQ,UAAApM,GACArE,EAAA,IAZA,GAAAmU,GAAAJ,GAAA3S,EAkBA,OAFAg4D,GAAArlD,MAAAolD,EAEAC,GACC,GA4BDC,GAAAplD,GAAA+kD,IACAM,GAAArlD,GAAAglD,IAEAM,GAAA,SAAA15D,EAAAC,GACA,GAIAwE,GAJAk1D,EAAA15D,IAAApJ,OAAA,EACA+iE,EAAA55D,EAAAO,KAAA0Q,IAAA0oD,EAAA35D,EAAAnJ,QAAA,EACAgJ,EAAA,GAAA9I,OAAA4iE,GACAppE,EAAA,GAAAwG,OAAA4iE,EAGA,KAAAl1D,EAAA,EAAaA,EAAAm1D,IAAQn1D,EAAA5E,EAAA4E,GAAAmf,GAAA5jB,EAAAyE,GAAAxE,EAAAwE,GACrB,MAAQA,EAAAk1D,IAAQl1D,EAAAlU,EAAAkU,GAAAxE,EAAAwE,EAEhB,iBAAAD,GACA,IAAAC,EAAA,EAAeA,EAAAm1D,IAAQn1D,EAAAlU,EAAAkU,GAAA5E,EAAA4E,GAAAD,EACvB,OAAAjU,KAIA87C,GAAA,SAAArsC,EAAAC,GACA,GAAA5H,GAAA,GAAAE,KACA,OAAAyH,MAAAC,GAAAD,EAAA,SAAAwE,GACA,MAAAnM,GAAAk0C,QAAAvsC,EAAAC,EAAAuE,GAAAnM,IAIA4d,GAAA,SAAAjW,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAwE,GACA,MAAAxE,GAAAC,EAAAuE,IAIA0gB,GAAA,SAAAllB,EAAAC,GACA,GAEAyD,GAFAe,KACAlU,IAGA,QAAAyP,GAAA,gBAAAA,WACA,OAAAC,GAAA,gBAAAA,UAEA,KAAAyD,IAAAzD,GACAyD,IAAA1D,GACAyE,EAAAf,GAAAkgB,GAAA5jB,EAAA0D,GAAAzD,EAAAyD,IAEAnT,EAAAmT,GAAAzD,EAAAyD,EAIA,iBAAAc,GACA,IAAAd,IAAAe,GAAAlU,EAAAmT,GAAAe,EAAAf,GAAAc,EACA,OAAAjU,KAIAspE,GAAA,8CACAC,GAAA,GAAA7kB,QAAA4kB,GAAA31C,OAAA,KAcA61C,GAAA,SAAA/5D,EAAAC,GACA,GACA+5D,GACAC,EACAC,EAHAC,EAAAN,GAAAO,UAAAN,GAAAM,UAAA,EAIA31D,GAAA,EACAoM,KACAmF,IAMA,KAHAhW,GAAA,GAAAC,GAAA,IAGA+5D,EAAAH,GAAAnqD,KAAA1P,MACAi6D,EAAAH,GAAApqD,KAAAzP,MACAi6D,EAAAD,EAAAtzD,OAAAwzD,IACAD,EAAAj6D,EAAAoE,MAAA81D,EAAAD,GACArpD,EAAApM,GAAAoM,EAAApM,IAAAy1D,EACArpD,IAAApM,GAAAy1D,IAEAF,IAAA,OAAAC,IAAA,IACAppD,EAAApM,GAAAoM,EAAApM,IAAAw1D,EACAppD,IAAApM,GAAAw1D,GAEAppD,IAAApM,GAAA,KACAuR,EAAAld,MAAc2L,IAAA5E,EAAAoW,GAAA+jD,EAAAC,MAEdE,EAAAL,GAAAM,SAYA,OARAD,GAAAl6D,EAAApJ,SACAqjE,EAAAj6D,EAAAoE,MAAA81D,GACAtpD,EAAApM,GAAAoM,EAAApM,IAAAy1D,EACArpD,IAAApM,GAAAy1D,GAKArpD,EAAAha,OAAA,EAAAmf,EAAA,GACAxB,GAAAwB,EAAA,GAAAnW,GACA0U,GAAAtU,IACAA,EAAA+V,EAAAnf,OAAA,SAAA2N,GACA,OAAAgD,GAAA/C,EAAA,EAA4BA,EAAAxE,IAAOwE,EAAAoM,GAAArJ,EAAAwO,EAAAvR,OAAA+C,EAAA3H,EAAA2E,EACnC,OAAAqM,GAAAyF,KAAA,OAIAsN,GAAA,SAAA5jB,EAAAC,GACA,GAAA1P,GAAAiU,QAAAvE,EACA,cAAAA,GAAA,YAAAuE,EAAAwP,GAAA/T,IACA,WAAAuE,EAAAyR,GACA,WAAAzR,GAAAjU,EAAAgf,GAAAtP,OAAA1P,EAAA8oE,IAAAU,GACA95D,YAAAsP,IAAA8pD,GACAp5D,YAAA1H,MAAA8zC,GACAt1C,MAAAouB,QAAAllB,GAAAy5D,GACA,kBAAAz5D,GAAAo6D,SAAA,kBAAAp6D,GAAAuG,UAAAyN,MAAAhU,GAAAilB,GACAjP,IAAAjW,EAAAC,IAGAqqC,GAAA,SAAAtqC,EAAAC,GACA,MAAAD,MAAAC,GAAAD,EAAA,SAAAwE,GACA,MAAAjE,MAAAqB,MAAA5B,EAAAC,EAAAuE,KAIA81D,GAAA,IAAA/5D,KAAA04D,GAEAvkD,IACArT,WAAA,EACAC,WAAA,EACA4U,OAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,GAGAvB,GAAA,SAAA9U,EAAAC,EAAA1P,EAAA8H,EAAA+c,EAAAxV,GACA,GAAAwW,GAAAC,EAAAF,CAKA,QAJAC,EAAA7V,KAAAqS,KAAA5S,IAAAC,QAAAD,GAAAoW,EAAAnW,GAAAmW,IACAD,EAAAnW,EAAAzP,EAAA0P,EAAA5H,KAAA9H,GAAAyP,EAAAmW,EAAA9d,GAAA4H,EAAAkW,IACAE,EAAA9V,KAAAqS,KAAAriB,IAAA8H,QAAA9H,GAAA8lB,EAAAhe,GAAAge,EAAAF,GAAAE,GACArW,EAAA3H,EAAA4H,EAAA1P,IAAAyP,KAAAC,KAAAkW,KAAAC,OAEA/U,WAAA+T,EACA9T,WAAA1B,EACAsW,OAAA3V,KAAAmS,MAAAzS,EAAAD,GAAAs6D,GACAnkD,MAAA5V,KAAAsyB,KAAA1c,GAAAmkD,GACAlkD,SACAC,WAsFAkkD,GAAAllD,GAAAZ,GAAA,qBACA+lD,GAAAnlD,GAAAN,GAAA,cAEA0lD,GAAAl6D,KAAAm6D,MACAC,GAAA,EACAC,GAAA,EACAC,GAAA,MAgBAC,GAAA,SAAA1tC,EAAA+uB,GACA,GAKA13C,GACAud,EANA+4C,EAAA3tC,EAAA,GAAA4tC,EAAA5tC,EAAA,GAAA3L,EAAA2L,EAAA,GACA6tC,EAAA9e,EAAA,GAAA+e,EAAA/e,EAAA,GAAAx6B,EAAAw6B,EAAA,GACAxtC,EAAAssD,EAAAF,EACAnsD,EAAAssD,EAAAF,EACAp/B,EAAAjtB,IAAAC,GAKA,IAAAgtB,EAAAi/B,GACA74C,EAAAzhB,KAAArJ,IAAAyqB,EAAAF,GAAAg5C,GACAh2D,EAAA,SAAAD,GACA,OACAu2D,EAAAv2D,EAAAmK,EACAqsD,EAAAx2D,EAAAoK,EACA6S,EAAAlhB,KAAAiW,IAAAikD,GAAAj2D,EAAAwd,SAMA,CACA,GAAAkhB,GAAA3iC,KAAAqS,KAAAgpB,GACAxd,GAAAuD,IAAAF,IAAAm5C,GAAAh/B,IAAA,EAAAna,EAAAk5C,GAAAz3B,GACA/kB,GAAAwD,IAAAF,IAAAm5C,GAAAh/B,IAAA,EAAAja,EAAAg5C,GAAAz3B,GACAhF,EAAA39B,KAAArJ,IAAAqJ,KAAAqS,KAAAwL,IAAA,GAAAA,GACAkkB,EAAA/hC,KAAArJ,IAAAqJ,KAAAqS,KAAAuL,IAAA,GAAAA,EACA6D,IAAAsgB,EAAApE,GAAAu8B,GACAh2D,EAAA,SAAAD,GACA,GAAAqM,GAAArM,EAAAwd,EACAm5C,EAAA5kD,GAAA2nB,GACA/R,EAAA1K,GAAAk5C,GAAAz3B,IAAAi4B,EAAAzkD,GAAA+jD,GAAA5pD,EAAAqtB,GAAAznB,GAAAynB,GACA,QACA68B,EAAA5uC,EAAAxd,EACAqsD,EAAA7uC,EAAAvd,EACA6S,EAAA05C,EAAA5kD,GAAAkkD,GAAA5pD,EAAAqtB,KAOA,MAFAz5B,GAAA/K,SAAA,IAAAsoB,EAEAvd,GAmBA22D,GAAAzkD,GAAA5C,IACAsnD,GAAA1kD,GAAAxC,IAgCAmnD,GAAAvkD,GAAAhD,IACAwnD,GAAAxkD,GAAA5C,IA0BAqnD,GAAAxkD,GAAAjD,IACA0nD,GAAAzkD,GAAA7C,IAEAunD,GAAA,SAAArjB,EAAA3zC,GAEA,OADAi3D,GAAA,GAAA5kE,OAAA2N,GACAD,EAAA,EAAiBA,EAAAC,IAAOD,EAAAk3D,EAAAl3D,GAAA4zC,EAAA5zC,GAAAC,EAAA,GACxB,OAAAi3D,IAGA1jD,GAAA,EACAI,GAAA,EACAQ,GAAA,EACAL,GAAA,IAGAJ,GAAA,EACAhB,GAAA,EACAI,GAAA,EACAD,GAAA,gBAAAqkD,0BAAAzkD,IAAAykD,YAAArjE,KACA8e,GAAA,gBAAArK,gBAAA6uD,sBAAA7uD,OAAA6uD,sBAAAhQ,KAAA7+C,QAAA,SAAApN,GAAqIwO,WAAAxO,EAAA,IAgBrI6X,IAAArkB,UAAAwkB,GAAAxkB,WACAy1D,YAAApxC,GACAM,QAAA,SAAAzS,EAAAuS,EAAAC,GACA,qBAAAxS,GAAA,SAAAw2D,WAAA,6BACAhkD,IAAA,MAAAA,EAAAX,MAAAW,IAAA,MAAAD,EAAA,GAAAA,GACA/nB,KAAA2Y,OAAAiQ,KAAA5oB,OACA4oB,MAAAjQ,MAAA3Y,KACAooB,GAAApoB,KACA4oB,GAAA5oB,MAEAA,KAAA4nB,MAAApS,EACAxV,KAAA6nB,MAAAG,EACAa,MAEAvY,KAAA,WACAtQ,KAAA4nB,QACA5nB,KAAA4nB,MAAA,KACA5nB,KAAA6nB,MAAAc,IACAE,OAmEA,IAAAkB,IAAA,SAAAvU,EAAAuS,EAAAC,GACA,GAAAtT,GAAA,GAAAiT,GAMA,OALAI,GAAA,MAAAA,EAAA,GAAAA,EACArT,EAAAuT,QAAA,SAAA0B,GACAjV,EAAApE,OACAkF,EAAAmU,EAAA5B,IACGA,EAAAC,GACHtT,GAGAu3D,GAAA,SAAAz2D,EAAAuS,EAAAC,GACA,GAAAtT,GAAA,GAAAiT,IAAAukD,EAAAnkD,CACA,cAAAA,GAAArT,EAAAuT,QAAAzS,EAAAuS,EAAAC,GAAAtT,IACAqT,KAAAC,EAAA,MAAAA,EAAAX,MAAAW,EACAtT,EAAAuT,QAAA,QAAA9U,GAAAwW,GACAA,GAAAuiD,EACAx3D,EAAAuT,QAAA9U,EAAA+4D,GAAAnkD,EAAAC,GACAxS,EAAAmU,IACG5B,EAAAC,GACHtT,IAGAy3D,GAAAz+D,EAAA,2BACA0+D,MAEA9iD,GAAA,EACAM,GAAA,EACAJ,GAAA,EACAM,GAAA,EACAE,GAAA,EACAG,GAAA,EACAF,GAAA,EAEAd,GAAA,SAAApQ,EAAA3D,EAAA/U,EAAAwW,EAAAC,EAAAmY,GACA,GAAApF,GAAA9Q,EAAAqQ,YACA,IAAAS,GACA,GAAAxpB,IAAAwpB,GAAA,WADA9Q,GAAAqQ,eAEA7J,IAAAxG,EAAA1Y,GACA+U,OACAyB,QACAC,QACAnQ,GAAAwlE,GACAjiD,MAAAkiD,GACApkD,KAAAiH,EAAAjH,KACAD,MAAAkH,EAAAlH,MACAne,SAAAqlB,EAAArlB,SACAE,KAAAmlB,EAAAnlB,KACAge,MAAA,KACAuB,MAAAC,MA+HAmK,GAAA,SAAA1a,EAAA3D,GACA,GACAmV,GACA3L,EAEAjK,EAJAkV,EAAA9Q,EAAAqQ,aAGAoG,GAAA,CAGA,IAAA3F,EAAA,CAEAzU,EAAA,MAAAA,EAAA,KAAAA,EAAA,EAEA,KAAAT,IAAAkV,IACAU,EAAAV,EAAAlV,IAAAS,UACAwJ,EAAA2L,EAAAlB,MAAAG,IAAAe,EAAAlB,MAAAc,GACAI,EAAAlB,MAAAY,GACAM,EAAAzC,MAAAxX,OACAsO,GAAA2L,EAAA5jB,GAAApG,KAAA,YAAAwY,IAAA1B,SAAAkT,EAAA1T,MAAA0T,EAAAzT,aACA+S,GAAAlV,IALqD6a,GAAA,CAQrDA,UAAAzW,GAAAqQ,eAGAijD,GAAA,SAAAj3D,GACA,MAAApV,MAAAoU,KAAA,WACAqf,GAAAzzB,KAAAoV,MAqDAk3D,GAAA,SAAAl3D,EAAAnU,GACA,GAAAZ,GAAAL,KAAA2qB,GAIA,IAFAvV,GAAA,GAEAtO,UAAAC,OAAA,GAEA,OAAA2N,GADAwV,EAAAT,GAAAzpB,KAAA+Y,OAAA1Y,GAAA6pB,MACAvV,EAAA,EAAAC,EAAAsV,EAAAnjB,OAAwC4N,EAAAC,IAAOD,EAC/C,IAAAD,EAAAwV,EAAAvV,IAAAS,SACA,MAAAV,GAAAzT,KAGA,aAGA,MAAAjB,MAAAoU,MAAA,MAAAnT,EAAAmpB,GAAAK,IAAApqB,EAAA+U,EAAAnU,KAgBAoiC,GAAA,SAAAnzB,EAAAC,GACA,GAAA1P,EACA,wBAAA0P,GAAAgW,GACAhW,YAAAsP,IAAA8pD,IACA9oE,EAAAgf,GAAAtP,OAAA1P,EAAA8oE,IACAU,IAAA/5D,EAAAC,IAiEAo8D,GAAA,SAAAn3D,EAAAnU,GACA,GAAAmV,GAAAijD,GAAAjkD,GAAAT,EAAA,cAAAyB,EAAAs0D,GAAArnC,EACA,OAAArjC,MAAA2rB,UAAAvW,EAAA,kBAAAnU,IACAmV,EAAAE,MAAAkV,GAAAF,IAAAlV,EAAAzB,EAAA+V,GAAA1qB,KAAA,QAAAoV,EAAAnU,IACA,MAAAA,GAAAmV,EAAAE,MAAAuU,GAAAD,IAAAxU,IACAA,EAAAE,MAAA8U,GAAAN,IAAA1U,EAAAzB,EAAA1T,EAAA,MAyBAurE,GAAA,SAAAp3D,EAAAnU,GACA,GAAAoC,GAAA,QAAA+R,CACA,IAAAtO,UAAAC,OAAA,SAAA1D,EAAArD,KAAAkqB,MAAA7mB,OAAAqoB,MACA,UAAAzqB,EAAA,MAAAjB,MAAAkqB,MAAA7mB,EAAA,KACA,sBAAApC,GAAA,SAAA4T,MACA,IAAAuB,GAAAijD,GAAAjkD,EACA,OAAApV,MAAAkqB,MAAA7mB,GAAA+S,EAAAE,MAAAmV,GAAAE,IAAAvV,EAAAnV,KAeAwrE,GAAA,SAAAxrE,GACA,GAAAZ,GAAAL,KAAA2qB,GAEA,OAAA7jB,WAAAC,OACA/G,KAAAoU,MAAA,kBAAAnT,GACA2qB,GACAC,IAAAxrB,EAAAY,IACAwoB,GAAAzpB,KAAA+Y,OAAA1Y,GAAA0nB,OAeA2kD,GAAA,SAAAzrE,GACA,GAAAZ,GAAAL,KAAA2qB,GAEA,OAAA7jB,WAAAC,OACA/G,KAAAoU,MAAA,kBAAAnT,GACA6qB,GACAC,IAAA1rB,EAAAY,IACAwoB,GAAAzpB,KAAA+Y,OAAA1Y,GAAAuJ,UAUA+iE,GAAA,SAAA1rE,GACA,GAAAZ,GAAAL,KAAA2qB,GAEA,OAAA7jB,WAAAC,OACA/G,KAAAoU,KAAA4X,GAAA3rB,EAAAY,IACAwoB,GAAAzpB,KAAA+Y,OAAA1Y,GAAAyJ,MAGA8iE,GAAA,SAAAl0C,GACA,kBAAAA,OAAAuhC,GAAAvhC,GAEA,QAAA9a,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAAo0D,EAAA,GAAAl0D,OAAAzG,GAAAmX,EAAA,EAAqFA,EAAAnX,IAAOmX,EAC5F,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAAs0D,EAAAF,EAAAxjD,MAAAhD,EAAA,EAA4FA,EAAAC,IAAOD,GACnGoE,EAAAjC,EAAAnC,KAAA+jB,EAAAn4B,KAAAwY,IAAA1B,SAAA1C,EAAAmC,IACAukD,EAAAryD,KAAA+P,EAKA,WAAA+T,IAAAquC,EAAAn7D,KAAA+d,SAAA/d,KAAA+sB,MAAA/sB,KAAA2qB,MAGAkiD,GAAA,SAAAC,GACA,GAAAA,EAAAniD,MAAA3qB,KAAA2qB,IAAA,SAAA9V,MAEA,QAAA0nD,GAAAv8D,KAAA8d,QAAA0+C,EAAAsQ,EAAAhvD,QAAA2+C,EAAAF,EAAAx1D,OAAAua,EAAAk7C,EAAAz1D,OAAAvG,EAAAiQ,KAAA0Q,IAAAs7C,EAAAn7C,GAAAo7C,EAAA,GAAAz1D,OAAAw1D,GAAA9kD,EAAA,EAAkKA,EAAAnX,IAAOmX,EACzK,OAAAoB,GAAA4jD,EAAAJ,EAAA5kD,GAAAilD,EAAAJ,EAAA7kD,GAAA/C,EAAA+nD,EAAA51D,OAAA4H,EAAA+tD,EAAA/kD,GAAA,GAAA1Q,OAAA2N,GAAAD,EAAA,EAAwHA,EAAAC,IAAOD,GAC/HoE,EAAA4jD,EAAAhoD,IAAAioD,EAAAjoD,MACAhG,EAAAgG,GAAAoE,EAKA,MAAQpB,EAAA8kD,IAAQ9kD,EAChB+kD,EAAA/kD,GAAA4kD,EAAA5kD,EAGA,WAAAmV,IAAA4vC,EAAA18D,KAAA+d,SAAA/d,KAAA+sB,MAAA/sB,KAAA2qB,MA0BAoiD,GAAA,SAAA33D,EAAAwB,GACA,GAAAvW,GAAAL,KAAA2qB,GAEA,OAAA7jB,WAAAC,OAAA,EACA0iB,GAAAzpB,KAAA+Y,OAAA1Y,GAAAsG,MAAAyO,GACApV,KAAAoU,KAAA8X,GAAA7rB,EAAA+U,EAAAwB,KAWAo2D,GAAA,WACA,MAAAhtE,MAAA2G,GAAA,aAAA2lB,GAAAtsB,KAAA2qB,OAGAsiD,GAAA,SAAAhoE,GACA,GAAAmQ,GAAApV,KAAA+sB,MACA1sB,EAAAL,KAAA2qB,GAEA,mBAAA1lB,OAAAw0D,GAAAx0D,GAEA,QAAA2Y,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAAo0D,EAAA,GAAAl0D,OAAAzG,GAAAmX,EAAA,EAAqFA,EAAAnX,IAAOmX,EAC5F,OAAAoB,GAAAqiD,EAAAtkD,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAAs0D,EAAAF,EAAAxjD,GAAA,GAAA1Q,OAAA2N,GAAAD,EAAA,EAA+GA,EAAAC,IAAOD,GACtHoE,EAAAjC,EAAAnC,MAAAymD,EAAAn2D,EAAA1E,KAAAwY,IAAA1B,SAAA1C,EAAAmC,MACA,YAAAiC,KAAAqiD,EAAA/jD,SAAA0B,EAAA1B,UACAgkD,EAAA1mD,GAAAymD,EACAjyC,GAAAkyC,EAAA1mD,GAAAS,EAAA/U,EAAAsU,EAAA0mD,EAAA5xC,GAAA1Q,EAAA1Y,IAKA,WAAAysB,IAAAquC,EAAAn7D,KAAA+d,SAAA3I,EAAA/U,IAGA6sE,GAAA,SAAAjoE,GACA,GAAAmQ,GAAApV,KAAA+sB,MACA1sB,EAAAL,KAAA2qB,GAEA,mBAAA1lB,OAAAq2D,GAAAr2D,GAEA,QAAA2Y,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAAo0D,KAAAt9C,KAAAlG,EAAA,EAAyFA,EAAAnX,IAAOmX,EAChG,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAA4N,EAAA,EAA8DA,EAAAC,IAAOD,EACrE,GAAAoE,EAAAjC,EAAAnC,GAAA,CACA,OAAAw8B,GAAAZ,EAAAtrC,EAAA1E,KAAAwY,IAAA1B,SAAA1C,EAAAmC,GAAAkY,EAAAvF,GAAA1Q,EAAA1Y,GAAAuT,EAAA,EAAAoN,EAAAuvB,EAAAxpC,OAAqI6M,EAAAoN,IAAOpN,GAC5Iu9B,EAAAZ,EAAA38B,KACAuV,GAAAgoB,EAAA/7B,EAAA/U,EAAAuT,EAAA28B,EAAAvhB,EAGAmsC,GAAAnyD,KAAAunC,GACA1yB,EAAA7U,KAAA+P,GAKA,UAAA+T,IAAAquC,EAAAt9C,EAAAzI,EAAA/U,IAGA8sE,GAAAn6D,GAAA1P,UAAAy1D,YAEAqU,GAAA,WACA,UAAAD,IAAAntE,KAAA8d,QAAA9d,KAAA+d,WA+CAsvD,GAAA,SAAAj4D,EAAAnU,EAAAsZ,GACA,GAAA5F,GAAA,cAAAS,GAAA,IAAAq1D,GAAApnC,EACA,cAAApiC,EAAAjB,KACA2sB,WAAAvX,EAAAmX,GAAAnX,EAAAT,IACAhO,GAAA,aAAAyO,EAAAoX,GAAApX,IACApV,KAAA2sB,WAAAvX,EAAA,kBAAAnU,GACAyrB,GAAAtX,EAAAT,EAAA+V,GAAA1qB,KAAA,SAAAoV,EAAAnU,IACAwrB,GAAArX,EAAAT,EAAA1T,EAAA,IAAAsZ,IAcA+yD,GAAA,SAAAl4D,EAAAnU,EAAAsZ,GACA,GAAAlX,GAAA,UAAA+R,GAAA,GACA,IAAAtO,UAAAC,OAAA,SAAA1D,EAAArD,KAAAkqB,MAAA7mB,OAAAqoB,MACA,UAAAzqB,EAAA,MAAAjB,MAAAkqB,MAAA7mB,EAAA,KACA,sBAAApC,GAAA,SAAA4T,MACA,OAAA7U,MAAAkqB,MAAA7mB,EAAAspB,GAAAvX,EAAAnU,EAAA,MAAAsZ,EAAA,GAAAA,KAgBAgzD,GAAA,SAAAtsE,GACA,MAAAjB,MAAAkqB,MAAA,yBAAAjpB,GACA4rB,GAAAnC,GAAA1qB,KAAA,OAAAiB,IACA2rB,GAAA,MAAA3rB,EAAA,GAAAA,EAAA,MAGAusE,GAAA,WAKA,OAJAp4D,GAAApV,KAAA+sB,MACA0gD,EAAAztE,KAAA2qB,IACA+iD,EAAA1gD,KAEApP,EAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAA4Q,EAAA,EAA2DA,EAAAnX,IAAOmX,EAClE,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAA4N,EAAA,EAA8DA,EAAAC,IAAOD,EACrE,GAAAoE,EAAAjC,EAAAnC,GAAA,CACA,GAAAqa,GAAAvF,GAAA1Q,EAAA00D,EACAtkD,IAAApQ,EAAA3D,EAAAs4D,EAAA/4D,EAAAmC,GACAkR,KAAAgH,EAAAhH,KAAAgH,EAAAjH,MAAAiH,EAAAplB,SACAme,MAAA,EACAne,SAAAolB,EAAAplB,SACAE,KAAAklB,EAAAllB,OAMA,UAAAgjB,IAAAlP,EAAA5d,KAAA+d,SAAA3I,EAAAs4D,IAGArtE,GAAA,EAiBAstE,GAAA36D,GAAA1P,SAEAwpB,IAAAxpB,UAAAqG,GAAArG,WACAy1D,YAAAjsC,GACA7nB,OAAAgoE,GACA/5D,UAAAg6D,GACA/4D,OAAAy4D,GACAj+D,MAAAk+D,GACA75D,UAAAo6D,GACAzjE,WAAA6jE,GACAjtE,KAAAotE,GAAAptE,KACAs3B,MAAA81C,GAAA91C,MACA9e,KAAA40D,GAAA50D,KACAsyB,KAAAsiC,GAAAtiC,KACA7b,MAAAm+C,GAAAn+C,MACApb,KAAAu5D,GAAAv5D,KACAzN,GAAAomE,GACA1nE,KAAAknE,GACA5gD,UAAA6gD,GACArnE,MAAAkoE,GACA1gD,WAAA2gD,GACA55D,KAAA65D,GACAxjE,OAAAijE,GACA9iD,MAAAoiD,GACAvkD,MAAA0kD,GACA7iE,SAAA8iE,GACA5iE,KAAA6iE,GA+BA,IAAAnxB,IAAA,EAEAoyB,GAAA,QAAAC,GAAAvoD,GAGA,QAAAsoD,GAAAl5D,GACA,MAAAjE,MAAAM,IAAA2D,EAAA4Q,GAKA,MARAA,MAMAsoD,EAAApyB,SAAAqyB,EAEAD,GACCpyB,IAEDsyB,GAAA,QAAAD,GAAAvoD,GAGA,QAAAwoD,GAAAp5D,GACA,SAAAjE,KAAAM,IAAA,EAAA2D,EAAA4Q,GAKA,MARAA,MAMAwoD,EAAAtyB,SAAAqyB,EAEAC,GACCtyB,IAEDuyB,GAAA,QAAAF,GAAAvoD,GAGA,QAAAyoD,GAAAr5D,GACA,QAAAA,GAAA,MAAAjE,KAAAM,IAAA2D,EAAA4Q,GAAA,EAAA7U,KAAAM,IAAA,EAAA2D,EAAA4Q,IAAA,EAKA,MARAA,MAMAyoD,EAAAvyB,SAAAqyB,EAEAE,GACCvyB,IAED5tB,GAAAnd,KAAA04D,GACA17C,GAAAG,GAAA,EAsCAS,GAAA,KACAG,GAAA,KACAD,GAAA,KACAE,GAAA,IACAE,GAAA,KACAD,GAAA,MACAE,GAAA,MACAC,GAAA,MACAC,GAAA,MACAR,GAAA,EAAAD,MAcA2/C,GAAA,QAEAC,GAAA,QAAAJ,GAAA9sD,GAGA,QAAAktD,GAAAv5D,GACA,MAAAA,OAAAqM,EAAA,GAAArM,EAAAqM,GAKA,MARAA,MAMAktD,EAAAD,UAAAH,EAEAI,GACCD,IAEDE,GAAA,QAAAL,GAAA9sD,GAGA,QAAAmtD,GAAAx5D,GACA,QAAAA,MAAAqM,EAAA,GAAArM,EAAAqM,GAAA,EAKA,MARAA,MAMAmtD,EAAAF,UAAAH,EAEAK,GACCF,IAEDG,GAAA,QAAAN,GAAA9sD,GAGA,QAAAotD,GAAAz5D,GACA,QAAAA,GAAA,KAAAA,MAAAqM,EAAA,GAAArM,EAAAqM,IAAArM,GAAA,GAAAA,IAAAqM,EAAA,GAAArM,EAAAqM,GAAA,KAKA,MARAA,MAMAotD,EAAAH,UAAAH,EAEAM,GACCH,IAEDI,GAAA,EAAA39D,KAAA04D,GACAkF,GAAA,EACAC,GAAA,GAEAC,GAAA,QAAAV,GAAA39D,EAAAxP,GAGA,QAAA6tE,GAAA75D,GACA,MAAAxE,GAAAO,KAAAM,IAAA,OAAA2D,GAAAjE,KAAAoR,KAAAd,EAAArM,GAAAhU,GAHA,GAAAqgB,GAAAtQ,KAAAspB,KAAA,GAAA7pB,EAAAO,KAAAC,IAAA,EAAAR,MAAAxP,GAAA0tE,GASA,OAHAG,GAAAF,UAAA,SAAAn+D,GAAqC,MAAA29D,GAAA39D,EAAAxP,EAAA0tE,KACrCG,EAAAD,OAAA,SAAA5tE,GAAkC,MAAAmtE,GAAA39D,EAAAxP,IAElC6tE,GACCF,GAAAC,IAEDE,GAAA,QAAAX,GAAA39D,EAAAxP,GAGA,QAAA8tE,GAAA95D,GACA,SAAAxE,EAAAO,KAAAM,IAAA,OAAA2D,OAAAjE,KAAAoR,KAAAnN,EAAAqM,GAAArgB,GAHA,GAAAqgB,GAAAtQ,KAAAspB,KAAA,GAAA7pB,EAAAO,KAAAC,IAAA,EAAAR,MAAAxP,GAAA0tE,GASA,OAHAI,GAAAH,UAAA,SAAAn+D,GAAsC,MAAA29D,GAAA39D,EAAAxP,EAAA0tE,KACtCI,EAAAF,OAAA,SAAA5tE,GAAmC,MAAAmtE,GAAA39D,EAAAxP,IAEnC8tE,GACCH,GAAAC,IAEDG,GAAA,QAAAZ,GAAA39D,EAAAxP,GAGA,QAAA+tE,GAAA/5D,GACA,QAAAA,EAAA,EAAAA,EAAA,KACAxE,EAAAO,KAAAM,IAAA,KAAA2D,GAAAjE,KAAAoR,KAAAd,EAAArM,GAAAhU,GACA,EAAAwP,EAAAO,KAAAM,IAAA,MAAA2D,GAAAjE,KAAAoR,KAAAd,EAAArM,GAAAhU,IAAA,EALA,GAAAqgB,GAAAtQ,KAAAspB,KAAA,GAAA7pB,EAAAO,KAAAC,IAAA,EAAAR,MAAAxP,GAAA0tE,GAWA,OAHAK,GAAAJ,UAAA,SAAAn+D,GAAwC,MAAA29D,GAAA39D,EAAAxP,EAAA0tE,KACxCK,EAAAH,OAAA,SAAA5tE,GAAqC,MAAAmtE,GAAA39D,EAAAxP,IAErC+tE,GACCJ,GAAAC,IAEDp/C,IACAlH,KAAA,KACAD,MAAA,EACAne,SAAA,IACAE,KAAAyjB,IAaAmhD,GAAA,SAAAt5D,GACA,GAAA/U,GACA4uB,CAEA7Z,aAAA0X,KACAzsB,EAAA+U,EAAAuV,IAAAvV,IAAA2X,QAEA1sB,EAAA2sB,MAAAiC,EAAAC,IAAAlH,KAAAX,KAAAjS,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAGA,QAAAwI,GAAA5d,KAAA8d,QAAAtd,EAAAod,EAAA7W,OAAA4Q,EAAA,EAA2DA,EAAAnX,IAAOmX,EAClE,OAAAoB,GAAAjC,EAAA8G,EAAAjG,GAAA/C,EAAAkC,EAAA/P,OAAA4N,EAAA,EAA8DA,EAAAC,IAAOD,GACrEoE,EAAAjC,EAAAnC,KACAwU,GAAApQ,EAAA3D,EAAA/U,EAAAsU,EAAAmC,EAAAmY,GAAAD,GAAAjW,EAAA1Y,GAKA,WAAAysB,IAAAlP,EAAA5d,KAAA+d,SAAA3I,EAAA/U,GAGA2S,IAAA1P,UAAAmwB,UAAA44C,GACAr5D,GAAA1P,UAAAqG,WAAA+kE,EAEA,IAAAC,KAAA,MAEA/vD,GAAA,SAAA7F,EAAA3D,GACA,GACAmV,GACA5V,EAFAkV,EAAA9Q,EAAAqQ,YAIA,IAAAS,EAAA,CACAzU,EAAA,MAAAA,EAAA,KAAAA,EAAA,EACA,KAAAT,IAAAkV,GACA,IAAAU,EAAAV,EAAAlV,IAAA0U,MAAAO,IAAAW,EAAAnV,SACA,UAAA0X,MAAA/T,IAAA41D,GAAAv5D,GAAAT,GAKA,aAGAsf,GAAA,SAAAlkB,GACA,kBACA,MAAAA,KAIAikB,GAAA,SAAAtV,EAAApJ,EAAAtC,GACAhT,KAAA0e,SACA1e,KAAAsV,OACAtV,KAAAgT,aAOAme,GAAA,WACAvxB,EAAAgP,MAAA4vD,iBACA5+D,EAAAgP,MAAAqP,4BAGAuT,IAAiBpc,KAAA,QACjBmc,IAAkBnc,KAAA,SAClBkd,IAAmBld,KAAA,UACnBmd,IAAmBnd,KAAA,UAEnBya,IACAza,KAAA,IACAkb,SAAA,SAAAlnB,IAAAkM,IACAue,MAAA,SAAA9jB,EAAAuV,GAAyB,MAAAvV,QAAA,GAAAuV,EAAA,QAAAvV,EAAA,GAAAuV,EAAA,SACzBqK,OAAA,SAAAi/C,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxB7+C,IACA3a,KAAA,IACAkb,SAAA,SAAAlnB,IAAAkM,IACAue,MAAA,SAAApiB,EAAA6T,GAAyB,MAAA7T,MAAA6T,EAAA,MAAA7T,EAAA,KAAA6T,EAAA,MAAA7T,EAAA,MACzBke,OAAA,SAAAi/C,GAAwB,MAAAA,OAAA,MAAAA,EAAA,SAGxBC,IACAz5D,KAAA,KACAkb,SAAA,qCAAAlnB,IAAAkM,IACAue,MAAA,SAAA+6C,GAAuB,MAAAA,IACvBj/C,OAAA,SAAAi/C,GAAwB,MAAAA,KAGxBx+C,IACAH,QAAA,YACAjd,UAAA,OACA4B,EAAA,YACA0Q,EAAA,YACAvE,EAAA,YACAjd,EAAA,YACAgrE,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGAz8C,IACAlN,EAAA,IACAxhB,EAAA,IACAgrE,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAx8C,IACA7d,EAAA,IACAmM,EAAA,IACA+tD,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGA77C,IACAnD,QAAA,EACAjd,UAAA,EACA4B,EAAA,KACA0Q,EAAA,EACAvE,EAAA,KACAjd,GAAA,EACAgrE,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGA57C,IACApD,QAAA,EACAjd,UAAA,EACA4B,GAAA,EACA0Q,EAAA,KACAvE,EAAA,EACAjd,EAAA,KACAgrE,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GAyCAj/C,GAAA,WACA,MAAAJ,IAAAi/C,KAyZAjtD,GAAAnR,KAAAmR,IACAC,GAAApR,KAAAoR,IACAqtD,GAAAz+D,KAAA04D,GACAgG,GAAAD,GAAA,EACAE,GAAA,EAAAF,GACAG,GAAA5+D,KAAAC,IAWA4+D,GAAA,WAMA,QAAAA,GAAAjqD,GACA,GAOAzR,GACA7D,EACA+mB,EACAjY,EACAlK,EACAgD,EAZA/C,EAAAyQ,EAAAte,OACAwoE,KACAC,EAAA5oC,GAAAhyB,GACA66D,KACAC,KACA9xD,EAAA8xD,EAAA9xD,OAAA,GAAA3W,OAAA2N,GACAumD,EAAA,GAAAl0D,OAAA2N,IASkB,KAAlBhB,EAAA,EAAAe,GAAA,IAAkBA,EAAAC,GAAA,CACE,IAApB7E,EAAA,EAAA4H,GAAA,IAAoBA,EAAA/C,GACpB7E,GAAAsV,EAAA1Q,GAAAgD,EAEA43D,GAAAvmE,KAAA+G,GACA0/D,EAAAzmE,KAAA49B,GAAAhyB,IACAhB,GAAA7D,EAuBkB,IAnBlB4/D,GAAAH,EAAAzzB,KAAA,SAAA7rC,EAAAC,GACA,MAAAw/D,GAAAJ,EAAAr/D,GAAAq/D,EAAAp/D,MAIAy/D,GAAAH,EAAAvnE,QAAA,SAAAK,EAAAoM,GACApM,EAAAwzC,KAAA,SAAA7rC,EAAAC,GACA,MAAAy/D,GAAAvqD,EAAA1Q,GAAAzE,GAAAmV,EAAA1Q,GAAAxE,QAOAyD,EAAAy7D,GAAA,EAAAD,GAAAjmB,EAAAv0C,GAAAhB,EACAiL,EAAAjL,EAAAu1C,EAAAimB,GAAAx6D,EAIA7E,EAAA,EAAA4E,GAAA,IAAkBA,EAAAC,GAAA,CACG,IAArBkiB,EAAA/mB,EAAA4H,GAAA,IAAqBA,EAAA/C,GAAA,CACrB,GAAAi7D,GAAAL,EAAA76D,GACAm7D,EAAAL,EAAAI,GAAAl4D,GACAuC,EAAAmL,EAAAwqD,GAAAC,GACA/rC,EAAAh0B,EACAuzB,EAAAvzB,GAAAmK,EAAAtG,CACAunD,GAAA2U,EAAAl7D,EAAAi7D,IACAh5D,MAAAg5D,EACAE,SAAAD,EACA/6C,WAAAgP,EACA9O,SAAAqO,EACAriC,MAAAiZ,GAGA0D,EAAAiyD,IACAh5D,MAAAg5D,EACA96C,WAAA+B,EACA7B,SAAAllB,EACA9O,MAAAsuE,EAAAM,IAEA9/D,GAAA8O,EAIW,IAAXlK,GAAA,IAAWA,EAAAC,GACK,IAAhB+C,EAAAhD,EAAA,IAAgBgD,EAAA/C,GAAA,CAChB,GAAAwf,GAAA+mC,EAAAxjD,EAAA/C,EAAAD,GACA+J,EAAAy8C,EAAAxmD,EAAAC,EAAA+C,IACAyc,EAAAnzB,OAAAyd,EAAAzd,QACAyuE,EAAA1mE,KAAAorB,EAAAnzB,MAAAyd,EAAAzd,OACiBmzB,OAAA1V,SAAA0V,IACAA,SAAA1V,WAKjB,MAAAsxD,GAAAN,EAAA3zB,KAAAi0B,GAAAN,EAvFA,GAAAvmB,GAAA,EACAwmB,EAAA,KACAC,EAAA,KACAI,EAAA,IAuGA,OAhBAV,GAAAnmB,SAAA,SAAA90C,GACA,MAAAvN,WAAAC,QAAAoiD,EAAAkmB,GAAA,EAAAh7D,GAAAi7D,GAAAnmB,GAGAmmB,EAAAK,WAAA,SAAAt7D,GACA,MAAAvN,WAAAC,QAAA4oE,EAAAt7D,EAAAi7D,GAAAK,GAGAL,EAAAM,cAAA,SAAAv7D,GACA,MAAAvN,WAAAC,QAAA6oE,EAAAv7D,EAAAi7D,GAAAM,GAGAN,EAAAU,WAAA,SAAA37D,GACA,MAAAvN,WAAAC,QAAA,MAAAsN,EAAA27D,EAAA,MAAAA,EAAA97C,GAAA7f,QAAAi7D,GAAAU,KAAA37D,GAGAi7D,GAGAW,GAAAhpE,MAAA3D,UAAAiR,MAEA27D,GAAA,SAAAngE,GACA,kBACA,MAAAA,KAIAogE,GAAA1/D,KAAA04D,GACAiH,GAAA,EAAAD,GACAE,GAAA,KACAC,GAAAF,GAAAC,EAYAh8C,IAAA/wB,UAAA2P,GAAA3P,WACAy1D,YAAA1kC,GACA23B,OAAA,SAAAj8C,EAAA0B,GACAzR,KAAAqU,GAAA,KAAArU,KAAAs0B,IAAAt0B,KAAAw0B,KAAAzkB,GAAA,KAAA/P,KAAAu0B,IAAAv0B,KAAAy0B,KAAAhjB,IAEA8+D,UAAA,WACA,OAAAvwE,KAAAw0B,MACAx0B,KAAAw0B,IAAAx0B,KAAAs0B,IAAAt0B,KAAAy0B,IAAAz0B,KAAAu0B,IACAv0B,KAAAqU,GAAA,MAGAm8D,OAAA,SAAAzgE,EAAA0B,GACAzR,KAAAqU,GAAA,KAAArU,KAAAw0B,KAAAzkB,GAAA,KAAA/P,KAAAy0B,KAAAhjB,IAEAg/D,iBAAA,SAAAz5C,EAAAC,EAAAlnB,EAAA0B,GACAzR,KAAAqU,GAAA,MAAA2iB,EAAA,MAAAC,EAAA,KAAAj3B,KAAAw0B,KAAAzkB,GAAA,KAAA/P,KAAAy0B,KAAAhjB,IAEAw6C,cAAA,SAAAj1B,EAAAC,EAAA+U,EAAAC,EAAAl8B,EAAA0B,GACAzR,KAAAqU,GAAA,MAAA2iB,EAAA,MAAAC,EAAA,MAAA+U,EAAA,MAAAC,EAAA,KAAAjsC,KAAAw0B,KAAAzkB,GAAA,KAAA/P,KAAAy0B,KAAAhjB,IAEAi/D,MAAA,SAAA15C,EAAAC,EAAA+U,EAAAC,EAAAvrB,GACAsW,KAAAC,KAAA+U,KAAAC,KAAAvrB,IACA,IAAAoW,GAAA92B,KAAAw0B,IACAuC,EAAA/2B,KAAAy0B,IACAie,EAAA1G,EAAAhV,EACA2b,EAAA1G,EAAAhV,EACA2yB,EAAA9yB,EAAAE,EACA6yB,EAAA9yB,EAAAE,EACA05C,EAAA/mB,IAAAC,GAGA,IAAAnpC,EAAA,WAAA7L,OAAA,oBAAA6L,EAGA,WAAA1gB,KAAAw0B,IACAx0B,KAAAqU,GAAA,KAAArU,KAAAw0B,IAAAwC,GAAA,KAAAh3B,KAAAy0B,IAAAwC,OAIA,IAAA05C,EAAAN,GAKA,GAAA5/D,KAAAY,IAAAw4C,EAAAnX,EAAAC,EAAAiX,GAAAymB,IAAA3vD,EAKA,CACA,GAAAkwD,GAAA5kC,EAAAlV,EACA+5C,EAAA5kC,EAAAlV,EACA+5C,EAAAp+B,IAAAC,IACAo+B,EAAAH,IAAAC,IACAG,EAAAvgE,KAAAqS,KAAAguD,GACAG,EAAAxgE,KAAAqS,KAAA6tD,GACA3vD,EAAAN,EAAAjQ,KAAAs+B,KAAAohC,GAAA1/D,KAAAopB,MAAAi3C,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GACAC,EAAAlwD,EAAAiwD,EACAE,EAAAnwD,EAAAgwD;AAGAvgE,KAAAY,IAAA6/D,EAAA,GAAAb,KACArwE,KAAAqU,GAAA,KAAA2iB,EAAAk6C,EAAAtnB,GAAA,KAAA3yB,EAAAi6C,EAAArnB,IAGA7pD,KAAAqU,GAAA,IAAAqM,EAAA,IAAAA,EAAA,WAAAmpC,EAAA+mB,EAAAhnB,EAAAinB,GAAA,KAAA7wE,KAAAw0B,IAAAwC,EAAAm6C,EAAAz+B,GAAA,KAAA1yC,KAAAy0B,IAAAwC,EAAAk6C,EAAAx+B,OApBA3yC,MAAAqU,GAAA,KAAArU,KAAAw0B,IAAAwC,GAAA,KAAAh3B,KAAAy0B,IAAAwC,UAuBA+7B,IAAA,SAAAjjD,EAAA0B,EAAAiP,EAAAqjB,EAAAT,EAAA8tC,GACArhE,KAAA0B,KAAAiP,IACA,IAAA7B,GAAA6B,EAAAjQ,KAAAmR,IAAAmiB,GACAjlB,EAAA4B,EAAAjQ,KAAAoR,IAAAkiB,GACAjN,EAAA/mB,EAAA8O,EACAkY,EAAAtlB,EAAAqN,EACA6qC,EAAA,EAAAynB,EACA39B,EAAA29B,EAAArtC,EAAAT,IAAAS,CAGA,IAAArjB,EAAA,WAAA7L,OAAA,oBAAA6L,EAGA,QAAA1gB,KAAAw0B,IACAx0B,KAAAqU,GAAA,IAAAyiB,EAAA,IAAAC,GAIAtmB,KAAAY,IAAArR,KAAAw0B,IAAAsC,GAAAu5C,IAAA5/D,KAAAY,IAAArR,KAAAy0B,IAAAsC,GAAAs5C,MACArwE,KAAAqU,GAAA,IAAAyiB,EAAA,IAAAC,GAIArW,IAGA+yB,EAAA,IAAAA,IAAA28B,OAGA38B,EAAA68B,GACAtwE,KAAAqU,GAAA,IAAAqM,EAAA,IAAAA,EAAA,QAAAipC,EAAA,KAAA55C,EAAA8O,GAAA,KAAApN,EAAAqN,GAAA,IAAA4B,EAAA,IAAAA,EAAA,QAAAipC,EAAA,KAAA3pD,KAAAw0B,IAAAsC,GAAA,KAAA92B,KAAAy0B,IAAAsC,GAIA0c,EAAA48B,KACArwE,KAAAqU,GAAA,IAAAqM,EAAA,IAAAA,EAAA,SAAA+yB,GAAA08B,IAAA,IAAAxmB,EAAA,KAAA3pD,KAAAw0B,IAAAzkB,EAAA2Q,EAAAjQ,KAAAmR,IAAA0hB,IAAA,KAAAtjC,KAAAy0B,IAAAhjB,EAAAiP,EAAAjQ,KAAAoR,IAAAyhB,OAGAu3B,KAAA,SAAA9qD,EAAA0B,EAAA3N,EAAAK,GACAnE,KAAAqU,GAAA,KAAArU,KAAAs0B,IAAAt0B,KAAAw0B,KAAAzkB,GAAA,KAAA/P,KAAAu0B,IAAAv0B,KAAAy0B,KAAAhjB,GAAA,MAAA3N,EAAA,MAAAK,EAAA,KAAAL,EAAA,KAEA4S,SAAA,WACA,MAAA1W,MAAAqU,GAwBA,IAAAg9D,IAAA,WAQA,QAAAA,KACA,GAAA5lB,GACAC,EAAAukB,GAAA1vE,KAAAuG,WACAia,EAAAqT,EAAA/sB,MAAArH,KAAA0rD,GACAh3C,EAAAgK,EAAArX,MAAArH,KAAA0rD,GACA4lB,GAAAz8C,EAAAxtB,MAAArH,MAAA0rD,EAAA,GAAA3qC,EAAA2qC,IACA6lB,EAAAx8C,EAAA1tB,MAAArH,KAAA0rD,GAAAyjB,GACAqC,EAAAv8C,EAAA5tB,MAAArH,KAAA0rD,GAAAyjB,GACAsC,EAAAH,EAAA1vD,GAAA2vD,GACAljC,EAAAijC,EAAAzvD,GAAA0vD,GACAG,GAAA78C,EAAAxtB,MAAArH,MAAA0rD,EAAA,GAAAh3C,EAAAg3C,IACAimB,EAAA58C,EAAA1tB,MAAArH,KAAA0rD,GAAAyjB,GACAyC,EAAA38C,EAAA5tB,MAAArH,KAAA0rD,GAAAyjB,EAaA,IAXAh9D,MAAAs5C,EAAAx4C,MAEAd,EAAA65C,OAAAylB,EAAApjC,GACAl8B,EAAA6gD,IAAA,IAAAse,EAAAC,EAAAC,GACAD,IAAAI,GAAAH,IAAAI,IACAz/D,EAAAs+D,iBAAA,IAAAiB,EAAA9vD,GAAA+vD,GAAAD,EAAA7vD,GAAA8vD,IACAx/D,EAAA6gD,IAAA,IAAA0e,EAAAC,EAAAC,IAEAz/D,EAAAs+D,iBAAA,IAAAgB,EAAApjC,GACAl8B,EAAAo+D,YAEA9kB,EAAA,MAAAt5C,GAAA,KAAAs5C,EAAA,SAhCA,GAAAr3B,GAAAM,GACAhW,EAAAiW,GACAE,EAAAD,GACAG,EAAAD,GACAG,EAAAD,GACA7iB,EAAA,IAsDA,OAxBAk/D,GAAAx8C,OAAA,SAAAxgB,GACA,MAAAvN,WAAAC,QAAA8tB,EAAA,kBAAAxgB,KAAA67D,IAAA77D,GAAAg9D,GAAAx8C,GAGAw8C,EAAAt8C,WAAA,SAAA1gB,GACA,MAAAvN,WAAAC,QAAAguB,EAAA,kBAAA1gB,KAAA67D,IAAA77D,GAAAg9D,GAAAt8C,GAGAs8C,EAAAp8C,SAAA,SAAA5gB,GACA,MAAAvN,WAAAC,QAAAkuB,EAAA,kBAAA5gB,KAAA67D,IAAA77D,GAAAg9D,GAAAp8C,GAGAo8C,EAAAj9C,OAAA,SAAA/f,GACA,MAAAvN,WAAAC,QAAAqtB,EAAA/f,EAAAg9D,GAAAj9C,GAGAi9C,EAAA3yD,OAAA,SAAArK,GACA,MAAAvN,WAAAC,QAAA2X,EAAArK,EAAAg9D,GAAA3yD,GAGA2yD,EAAAl/D,QAAA,SAAAkC,GACA,MAAAvN,WAAAC,QAAAoL,EAAA,MAAAkC,EAAA,KAAAA,EAAAg9D,GAAAl/D,GAGAk/D,GAGA/X,GAAA,GAIApkC,IAAA5xB,UAAA6xB,GAAA7xB,WACAy1D,YAAA7jC,GACA6jB,IAAA,SAAA11C,GACA,MAAAi2D,IAAAj2D,IAAArD,OAEAkO,IAAA,SAAA7K,GACA,MAAArD,MAAAs5D,GAAAj2D,IAEAkS,IAAA,SAAAlS,EAAApC,GAEA,MADAjB,MAAAs5D,GAAAj2D,GAAApC,EACAjB,MAEA+J,OAAA,SAAA1G,GACA,GAAA6sB,GAAAopC,GAAAj2D,CACA,OAAA6sB,KAAAlwB,mBAAAkwB,IAEA2hD,MAAA,WACA,OAAA3hD,KAAAlwB,MAAAkwB,EAAA,KAAAopC,UAAAt5D,MAAAkwB,IAEAroB,KAAA,WACA,GAAAA,KACA,QAAAqoB,KAAAlwB,MAAAkwB,EAAA,KAAAopC,IAAAzxD,EAAAmB,KAAAknB,EAAA3b,MAAA,GACA,OAAA1M,IAEAwB,OAAA,WACA,GAAAA,KACA,QAAA6mB,KAAAlwB,MAAAkwB,EAAA,KAAAopC,IAAAjwD,EAAAL,KAAAhJ,KAAAkwB,GACA,OAAA7mB,IAEAF,QAAA,WACA,GAAAA,KACA,QAAA+mB,KAAAlwB,MAAAkwB,EAAA,KAAAopC,IAAAnwD,EAAAH,MAAyE3F,IAAA6sB,EAAA3b,MAAA,GAAAtT,MAAAjB,KAAAkwB,IACzE,OAAA/mB,IAEAkiC,KAAA,WACA,GAAAA,GAAA,CACA,QAAAnb,KAAAlwB,MAAAkwB,EAAA,KAAAopC,MAAAjuB,CACA,OAAAA,IAEA7b,MAAA,WACA,OAAAU,KAAAlwB,MAAA,GAAAkwB,EAAA,KAAAopC,GAAA,QACA,WAEAllD,KAAA,SAAAtE,GACA,OAAAogB,KAAAlwB,MAAAkwB,EAAA,KAAAopC,IAAAxpD,EAAA9P,KAAAkwB,KAAA3b,MAAA,GAAAvU,OA0BA,IAAAiJ,IAAA,WAOA,QAAA5B,GAAA+6B,EAAAyJ,EAAAimC,EAAAC,GACA,GAAAlmC,GAAAhkC,EAAAd,OAEA,MADA,OAAAirE,GAAA5vC,EAAA2Z,KAAAi2B,GACA,MAAAC,IAAA7vC,IAYA,KATA,GAGAjpB,GACAlY,EAEAoI,EANAsL,GAAA,EACAC,EAAAwtB,EAAAr7B,OACA1D,EAAAwE,EAAAgkC,KAGAqmC,EAAA/8C,KAEA4P,EAAA+sC,MAEAn9D,EAAAC,IACAvL,EAAA6oE,EAAAhkE,IAAAiL,EAAA9V,EAAApC,EAAAmhC,EAAAztB,IAAA,KACAtL,EAAAL,KAAA/H,GAEAixE,EAAA38D,IAAA4D,GAAAlY,GAQA,OAJAixE,GAAA99D,KAAA,SAAA/K,EAAAhG,GACA0uE,EAAAhtC,EAAA1hC,EAAAgE,EAAAgC,EAAAwiC,EAAAimC,EAAAC,MAGAhtC,EAGA,QAAA57B,GAAAC,EAAAyiC,GACA,KAAAA,EAAAhkC,EAAAd,OAAA,MAAAqC,EACA,IAAAg5B,GAAA+vC,EAAAC,EAAAvmC,EAAA,EAGA,OAFA,OAAAomC,GAAApmC,GAAAhkC,EAAAd,OAAAq7B,EAAAh5B,EAAAD,WACAi5B,KAAAh5B,EAAAgL,KAAA,SAAA8F,EAAAtG,GAA8CwuB,EAAAp5B,MAAa3F,IAAAuQ,EAAAvK,OAAAF,EAAA+Q,EAAA2xB,QAC3D,MAAAsmC,EAAA/vC,EAAA2Z,KAAA,SAAA7rC,EAAAC,GAAwD,MAAAgiE,GAAAjiE,EAAA7M,IAAA8M,EAAA9M,OAAgC++B,EAzCxF,GAEA4vC,GACAC,EACAhpE,EAJApB,KACAuqE,IA2CA,OAAAnpE,IACAmsB,OAAA,SAAAgN,GAA6B,MAAA/6B,GAAA+6B,EAAA,EAAA9M,GAAAC,KAC7BnsB,IAAA,SAAAg5B,GAA0B,MAAA/6B,GAAA+6B,EAAA,EAAA5M,GAAAC,KAC1BtsB,QAAA,SAAAi5B,GAA8B,MAAAj5B,GAAA9B,EAAA+6B,EAAA,EAAA5M,GAAAC,IAAA,IAC9BpyB,IAAA,SAAAkF,GAAoC,MAAdV,GAAAmB,KAAAT,GAAcU,GACpCmpE,SAAA,SAAAh/D,GAAkE,MAAnCg/D,GAAAvqE,EAAAd,OAAA,GAAAqM,EAAmCnK,GAClE+oE,WAAA,SAAA5+D,GAAqD,MAApB4+D,GAAA5+D,EAAoBnK,GACrDgpE,OAAA,SAAAniE,GAAqC,MAAZmiE,GAAAniE,EAAY7G,KAsBrCopE,GAAAl9C,GAAA7xB,SAEAoyB,IAAApyB,UAAAqyB,GAAAryB,WACAy1D,YAAArjC,GACAqjB,IAAAs5B,GAAAt5B,IACAr9B,IAAA,SAAAza,GAGA,MAFAA,IAAA,GACAjB,KAAAs5D,GAAAr4D,KACAjB,MAEA+J,OAAAsoE,GAAAtoE,OACA8nE,MAAAQ,GAAAR,MACAxoE,OAAAgpE,GAAAxqE,KACAwjC,KAAAgnC,GAAAhnC,KACA7b,MAAA6iD,GAAA7iD,MACApb,KAAAi+D,GAAAj+D,KAmBA,IAAAvM,IAAA,SAAAuB,GACA,GAAAvB,KACA,QAAAxE,KAAA+F,GAAAvB,EAAAmB,KAAA3F,EACA,OAAAwE,IAGAwB,GAAA,SAAAD,GACA,GAAAC,KACA,QAAAhG,KAAA+F,GAAAC,EAAAL,KAAAI,EAAA/F,GACA,OAAAgG,IAGAF,GAAA,SAAAC,GACA,GAAAD,KACA,QAAA9F,KAAA+F,GAAAD,EAAAH,MAAqC3F,MAAApC,MAAAmI,EAAA/F,IACrC,OAAA8F,IAGAmpE,MACAC,MACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GA+BAC,GAAA,SAAAC,GAIA,QAAAptD,GAAA9R,EAAA5D,GACA,GAAA+iE,GAAAh9C,EAAAO,EAAA08C,EAAAp/D,EAAA,SAAAwiB,EAAAvhB,GACA,MAAAk+D,KAAA38C,EAAAvhB,EAAA,IACAkhB,EAAAK,OAAA28C,EAAA/iE,EAAAmmB,GAAAC,EAAApmB,GAAA8lB,GAAAM,MAGA,OADAE,GAAAP,UACAO,EAGA,QAAA08C,GAAAp/D,EAAA5D,GAaA,QAAAijE,KACA,GAAAC,EAAA,MAAAT,GACA,IAAAU,EAAA,MAAAA,IAAA,EAAAX,EAGA,IAAA39D,GAAAlU,EAAAkX,EAAAuqC,CACA,IAAAxuC,EAAA4qC,WAAA3mC,KAAA66D,GAAA,CACA,KAAAtwB,IAAAlwB,GAAAte,EAAA4qC,WAAA4D,KAAAswB,IAAA9+D,EAAA4qC,aAAA4D,KAAAswB,KAIA,OAHA79D,EAAAutC,IAAAlwB,EAAAghD,GAAA,GACAvyE,EAAAiT,EAAA4qC,WAAA4D,QAAAuwB,GAAAQ,GAAA,EACAxyE,IAAAiyE,KAAgCO,GAAA,EAAYv/D,EAAA4qC,WAAA4D,KAAAuwB,MAAAvwB,GAC5CxuC,EAAAa,MAAAoD,EAAA,EAAAhD,EAAA,GAAAswC,QAAA,WAIA,KAAA/C,EAAAlwB,GAAA,CACA,IAAAvxB,EAAAiT,EAAA4qC,WAAA3pC,EAAAutC,QAAAuwB,GAAAQ,GAAA,MACA,IAAAxyE,IAAAiyE,GAAgCO,GAAA,EAAYv/D,EAAA4qC,WAAA4D,KAAAuwB,MAAAvwB,MAC5C,IAAAzhD,IAAAyyE,EAAA,QACA,OAAAx/D,GAAAa,MAAAoD,EAAAhD,GAIA,MAAAq+D,IAAA,EAAAt/D,EAAAa,MAAAoD,EAAAqa,GAnCA,GAIAtd,GAJA0hB,KACApE,EAAAte,EAAA3M,OACAm7C,EAAA,EACAttC,EAAA,EAEAo+D,EAAAhhD,GAAA,EACAihD,GAAA,CAgCA,KA7BAv/D,EAAA4qC,WAAAtsB,EAAA,KAAAygD,MAAAzgD,EACAte,EAAA4qC,WAAAtsB,EAAA,KAAA0gD,MAAA1gD,GA4BAtd,EAAAq+D,OAAAR,IAAA,CAEA,IADA,GAAAr8C,MACAxhB,IAAA49D,IAAA59D,IAAA69D,IAAAr8C,EAAAltB,KAAA0L,KAAAq+D,GACAjjE,IAAA,OAAAomB,EAAApmB,EAAAomB,EAAAthB,OACAwhB,EAAAptB,KAAAktB,GAGA,MAAAE,GAGA,QAAA7nB,GAAA6nB,EAAAP,GAEA,MADA,OAAAA,MAAAM,GAAAC,KACAP,EAAAzsB,IAAA+pE,GAAA3sD,KAAAosD,IAAAtrE,OAAA8uB,EAAAhtB,IAAA,SAAA8sB,GACA,MAAAL,GAAAzsB,IAAA,SAAAktB,GACA,MAAA68C,GAAAj9C,EAAAI,MACO9P,KAAAosD,MACFpsD,KAAA,MAGL,QAAA4sD,GAAAh9C,GACA,MAAAA,GAAAhtB,IAAAiqE,GAAA7sD,KAAA,MAGA,QAAA6sD,GAAAn9C,GACA,MAAAA,GAAA9sB,IAAA+pE,GAAA3sD,KAAAosD,GAGA,QAAAO,GAAAz/D,GACA,aAAAA,EAAA,GACA4/D,EAAA92B,KAAA9oC,GAAA,QAAAA,EAAAuxC,QAAA,eACAvxC,EAjFA,GAAA4/D,GAAA,GAAAnuB,QAAA,KAAAytB,EAAA,SACAM,EAAAN,EAAAt0B,WAAA,EAmFA,QACA94B,QACAstD,YACAvkE,SACA6kE,eAIAG,GAAAZ,GAAA,KAEAa,GAAAD,GAAA/tD,MACAiuD,GAAAF,GAAAT,UACAY,GAAAH,GAAAhlE,OACAolE,GAAAJ,GAAAH,WAEAQ,GAAAjB,GAAA,MAEAkB,GAAAD,GAAApuD,MACAsuD,GAAAF,GAAAd,UACAiB,GAAAH,GAAArlE,OACAylE,GAAAJ,GAAAR,WAEAa,GAAA,SAAAlkE,EAAA0B,GAMA,QAAAyiE,KACA,GAAAv/D,GAEAoE,EADAnE,EAAAijB,EAAA9wB,OAEAotE,EAAA,EACAC,EAAA,CAEA,KAAAz/D,EAAA,EAAeA,EAAAC,IAAOD,EACtBoE,EAAA8e,EAAAljB,GAAAw/D,GAAAp7D,EAAAhJ,EAAAqkE,GAAAr7D,EAAAtH,CAGA,KAAA0iE,IAAAv/D,EAAA7E,EAAAqkE,IAAAx/D,EAAAnD,EAAAkD,EAAA,EAAiDA,EAAAC,IAAOD,EACxDoE,EAAA8e,EAAAljB,GAAAoE,EAAAhJ,GAAAokE,EAAAp7D,EAAAtH,GAAA2iE,EAjBA,GAAAv8C,EAiCA,OA/BA,OAAA9nB,MAAA,GACA,MAAA0B,MAAA,GAkBAyiE,EAAA/jD,WAAA,SAAA9b,GACAwjB,EAAAxjB,GAGA6/D,EAAAnkE,EAAA,SAAAsE,GACA,MAAAvN,WAAAC,QAAAgJ,GAAAsE,EAAA6/D,GAAAnkE,GAGAmkE,EAAAziE,EAAA,SAAA4C,GACA,MAAAvN,WAAAC,QAAA0K,GAAA4C,EAAA6/D,GAAAziE,GAGAyiE,GAGAG,GAAA,SAAAtkE,GACA,kBACA,MAAAA,KAIAukE,GAAA,WACA,aAAA7jE,KAAAohC,SAAA,KAGA0iC,GAAA,SAAAhsE,GACA,GAAAwH,IAAA/P,KAAAk3B,GAAA32B,KAAA,KAAAgI,GACAkJ,GAAAzR,KAAAm3B,GAAA52B,KAAA,KAAAgI,EACA,OAAAmT,IAAA1b,KAAAw3B,MAAAznB,EAAA0B,GAAA1B,EAAA0B,EAAAlJ,IAmFAisE,GAAA,SAAAzkE,EAAA0B,GACA,GAAA0S,MAAApU,OAAAoU,MAAA1S,MAAA,MAAAzR,KAEA,IAAA82B,GAAA92B,KAAAs0B,IACAyC,EAAA/2B,KAAAu0B,IACAyC,EAAAh3B,KAAAw0B,IACAyC,EAAAj3B,KAAAy0B,GAKA,IAAAtQ,MAAA2S,GACAE,GAAAF,EAAArmB,KAAAG,MAAAb,IAAA,EACAknB,GAAAF,EAAAtmB,KAAAG,MAAAa,IAAA,MAIA,MAAAqlB,EAAA/mB,KAAAinB,GAAAD,EAAAtlB,KAAAwlB,GAiCA,MAAAj3B,KAhCA,IAEAyY,GACA9D,EAHAuN,EAAA8U,EAAAF,EACA/d,EAAA/Y,KAAA42B,KAIA,QAAAjiB,GAAAlD,GAAAslB,EAAAE,GAAA,MAAAlnB,GAAA+mB,EAAAE,GAAA,GACA,OACA,EAAAve,GAAA,GAAAxR,OAAA,GAAAwR,EAAA9D,GAAAoE,IAAAN,QACAyJ,GAAA,EAAA8U,EAAAF,EAAA5U,EAAA+U,EAAAF,EAAA7U,EAAAnS,EAAAinB,GAAAvlB,EAAAwlB,EACA,MAEA,QACA,EAAAxe,GAAA,GAAAxR,OAAA,GAAAwR,EAAA9D,GAAAoE,IAAAN,QACAyJ,GAAA,EAAA4U,EAAAE,EAAA9U,EAAA+U,EAAAF,EAAA7U,EAAA4U,EAAA/mB,GAAA0B,EAAAwlB,EACA,MAEA,QACA,EAAAxe,GAAA,GAAAxR,OAAA,GAAAwR,EAAA9D,GAAAoE,IAAAN,QACAyJ,GAAA,EAAA8U,EAAAF,EAAA5U,EAAA6U,EAAAE,EAAA/U,EAAAnS,EAAAinB,GAAAD,EAAAtlB,EACA,MAEA,QACA,EAAAgH,GAAA,GAAAxR,OAAA,GAAAwR,EAAA9D,GAAAoE,IAAAN,QACAyJ,GAAA,EAAA4U,EAAAE,EAAA9U,EAAA6U,EAAAE,EAAA/U,EAAA4U,EAAA/mB,GAAAgnB,EAAAtlB,GAKAzR,KAAA42B,OAAA52B,KAAA42B,MAAA7vB,SAAA/G,KAAA42B,MAAA7d,GAUA,MAJA/Y,MAAAs0B,IAAAwC,EACA92B,KAAAu0B,IAAAwC,EACA/2B,KAAAw0B,IAAAwC,EACAh3B,KAAAy0B,IAAAwC,EACAj3B,MAGAy0E,GAAA,WACA,GAAAhtE,KAIA,OAHAzH,MAAA00E,MAAA,SAAA37D,GACA,IAAAA,EAAAhS,OAAA,EAAAU,GAAAuB,KAAA+P,EAAAtR,YAA8CsR,IAAAqe,QAE9C3vB,GAGAktE,GAAA,SAAAtgE,GACA,MAAAvN,WAAAC,OACA/G,KAAAw3B,OAAAnjB,EAAA,OAAAA,EAAA,OAAAmjB,OAAAnjB,EAAA,OAAAA,EAAA,OACA8P,MAAAnkB,KAAAs0B,KAAAzyB,SAAA7B,KAAAs0B,IAAAt0B,KAAAu0B,MAAAv0B,KAAAw0B,IAAAx0B,KAAAy0B,OAGAmgD,GAAA,SAAA77D,EAAA+d,EAAAC,EAAAC,EAAAC,GACAj3B,KAAA+Y,OACA/Y,KAAA82B,KACA92B,KAAA+2B,KACA/2B,KAAAg3B,KACAh3B,KAAAi3B,MAGA49C,GAAA,SAAA9kE,EAAA0B,EAAAojB,GACA,GAAAptB,GAGAuvB,EACAC,EACA+U,EACAC,EAKA/lB,EACAvR,EAXAmiB,EAAA92B,KAAAs0B,IACAyC,EAAA/2B,KAAAu0B,IAKAse,EAAA7yC,KAAAw0B,IACAse,EAAA9yC,KAAAy0B,IACAqgD,KACA/7D,EAAA/Y,KAAA42B,KAYA,KARA7d,GAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAA77D,EAAA+d,EAAAC,EAAA8b,EAAAC,IACA,MAAAje,IAAAlM,KAEAmO,EAAA/mB,EAAA8kB,EAAAkC,EAAAtlB,EAAAojB,EACAge,EAAA9iC,EAAA8kB,EAAAie,EAAArhC,EAAAojB,EACAA,MAGA3O,EAAA4uD,EAAAlvD,OAGA,OAAA7M,EAAAmN,EAAAnN,QACAie,EAAA9Q,EAAA4Q,IAAA+b,IACA5b,EAAA/Q,EAAA6Q,IAAA+b,IACA9G,EAAA9lB,EAAA8Q,IAAAF,IACAmV,EAAA/lB,EAAA+Q,IAAAF,GAGA,GAAAhe,EAAAhS,OAAA,CACA,GAAAyvB,IAAAQ,EAAAgV,GAAA,EACAvV,GAAAQ,EAAAgV,GAAA,CAEA6oC,GAAA9rE,KACA,GAAA4rE,IAAA77D,EAAA,GAAAyd,EAAAC,EAAAuV,EAAAC,GACA,GAAA2oC,IAAA77D,EAAA,GAAAie,EAAAP,EAAAD,EAAAyV,GACA,GAAA2oC,IAAA77D,EAAA,GAAAyd,EAAAS,EAAA+U,EAAAvV,GACA,GAAAm+C,IAAA77D,EAAA,GAAAie,EAAAC,EAAAT,EAAAC,KAIA9hB,GAAAlD,GAAAglB,IAAA,EAAA1mB,GAAAymB,KACAtQ,EAAA4uD,IAAA/tE,OAAA,GACA+tE,IAAA/tE,OAAA,GAAA+tE,IAAA/tE,OAAA,EAAA4N,GACAmgE,IAAA/tE,OAAA,EAAA4N,GAAAuR,OAKA,CACA,GAAArH,GAAA9O,GAAA/P,KAAAk3B,GAAA32B,KAAA,KAAAwY,EAAAtR,MACAqX,EAAArN,GAAAzR,KAAAm3B,GAAA52B,KAAA,KAAAwY,EAAAtR,MACAqkC,EAAAjtB,IAAAC,GACA,IAAAgtB,EAAAjX,EAAA,CACA,GAAAtsB,GAAAkI,KAAAqS,KAAA+R,EAAAiX,EACAhV,GAAA/mB,EAAAxH,EAAAwuB,EAAAtlB,EAAAlJ,EACAsqC,EAAA9iC,EAAAxH,EAAAuqC,EAAArhC,EAAAlJ,EACAd,EAAAsR,EAAAtR,MAKA,MAAAA,IAGAstE,GAAA,SAAAxsE,GACA,GAAA4b,MAAApU,GAAA/P,KAAAk3B,GAAA32B,KAAA,KAAAgI,KAAA4b,MAAA1S,GAAAzR,KAAAm3B,GAAA52B,KAAA,KAAAgI,IAAA,MAAAvI,KAEA,IAAAyY,GAEAu8D,EACAhhC,EACA5c,EAKArnB,EACA0B,EACA+kB,EACAC,EACAhyB,EACAG,EACA+P,EACAgD,EAfAoB,EAAA/Y,KAAA42B,MAIAE,EAAA92B,KAAAs0B,IACAyC,EAAA/2B,KAAAu0B,IACAyC,EAAAh3B,KAAAw0B,IACAyC,EAAAj3B,KAAAy0B,GAWA,KAAA1b,EAAA,MAAA/Y,KAIA,IAAA+Y,EAAAhS,OAAA,QAGA,IAFAtC,EAAAsL,IAAAymB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAmDQ,EAAAR,GACnD5xB,EAAA6M,IAAAglB,GAAAM,EAAAE,GAAA,IAAAF,EAAAN,EAAoDQ,EAAAR,EACpDhe,EAAAM,QAAApE,EAAA/P,GAAA,EAAAH,IAAA,MAAAzE,KACA,KAAA+Y,EAAAhS,OAAA,OACA0R,EAAA9D,EAAA,MAAA8D,EAAA9D,EAAA,MAAA8D,EAAA9D,EAAA,QAAAqgE,EAAAv8D,EAAAd,EAAAhD,GAIA,KAAAoE,EAAAtR,OAAAc,GAAA,GAAAyrC,EAAAj7B,QAAAqe,MAAA,MAAAp3B,KAIA,QAHAo3B,EAAAre,EAAAqe,aAAAre,GAAAqe,KAGA4c,GAAA5c,EAAA4c,EAAA5c,aAAA4c,GAAA5c,KAAAp3B,MAGAyY,GAGA2e,EAAA3e,EAAA9D,GAAAyiB,QAAA3e,GAAA9D,IAGAoE,EAAAN,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAM,KAAAN,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAM,EAAAhS,SACAiuE,IAAAr9D,GAAAoB,EACA/Y,KAAA42B,MAAA7d,GAGA/Y,OAbAA,KAAA42B,MAAAQ,EAAAp3B,OAqBAi1E,GAAA,WACA,MAAAj1E,MAAA42B,OAGAs+C,GAAA,WACA,GAAA7pC,GAAA,CAIA,OAHArrC,MAAA00E,MAAA,SAAA37D,GACA,IAAAA,EAAAhS,OAAA,IAAAskC,QAAgCtyB,IAAAqe,QAEhCiU,GAGA8pC,GAAA,SAAA3/D,GACA,GAAA0Q,GAAAirB,EAAAra,EAAAC,EAAAC,EAAAC,EAAA69C,KAAA/7D,EAAA/Y,KAAA42B,KAEA,KADA7d,GAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAA77D,EAAA/Y,KAAAs0B,IAAAt0B,KAAAu0B,IAAAv0B,KAAAw0B,IAAAx0B,KAAAy0B,MACAvO,EAAA4uD,EAAAlvD,OACA,IAAApQ,EAAAuD,EAAAmN,EAAAnN,KAAA+d,EAAA5Q,EAAA4Q,GAAAC,EAAA7Q,EAAA6Q,GAAAC,EAAA9Q,EAAA8Q,GAAAC,EAAA/Q,EAAA+Q,KAAAle,EAAAhS,OAAA,CACA,GAAAyvB,IAAAM,EAAAE,GAAA,EAAAP,GAAAM,EAAAE,GAAA,GACAka,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAA3a,EAAAC,EAAAO,EAAAC,KACAka,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAAra,EAAAL,EAAAD,EAAAS,KACAka,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAA3a,EAAAO,EAAAC,EAAAP,KACA0a,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAAra,EAAAC,EAAAP,EAAAC,IAGA,MAAAz2B,OAGAo1E,GAAA,SAAA5/D,GACA,GAAA0Q,GAAA4uD,KAAA19C,IAEA,KADAp3B,KAAA42B,OAAAk+C,EAAA9rE,KAAA,GAAA4rE,IAAA50E,KAAA42B,MAAA52B,KAAAs0B,IAAAt0B,KAAAu0B,IAAAv0B,KAAAw0B,IAAAx0B,KAAAy0B,MACAvO,EAAA4uD,EAAAlvD,OAAA,CACA,GAAA7M,GAAAmN,EAAAnN,IACA,IAAAA,EAAAhS,OAAA,CACA,GAAAoqC,GAAAra,EAAA5Q,EAAA4Q,GAAAC,EAAA7Q,EAAA6Q,GAAAC,EAAA9Q,EAAA8Q,GAAAC,EAAA/Q,EAAA+Q,GAAAT,GAAAM,EAAAE,GAAA,EAAAP,GAAAM,EAAAE,GAAA,GACAka,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAAra,EAAAC,EAAAP,EAAAC,KACA0a,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAA3a,EAAAO,EAAAC,EAAAP,KACA0a,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAAra,EAAAL,EAAAD,EAAAS,KACAka,EAAAp4B,EAAA,KAAA+7D,EAAA9rE,KAAA,GAAA4rE,IAAAzjC,EAAA3a,EAAAC,EAAAO,EAAAC,IAEAG,EAAApuB,KAAAkd,GAEA,KAAAA,EAAAkR,EAAAxR,OACApQ,EAAA0Q,EAAAnN,KAAAmN,EAAA4Q,GAAA5Q,EAAA6Q,GAAA7Q,EAAA8Q,GAAA9Q,EAAA+Q,GAEA,OAAAj3B,OAOAq1E,GAAA,SAAAhhE,GACA,MAAAvN,WAAAC,QAAA/G,KAAAk3B,GAAA7iB,EAAArU,WAAAk3B,IAOAo+C,GAAA,SAAAjhE,GACA,MAAAvN,WAAAC,QAAA/G,KAAAm3B,GAAA9iB,EAAArU,WAAAm3B,IAwBAo+C,GAAA39C,GAAAt0B,UAAAw0B,GAAAx0B,SAEAiyE,IAAAxiE,KAAA,WACA,GAEA8kB,GACAsZ,EAHAp+B,EAAA,GAAA+kB,IAAA93B,KAAAk3B,GAAAl3B,KAAAm3B,GAAAn3B,KAAAs0B,IAAAt0B,KAAAu0B,IAAAv0B,KAAAw0B,IAAAx0B,KAAAy0B,KACA1b,EAAA/Y,KAAA42B,KAIA,KAAA7d,EAAA,MAAAhG,EAEA,KAAAgG,EAAAhS,OAAA,MAAAgM,GAAA6jB,MAAAmB,GAAAhf,GAAAhG,CAGA,KADA8kB,IAAYzD,OAAArb,EAAA2F,OAAA3L,EAAA6jB,MAAA,GAAA3vB,OAAA,KACZ8R,EAAA8e,EAAAjS,OACA,OAAAjR,GAAA,EAAmBA,EAAA,IAAOA,GAC1Bw8B,EAAAp4B,EAAAqb,OAAAzf,MACAw8B,EAAApqC,OAAA8wB,EAAA7uB,MAAsCorB,OAAA+c,EAAAzyB,OAAA3F,EAAA2F,OAAA/J,GAAA,GAAA1N,OAAA,KACtC8R,EAAA2F,OAAA/J,GAAAojB,GAAAoZ,GAKA,OAAAp+B,IAGAwiE,GAAA75D,IAAA64D,GACAgB,GAAAl+C,UACAk+C,GAAA/9C,MAAAg9C,GACAe,GAAA9tE,KAAAgtE,GACAc,GAAA/mE,OAAAmmE,GACAY,GAAAr9C,KAAA28C,GACAU,GAAAxrE,OAAAgrE,GACAQ,GAAA99C,aACA89C,GAAA71E,KAAAu1E,GACAM,GAAAlqC,KAAA6pC,GACAK,GAAAb,MAAAS,GACAI,GAAAC,WAAAJ,GACAG,GAAAxlE,EAAAslE,GACAE,GAAA9jE,EAAA6jE,EAUA,IAuoBAG,IAvoBAC,GAAA,SAAA7gD,GAQA,QAAAq/C,KAoBA,QAAA7sE,GAAAsuE,EAAA7+C,EAAAC,EAAAC,EAAAC,GACA,GAAAxvB,GAAAkuE,EAAAluE,KAAAmuE,EAAAD,EAAAj1D,IAAAm1D,EAAAD,CACA,MAAAnuE,EAiBA,MAAAqvB,GAAA4hC,EAAAh4C,GAAAsW,EAAA0hC,EAAAh4C,GAAAqW,EAAA++C,EAAAp1D,GAAAuW,EAAA6+C,EAAAp1D,CAhBA,IAAAjZ,EAAAoP,MAAAkC,EAAAlC,MAAA,CACA,GAAA9G,GAAA2oD,EAAAjxD,EAAAsI,EAAAtI,EAAAuwB,GACAvmB,EAAAqkE,EAAAruE,EAAAgK,EAAAhK,EAAAwwB,GACAjX,EAAAjR,IAAA0B,GACAuP,GAAAN,MACA,IAAA3Q,MAAAukE,KAAAtzD,GAAAjR,KACA,IAAA0B,MAAA6iE,KAAAtzD,GAAAvP,KACAuP,GAAAN,GAAAM,EAAAvQ,KAAAqS,KAAA9B,OAAA+0D,EACAh9D,EAAAif,KAAAjoB,GAAAiR,IAAAN,GAAAk1D,OAAAI,EAAAJ,IACA78D,EAAAkf,KAAAxmB,GAAAuP,GAAAN,EACAjZ,EAAAuwB,IAAAjoB,GAAA2Q,EAAA,EAAAA,GACAjZ,EAAAwwB,IAAAxmB,EAAAiP,KAzBA,OARA/L,GACA4hB,EACAxd,EACA2/C,EACAod,EACAD,EACAG,EANAphE,EAAAijB,EAAA9wB,OAQA6M,EAAA,EAAmBA,EAAAqiE,IAAgBriE,EAEnC,IADA2iB,EAAAqB,GAAAC,EAAA9nB,GAAA0B,IAAA+jE,WAAAU,GACAvhE,EAAA,EAAiBA,EAAAC,IAAOD,EACxBoE,EAAA8e,EAAAljB,GACAkhE,EAAAM,EAAAp9D,EAAAlC,OAAAm/D,EAAAH,IACAnd,EAAA3/C,EAAAhJ,EAAAgJ,EAAAif,GACA89C,EAAA/8D,EAAAtH,EAAAsH,EAAAkf,GACA1B,EAAAm+C,MAAArtE,GA2BA,QAAA6uE,GAAAP,GACA,GAAAA,EAAAluE,KAAA,MAAAkuE,GAAAj1D,EAAAy1D,EAAAR,EAAAluE,KAAAoP,MACA,QAAAlC,GAAAghE,EAAAj1D,EAAA,EAA4B/L,EAAA,IAAOA,EACnCghE,EAAAhhE,IAAAghE,EAAAhhE,GAAA+L,EAAAi1D,EAAAj1D,IACAi1D,EAAAj1D,EAAAi1D,EAAAhhE,GAAA+L,GAKA,QAAAyP,KACA,GAAA0H,EAAA,CACA,GAAAljB,GAAAoE,EAAAnE,EAAAijB,EAAA9wB,MAEA,KADAovE,EAAA,GAAAlvE,OAAA2N,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EAAAoE,EAAA8e,EAAAljB,GAAAwhE,EAAAp9D,EAAAlC,QAAAge,EAAA9b,EAAApE,EAAAkjB,IA/DtB,GAAAA,GACAs+C,EACAJ,EAAA,EACAE,EAAA,CAgFA,OA9EA,kBAAAphD,OAAAw/C,GAAA,MAAAx/C,EAAA,GAAAA,IA6DAq/C,EAAA/jD,WAAA,SAAA9b,GACAwjB,EAAAxjB,EACA8b,KAGA+jD,EAAA+B,WAAA,SAAA5hE,GACA,MAAAvN,WAAAC,QAAAkvE,GAAA5hE,EAAA6/D,GAAA+B,GAGA/B,EAAA6B,SAAA,SAAA1hE,GACA,MAAAvN,WAAAC,QAAAgvE,GAAA1hE,EAAA6/D,GAAA6B,GAGA7B,EAAAr/C,OAAA,SAAAxgB,GACA,MAAAvN,WAAAC,QAAA8tB,EAAA,kBAAAxgB,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAAr/C,GAGAq/C,GAaA1oB,GAAA,SAAA4qB,GAaA,QAAAC,GAAA7qB,GACA,SAAA/6C,KAAA0Q,IAAA5Q,EAAAi7C,EAAAp3B,OAAAvd,OAAAtG,EAAAi7C,EAAA9sC,OAAA7H,QAGA,QAAAq9D,GAAAz9B,GACA,OAAA7iC,GAAA,EAAAgB,EAAAwhE,EAAArvE,OAAqC6M,EAAAqiE,IAAgBriE,EACrD,OAAA43C,GAAAp3B,EAAA1V,EAAA3O,EAAA0B,EAAAuP,EAAA7Q,EAAAwE,EAAA,EAAuDA,EAAAC,IAAOD,EAC9D62C,EAAA4qB,EAAAzhE,GAAAyf,EAAAo3B,EAAAp3B,OAAA1V,EAAA8sC,EAAA9sC,OACA3O,EAAA2O,EAAA3O,EAAA2O,EAAAsZ,GAAA5D,EAAArkB,EAAAqkB,EAAA4D,IAAAs8C,KACA7iE,EAAAiN,EAAAjN,EAAAiN,EAAAuZ,GAAA7D,EAAA3iB,EAAA2iB,EAAA6D,IAAAq8C,KACAtzD,EAAAvQ,KAAAqS,KAAA/S,IAAA0B,KACAuP,KAAAs1D,EAAA3hE,IAAAqM,EAAAy1B,EAAA8/B,EAAA5hE,GACA5E,GAAAiR,EAAAvP,GAAAuP,EACAtC,EAAAsZ,IAAAjoB,GAAAI,EAAAqmE,EAAA7hE,IACA+J,EAAAuZ,IAAAxmB,EAAAtB,EACAikB,EAAA4D,IAAAjoB,GAAAI,EAAA,EAAAA,GACAikB,EAAA6D,IAAAxmB,EAAAtB,EAKA,QAAAggB,KACA,GAAA0H,EAAA,CAEA,GAAAljB,GAIA62C,EAHA52C,EAAAijB,EAAA9wB,OACAvG,EAAA41E,EAAArvE,OACAoxB,EAAAhD,GAAA0C,EAAAx3B,EAGA,KAAAsU,EAAA,EAAApE,EAAA,GAAAtJ,OAAA2N,GAAqCD,EAAAnU,IAAOmU,EAC5C62C,EAAA4qB,EAAAzhE,GAAA62C,EAAA30C,MAAAlC,EACA,gBAAA62C,GAAAp3B,SAAAo3B,EAAAp3B,OAAA8D,GAAAC,EAAAqzB,EAAAp3B,SACA,gBAAAo3B,GAAA9sC,SAAA8sC,EAAA9sC,OAAAwZ,GAAAC,EAAAqzB,EAAA9sC,SACAnO,EAAAi7C,EAAAp3B,OAAAvd,QAAAtG,EAAAi7C,EAAAp3B,OAAAvd,QAAA,KACAtG,EAAAi7C,EAAA9sC,OAAA7H,QAAAtG,EAAAi7C,EAAA9sC,OAAA7H,QAAA,IAGA,KAAAlC,EAAA,EAAA6hE,EAAA,GAAAvvE,OAAAzG,GAAoCmU,EAAAnU,IAAOmU,EAC3C62C,EAAA4qB,EAAAzhE,GAAA6hE,EAAA7hE,GAAApE,EAAAi7C,EAAAp3B,OAAAvd,QAAAtG,EAAAi7C,EAAAp3B,OAAAvd,OAAAtG,EAAAi7C,EAAA9sC,OAAA7H,OAGA0/D,GAAA,GAAAtvE,OAAAzG,GAAAi2E,IACAH,EAAA,GAAArvE,OAAAzG,GAAAk2E,KAGA,QAAAD,KACA,GAAA5+C,EAEA,OAAAljB,GAAA,EAAAC,EAAAwhE,EAAArvE,OAAqC4N,EAAAC,IAAOD,EAC5C4hE,EAAA5hE,IAAAohE,EAAAK,EAAAzhE,KAAAyhE,GAIA,QAAAM,KACA,GAAA7+C,EAEA,OAAAljB,GAAA,EAAAC,EAAAwhE,EAAArvE,OAAqC4N,EAAAC,IAAOD,EAC5C2hE,EAAA3hE,IAAAuxB,EAAAkwC,EAAAzhE,KAAAyhE,GAtEA,GAEAG,GAEAD,EACAz+C,EACAtnB,EACAimE,EAPAn2E,EAAAwW,GACAk/D,EAAAM,EAEAnwC,EAAAmuC,GAAA,IAKA4B,EAAA,CA2FA,OAzFA,OAAAG,UAgEAlC,EAAA/jD,WAAA,SAAA9b,GACAwjB,EAAAxjB,EACA8b,KAGA+jD,EAAAkC,MAAA,SAAA/hE,GACA,MAAAvN,WAAAC,QAAAqvE,EAAA/hE,EAAA8b,IAAA+jD,GAAAkC,GAGAlC,EAAA7zE,GAAA,SAAAgU,GACA,MAAAvN,WAAAC,QAAA1G,EAAAgU,EAAA6/D,GAAA7zE,GAGA6zE,EAAA+B,WAAA,SAAA5hE,GACA,MAAAvN,WAAAC,QAAAkvE,GAAA5hE,EAAA6/D,GAAA+B,GAGA/B,EAAA6B,SAAA,SAAA1hE,GACA,MAAAvN,WAAAC,QAAAgvE,EAAA,kBAAA1hE,KAAAggE,IAAAhgE,GAAAoiE,IAAAvC,GAAA6B,GAGA7B,EAAAhuC,SAAA,SAAA7xB,GACA,MAAAvN,WAAAC,QAAAm/B,EAAA,kBAAA7xB,KAAAggE,IAAAhgE,GAAAqiE,IAAAxC,GAAAhuC,GAGAguC,GAWAyC,GAAA,GACAC,GAAAnmE,KAAA04D,IAAA,EAAA14D,KAAAqS,KAAA,IAEA+zD,GAAA,SAAAh/C,GAaA,QAAArnB,KACA2C,IACAvE,EAAArO,KAAA,OAAAs2E,GACApgC,EAAAqgC,IACAC,EAAAzmE,OACA1B,EAAArO,KAAA,MAAAs2E,IAIA,QAAA1jE,KACA,GAAAwB,GAAAoE,EAAAnE,EAAAijB,EAAA9wB,MAQA,KANA0vC,IAAAugC,EAAAvgC,GAAAwgC,EAEAC,EAAA9iE,KAAA,SAAA8/D,GACAA,EAAAz9B,KAGA9hC,EAAA,EAAeA,EAAAC,IAAOD,EACtBoE,EAAA8e,EAAAljB,GACA,MAAAoE,EAAAu4C,GAAAv4C,EAAAhJ,GAAAgJ,EAAAif,IAAAm/C,GACAp+D,EAAAhJ,EAAAgJ,EAAAu4C,GAAAv4C,EAAAif,GAAA,GACA,MAAAjf,EAAAs2B,GAAAt2B,EAAAtH,GAAAsH,EAAAkf,IAAAk/C,GACAp+D,EAAAtH,EAAAsH,EAAAs2B,GAAAt2B,EAAAkf,GAAA,GAIA,QAAAm/C,KACA,OAAAr+D,GAAApE,EAAA,EAAAC,EAAAijB,EAAA9wB,OAA2C4N,EAAAC,IAAOD,EAAA,CAElD,GADAoE,EAAA8e,EAAAljB,GAAAoE,EAAAlC,MAAAlC,EACAwP,MAAApL,EAAAhJ,IAAAoU,MAAApL,EAAAtH,GAAA,CACA,GAAAojB,GAAA8hD,GAAAlmE,KAAAqS,KAAAnO,GAAAspB,EAAAtpB,EAAAiiE,EACA79D,GAAAhJ,EAAA8kB,EAAApkB,KAAAmR,IAAAqc,GACAllB,EAAAtH,EAAAojB,EAAApkB,KAAAoR,IAAAoc,IAEA9Z,MAAApL,EAAAif,KAAA7T,MAAApL,EAAAkf,OACAlf,EAAAif,GAAAjf,EAAAkf,GAAA,IAKA,QAAAo/C,GAAAnD,GAEA,MADAA,GAAA/jD,YAAA+jD,EAAA/jD,WAAA0H,GACAq8C,EAvDA,GAAA2C,GACApgC,EAAA,EACAqgC,EAAA,KACAG,EAAA,EAAAxmE,KAAAM,IAAA+lE,EAAA,OACAE,EAAA,EACAG,EAAA,GACAD,EAAA/hD,KACA4hD,EAAAjvD,GAAAtX,GACA5B,EAAAlB,EAAA,aAoDA,OAlDA,OAAAmqB,UAgDAu/C,IAEAP,GACA1jE,OAEA8U,QAAA,WACA,MAAA8uD,GAAA9uD,QAAAzX,GAAAqmE,GAGAvmE,KAAA,WACA,MAAAymE,GAAAzmE,OAAAumE,GAGAh/C,MAAA,SAAAxjB,GACA,MAAAvN,WAAAC,QAAA8wB,EAAAxjB,EAAA+iE,IAAAF,EAAA9iE,KAAAijE,GAAAR,GAAAh/C,GAGA4e,MAAA,SAAApiC,GACA,MAAAvN,WAAAC,QAAA0vC,GAAApiC,EAAAwiE,GAAApgC,GAGAqgC,SAAA,SAAAziE,GACA,MAAAvN,WAAAC,QAAA+vE,GAAAziE,EAAAwiE,GAAAC,GAGAG,WAAA,SAAA5iE,GACA,MAAAvN,WAAAC,QAAAkwE,GAAA5iE,EAAAwiE,IAAAI,GAGAD,YAAA,SAAA3iE,GACA,MAAAvN,WAAAC,QAAAiwE,GAAA3iE,EAAAwiE,GAAAG,GAGAG,cAAA,SAAA9iE,GACA,MAAAvN,WAAAC,QAAAowE,EAAA,EAAA9iE,EAAAwiE,GAAA,EAAAM,GAGAjD,MAAA,SAAA9+D,EAAAf,GACA,MAAAvN,WAAAC,OAAA,SAAAsN,EAAA6iE,EAAAntE,OAAAqL,GAAA8hE,EAAA3hE,IAAAH,EAAAiiE,EAAAhjE,IAAAwiE,GAAAK,EAAAhpE,IAAAkH,IAGA8iB,KAAA,SAAAnoB,EAAA0B,EAAAojB,GACA,GAEAhW,GACAC,EACAgtB,EACA/yB,EACAu+D,EANA3iE,EAAA,EACAC,EAAAijB,EAAA9wB,MAUA,KAHA,MAAA8tB,IAAAlM,IACAkM,KAEAlgB,EAAA,EAAiBA,EAAAC,IAAOD,EACxBoE,EAAA8e,EAAAljB,GACAkK,EAAA9O,EAAAgJ,EAAAhJ,EACA+O,EAAArN,EAAAsH,EAAAtH,EACAq6B,EAAAjtB,IAAAC,IACAgtB,EAAAjX,IAAAyiD,EAAAv+D,EAAA8b,EAAAiX,EAGA,OAAAwrC,IAGA3wE,GAAA,SAAAyO,EAAAf,GACA,MAAAvN,WAAAC,OAAA,GAAA6H,EAAAjI,GAAAyO,EAAAf,GAAAwiE,GAAAjoE,EAAAjI,GAAAyO,MAKAmiE,GAAA,WAUA,QAAArD,GAAA7/D,GACA,GAAAM,GAAAC,EAAAijB,EAAA9wB,OAAAwvB,EAAAqB,GAAAC,EAAAQ,GAAAC,IAAAk9C,WAAAgC,EACA,KAAA/gC,EAAApiC,EAAAM,EAAA,EAA0BA,EAAAC,IAAOD,EAAAoE,EAAA8e,EAAAljB,GAAA4hB,EAAAm+C,MAAArtE,GAGjC,QAAA8oB,KACA,GAAA0H,EAAA,CACA,GAAAljB,GAAAoE,EAAAnE,EAAAijB,EAAA9wB,MAEA,KADAwvE,EAAA,GAAAtvE,OAAA2N,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EAAAoE,EAAA8e,EAAAljB,GAAA4hE,EAAAx9D,EAAAlC,QAAAk/D,EAAAh9D,EAAApE,EAAAkjB,IAGtB,QAAA2/C,GAAA7B,GACA,GAAAzvD,GAAAzlB,EAAAsP,EAAA0B,EAAAkD,EAAAohE,EAAA,EAAA0B,EAAA,CAGA,IAAA9B,EAAA5uE,OAAA,CACA,IAAAgJ,EAAA0B,EAAAkD,EAAA,EAAyBA,EAAA,IAAOA,GAChCuR,EAAAyvD,EAAAhhE,MAAAlU,EAAAgQ,KAAAY,IAAA6U,EAAAjlB,UACA80E,GAAA7vD,EAAAjlB,MAAAw2E,GAAAh3E,EAAAsP,GAAAtP,EAAAylB,EAAAnW,EAAA0B,GAAAhR,EAAAylB,EAAAzU,EAGAkkE,GAAA5lE,IAAA0nE,EACA9B,EAAAlkE,IAAAgmE,MAIA,CACAvxD,EAAAyvD,EACAzvD,EAAAnW,EAAAmW,EAAAze,KAAAsI,EACAmW,EAAAzU,EAAAyU,EAAAze,KAAAgK,CACA,GAAAskE,IAAAQ,EAAArwD,EAAAze,KAAAoP,aACAqP,IAAAkR,MAGAu+C,EAAA10E,MAAA80E,EAGA,QAAA1uE,GAAAsuE,EAAA3+C,EAAA3iB,EAAA23B,GACA,IAAA2pC,EAAA10E,MAAA,QAEA,IAAA8O,GAAA4lE,EAAA5lE,EAAAgJ,EAAAhJ,EACA0B,EAAAkkE,EAAAlkE,EAAAsH,EAAAtH,EACA3N,EAAAkoC,EAAAhV,EACAhW,EAAAjR,IAAA0B,GAIA,IAAA3N,IAAA4zE,EAAA12D,EAQA,MAPAA,GAAA22D,IACA,IAAA5nE,MAAAukE,KAAAtzD,GAAAjR,KACA,IAAA0B,MAAA6iE,KAAAtzD,GAAAvP,KACAuP,EAAA42D,IAAA52D,EAAAvQ,KAAAqS,KAAA80D,EAAA52D,IACAjI,EAAAif,IAAAjoB,EAAA4lE,EAAA10E,MAAAw1C,EAAAz1B,EACAjI,EAAAkf,IAAAxmB,EAAAkkE,EAAA10E,MAAAw1C,EAAAz1B,IAEA,CAIA,MAAA20D,EAAA5uE,QAAAia,GAAA22D,GAAA,EAGAhC,EAAAluE,OAAAsR,GAAA48D,EAAAv+C,QACA,IAAArnB,MAAAukE,KAAAtzD,GAAAjR,KACA,IAAA0B,MAAA6iE,KAAAtzD,GAAAvP,KACAuP,EAAA42D,IAAA52D,EAAAvQ,KAAAqS,KAAA80D,EAAA52D,IAGA,GAAA20D,GAAAluE,OAAAsR,IACAjV,EAAAyyE,EAAAZ,EAAAluE,KAAAoP,OAAA4/B,EAAAz1B,EACAjI,EAAAif,IAAAjoB,EAAAjM,EACAiV,EAAAkf,IAAAxmB,EAAA3N,SACK6xE,IAAAv+C,OAlFL,GAAAS,GACA9e,EACA09B,EAEA8/B,EADAR,EAAA1B,IAAA,IAEAuD,EAAA,EACAD,EAAAhvD,IACA+uD,EAAA,GAmGA,OArBAxD,GAAA/jD,WAAA,SAAA9b,GACAwjB,EAAAxjB,EACA8b,KAGA+jD,EAAA6B,SAAA,SAAA1hE,GACA,MAAAvN,WAAAC,QAAAgvE,EAAA,kBAAA1hE,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAA6B,GAGA7B,EAAA2D,YAAA,SAAAxjE,GACA,MAAAvN,WAAAC,QAAA6wE,EAAAvjE,IAAA6/D,GAAAzjE,KAAAqS,KAAA80D,IAGA1D,EAAA4D,YAAA,SAAAzjE,GACA,MAAAvN,WAAAC,QAAA4wE,EAAAtjE,IAAA6/D,GAAAzjE,KAAAqS,KAAA60D,IAGAzD,EAAA7mC,MAAA,SAAAh5B,GACA,MAAAvN,WAAAC,QAAA2wE,EAAArjE,IAAA6/D,GAAAzjE,KAAAqS,KAAA40D,IAGAxD,GAGA/oB,GAAA,SAAAt2B,EAAA9kB,EAAA0B,GAUA,QAAAyiE,GAAAz9B,GACA,OAAA9hC,GAAA,EAAAC,EAAAijB,EAAA9wB,OAAqC4N,EAAAC,IAAOD,EAAA,CAC5C,GAAAoE,GAAA8e,EAAAljB,GACAkK,EAAA9F,EAAAhJ,KAAA,KACA+O,EAAA/F,EAAAtH,KAAA,KACAiP,EAAAjQ,KAAAqS,KAAAjE,IAAAC,KACAlL,GAAAmkE,EAAApjE,GAAA+L,GAAA61D,EAAA5hE,GAAA8hC,EAAA/1B,CACA3H,GAAAif,IAAAnZ,EAAAjL,EACAmF,EAAAkf,IAAAnZ,EAAAlL,GAIA,QAAAuc,KACA,GAAA0H,EAAA,CACA,GAAAljB,GAAAC,EAAAijB,EAAA9wB,MAGA,KAFAwvE,EAAA,GAAAtvE,OAAA2N,GACAmjE,EAAA,GAAA9wE,OAAA2N,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EACtBojE,EAAApjE,IAAAkgB,EAAAgD,EAAAljB,KAAAkjB,GACA0+C,EAAA5hE,GAAAwP,MAAA4zD,EAAApjE,IAAA,GAAAohE,EAAAl+C,EAAAljB,KAAAkjB,IA5BA,GAAAA,GAEA0+C,EACAwB,EAFAhC,EAAA1B,GAAA,GAmDA,OA/CA,kBAAAx/C,OAAAw/C,IAAAx/C,IACA,MAAA9kB,MAAA,GACA,MAAA0B,MAAA,GAyBAyiE,EAAA/jD,WAAA,SAAA9b,GACAwjB,EAAAxjB,EAAA8b,KAGA+jD,EAAA6B,SAAA,SAAA1hE,GACA,MAAAvN,WAAAC,QAAAgvE,EAAA,kBAAA1hE,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAA6B,GAGA7B,EAAAr/C,OAAA,SAAAxgB,GACA,MAAAvN,WAAAC,QAAA8tB,EAAA,kBAAAxgB,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAAr/C,GAGAq/C,EAAAnkE,EAAA,SAAAsE,GACA,MAAAvN,WAAAC,QAAAgJ,GAAAsE,EAAA6/D,GAAAnkE,GAGAmkE,EAAAziE,EAAA,SAAA4C,GACA,MAAAvN,WAAAC,QAAA0K,GAAA4C,EAAA6/D,GAAAziE,GAGAyiE,GAGA8D,GAAA,SAAAjoE,GAQA,QAAAmkE,GAAAz9B,GACA,OAAA19B,GAAApE,EAAA,EAAAC,EAAAijB,EAAA9wB,OAA2C4N,EAAAC,IAAOD,EAClDoE,EAAA8e,EAAAljB,GAAAoE,EAAAif,KAAAV,EAAA3iB,GAAAoE,EAAAhJ,GAAAwmE,EAAA5hE,GAAA8hC,EAIA,QAAAtmB,KACA,GAAA0H,EAAA,CACA,GAAAljB,GAAAC,EAAAijB,EAAA9wB,MAGA,KAFAwvE,EAAA,GAAAtvE,OAAA2N,GACA0iB,EAAA,GAAArwB,OAAA2N,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EACtB4hE,EAAA5hE,GAAAwP,MAAAmT,EAAA3iB,IAAA5E,EAAA8nB,EAAAljB,KAAAkjB,IAAA,GAAAk+C,EAAAl+C,EAAAljB,KAAAkjB,IAnBA,GACAA,GACA0+C,EACAj/C,EAHAy+C,EAAA1B,GAAA,GAoCA,OA/BA,kBAAAtkE,OAAAskE,GAAA,MAAAtkE,EAAA,GAAAA,IAkBAmkE,EAAA/jD,WAAA,SAAA9b,GACAwjB,EAAAxjB,EACA8b,KAGA+jD,EAAA6B,SAAA,SAAA1hE,GACA,MAAAvN,WAAAC,QAAAgvE,EAAA,kBAAA1hE,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAA6B,GAGA7B,EAAAnkE,EAAA,SAAAsE,GACA,MAAAvN,WAAAC,QAAAgJ,EAAA,kBAAAsE,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAAnkE,GAGAmkE,GAGA+D,GAAA,SAAAxmE,GAQA,QAAAyiE,GAAAz9B,GACA,OAAA19B,GAAApE,EAAA,EAAAC,EAAAijB,EAAA9wB,OAA2C4N,EAAAC,IAAOD,EAClDoE,EAAA8e,EAAAljB,GAAAoE,EAAAkf,KAAAV,EAAA5iB,GAAAoE,EAAAtH,GAAA8kE,EAAA5hE,GAAA8hC,EAIA,QAAAtmB,KACA,GAAA0H,EAAA,CACA,GAAAljB,GAAAC,EAAAijB,EAAA9wB,MAGA,KAFAwvE,EAAA,GAAAtvE,OAAA2N,GACA2iB,EAAA,GAAAtwB,OAAA2N,GACAD,EAAA,EAAeA,EAAAC,IAAOD,EACtB4hE,EAAA5hE,GAAAwP,MAAAoT,EAAA5iB,IAAAlD,EAAAomB,EAAAljB,KAAAkjB,IAAA,GAAAk+C,EAAAl+C,EAAAljB,KAAAkjB,IAnBA,GACAA,GACA0+C,EACAh/C,EAHAw+C,EAAA1B,GAAA,GAoCA,OA/BA,kBAAA5iE,OAAA4iE,GAAA,MAAA5iE,EAAA,GAAAA,IAkBAyiE,EAAA/jD,WAAA,SAAA9b,GACAwjB,EAAAxjB,EACA8b,KAGA+jD,EAAA6B,SAAA,SAAA1hE,GACA,MAAAvN,WAAAC,QAAAgvE,EAAA,kBAAA1hE,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAA6B,GAGA7B,EAAAziE,EAAA,SAAA4C,GACA,MAAAvN,WAAAC,QAAA0K,EAAA,kBAAA4C,KAAAggE,IAAAhgE,GAAA8b,IAAA+jD,GAAAziE,GAGAyiE,GAMAgE,GAAA,SAAAnoE,EAAArP,GACA,IAAAiU,GAAA5E,EAAArP,EAAAqP,EAAAooE,cAAAz3E,EAAA,GAAAqP,EAAAooE,iBAAA9iE,QAAA,mBACA,IAAAV,GAAAyjE,EAAAroE,EAAAwE,MAAA,EAAAI,EAIA,QACAyjE,EAAArxE,OAAA,EAAAqxE,EAAA,GAAAA,EAAA7jE,MAAA,GAAA6jE,GACAroE,EAAAwE,MAAAI,EAAA,KAIA0jE,GAAA,SAAAtoE,GACA,MAAAA,GAAAmoE,GAAAznE,KAAAY,IAAAtB,QAAA,GAAAyJ,KAGA8+D,GAAA,SAAAC,EAAAC,GACA,gBAAAv3E,EAAA+C,GAOA,IANA,GAAA2Q,GAAA1T,EAAA8F,OACA2N,KACAiD,EAAA,EACAgJ,EAAA43D,EAAA,GACAxxE,EAAA,EAEA4N,EAAA,GAAAgM,EAAA,IACA5Z,EAAA4Z,EAAA,EAAA3c,IAAA2c,EAAAlQ,KAAAC,IAAA,EAAA1M,EAAA+C,IACA2N,EAAA1L,KAAA/H,EAAAw3E,UAAA9jE,GAAAgM,EAAAhM,EAAAgM,OACA5Z,GAAA4Z,EAAA,GAAA3c,KACA2c,EAAA43D,EAAA5gE,KAAA,GAAA4gE,EAAAxxE,OAGA,OAAA2N,GAAA0yB,UAAA5gB,KAAAgyD,KAIAE,GAAA,SAAAC,GACA,gBAAA13E,GACA,MAAAA,GAAAgkD,QAAA,kBAAAtwC,GACA,MAAAgkE,IAAAhkE,OAKAikE,GAAA,SAAA7oE,EAAArP,GACAqP,IAAA8oE,YAAAn4E,EAEAo4E,GAAA,OAAAliC,GAAAhiC,EAAA7E,EAAAhJ,OAAA4N,EAAA,EAAAgiC,GAAA,EAAiDhiC,EAAAC,IAAOD,EACxD,OAAA5E,EAAA4E,IACA,QAAAgiC,EAAAC,EAAAjiC,CAA4B,MAC5B,aAAAgiC,MAAAhiC,GAAqCiiC,EAAAjiC,CAAQ,MAC7C,cAAAmkE,EACA,SAAAniC,EAAA,IAAAA,EAAA,GAIA,MAAAA,GAAA,EAAA5mC,EAAAwE,MAAA,EAAAoiC,GAAA5mC,EAAAwE,MAAAqiC,EAAA,GAAA7mC,GAKAgpE,GAAA,SAAAhpE,EAAArP,GACA,GAAA6H,GAAA2vE,GAAAnoE,EAAArP,EACA,KAAA6H,EAAA,MAAAwH,GAAA,EACA,IAAAqoE,GAAA7vE,EAAA,GACAizC,EAAAjzC,EAAA,GACAoM,EAAA6mC,GAAAi6B,GAAA,EAAAhlE,KAAAC,KAAA,EAAAD,KAAA0Q,IAAA,EAAA1Q,KAAAG,MAAA4qC,EAAA,QACA5mC,EAAAwjE,EAAArxE,MACA,OAAA4N,KAAAC,EAAAwjE,EACAzjE,EAAAC,EAAAwjE,EAAA,GAAAnxE,OAAA0N,EAAAC,EAAA,GAAA4R,KAAA,KACA7R,EAAA,EAAAyjE,EAAA7jE,MAAA,EAAAI,GAAA,IAAAyjE,EAAA7jE,MAAAI,GACA,QAAA1N,OAAA,EAAA0N,GAAA6R,KAAA,KAAA0xD,GAAAnoE,EAAAU,KAAAC,IAAA,EAAAhQ,EAAAiU,EAAA,QAGAqkE,GAAA,SAAAjpE,EAAArP,GACA,GAAA6H,GAAA2vE,GAAAnoE,EAAArP,EACA,KAAA6H,EAAA,MAAAwH,GAAA,EACA,IAAAqoE,GAAA7vE,EAAA,GACAizC,EAAAjzC,EAAA,EACA,OAAAizC,GAAA,UAAAv0C,QAAAu0C,GAAAh1B,KAAA,KAAA4xD,EACAA,EAAArxE,OAAAy0C,EAAA,EAAA48B,EAAA7jE,MAAA,EAAAinC,EAAA,OAAA48B,EAAA7jE,MAAAinC,EAAA,GACA48B,EAAA,GAAAnxE,OAAAu0C,EAAA48B,EAAArxE,OAAA,GAAAyf,KAAA,MAGA0S,IACA+/C,GAAAL,GACA71B,IAAA,SAAAhzC,EAAArP,GAAuB,WAAAqP,GAAAmpE,QAAAx4E,IACvByP,EAAA,SAAAJ,GAAoB,MAAAU,MAAAqB,MAAA/B,GAAA2G,SAAA,IACpBjW,EAAA,SAAAsP,GAAoB,MAAAA,GAAA,IACpBxH,EAAA,SAAAwH,GAAoB,MAAAU,MAAAqB,MAAA/B,GAAA2G,SAAA,KACpB4O,EAAA,SAAAvV,EAAArP,GAAuB,MAAAqP,GAAAooE,cAAAz3E,IACvBoP,EAAA,SAAAC,EAAArP,GAAuB,MAAAqP,GAAAmpE,QAAAx4E,IACvBigB,EAAA,SAAA5Q,EAAArP,GAAuB,MAAAqP,GAAA8oE,YAAAn4E,IACvBgX,EAAA,SAAA3H,GAAoB,MAAAU,MAAAqB,MAAA/B,GAAA2G,SAAA,IACpBhW,EAAA,SAAAqP,EAAArP,GAAuB,MAAAs4E,IAAA,IAAAjpE,EAAArP,IACvBggB,EAAAs4D,GACAj4D,EAAAg4D,GACAlpD,EAAA,SAAA9f,GAAoB,MAAAU,MAAAqB,MAAA/B,GAAA2G,SAAA,IAAAyiE,eACpBppE,EAAA,SAAAA,GAAoB,MAAAU,MAAAqB,MAAA/B,GAAA2G,SAAA,MAIpBiiB,GAAA,uEAMAJ,IAAAj1B,UAAAm1B,GAAAn1B,UAoCAm1B,GAAAn1B,UAAAoT,SAAA,WACA,MAAA1W,MAAA44B,KACA54B,KAAA64B,MACA74B,KAAA84B,KACA94B,KAAA+4B,QACA/4B,KAAAykB,KAAA,SACA,MAAAzkB,KAAAgE,MAAA,GAAAyM,KAAAC,IAAA,IAAA1Q,KAAAgE,SACAhE,KAAAg5B,MAAA,SACA,MAAAh5B,KAAAi5B,UAAA,OAAAxoB,KAAAC,IAAA,IAAA1Q,KAAAi5B,YACAj5B,KAAAsV,KAGA,IA6HA8jB,IA7HAggD,GAAA,SAAArpE,GACA,MAAAA,IAGAspE,IAAA,oEAEAhgD,GAAA,SAAAD,GAOA,QAAA+kB,GAAA3lB,GAgCA,QAAAjqB,GAAAtN,GACA,GAEA0T,GAAAC,EAAAnU,EAFA64E,EAAAhgB,EACAigB,EAAAC,CAGA,UAAAlkE,EACAikE,EAAAE,EAAAx4E,GAAAs4E,EACAt4E,EAAA,OACO,CACPA,IAGA,IAAAy4E,GAAAz4E,EAAA,CAYA,IAXAA,EAAAw4E,EAAAhpE,KAAAY,IAAApQ,GAAAg4B,GAGAygD,GAAA,KAAAz4E,IAAAy4E,GAAA,GAGAJ,GAAAI,EAAA,MAAA5gD,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAwgD,EACAC,KAAA,MAAAjkE,EAAA+jE,GAAA,EAAA5D,GAAA,QAAAiE,GAAA,MAAA5gD,EAAA,QAIA6gD,EAEA,IADAhlE,GAAA,EAAAC,EAAA3T,EAAA8F,SACA4N,EAAAC,GACA,GAAAnU,EAAAQ,EAAAq9C,WAAA3pC,GAAA,GAAAlU,KAAA,IACA84E,GAAA,KAAA94E,EAAAm5E,EAAA34E,EAAAsT,MAAAI,EAAA,GAAA1T,EAAAsT,MAAAI,IAAA4kE,EACAt4E,IAAAsT,MAAA,EAAAI,EACA,QAOAqkB,IAAAvU,IAAAxjB,EAAA6V,EAAA7V,EAAA0nB,KAGA,IAAA5hB,GAAAuyE,EAAAvyE,OAAA9F,EAAA8F,OAAAwyE,EAAAxyE,OACA+tC,EAAA/tC,EAAA/C,EAAA,GAAAiD,OAAAjD,EAAA+C,EAAA,GAAAyf,KAAAoS,GAAA,EAMA,QAHAI,GAAAvU,IAAAxjB,EAAA6V,EAAAg+B,EAAA7zC,EAAA6zC,EAAA/tC,OAAA/C,EAAAu1E,EAAAxyE,OAAA4hB,KAAAmsB,EAAA,IAGAjc,GACA,QAAA53B,EAAAq4E,EAAAr4E,EAAAs4E,EAAAzkC,CAAsE,MACtE,SAAA7zC,EAAAq4E,EAAAxkC,EAAA7zC,EAAAs4E,CAAsE,MACtE,SAAAt4E,EAAA6zC,EAAAvgC,MAAA,EAAAxN,EAAA+tC,EAAA/tC,QAAA,GAAAuyE,EAAAr4E,EAAAs4E,EAAAzkC,EAAAvgC,MAAAxN,EAAqI,MACrI,SAAA9F,EAAA6zC,EAAAwkC,EAAAr4E,EAAAs4E,EAGA,MAAAZ,GAAA13E,GArFAu3B,EAAAD,GAAAC,EAEA,IAAAI,GAAAJ,EAAAI,KACAC,EAAAL,EAAAK,MACAC,EAAAN,EAAAM,KACAC,EAAAP,EAAAO,OACAtU,EAAA+T,EAAA/T,KACAzgB,EAAAw0B,EAAAx0B,MACAg1B,EAAAR,EAAAQ,MACAC,EAAAT,EAAAS,UACA3jB,EAAAkjB,EAAAljB,KAIAgkD,EAAA,MAAAvgC,EAAA8gD,EAAA,SAAA9gD,GAAA,SAAAyjB,KAAAlnC,GAAA,IAAAA,EAAAoK,cAAA,GACA85D,EAAA,MAAAzgD,EAAA8gD,EAAA,UAAAr9B,KAAAlnC,GAAAwkE,EAAA,GAKAL,EAAAvgD,GAAA5jB,GACAqkE,GAAArkE,GAAA,aAAAknC,KAAAlnC,EAuEA,OAjEA2jB,GAAA,MAAAA,EAAA3jB,EAAA,KACA,SAAAknC,KAAAlnC,GAAA7E,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,GAAA8X,IACAxoB,KAAAC,IAAA,EAAAD,KAAA0Q,IAAA,GAAA8X,IA2DA1qB,EAAAmI,SAAA,WACA,MAAA8hB,GAAA,IAGAjqB,EAGA,QAAA+qB,GAAAd,EAAAv3B,GACA,GAAA6O,GAAAquC,GAAA3lB,EAAAD,GAAAC,KAAAljB,KAAA,IAAAkjB,IACAlT,EAAA,EAAA7U,KAAAC,KAAA,EAAAD,KAAA0Q,IAAA,EAAA1Q,KAAAG,MAAAynE,GAAAp3E,GAAA,KACA2S,EAAAnD,KAAAM,IAAA,IAAAuU,GACAg0C,EAAA+f,GAAA,EAAA/zD,EAAA,EACA,iBAAArkB,GACA,MAAA6O,GAAA8D,EAAA3S,GAAAq4D,GA5GA,GAAAxiD,GAAAsiB,EAAAm/C,UAAAn/C,EAAAo/C,UAAAF,GAAAl/C,EAAAm/C,SAAAn/C,EAAAo/C,WAAAY,GACAS,EAAAzgD,EAAAygD,SACAD,EAAAxgD,EAAAwgD,QACAjB,EAAAv/C,EAAAu/C,SAAAD,GAAAt/C,EAAAu/C,UAAAS,GACAU,EAAA1gD,EAAA0gD,SAAA,GA4GA,QACAvrE,OAAA4vC,EACA7kB,gBAQAH,KACAygD,QAAA,IACApB,UAAA,IACAD,UAAA,GACAsB,UAAA,SAUA,IAAAE,IAAA,SAAAvpE,GACA,MAAAC,MAAAC,IAAA,GAAA2nE,GAAA5nE,KAAAY,IAAAb,MAGAwpE,GAAA,SAAAxpE,EAAAvP,GACA,MAAAwP,MAAAC,IAAA,IAAAD,KAAAC,KAAA,EAAAD,KAAA0Q,IAAA,EAAA1Q,KAAAG,MAAAynE,GAAAp3E,GAAA,KAAAo3E,GAAA5nE,KAAAY,IAAAb,MAGAypE,GAAA,SAAAzpE,EAAAE,GAEA,MADAF,GAAAC,KAAAY,IAAAb,GAAAE,EAAAD,KAAAY,IAAAX,GAAAF,EACAC,KAAAC,IAAA,EAAA2nE,GAAA3nE,GAAA2nE,GAAA7nE,IAAA,GAUAkpB,GAAA,WACA,UAAAH,IAOAA,IAAAj2B,WACAy1D,YAAAx/B,GACAC,MAAA,WACAx5B,KAAA+gB,EACA/gB,KAAA0U,EAAA,GAEAgH,IAAA,SAAAjK,GACAgoB,GAAAygD,GAAAzoE,EAAAzR,KAAA0U,GACA+kB,GAAAz5B,KAAAk6E,GAAAn5D,EAAA/gB,KAAA+gB,GACA/gB,KAAA+gB,EAAA/gB,KAAA0U,GAAAwlE,GAAAxlE,EACA1U,KAAA+gB,EAAAm5D,GAAAxlE,GAEA61D,QAAA,WACA,MAAAvqE,MAAA+gB,GAIA,IAwHAua,IACAC,GACAI,GACAC,GACAG,GA+FAkB,GACAE,GACAD,GACAE,GACAQ,GACAW,GACAC,GACAlB,GAEAN,GACAtuB,GAqKAswB,GACAS,GACAR,GACAC,GACAC,GACAO,GACAC,GACAC,GACAW,GACAC,GACAC,GACAP,GACAC,GACArJ,GACAC,GACAwI,GAzZA26C,GAAA,GAAA3gD,IASAoF,GAAA,KACAw7C,GAAA,MACArgD,GAAArpB,KAAA04D,GACAnvC,GAAAF,GAAA,EACAgC,GAAAhC,GAAA,EACA6G,GAAA,EAAA7G,GAEAiE,GAAA,IAAAjE,GACA4B,GAAA5B,GAAA,IAEAzoB,GAAAZ,KAAAY,IACA0xB,GAAAtyB,KAAAsyB,KACAngB,GAAAnS,KAAAmS,MACAiZ,GAAAprB,KAAAmR,IACAolB,GAAAv2B,KAAAu2B,KACAtgB,GAAAjW,KAAAiW,IAEAtf,GAAAqJ,KAAArJ,IACA2J,GAAAN,KAAAM,IACAmpB,GAAAzpB,KAAAoR,IACAiX,GAAAroB,KAAAqoB,MAAA,SAAA/oB,GAAqC,MAAAA,GAAA,IAAAA,EAAA,QACrC+S,GAAArS,KAAAqS,KACAisB,GAAAt+B,KAAAs+B,IAsBAqrC,IACAC,QAAA,SAAAjlD,EAAAkF,GACAF,GAAAhF,EAAAiF,SAAAC,IAEAggD,kBAAA,SAAAllD,EAAAkF,GAEA,IADA,GAAAigD,GAAAnlD,EAAAmlD,SAAA5lE,GAAA,EAAAC,EAAA2lE,EAAAxzE,SACA4N,EAAAC,GAAAwlB,GAAAmgD,EAAA5lE,GAAA0lB,SAAAC,KAIAC,IACAigD,OAAA,SAAAplD,EAAAkF,GACAA,EAAAmU,UAEAgsC,MAAA,SAAArlD,EAAAkF,GACAlF,IAAAqF,YACAH,EAAArJ,MAAAmE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAslD,WAAA,SAAAtlD,EAAAkF,GAEA,IADA,GAAAG,GAAArF,EAAAqF,YAAA9lB,GAAA,EAAAC,EAAA6lB,EAAA1zB,SACA4N,EAAAC,GAAAwgB,EAAAqF,EAAA9lB,GAAA2lB,EAAArJ,MAAAmE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAulD,WAAA,SAAAvlD,EAAAkF,GACAE,GAAApF,EAAAqF,YAAAH,EAAA,IAEAsgD,gBAAA,SAAAxlD,EAAAkF,GAEA,IADA,GAAAG,GAAArF,EAAAqF,YAAA9lB,GAAA,EAAAC,EAAA6lB,EAAA1zB,SACA4N,EAAAC,GAAA4lB,GAAAC,EAAA9lB,GAAA2lB,EAAA,IAEAugD,QAAA,SAAAzlD,EAAAkF,GACAQ,GAAA1F,EAAAqF,YAAAH,IAEAwgD,aAAA,SAAA1lD,EAAAkF,GAEA,IADA,GAAAG,GAAArF,EAAAqF,YAAA9lB,GAAA,EAAAC,EAAA6lB,EAAA1zB,SACA4N,EAAAC,GAAAkmB,GAAAL,EAAA9lB,GAAA2lB,IAEAygD,mBAAA,SAAA3lD,EAAAkF,GAEA,IADA,GAAA0gD,GAAA5lD,EAAA4lD,WAAArmE,GAAA,EAAAC,EAAAomE,EAAAj0E,SACA4N,EAAAC,GAAAwlB,GAAA4gD,EAAArmE,GAAA2lB,KAkBA4Q,GAAA,SAAA9V,EAAAkF,GACAlF,GAAAglD,GAAA72E,eAAA6xB,EAAA9f,MACA8kE,GAAAhlD,EAAA9f,MAAA8f,EAAAkF,GAEAF,GAAAhF,EAAAkF,IAIAgC,GAAA5C,KAEAuhD,GAAAvhD,KAOAwB,IACAjK,MAAAkJ,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACAuB,GAAA9C,QACA0B,GAAAN,UAAAK,GACAC,GAAAL,QAAAO,IAEAJ,WAAA,WACA,GAAAkgD,IAAA5+C,EACA2+C,IAAAv/D,IAAAw/D,EAAA,EAAAv6C,GAAAu6C,KACAl7E,KAAA46B,UAAA56B,KAAA66B,QAAA76B,KAAAixB,MAAAkJ,IAEAsU,OAAA,WACAwsC,GAAAv/D,IAAAilB,MAwCA1xB,GAAA,SAAAmmB,GAGA,MAFA6lD,IAAAzhD,QACA0R,GAAA9V,EAAA8F,IACA,EAAA+/C,IA2CA38C,GAAA5E,KAIAyE,IACAlN,MAAA8L,GACAnC,UAAAsD,GACArD,QAAAuD,GACArD,aAAA,WACAoD,GAAAlN,MAAAoN,GACAF,GAAAvD,UAAA6D,GACAN,GAAAtD,QAAA6D,GACAJ,GAAA9E,QACA0B,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAmD,GAAAlN,MAAA8L,GACAoB,GAAAvD,UAAAsD,GACAC,GAAAtD,QAAAuD,GACA9B,GAAA,GAAAW,KAAAC,GAAA,KAAAC,KAAAC,GAAA,KACAkB,GAAAK,GAAAvB,GAAA,GACAkB,IAAAK,KAAAxB,IAAA,IACAzuB,GAAA,GAAAuuB,GAAAvuB,GAAA,GAAAwuB,KA2GAi+C,GAAA,SAAAC,GACA,GAAAzmE,GAAAC,EAAA1E,EAAAC,EAAAmoD,EAAA+iB,EAAA19C,CAOA,IALAP,GAAAF,KAAAD,GAAAE,GAAAxU,KACAqU,MACAkO,GAAAkwC,EAAAj9C,IAGAvpB,EAAAooB,GAAAj2B,OAAA,CAIA,IAHAi2B,GAAA+e,KAAAnd,IAGAjqB,EAAA,EAAAzE,EAAA8sB,GAAA,GAAAs7B,GAAApoD,GAA4CyE,EAAAC,IAAOD,EACnDxE,EAAA6sB,GAAAroB,GACAkqB,GAAA3uB,EAAAC,EAAA,KAAA0uB,GAAA3uB,EAAAC,EAAA,KACA8tB,GAAA/tB,EAAA,GAAAC,EAAA,IAAA8tB,GAAA/tB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACA8tB,GAAA9tB,EAAA,GAAAD,EAAA,IAAA+tB,GAAA/tB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAmoD,EAAAtvD,KAAAkH,EAAAC,EAMA,KAAAkrE,IAAA1yD,KAAA/T,EAAA0jD,EAAAvxD,OAAA,EAAA4N,EAAA,EAAAzE,EAAAooD,EAAA1jD,GAA2ED,GAAAC,EAAQ1E,EAAAC,IAAAwE,EACnFxE,EAAAmoD,EAAA3jD,IACAgpB,EAAAM,GAAA/tB,EAAA,GAAAC,EAAA,KAAAkrE,MAAA19C,EAAAV,GAAA9sB,EAAA,GAAA+sB,GAAAhtB,EAAA,IAMA,MAFA8sB,IAAAtuB,GAAA,KAEAuuB,KAAAtU,KAAAwU,KAAAxU,MACAnP,sBACAyjB,GAAAE,KAAAD,GAAAE,MAoBAiC,IACAoP,OAAAtU,GACAlJ,MAAA6N,GACAlE,UAAAwE,GACAvE,QAAAgF,GACA9E,aAAA,WACAsE,GAAAzE,UAAAkF,GACAT,GAAAxE,QAAAmF,IAEAhF,WAAA,WACAqE,GAAAzE,UAAAwE,GACAC,GAAAxE,QAAAgF,KA8FAy7C,GAAA,SAAAlmD,GACA4J,GAAAS,GACAR,GAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAW,GAAAC,GAAAC,GAAA,EACAyK,GAAA9V,EAAAiK,GAEA,IAAAtvB,GAAAwwB,GACA9uB,EAAA+uB,GACAte,EAAAue,GACAjgC,EAAAuP,IAAA0B,IAAAyQ,GAGA,OAAA1hB,GAAA25E,KACApqE,EAAA2vB,GAAAjuB,EAAAkuB,GAAAzd,EAAA0d,GAEAH,GAAAd,KAAA5uB,EAAAkvB,GAAAxtB,EAAAytB,GAAAhd,EAAAid,IACA3+B,EAAAuP,IAAA0B,IAAAyQ,IAEA1hB,EAAA25E,KAAA3gE,UAGAoJ,GAAAnR,EAAA1B,GAAAguB,GAAAhE,GAAA7X,EAAAY,GAAAtiB,IAAAu9B,KAGAw9C,GAAA,SAAAxrE,GACA,kBACA,MAAAA,KAIAixB,GAAA,SAAA9wB,EAAAC,GAEA,QAAA6wB,GAAAjxB,EAAA0B,GACA,MAAA1B,GAAAG,EAAAH,EAAA0B,GAAAtB,EAAAJ,EAAA,GAAAA,EAAA,IAOA,MAJAG,GAAAmxB,QAAAlxB,EAAAkxB,SAAAL,EAAAK,OAAA,SAAAtxB,EAAA0B,GACA,MAAA1B,GAAAI,EAAAkxB,OAAAtxB,EAAA0B,GAAA1B,GAAAG,EAAAmxB,OAAAtxB,EAAA,GAAAA,EAAA,MAGAixB,EAOAN,IAAAW,OAAAX,EAsDA,IAi5BA8E,IACAC,GACAC,GAwRAoC,GACAE,GACAD,GACAE,GA4EAwB,GACAC,GACAX,GACAC,GA7vCA5H,GAAA,SAAAhb,GAGA,QAAA8nB,GAAAzT,GAEA,MADAA,GAAArU,EAAAqU,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,EAQA,MAZArU,GAAAwa,GAAAxa,EAAA,GAAAsV,GAAAtV,EAAA,GAAAsV,GAAAtV,EAAArf,OAAA,EAAAqf,EAAA,GAAAsV,GAAA,GAOAwS,EAAA7M,OAAA,SAAA5G,GAEA,MADAA,GAAArU,EAAAib,OAAA5G,EAAA,GAAAiB,GAAAjB,EAAA,GAAAiB,IACAjB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,GAGAyT,GA+BA6F,GAAA,WAQA,QAAA9iB,GAAAlhB,EAAA0B,GACAuyB,EAAAh7B,KAAA+G,EAAAqW,EAAArW,EAAA0B,IACA1B,EAAA,IAAAguB,GAAAhuB,EAAA,IAAAguB,GAGA,QAAAgW,KACA,GAAAtzC,GAAAkR,EAAAtK,MAAArH,KAAA8G,WACA4Z,EAAAmU,EAAAxtB,MAAArH,KAAA8G,WAAA40B,GACAh7B,EAAAu4B,EAAA5xB,MAAArH,KAAA8G,WAAA40B,EAMA,OALAsI,MACA5d,EAAAwa,IAAAngC,EAAA,GAAAi7B,IAAAj7B,EAAA,GAAAi7B,GAAA,GAAA2F,OACAK,GAAApH,EAAA5Z,EAAAhgB,EAAA,GACAD,GAAS6U,KAAA,UAAAmlB,aAAAuJ,IACTA,EAAA5d,EAAA,KACA3lB,EArBA,GAGAujC,GACA5d,EAJAzU,EAAA4pE,IAAA,MACA1mD,EAAA0mD,GAAA,IACAtiD,EAAAsiD,GAAA,GAGAjhD,GAAgBrJ,QA+BhB,OAZA8iB,GAAApiC,OAAA,SAAA0C,GACA,MAAAvN,WAAAC,QAAA4K,EAAA,kBAAA0C,KAAAknE,KAAAlnE,EAAA,IAAAA,EAAA,KAAA0/B,GAAApiC,GAGAoiC,EAAAlf,OAAA,SAAAxgB,GACA,MAAAvN,WAAAC,QAAA8tB,EAAA,kBAAAxgB,KAAAknE,IAAAlnE,GAAA0/B,GAAAlf,GAGAkf,EAAA9a,UAAA,SAAA5kB,GACA,MAAAvN,WAAAC,QAAAkyB,EAAA,kBAAA5kB,KAAAknE,IAAAlnE,GAAA0/B,GAAA9a,GAGA8a,GAGA5O,GAAA,WACA,GACAh2B,GADA43B,IAEA,QACA9V,MAAA,SAAAlhB,EAAA0B,GACAtC,EAAAnG,MAAA+G,EAAA0B,KAEAmpB,UAAA,WACAmM,EAAA/9B,KAAAmG,OAEA0rB,QAAAV,GACA2K,OAAA,WACAiC,EAAAhgC,OAAA,GAAAggC,EAAA/9B,KAAA+9B,EAAAnhB,MAAAte,OAAAy/B,EAAA0O,WAEA1Q,OAAA,WACA,GAAAA,GAAAgC,CAGA,OAFAA,MACA53B,EAAA,KACA41B,KAKAy2C,GAAA,SAAAtrE,EAAAC,GACA,MAAAkB,IAAAnB,EAAA,GAAAC,EAAA,IAAAwuB,IAAAttB,GAAAnB,EAAA,GAAAC,EAAA,IAAAwuB,IAeA0F,GAAA,SAAAH,EAAA3B,EAAA4B,EAAAd,EAAA/I,GACA,GAEA3lB,GACAC,EAHA+J,KACAqsB,IAwBA,IApBA9G,EAAAh8B,QAAA,SAAAo6B,GACA,MAAA1tB,EAAA0tB,EAAAv7B,OAAA,QACA,GAAA6N,GAAA7E,EAAAutB,EAAAgF,EAAA,GAAA+pB,EAAA/pB,EAAA1tB,EAKA,IAAA4mE,GAAAl+C,EAAA+uB,GAAA,CAEA,IADA/xB,EAAAM,YACAjmB,EAAA,EAAiBA,EAAAC,IAAOD,EAAA2lB,EAAArJ,OAAAqM,EAAAgF,EAAA3tB,IAAA,GAAA2oB,EAAA,GAExB,YADAhD,GAAAO,UAIAlc,EAAA3V,KAAA+G,EAAA,GAAAgyB,IAAAzE,EAAAgF,EAAA,UACA0I,EAAAhiC,KAAA+G,EAAA2H,EAAA,GAAAqqB,IAAAzE,EAAA,KAAAvtB,GAAA,IACA4O,EAAA3V,KAAA+G,EAAA,GAAAgyB,IAAAsqB,EAAA/pB,EAAA,UACA0I,EAAAhiC,KAAA+G,EAAA2H,EAAA,GAAAqqB,IAAAsqB,EAAA,KAAAt8C,GAAA,OAGA4O,EAAA5X,OAAA,CAMA,IAJAikC,EAAA+Q,KAAAxZ,GACAJ,GAAAxjB,GACAwjB,GAAA6I,GAEAr2B,EAAA,EAAAC,EAAAo2B,EAAAjkC,OAA8B4N,EAAAC,IAAOD,EACrCq2B,EAAAr2B,GAAA2Q,EAAA6e,IAOA,KAJA,GACAnC,GACA/Q,EAFA5gB,EAAAsO,EAAA,KAIA,CAIA,IAFA,GAAA27C,GAAAjqD,EACAorE,GAAA,EACAnhB,EAAApgD,GAAA,IAAAogD,IAAA1lD,KAAAvE,EAAA,MACA2xB,GAAAs4B,EAAAp4C,EACAoY,EAAAM,WACA,IAEA,GADA0/B,EAAApgD,EAAAogD,EAAA5iD,EAAAwC,GAAA,EACAogD,EAAAh1C,EAAA,CACA,GAAAm2D,EACA,IAAA9mE,EAAA,EAAAC,EAAAotB,EAAAj7B,OAAwC4N,EAAAC,IAAOD,EAAA2lB,EAAArJ,SAAA+Q,EAAArtB,IAAA,GAAAsc,EAAA,QAE/CoS,GAAAi3B,EAAAvqD,EAAAuqD,EAAA1lD,EAAA7E,EAAA,EAAAuqB,EAEAggC,KAAA1lD,MACO,CACP,GAAA6mE,EAEA,IADAz5C,EAAAs4B,EAAA55D,EAAAwhB,EACAvN,EAAAqtB,EAAAj7B,OAAA,EAAqC4N,GAAA,IAAQA,EAAA2lB,EAAArJ,SAAA+Q,EAAArtB,IAAA,GAAAsc,EAAA,QAE7CoS,GAAAi3B,EAAAvqD,EAAAuqD,EAAA55D,EAAAqP,GAAA,EAAAuqB,EAEAggC,KAAA55D,EAEA45D,IAAA5iD,EACAsqB,EAAAs4B,EAAAp4C,EACAu5D,YACKnhB,EAAApgD,EACLogB,GAAAO,aAmBA6gD,GAAAhiD,KAEA8M,GAAA,SAAA1C,EAAA7S,GACA,GAAAuK,GAAAvK,EAAA,GACAwK,EAAAxK,EAAA,GACAsM,GAAArD,GAAAsB,IAAAK,GAAAL,GAAA,GACAyC,EAAA,EACA4F,EAAA,CAEA63C,IAAAliD,OAEA,QAAA7kB,GAAA,EAAAC,EAAAkvB,EAAA/8B,OAAqC4N,EAAAC,IAAOD,EAC5C,GAAAnU,GAAAwjC,EAAAF,EAAAnvB,IAAA5N,OASA,OARAi9B,GACAxjC,EACA6wB,EAAA2S,EAAAxjC,EAAA,GACAm7B,EAAAtK,EAAA,GACA8L,EAAA9L,EAAA,KAAAyK,GACAC,EAAA7B,GAAAiD,GACAvB,EAAAC,GAAAsB,GAEAxlB,EAAA,EAAmBA,EAAAnX,IAAOmX,EAAAgkB,EAAAuB,EAAAnB,EAAA4/C,EAAA//C,EAAAiH,EAAAxR,EAAAR,EAAA,CAC1B,GAAAA,GAAAmT,EAAArsB,GACAulB,EAAArM,EAAA,GACAuM,EAAAvM,EAAA,KAAAiL,GACA6/C,EAAAzhD,GAAAkD,GACAyF,EAAAhH,GAAAuB,GACAO,EAAAT,EAAAvB,EACAkC,EAAAF,GAAA,OACAi+C,EAAA/9C,EAAAF,EACAK,EAAA49C,EAAA9hD,GACAlmB,EAAAmoB,EAAA4/C,CAOA,IALAD,GAAAhgE,IAAAkH,GAAAhP,EAAAiqB,EAAA3D,GAAA0hD,GAAAhgD,EAAAiH,EAAAjvB,EAAAioB,GAAA+/C,KACA39C,GAAAD,EAAAL,EAAAE,EAAA8C,GAAAhD,EAIAK,EAAArC,GAAAH,EAAA0B,GAAA1B,EAAA,CACA,GAAAw3B,GAAAt2B,GAAAF,GAAAnL,GAAAmL,GAAA3L,GACAiM,IAAAk2B,EACA,IAAA6oB,GAAAn/C,GAAAa,EAAAy1B,EACAl2B,IAAA++C,EACA,IAAAC,IAAA99C,EAAAL,GAAA,QAAA5D,GAAA8hD,EAAA,KACApgD,EAAAqgD,GAAArgD,IAAAqgD,IAAA9oB,EAAA,IAAAA,EAAA,OACAnvB,GAAA7F,EAAAL,GAAA,SAiBA,OAAAM,GAAAU,IAAAV,EAAAU,IAAA+8C,IAAA/8C,IAAA,EAAAkF,GAGAmH,GAAA,SAAA+wC,EAAA72C,EAAA7B,EAAAhzB,GACA,gBAAA2rE,GA+CA,QAAA/qD,GAAAuK,EAAAC,GACAsgD,EAAAvgD,EAAAC,IAAAugD,EAAA/qD,MAAAuK,EAAAC,GAGA,QAAAwgD,GAAAzgD,EAAAC,GACAtsB,EAAA8hB,MAAAuK,EAAAC,GAGA,QAAAb,KACAoQ,EAAA/Z,MAAAgrD,EACA9sE,EAAAyrB,YAGA,QAAAC,KACAmQ,EAAA/Z,QACA9hB,EAAA0rB,UAGA,QAAAqhD,GAAA1gD,EAAAC,GACAuI,EAAAh7B,MAAAwyB,EAAAC,IACA0gD,EAAAlrD,MAAAuK,EAAAC,GAGA,QAAA+Q,KACA2vC,EAAAvhD,YACAoJ,KAGA,QAAA0I,KACAwvC,EAAAl4C,EAAA,MAAAA,EAAA,OACAm4C,EAAAthD,SAEA,IAEAlmB,GAAAnU,EACA8hC,EACArR,EAJAwR,EAAA05C,EAAA15C,QACA25C,EAAAC,EAAAt3C,SACAnwB,EAAAwnE,EAAAr1E,MAQA,IAJAi9B,EAAApe,MACAke,EAAA96B,KAAAg7B,GACAA,EAAA,KAEApvB,EAGA,KAAA6tB,GAEA,GADAH,EAAA85C,EAAA,IACA57E,EAAA8hC,EAAAv7B,OAAA,MAGA,IAFAu1E,IAAAN,EAAAjhD,eAAAuhD,GAAA,GACAN,EAAAphD,YACAjmB,EAAA,EAAqBA,EAAAnU,IAAOmU,EAAAqnE,EAAA/qD,SAAAqR,EAAA3tB,IAAA,GAAAsc,EAAA,GAC5B+qD,GAAAnhD,eAOAjmB,GAAA,KAAA6tB,GAAA25C,EAAApzE,KAAAozE,EAAAx2D,MAAAte,OAAA80E,EAAA3mC,UAEAvR,EAAAl7B,KAAAozE,EAAAjoE,OAAAkuB,KA1GA,GAIAyB,GACAI,EACAF,EANA70B,EAAA+1B,EAAA82C,GACAK,EAAAl3C,KACAg3C,EAAAj3C,EAAAm3C,GACAC,GAAA,EAKAtxC,GACA/Z,QACA2J,YACAC,UACAE,aAAA,WACAiQ,EAAA/Z,MAAAirD,EACAlxC,EAAApQ,UAAA4R,EACAxB,EAAAnQ,QAAA6R,EACAxI,KACAJ,MAEA9I,WAAA,WACAgQ,EAAA/Z,QACA+Z,EAAApQ,YACAoQ,EAAAnQ,UACAqJ,EAAAv1B,GAAAu1B,EACA,IAAAC,GAAAqC,GAAA1C,EAAAzzB,EACA6zB,GAAAn9B,QACAu1E,IAAAN,EAAAjhD,eAAAuhD,GAAA,GACAj4C,GAAAH,EAAA3B,GAAA4B,EAAAd,EAAA24C,IACS73C,IACTm4C,IAAAN,EAAAjhD,eAAAuhD,GAAA,GACAN,EAAAphD,YACAyI,EAAA,YAAA24C,GACAA,EAAAnhD,WAEAyhD,IAAAN,EAAAhhD,aAAAshD,GAAA,GACAp4C,EAAAJ,EAAA,MAEA2K,OAAA,WACAutC,EAAAjhD,eACAihD,EAAAphD,YACAyI,EAAA,YAAA24C,GACAA,EAAAnhD,UACAmhD,EAAAhhD,cAmEA,OAAAgQ,KAeAuC,GAAAvC,GACA,WAAc,UACdxI,GACAQ,KACAlJ,IAAAE,KAsFA8T,GAAA,SAAAjZ,GAMA,QAAAwO,GAAAJ,EAAAC,EAAAvB,EAAArH,GACAoH,GAAApH,EAAAzF,EAAA8I,EAAAgE,EAAAsB,EAAAC,GAGA,QAAAE,GAAA5H,EAAAC,GACA,MAAAI,IAAAL,GAAAK,GAAAJ,GAAA8gD,EAOA,QAAAr3C,GAAA5K,GACA,GAAAjJ,GACAsa,EACAhoB,EACAgvC,EACAlwB,CACA,QACA7H,UAAA,WACA+3B,EAAAhvC,GAAA,EACA8e,EAAA,GAEAxR,MAAA,SAAAuK,EAAAC,GACA,GACA+gD,GADA3rD,GAAA2K,EAAAC,GAEAvhB,EAAAkpB,EAAA5H,EAAAC,GACAh7B,EAAAg8E,EACAviE,EAAA,EAAAwiE,EAAAlhD,EAAAC,GACAvhB,EAAAwiE,EAAAlhD,KAAA,EAAA1B,QAAA2B,GAAA,CAYA,KAXApK,IAAAshC,EAAAhvC,EAAAzJ,IAAAogB,EAAAM,YAGA1gB,IAAAyJ,IACA64D,EAAApzB,EAAA/3B,EAAAR,KACA2rD,GAAAhB,GAAAnqD,EAAAmrD,IAAAhB,GAAA3qD,EAAA2rD,MACA3rD,EAAA,IAAA8N,GACA9N,EAAA,IAAA8N,GACAzkB,EAAAkpB,EAAAvS,EAAA,GAAAA,EAAA,MAGA3W,IAAAyJ,EACA8e,EAAA,EACAvoB,GAEAogB,EAAAM,YACA4hD,EAAApzB,EAAAv4B,EAAAQ,GACAiJ,EAAArJ,MAAAurD,EAAA,GAAAA,EAAA,MAGAA,EAAApzB,EAAA/3B,EAAAR,GACAyJ,EAAArJ,MAAAurD,EAAA,GAAAA,EAAA,IACAliD,EAAAO,WAEAxJ,EAAAmrD,MACS,IAAAG,GAAAtrD,GAAAorD,EAAAviE,EAAA,CACT,GAAAxF,EAGAjU,GAAAkrC,KAAAj3B,EAAA00C,EAAAv4B,EAAAQ,GAAA,MACAoR,EAAA,EACAg6C,GACAniD,EAAAM,YACAN,EAAArJ,MAAAvc,EAAA,MAAAA,EAAA,OACA4lB,EAAArJ,MAAAvc,EAAA,MAAAA,EAAA,OACA4lB,EAAAO,YAEAP,EAAArJ,MAAAvc,EAAA,MAAAA,EAAA,OACA4lB,EAAAO,UACAP,EAAAM,YACAN,EAAArJ,MAAAvc,EAAA,MAAAA,EAAA,UAIAwF,GAAAmX,GAAAmqD,GAAAnqD,EAAAR,IACAyJ,EAAArJ,MAAAJ,EAAA,GAAAA,EAAA,IAEAQ,EAAAR,EAAAlN,EAAAzJ,EAAAyxB,EAAAlrC,GAEAo6B,QAAA,WACAlX,GAAA2W,EAAAO,UACAxJ,EAAA,MAIAoR,MAAA,WACA,MAAAA,IAAAkwB,GAAAhvC,IAAA,IAMA,QAAAylC,GAAAl5C,EAAAC,EAAAysE,GACA,GAAAC,GAAArgD,GAAAtsB,GACA4sE,EAAAtgD,GAAArsB,GAIAiiB,GAAA,OACA2qD,EAAArgD,GAAAmgD,EAAAC,GACAE,EAAAvgD,GAAAsgD,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,GAGA,KAAAC,EAAA,OAAAN,GAAA1sE,CAEA,IAAA07B,GAAA2wC,EAAAS,EAAAE,EACAhqC,GAAAqpC,EAAAU,EAAAC,EACAC,EAAAzgD,GAAAtK,EAAA2qD,GACA1pC,EAAAzW,GAAAxK,EAAAwZ,GACAmG,EAAAnV,GAAAmgD,EAAA7pC,EACAvW,IAAA0W,EAAAtB,EAGA,IAAA1V,GAAA8gD,EACAr5E,EAAA24B,GAAA4W,EAAAhX,GACA+gD,EAAA3gD,GAAAJ,KACA/Z,EAAAxe,IAAAs5E,GAAA3gD,GAAA4W,KAAA,EAEA,MAAA/wB,EAAA,IAEA,GAAA5N,GAAAoO,GAAAR,GACA4D,EAAA0W,GAAAP,IAAAv4B,EAAA4Q,GAAA0oE,EAIA,IAHAzgD,GAAAzW,EAAAmtB,GACAntB,EAAAqW,GAAArW,IAEA02D,EAAA,MAAA12D,EAGA,IAIAhE,GAJAyZ,EAAAzrB,EAAA,GACAgtB,EAAA/sB,EAAA,GACAgtB,EAAAjtB,EAAA,GACAktB,EAAAjtB,EAAA,EAGA+sB,GAAAvB,IAAAzZ,EAAAyZ,IAAAuB,IAAAhb,EAEA,IAAAyb,GAAAT,EAAAvB,EACA0hD,EAAAhsE,GAAAssB,EAAA7D,IAAA6E,GACA2+C,EAAAD,GAAA1/C,EAAAgB,EAKA,KAHA0+C,GAAAjgD,EAAAD,IAAAjb,EAAAib,IAAAC,IAAAlb,GAGAo7D,EACAD,EACAlgD,EAAAC,EAAA,EAAAlX,EAAA,IAAA7U,GAAA6U,EAAA,GAAAyV,GAAAgD,GAAAxB,EAAAC,GACAD,GAAAjX,EAAA,IAAAA,EAAA,IAAAkX,EACAO,EAAA7D,IAAA6B,GAAAzV,EAAA,IAAAA,EAAA,IAAAgX,GAAA,CACA,GAAAqgD,GAAA3gD,GAAAP,IAAAv4B,EAAA4Q,GAAA0oE,EAEA,OADAzgD,IAAA4gD,EAAAlqC,IACAntB,EAAAqW,GAAAghD,MAMA,QAAAb,GAAAlhD,EAAAC,GACA,GAAA/a,GAAA+7D,EAAA5nD,EAAAiF,GAAAjF,EACA6nD,EAAA,CAKA,OAJAlhD,IAAA9a,EAAAg8D,GAAA,EACAlhD,EAAA9a,IAAAg8D,GAAA,GACAjhD,GAAA/a,EAAAg8D,GAAA,EACAjhD,EAAA/a,IAAAg8D,GAAA,GACAA,EA1KA,GAAAH,GAAA1gD,GAAAhH,GACA8I,EAAA,EAAAjC,GACA+gD,EAAAF,EAAA,EACAI,EAAAtrE,GAAAkrE,GAAA59C,EA0KA,OAAAqM,IAAA5H,EAAA8B,EAAA7B,EAAAo5C,GAAA,GAAA5nD,KAAAiF,GAAAjF,EAAAiF,MAGAoL,GAAA,SAAAh1B,EAAAC,EAAA2mB,EAAAC,EAAAC,EAAAC,GACA,GAQAvW,GARA6yB,EAAArjC,EAAA,GACAsjC,EAAAtjC,EAAA,GACA2gD,EAAA1gD,EAAA,GACA2gD,EAAA3gD,EAAA,GACAoS,EAAA,EACAE,EAAA,EACA5D,EAAAgyC,EAAAtd,EACAz0B,EAAAgyC,EAAAtd,CAIA,IADA9yB,EAAAoW,EAAAyc,EACA10B,KAAA6B,EAAA,IAEA,GADAA,GAAA7B,EACAA,EAAA,GACA,GAAA6B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,OACG,IAAA7B,EAAA,GACH,GAAA6B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,GAIA,GADAA,EAAAsW,EAAAuc,EACA10B,KAAA6B,EAAA,IAEA,GADAA,GAAA7B,EACAA,EAAA,GACA,GAAA6B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,OACG,IAAA7B,EAAA,GACH,GAAA6B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,GAIA,GADAA,EAAAqW,EAAAyc,EACA10B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,GAIA,GADAA,EAAAuW,EAAAuc,EACA10B,KAAA4B,EAAA,IAEA,GADAA,GAAA5B,EACAA,EAAA,GACA,GAAA4B,EAAA+B,EAAA,MACA/B,GAAA6B,MAAA7B,OACG,IAAA5B,EAAA,GACH,GAAA4B,EAAA6B,EAAA,MACA7B,GAAA+B,MAAA/B,GAKA,MAFA6B,GAAA,IAAArS,EAAA,GAAAqjC,EAAAhxB,EAAA1D,EAAA3O,EAAA,GAAAsjC,EAAAjxB,EAAAzD,GACA2D,EAAA,IAAAtS,EAAA,GAAAojC,EAAA9wB,EAAA5D,EAAA1O,EAAA,GAAAqjC,EAAA/wB,EAAA3D,IACA,OAGAmmB,GAAA,IACAD,IAAAC,GAmKAu4C,GAAA,WACA,GAIA75E,GACAypC,EACApC,EANAlU,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAKA,OAAA+T,IACA1Q,OAAA,SAAAA,GACA,MAAA32B,IAAAypC,IAAA9S,EAAA32B,IAAAw/B,GAAArM,EAAAC,EAAAC,EAAAC,GAAAmW,EAAA9S,IAEA9rB,OAAA,SAAA6F,GACA,MAAAvN,WAAAC,QAAA+vB,GAAAziB,EAAA,MAAA0iB,GAAA1iB,EAAA,MAAA2iB,GAAA3iB,EAAA,MAAA4iB,GAAA5iB,EAAA,MAAA1Q,EAAAypC,EAAA,KAAApC,KAAAlU,EAAAC,IAAAC,EAAAC,OAKA6O,GAAApM,KAKA2L,IACAoJ,OAAAtU,GACAlJ,MAAAkJ,GACAS,UAAAwK,GACAvK,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,IAgCAsjD,GAAA,SAAAroD,GAGA,MAFA0Q,IAAAtM,QACA0R,GAAA9V,EAAAiQ,KACAS,IAGArL,IAAA,WACAijD,IAAgBpoE,KAAA,aAAAmlB,gBAEhByL,GAAA,SAAAh2B,EAAAC,GAGA,MAFAsqB,IAAA,GAAAvqB,EACAuqB,GAAA,GAAAtqB,EACAstE,GAAAC,KAGAC,IACAtD,QAAA,SAAAjlD,EAAAnE,GACA,MAAA8U,IAAA3Q,EAAAiF,SAAApJ,IAEAqpD,kBAAA,SAAAllD,EAAAnE,GAEA,IADA,GAAAspD,GAAAnlD,EAAAmlD,SAAA5lE,GAAA,EAAAC,EAAA2lE,EAAAxzE,SACA4N,EAAAC,GAAA,GAAAmxB,GAAAw0C,EAAA5lE,GAAA0lB,SAAApJ,GAAA,QACA,YAIA+U,IACAw0C,OAAA,WACA,UAEAC,MAAA,SAAArlD,EAAAnE,GACA,MAAAgV,IAAA7Q,EAAAqF,YAAAxJ,IAEAypD,WAAA,SAAAtlD,EAAAnE,GAEA,IADA,GAAAwJ,GAAArF,EAAAqF,YAAA9lB,GAAA,EAAAC,EAAA6lB,EAAA1zB,SACA4N,EAAAC,GAAA,GAAAqxB,GAAAxL,EAAA9lB,GAAAsc,GAAA,QACA,WAEA0pD,WAAA,SAAAvlD,EAAAnE,GACA,MAAAkV,IAAA/Q,EAAAqF,YAAAxJ,IAEA2pD,gBAAA,SAAAxlD,EAAAnE,GAEA,IADA,GAAAwJ,GAAArF,EAAAqF,YAAA9lB,GAAA,EAAAC,EAAA6lB,EAAA1zB,SACA4N,EAAAC,GAAA,GAAAuxB,GAAA1L,EAAA9lB,GAAAsc,GAAA,QACA,WAEA4pD,QAAA,SAAAzlD,EAAAnE,GACA,MAAAsV,IAAAnR,EAAAqF,YAAAxJ,IAEA6pD,aAAA,SAAA1lD,EAAAnE,GAEA,IADA,GAAAwJ,GAAArF,EAAAqF,YAAA9lB,GAAA,EAAAC,EAAA6lB,EAAA1zB,SACA4N,EAAAC,GAAA,GAAA2xB,GAAA9L,EAAA9lB,GAAAsc,GAAA,QACA,WAEA8pD,mBAAA,SAAA3lD,EAAAnE,GAEA,IADA,GAAA+pD,GAAA5lD,EAAA4lD,WAAArmE,GAAA,EAAAC,EAAAomE,EAAAj0E,SACA4N,EAAAC,GAAA,GAAAmxB,GAAAi1C,EAAArmE,GAAAsc,GAAA,QACA,YAiCA0sC,GAAA,SAAAvoC,EAAAnE,GACA,OAAAmE,GAAAuoD,GAAAp6E,eAAA6xB,EAAA9f,MACAqoE,GAAAvoD,EAAA9f,MACAywB,IAAA3Q,EAAAnE,IA0GA2sD,GAAA,SAAA1tE,EAAAC,GACA,GAAA2mB,GAAA5mB,EAAA,GAAAwrB,GACA3E,EAAA7mB,EAAA,GAAAwrB,GACA1E,EAAA7mB,EAAA,GAAAurB,GACAzE,EAAA9mB,EAAA,GAAAurB,GACA0T,EAAAvT,GAAA9E,GACAsX,EAAAnU,GAAAnD,GACAwzB,EAAA1uB,GAAA5E,GACA4mD,EAAA3jD,GAAAjD,GACA6mD,EAAA1uC,EAAAvT,GAAA/E,GACAinD,EAAA3uC,EAAAlV,GAAApD,GACAknD,EAAAzzB,EAAA1uB,GAAA7E,GACAinD,EAAA1zB,EAAArwB,GAAAlD,GACAzuB,EAAA,EAAAwxB,GAAAjX,GAAAmX,GAAAhD,EAAAF,GAAAqY,EAAAmb,EAAAtwB,GAAAjD,EAAAF,KACAljB,EAAAsmB,GAAA3xB,GAEA86B,EAAA96B,EAAA,SAAAmM,GACA,GAAAq9B,GAAA7X,GAAAxlB,GAAAnM,GAAAqL,EACAy/B,EAAAnZ,GAAA3xB,EAAAmM,GAAAd,EACA7D,EAAAsjC,EAAAyqC,EAAA/rC,EAAAisC,EACAvsE,EAAA4hC,EAAA0qC,EAAAhsC,EAAAksC,EACA/7D,EAAAmxB,EAAAhF,EAAA0D,EAAA8rC,CACA,QACAj7D,GAAAnR,EAAA1B,GAAAguB,GACAnb,GAAAV,EAAAY,GAAA/S,IAAA0B,MAAAssB,KAEG,WACH,OAAAjH,EAAAiH,GAAAhH,EAAAgH,IAKA,OAFAsF,GAAA6C,SAAA39B,EAEA86B,GAGAoK,GAAA,SAAA19B,GACA,MAAAA,IAGAmuE,GAAAxkD,KACAwO,GAAAxO,KAMAiO,IACA1W,MAAAkJ,GACAS,UAAAT,GACAU,QAAAV,GACAY,aAAA,WACA4M,GAAA/M,UAAA8M,GACAC,GAAA9M,QAAAsN,IAEAnN,WAAA,WACA2M,GAAA/M,UAAA+M,GAAA9M,QAAA8M,GAAA1W,MAAAkJ,GACA+jD,GAAAxiE,IAAArK,GAAA62B,KACAA,GAAA1O,SAEAuL,OAAA,WACA,GAAA91B,GAAAivE,GAAA,CAEA,OADAA,IAAA1kD,QACAvqB,IAsBAo5B,GAAA1f,IACA2f,GAAAD,GACArR,IAAAqR,GACApR,GAAAD,GAEAmU,IACAla,MAAAmX,GACAxN,UAAAT,GACAU,QAAAV,GACAY,aAAAZ,GACAa,WAAAb,GACA4K,OAAA,WACA,GAAAo2C,KAAA9yC,GAAAC,KAAAtR,GAAAC,IAEA,OADAD,IAAAC,KAAAqR,GAAAD,GAAA1f,KACAwyD,IAaA3yC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAjB,IACA3X,MAAAsX,GACA3N,UAAA+N,GACA9N,QAAAuO,GACArO,aAAA,WACA6N,GAAAhO,UAAAyO,GACAT,GAAA/N,QAAA0O,IAEAvO,WAAA,WACA4N,GAAA3X,MAAAsX,GACAK,GAAAhO,UAAA+N,GACAC,GAAA/N,QAAAuO,IAEArE,OAAA,WACA,GAAAu2C,GAAAzxC,IAAAF,GAAAE,GAAAD,GAAAC,IACAV,IAAAF,GAAAE,GAAAD,GAAAC,IACAT,IAAAF,GAAAE,GAAAD,GAAAC,KACAlvB,QAIA,OAHAgvB,IAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GAAA,EACAyxC,GAgEAxxC,IAAAxmC,WACA66E,QAAA,IACAC,YAAA,SAAA/pE,GACA,MAAArU,MAAAm+E,QAAA9pE,EAAArU,MAEA+6B,aAAA,WACA/6B,KAAA6N,MAAA,GAEAmtB,WAAA,WACAh7B,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,IAAA76B,KAAA6N,OAAA7N,KAAA+pC,SAAAwmC,YACAvwE,KAAAq+E,OAAA7kE,KAEAyX,MAAA,SAAAlhB,EAAA0B,GACA,OAAAzR,KAAAq+E,QACA,OACAr+E,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,GACAzR,KAAAq+E,OAAA,CACA,MAEA,QACAr+E,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,EACA,MAEA,SACAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA/P,KAAAm+E,QAAA1sE,GACAzR,KAAA+pC,SAAAipB,IAAAjjD,EAAA0B,EAAAzR,KAAAm+E,QAAA,EAAAx9C,MAKAoE,OAAA5K,GAGA,IACAmkD,IACAn0C,GACAE,GACAD,GACAE,GALAC,GAAA7Q,KAOAuQ,IACAhZ,MAAAkJ,GACAS,UAAA,WACAqP,GAAAhZ,MAAA+Y,IAEAnP,QAAA,WACAyjD,IAAAp0C,GAAAC,GAAAE,IACAJ,GAAAhZ,MAAAkJ,IAEAY,aAAA,WACAujD,IAAA,GAEAtjD,WAAA,WACAsjD,GAAA,MAEAv5C,OAAA,WACA,GAAAh+B,IAAAwjC,EAEA,OADAA,IAAA/Q,QACAzyB,GAmBAyjC,IAAAlnC,WACA66E,QAAA,IACAI,QAAA7zC,GAAA,KACA0zC,YAAA,SAAA/pE,GAEA,OADAA,QAAArU,KAAAm+E,UAAAn+E,KAAAm+E,QAAA9pE,EAAArU,KAAAu+E,QAAA,MACAv+E,MAEA+6B,aAAA,WACA/6B,KAAA6N,MAAA,GAEAmtB,WAAA,WACAh7B,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,IAAA76B,KAAA6N,OAAA7N,KAAAyqC,QAAAzhC,KAAA,KACAhJ,KAAAq+E,OAAA7kE,KAEAyX,MAAA,SAAAlhB,EAAA0B,GACA,OAAAzR,KAAAq+E,QACA,OACAr+E,KAAAyqC,QAAAzhC,KAAA,IAAA+G,EAAA,IAAA0B,GACAzR,KAAAq+E,OAAA,CACA,MAEA,QACAr+E,KAAAyqC,QAAAzhC,KAAA,IAAA+G,EAAA,IAAA0B;AACA,KAEA,SACA,MAAAzR,KAAAu+E,UAAAv+E,KAAAu+E,QAAA7zC,GAAA1qC,KAAAm+E,UACAn+E,KAAAyqC,QAAAzhC,KAAA,IAAA+G,EAAA,IAAA0B,EAAAzR,KAAAu+E,WAKAx5C,OAAA,WACA,GAAA/kC,KAAAyqC,QAAA1jC,OAAA,CACA,GAAAg+B,GAAA/kC,KAAAyqC,QAAAjkB,KAAA,GAEA,OADAxmB,MAAAyqC,WACA1F,EAEA,aAYA,IAAAy5C,IAAA,SAAAzzC,EAAA54B,GAKA,QAAAc,GAAAmiB,GAKA,MAJAA,KACA,kBAAAgpD,IAAAK,EAAAL,eAAA/2E,MAAArH,KAAA8G,YACAokC,GAAA9V,EAAAspD,EAAAD,KAEAA,EAAA15C,SATA,GACA25C,GACAD,EAFAL,EAAA,GAiDA,OArCAnrE,GAAAhE,KAAA,SAAAmmB,GAEA,MADA8V,IAAA9V,EAAAspD,EAAA/2C,KACAA,GAAA5C,UAGA9xB,EAAA0rE,QAAA,SAAAvpD,GAEA,MADA8V,IAAA9V,EAAAspD,EAAAz0C,KACAA,GAAAlF,UAGA9xB,EAAAkoE,OAAA,SAAA/lD,GAEA,MADA8V,IAAA9V,EAAAspD,EAAAvzC,KACAA,GAAApG,UAGA9xB,EAAAqoE,SAAA,SAAAlmD,GAEA,MADA8V,IAAA9V,EAAAspD,EAAA91C,KACAA,GAAA7D,UAGA9xB,EAAA83B,WAAA,SAAA12B,GACA,MAAAvN,WAAAC,QAAA23E,EAAA,MAAArqE,GAAA02B,EAAA,KAAA0C,KAAA1C,EAAA12B,GAAAimB,OAAArnB,GAAA83B,GAGA93B,EAAAd,QAAA,SAAAkC,GACA,MAAAvN,WAAAC,QACA03E,EAAA,MAAApqE,GAAAlC,EAAA,QAAAq4B,KAAA,GAAAV,IAAA33B,EAAAkC,GACA,kBAAA+pE,IAAAK,EAAAL,eACAnrE,GAHAd,GAMAc,EAAAmrE,YAAA,SAAA/pE,GACA,MAAAvN,WAAAC,QACAq3E,EAAA,kBAAA/pE,MAAAoqE,EAAAL,aAAA/pE,OACApB,GAFAmrE,GAKAnrE,EAAA83B,cAAA54B,YAGA4B,GAAA,SAAA62B,GACA,OACAtQ,OAAAqQ,GAAAC,IAeAC,IAAAvnC,WACAy1D,YAAAluB,GACA5Z,MAAA,SAAAlhB,EAAA0B,GAAyBzR,KAAAs6B,OAAArJ,MAAAlhB,EAAA0B,IACzBg9B,OAAA,WAAsBzuC,KAAAs6B,OAAAmU,UACtB7T,UAAA,WAAyB56B,KAAAs6B,OAAAM,aACzBC,QAAA,WAAuB76B,KAAAs6B,OAAAO,WACvBE,aAAA,WAA4B/6B,KAAAs6B,OAAAS,gBAC5BC,WAAA,WAA0Bh7B,KAAAs6B,OAAAU,cAgC1B,IAAAuR,IAAA,GACAF,GAAAxQ,GAAA,GAAAH,IAEAiS,GAAA,SAAApC,EAAAE,GACA,OAAAA,EAAAD,GAAAD,EAAAE,GAAAH,GAAAC,IA+FAqC,GAAAjD,IACA1Z,MAAA,SAAAlhB,EAAA0B,GACAzR,KAAAs6B,OAAArJ,MAAAlhB,EAAA2rB,GAAAjqB,EAAAiqB,OA+JAkjD,GAAA,WACA,MAAA7wC,IAAAI,IACAzoC,MAAA,SACAiM,QAAA,aAGAktE,GAAA,WACA,MAAAD,MACA5wC,WAAA,YACAtoC,MAAA,MACAmgB,WAAA,UACAO,QAAA,OACAzU,SAAA,WAsBAmtE,GAAA,WAQA,QAAAA,GAAArkD,GACA,GAAA1qB,GAAA0qB,EAAA,GAAAhpB,EAAAgpB,EAAA,EACA,OAAAxJ,GAAA,KACA8tD,EAAA9tD,MAAAlhB,EAAA0B,GAAAwf,IACA+tD,EAAA/tD,MAAAlhB,EAAA0B,GAAAwf,KACAguD,EAAAhuD,MAAAlhB,EAAA0B,GAAAwf,GA2DA,QAAAuI,KAEA,MADA71B,GAAAypC,EAAA,KACA0xC,EAzEA,GAAAn7E,GACAypC,EACA2xC,EACAC,EACAC,EACAhuD,EAHAiuD,EAAAL,KACAM,EAAAP,KAAAx4D,QAAA,QAAAzU,SAAA,SAAAq8B,WAAA,QACAoxC,EAAAR,KAAAx4D,QAAA,QAAAzU,SAAA,SAAAq8B,WAAA,OACAqxC,GAA4BpuD,MAAA,SAAAlhB,EAAA0B,GAAuBwf,GAAAlhB,EAAA0B,IAuEnD,OA7DAqtE,GAAAz9C,OAAA,SAAA5G,GACA,GAAA7mB,GAAAsrE,EAAAx5E,QACAgP,EAAAwqE,EAAAr5D,YACA9V,GAAA0qB,EAAA,GAAA/lB,EAAA,IAAAd,EACAnC,GAAAgpB,EAAA,GAAA/lB,EAAA,IAAAd,CACA,QAAAnC,GAAA,KAAAA,EAAA,MAAA1B,IAAA,MAAAA,GAAA,KAAAovE,EACA1tE,GAAA,MAAAA,EAAA,MAAA1B,IAAA,MAAAA,GAAA,KAAAqvE,EACAF,GAAA79C,OAAA5G,IAGAqkD,EAAAxkD,OAAA,SAAAA,GACA,MAAA32B,IAAAypC,IAAA9S,EAAA32B,IAAA4qC,IAAA2wC,EAAA5kD,OAAA8S,EAAA9S,GAAA6kD,EAAA7kD,UAAA8kD,EAAA9kD,aAGAwkD,EAAA7lD,UAAA,SAAA5kB,GACA,MAAAvN,WAAAC,QACAm4E,EAAAjmD,UAAA5kB,GAAA8qE,EAAAlmD,UAAA5kB,GAAA+qE,EAAAnmD,UAAA5kB,GACAmlB,KAFA0lD,EAAAjmD,aAKA6lD,EAAAp5E,MAAA,SAAA2O,GACA,MAAAvN,WAAAC,QACAm4E,EAAAx5E,MAAA2O,GAAA8qE,EAAAz5E,MAAA,IAAA2O,GAAA+qE,EAAA15E,MAAA2O,GACAyqE,EAAAj5D,UAAAq5D,EAAAr5D,cAFAq5D,EAAAx5E,SAKAo5E,EAAAj5D,UAAA,SAAAxR,GACA,IAAAvN,UAAAC,OAAA,MAAAm4E,GAAAr5D,WACA,IAAAjS,GAAAsrE,EAAAx5E,QAAAqK,GAAAsE,EAAA,GAAA5C,GAAA4C,EAAA,EAiBA,OAfA0qE,GAAAG,EACAr5D,UAAAxR,GACA42B,aAAAl7B,EAAA,KAAA6D,EAAAnC,EAAA,KAAAmC,IAAA7D,EAAA,KAAA6D,EAAAnC,EAAA,KAAAmC,KACA0mB,OAAA+kD,GAEAL,EAAAG,EACAt5D,WAAA9V,EAAA,KAAA6D,EAAAnC,EAAA,KAAAmC,IACAq3B,aAAAl7B,EAAA,KAAA6D,EAAA+qB,GAAAltB,EAAA,IAAAmC,EAAA+qB,KAAA5uB,EAAA,KAAA6D,EAAA+qB,GAAAltB,EAAA,KAAAmC,EAAA+qB,MACArE,OAAA+kD,GAEAJ,EAAAG,EACAv5D,WAAA9V,EAAA,KAAA6D,EAAAnC,EAAA,KAAAmC,IACAq3B,aAAAl7B,EAAA,KAAA6D,EAAA+qB,GAAAltB,EAAA,KAAAmC,EAAA+qB,KAAA5uB,EAAA,KAAA6D,EAAA+qB,GAAAltB,EAAA,KAAAmC,EAAA+qB,MACArE,OAAA+kD,GAEA7lD,KAGAslD,EAAAh0C,UAAA,SAAAt8B,EAAA4mB,GACA,MAAA0V,IAAAg0C,EAAAtwE,EAAA4mB,IAGA0pD,EAAA1zC,QAAA,SAAAC,EAAAjW,GACA,MAAAgW,IAAA0zC,EAAAzzC,EAAAjW,IAQA0pD,EAAAp5E,MAAA,OA4BA45E,GAAA5wC,GAAA,SAAA6wC,GACA,MAAAz8D,IAAA,KAAAy8D,KAGAD,IAAAj+C,OAAAsN,GAAA,SAAAzsB,GACA,SAAA6X,GAAA7X,EAAA,IAGA,IAAAs9D,IAAA,WACA,MAAAz0C,IAAAu0C,IACA55E,MAAA,QACAmoC,UAAA,UAGA4xC,GAAA/wC,GAAA,SAAAjuC,GACA,OAAAA,EAAAo5B,GAAAp5B,OAAAy5B,GAAAz5B,IAGAg/E,IAAAp+C,OAAAsN,GAAA,SAAAzsB,GACA,MAAAA,IAGA,IAAAw9D,IAAA,WACA,MAAA30C,IAAA00C,IACA/5E,MAAA,SACAmoC,UAAA,SAOAiB,IAAAzN,OAAA,SAAAtxB,EAAA0B,GACA,OAAA1B,EAAA,EAAAgzB,GAAArc,GAAAjV,IAAAuoB,IAGA,IAAA2lD,IAAA,WACA,MAAA3wC,IAAAF,IACAppC,MAAA,IAAAi7B,KAiEAi/C,GAAA,WACA,MAAA7xC,IAAAoB,IACAzpC,MAAA,OACAsoC,WAAA,QAOAsB,IAAAjO,OAAAiO,EAEA,IAAAuwC,IAAA,WACA,MAAA90C,IAAAuE,IACA5pC,MAAA,SAuBAo6E,GAAA,WACA,MAAA/xC,IAAAwB,IACA7pC,MAAA,SACAiM,QAAA,YAQA+9B,IAAArO,OAAAsN,GAAA5L,GAEA,IAAAg9C,IAAA,WACA,MAAAh1C,IAAA2E,IACAhqC,MAAA,SACAmoC,UAAA,KAWAmyC,GAAA,WAQA,QAAAxmD,KAEA,MADA71B,GAAAypC,EAAA,KACArC,EATA,GACAhU,GAAAC,EAAAC,EAEAtzB,EACAypC,EACArC,EALAn3B,EAAA,EAAAk8B,EAAA,EAAAC,EAAA,EAAAokC,EAAA,EAAAC,EAAA,EAAA6L,EAAAxyC,GACA3W,EAAA,KACA0W,EAAAC,EAUA,OAAA1C,IACAzQ,OAAA,SAAAA,GACA,MAAA32B,IAAAypC,IAAA9S,EAAA32B,IAAAs8E,EAAAzyC,EAAAJ,EAAA9S,KAEAkT,SAAA,SAAAn5B,GACA,MAAAvN,WAAAC,QAAAymC,EAAAn5B,EAAAyiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAuC,KAAAgU,GAEAvC,WAAA,SAAA52B,GACA,MAAAvN,WAAAC,QAAAymC,EAAA,MAAAn5B,GAAAyiB,EAAAC,EAAAC,EAAAC,EAAA,KAAAwW,IAAAtK,GAAArM,GAAAziB,EAAA,MAAA0iB,GAAA1iB,EAAA,MAAA2iB,GAAA3iB,EAAA,MAAA4iB,GAAA5iB,EAAA,OAAAmlB,KAAA,MAAA1C,EAAA,OAAAA,EAAAC,IAAAC,EAAAC,KAEAvxB,MAAA,SAAA2O,GACA,MAAAvN,WAAAC,QAAAk5E,EAAAtwC,IAAA/7B,GAAAS,GAAA8/D,EAAAvgE,EAAAwgE,EAAAtkC,EAAAC,GAAAvW,KAAA5lB,GAEAiS,UAAA,SAAAxR,GACA,MAAAvN,WAAAC,QAAAk5E,EAAAtwC,GAAA/7B,EAAAugE,EAAAvgE,EAAAwgE,EAAAtkC,GAAAz7B,EAAA,GAAA07B,GAAA17B,EAAA,IAAAmlB,MAAAsW,EAAAC,IAEAmwC,SAAA,SAAA7rE,GACA,MAAAvN,WAAAC,QAAAk5E,EAAAtwC,GAAA/7B,GAAAugE,EAAA9/D,GAAA,KAAAT,EAAAwgE,EAAAtkC,EAAAC,GAAAvW,KAAA26C,EAAA,GAEAgM,SAAA,SAAA9rE,GACA,MAAAvN,WAAAC,QAAAk5E,EAAAtwC,GAAA/7B,EAAAugE,EAAAvgE,GAAAwgE,EAAA//D,GAAA,KAAAy7B,EAAAC,GAAAvW,KAAA46C,EAAA,GAEAtpC,UAAA,SAAAt8B,EAAA4mB,GACA,MAAA0V,IAAAC,EAAAv8B,EAAA4mB,IAEAgW,QAAA,SAAAC,EAAAjW,GACA,MAAAgW,IAAAL,EAAAM,EAAAjW,KAaA4a,IAAA3O,OAAA,SAAAtxB,EAAA0B,GACA,GAAAksB,GAAAlC,EAAAhqB,EAAAkD,EAAA,EACA,IACA,GAAAo3B,GAAAtQ,IAAAwU,EAAAlE,GACAtQ,IAAAkC,GAAAlC,GAAA,SAAAsQ,GAAA,QAAAkE,IAAA,gBAAAlE,EAAA,QAAAkE,KAAAx+B,IACA,SAAAs6B,GAAA,QAAAkE,IAAA,gBAAAlE,EAAA,WAAAkE,WACG5+B,GAAAssB,GAAAgB,MAAAhqB,EAAA,EACH,QACA5E,GAAA,OAAAg8B,EAAAtQ,OAAA,QAAAsQ,IAAA,QAAAA,OAAA,gBAAAA,MACAtQ,GAIA,IAAA2kD,IAAA,WACA,MAAAr1C,IAAAiF,IACAtqC,MAAA,SAOAwqC,IAAA7O,OAAAsN,GAAA5U,GAEA,IAAAsmD,IAAA,WACA,MAAAt1C,IAAAmF,IACAxqC,MAAA,OACAmoC,UAAA,GAAAlP,IAQAwR,IAAA9O,OAAAsN,GAAA,SAAAzsB,GACA,SAAA6gB,GAAA7gB,IAGA,IAAAo+D,IAAA,WACA,MAAAv1C,IAAAoF,IACAzqC,MAAA,KACAmoC,UAAA,KAOAuC,IAAA/O,OAAA,SAAAtxB,EAAA0B,GACA,QAAAA,EAAA,EAAAsxB,GAAArc,GAAA3W,IAAAiqB,IAGA,IAAAumD,IAAA,WACA,GAAA//E,GAAAwuC,GAAAoB,IACAz+B,EAAAnR,EAAAmR,OACAyU,EAAA5lB,EAAA4lB,MAUA,OARA5lB,GAAAmR,OAAA,SAAA0C,GACA,MAAAvN,WAAAC,OAAA4K,IAAA0C,EAAA,GAAAA,EAAA,MAAAA,EAAA1C,KAAA0C,EAAA,IAAAA,EAAA,MAGA7T,EAAA4lB,OAAA,SAAA/R,GACA,MAAAvN,WAAAC,OAAAqf,GAAA/R,EAAA,GAAAA,EAAA,GAAAA,EAAAtN,OAAA,EAAAsN,EAAA,YAAAA,EAAA+R,KAAA/R,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAGA+R,GAAA,SACA1gB,MAAA,UAmCA86E,GAAA,WAMA,QAAAA,GAAA9gF,GACA,GAAA+gF,GACA1wE,EAAA,CAGArQ,GAAAghF,UAAA,SAAA3nE,GACA,GAAAw3B,GAAAx3B,EAAAw3B,QACAA,IACAx3B,EAAAhJ,EAAAugC,GAAAC,GACAx3B,EAAAtH,EAAAi/B,GAAAH,KAEAx3B,EAAAhJ,EAAA0wE,EAAA1wE,GAAA4wE,EAAA5nE,EAAA0nE,GAAA,EACA1nE,EAAAtH,EAAA,EACAgvE,EAAA1nE,IAIA,IAAAvU,GAAAosC,GAAAlxC,GACA+E,EAAAosC,GAAAnxC,GACAo3B,EAAAtyB,EAAAuL,EAAA4wE,EAAAn8E,EAAAC,GAAA,EACAuyB,EAAAvyB,EAAAsL,EAAA4wE,EAAAl8E,EAAAD,GAAA,CAGA,OAAA9E,GAAAghF,UAAAE,EAAA,SAAA7nE,GACAA,EAAAhJ,GAAAgJ,EAAAhJ,EAAArQ,EAAAqQ,GAAA8O,EACA9F,EAAAtH,GAAA/R,EAAA+R,EAAAsH,EAAAtH,GAAAqN,GACK,SAAA/F,GACLA,EAAAhJ,GAAAgJ,EAAAhJ,EAAA+mB,IAAAE,EAAAF,GAAAjY,EACA9F,EAAAtH,GAAA,GAAA/R,EAAA+R,EAAAsH,EAAAtH,EAAA/R,EAAA+R,EAAA,IAAAqN,IAjCA,GAAA6hE,GAAAtwC,GACAxxB,EAAA,EACAC,EAAA,EACA8hE,GAAA,CA8CA,OAZAJ,GAAAG,WAAA,SAAA5wE,GACA,MAAAjJ,WAAAC,QAAA45E,EAAA5wE,EAAAywE,GAAAG,GAGAH,EAAAn1C,KAAA,SAAAt7B,GACA,MAAAjJ,WAAAC,QAAA65E,GAAA,EAAA/hE,GAAA9O,EAAA,GAAA+O,GAAA/O,EAAA,GAAAywE,GAAAI,EAAA,MAAA/hE,EAAAC,IAGA0hE,EAAAI,SAAA,SAAA7wE,GACA,MAAAjJ,WAAAC,QAAA65E,GAAA,EAAA/hE,GAAA9O,EAAA,GAAA+O,GAAA/O,EAAA,GAAAywE,GAAAI,GAAA/hE,EAAAC,GAAA,MAGA0hE,GAYAK,GAAA,WACA,MAAA7gF,MAAA0gF,UAAAnwE,KAGAuwE,GAAA,SAAAtrE,GACA,GAAA8kD,GAAA/pB,EAAA57B,EAAAC,EAAAmE,EAAA/Y,KAAAo3B,GAAAre,EACA,GAEA,KADAuhD,EAAAljC,EAAAgQ,UAAAhQ,KACAre,EAAAuhD,EAAA10C,OAEA,GADApQ,EAAAuD,GAAAw3B,EAAAx3B,EAAAw3B,SACA,IAAA57B,EAAA,EAAAC,EAAA27B,EAAAxpC,OAAoD4N,EAAAC,IAAOD,EAC3DyiB,EAAApuB,KAAAunC,EAAA57B,UAGGyiB,EAAArwB,OACH,OAAA/G,OAGA+gF,GAAA,SAAAvrE,GAEA,IADA,GAAA+6B,GAAA57B,EAAAoE,EAAA/Y,KAAA63B,GAAA9e,GACAA,EAAA8e,EAAAjS,OAEA,GADApQ,EAAAuD,GAAAw3B,EAAAx3B,EAAAw3B,SACA,IAAA57B,EAAA47B,EAAAxpC,OAAA,EAA+C4N,GAAA,IAAQA,EACvDkjB,EAAA7uB,KAAAunC,EAAA57B,GAGA,OAAA3U,OAGAghF,GAAA,SAAAxrE,GAEA,IADA,GAAA+6B,GAAA57B,EAAAC,EAAAmE,EAAA/Y,KAAA63B,GAAA9e,GAAAqe,KACAre,EAAA8e,EAAAjS,OAEA,GADAwR,EAAApuB,KAAA+P,GAAAw3B,EAAAx3B,EAAAw3B,SACA,IAAA57B,EAAA,EAAAC,EAAA27B,EAAAxpC,OAAkD4N,EAAAC,IAAOD,EACzDkjB,EAAA7uB,KAAAunC,EAAA57B,GAGA,MAAAoE,EAAAqe,EAAAxR,OACApQ,EAAAuD,EAEA,OAAA/Y,OAGAihF,GAAA,SAAAhgF,GACA,MAAAjB,MAAA0gF,UAAA,SAAA3nE,GAIA,IAHA,GAAAtK,IAAAxN,EAAA8X,EAAAtR,OAAA,EACA8oC,EAAAx3B,EAAAw3B,SACA57B,EAAA47B,KAAAxpC,SACA4N,GAAA,GAAAlG,GAAA8hC,EAAA57B,GAAA1T,KACA8X,GAAA9X,MAAAwN,KAIAyyE,GAAA,SAAA/sD,GACA,MAAAn0B,MAAAwxC,WAAA,SAAAz4B,GACAA,EAAAw3B,UACAx3B,EAAAw3B,SAAAwL,KAAA5nB,MAKAgtD,GAAA,SAAAp6D,GAIA,IAHA,GAAA1W,GAAArQ,KACA81C,EAAAhF,GAAAzgC,EAAA0W,GACA8Q,GAAAxnB,GACAA,IAAAylC,GACAzlC,IAAAoI,OACAof,EAAA7uB,KAAAqH,EAGA,KADA,GAAAuD,GAAAikB,EAAA9wB,OACAggB,IAAA+uB,GACAje,EAAArN,OAAA5W,EAAA,EAAAmT,GACAA,IAAAtO,MAEA,OAAAof,IAkBAupD,GAAA,WAEA,IADA,GAAAroE,GAAA/Y,KAAA63B,GAAA9e,GACAA,IAAAN,QACAof,EAAA7uB,KAAA+P,EAEA,OAAA8e,IAGAwpD,GAAA,WACA,GAAAxpD,KAIA,OAHA73B,MAAAoU,KAAA,SAAA2E,GACA8e,EAAA7uB,KAAA+P,KAEA8e,GAGAypD,GAAA,WACA,GAAAC,KAMA,OALAvhF,MAAAwxC,WAAA,SAAAz4B,GACAA,EAAAw3B,UACAgxC,EAAAv4E,KAAA+P,KAGAwoE,GAGAC,GAAA,WACA,GAAA9hF,GAAAM,KAAAo2E,IAMA,OALA12E,GAAA0U,KAAA,SAAA2E,GACAA,IAAArZ,GACA02E,EAAAptE,MAAkBorB,OAAArb,EAAAN,OAAAiG,OAAA3F,MAGlBq9D,EAuDA/kC,IAAA/tC,UAAA4tC,GAAA5tC,WACAy1D,YAAA1nB,GACA9gC,MAAAswE,GACAzsE,KAAA0sE,GACAJ,UAAAM,GACAxvC,WAAAuvC,GACAtyE,IAAAwyE,GACAllC,KAAAmlC,GACAjuE,KAAAkuE,GACAnwC,UAAAowC,GACAK,YAAAJ,GACAE,OAAAD,GACAlL,MAAAoL,GACAzuE,KAAA2+B,GAGA,IAAAgwC,IAAAz6E,MAAA3D,UAAAiR,MAiBAggC,GAAA,SAAAL,GAGA,IAFA,GAAAxzC,GAAA4kB,EAAA3Q,EAAA,EAAAC,GAAAs/B,EAAAtC,GAAA8vC,GAAAnhF,KAAA2zC,KAAAntC,OAAAgrC,KAEAp9B,EAAAC,GACAlU,EAAAwzC,EAAAv/B,GACA2Q,GAAA+sB,GAAA/sB,EAAA5kB,KAAAiU,GACA2Q,EAAAgtB,GAAAP,EAAAD,GAAAC,EAAArxC,IAAAiU,EAAA,EAGA,OAAA2Q,IAyNAq8D,GAAA,SAAAztC,GAEA,MADAD,IAAAC,GACAA,GAgBA0tC,GAAA,SAAA7xE,GACA,kBACA,MAAAA,KAQA8xE,GAAA,WAMA,QAAAvtC,GAAA50C,GAYA,MAXAA,GAAAqQ,EAAA8O,EAAA,EAAAnf,EAAA+R,EAAAqN,EAAA,EACA+V,EACAn1B,EAAA8xC,WAAAoD,GAAA/f,IACA6rD,UAAA7rC,GAAAC,EAAA,KACAtD,WAAAuD,GAAA,IAEAr1C,EAAA8xC,WAAAoD,GAAAD,KACA+rC,UAAA7rC,GAAAH,GAAA,IACAgsC,UAAA7rC,GAAAC,EAAAp1C,EAAAghB,EAAAjQ,KAAA0Q,IAAAtC,EAAAC,KACA0yB,WAAAuD,GAAAtkC,KAAA0Q,IAAAtC,EAAAC,IAAA,EAAApf,EAAAghB,KAEAhhB,EAjBA,GAAAm1B,GAAA,KACAhW,EAAA,EACAC,EAAA,EACAg2B,EAAAJ,EA6BA,OAZAJ,GAAAzf,OAAA,SAAA9kB,GACA,MAAAjJ,WAAAC,QAAA8tB,EAAA2f,GAAAzkC,GAAAukC,GAAAzf,GAGAyf,EAAAjJ,KAAA,SAAAt7B,GACA,MAAAjJ,WAAAC,QAAA8X,GAAA9O,EAAA,GAAA+O,GAAA/O,EAAA,GAAAukC,IAAAz1B,EAAAC,IAGAw1B,EAAAQ,QAAA,SAAA/kC,GACA,MAAAjJ,WAAAC,QAAA+tC,EAAA,kBAAA/kC,KAAA6xE,IAAA7xE,GAAAukC,GAAAQ,GAGAR,GAuCAwtC,GAAA,SAAA/oE,GACAA,EAAA+d,GAAArmB,KAAAqB,MAAAiH,EAAA+d,IACA/d,EAAAge,GAAAtmB,KAAAqB,MAAAiH,EAAAge,IACAhe,EAAAie,GAAAvmB,KAAAqB,MAAAiH,EAAAie,IACAje,EAAAke,GAAAxmB,KAAAqB,MAAAiH,EAAAke,KAGA6f,GAAA,SAAAr+B,EAAAqe,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAle,GADA8e,EAAApf,EAAA83B,SAEA57B,GAAA,EACAC,EAAAijB,EAAA9wB,OACA6M,EAAA6E,EAAAxX,QAAA+1B,EAAAF,GAAAre,EAAAxX,QAEA0T,EAAAC,GACAmE,EAAA8e,EAAAljB,GAAAoE,EAAAge,KAAAhe,EAAAke,KACAle,EAAA+d,KAAA/d,EAAAie,GAAAF,GAAA/d,EAAA9X,MAAA2S,GAIAmuE,GAAA,WAMA,QAAAA,GAAAriF,GACA,GAAAkV,GAAAlV,EAAA0E,OAAA,CAOA,OANA1E,GAAAo3B,GACAp3B,EAAAq3B,GAAA+d,EACAp1C,EAAAs3B,GAAAnY,EACAnf,EAAAu3B,GAAAnY,EAAAlK,EACAlV,EAAA8xC,WAAAwwC,EAAAljE,EAAAlK,IACA9C,GAAApS,EAAA8xC,WAAAswC,IACApiF,EAGA,QAAAsiF,GAAAljE,EAAAlK,GACA,gBAAAmE,GACAA,EAAAw3B,UACAuG,GAAA/9B,IAAA+d,GAAAhY,GAAA/F,EAAA8yB,MAAA,GAAAj3B,EAAAmE,EAAAie,GAAAlY,GAAA/F,EAAA8yB,MAAA,GAAAj3B,EAEA,IAAAkiB,GAAA/d,EAAA+d,GACAC,EAAAhe,EAAAge,GACAC,EAAAje,EAAAie,GAAA8d,EACA7d,EAAAle,EAAAke,GAAA6d,CACA9d,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAle,EAAA+d,KACA/d,EAAAge,KACAhe,EAAAie,KACAje,EAAAke,MA9BA,GAAApY,GAAA,EACAC,EAAA,EACAg2B,EAAA,EACAhjC,GAAA,CA2CA,OAZAiwE,GAAAjwE,MAAA,SAAA/B,GACA,MAAAjJ,WAAAC,QAAA+K,IAAA/B,EAAAgyE,GAAAjwE,GAGAiwE,EAAA12C,KAAA,SAAAt7B,GACA,MAAAjJ,WAAAC,QAAA8X,GAAA9O,EAAA,GAAA+O,GAAA/O,EAAA,GAAAgyE,IAAAljE,EAAAC,IAGAijE,EAAAjtC,QAAA,SAAA/kC,GACA,MAAAjJ,WAAAC,QAAA+tC,GAAA/kC,EAAAgyE,GAAAjtC,GAGAitC,GAGAE,GAAA,IACAC,IAAer2C,OAAA,GACfs2C,MAUAC,GAAA,WAIA,QAAAA,GAAA36E,GACA,GAAAc,GACAoM,EAEAjV,EACA+Y,EACAM,EAEAqf,EACAiqD,EANAztE,EAAAnN,EAAAV,OAIA8wB,EAAA,GAAA5wB,OAAA2N,GAGA0tE,IAEA,KAAA3tE,EAAA,EAAeA,EAAAC,IAAOD,EACtBpM,EAAAd,EAAAkN,GAAAoE,EAAA8e,EAAAljB,GAAA,GAAA08B,IAAA9oC,GACA,OAAA6vB,EAAA/3B,EAAAkI,EAAAoM,EAAAlN,MAAA2wB,GAAA,MACAiqD,EAAAJ,IAAAlpE,EAAA1Y,GAAA+3B,GACAkqD,EAAAD,OAAAC,GAAAH,GAAAppE,EAIA,KAAApE,EAAA,EAAeA,EAAAC,IAAOD,EAEtB,GADAoE,EAAA8e,EAAAljB,GAAAyjB,EAAA8c,EAAAztC,EAAAkN,KAAAlN,GACA,MAAA2wB,OAAA,IAGO,CAEP,GADA3f,EAAA6pE,EAAAL,GAAA7pD,IACA3f,EAAA,SAAA5D,OAAA,YAAAujB,EACA,IAAA3f,IAAA0pE,GAAA,SAAAttE,OAAA,cAAAujB,EACA3f,GAAA83B,SAAA93B,EAAA83B,SAAAvnC,KAAA+P,GACAN,EAAA83B,UAAAx3B,GACAA,EAAAN,aATA,CACA,GAAA/Y,EAAA,SAAAmV,OAAA,iBACAnV,GAAAqZ,EAWA,IAAArZ,EAAA,SAAAmV,OAAA,UAIA,IAHAnV,EAAA+Y,OAAAypE,GACAxiF,EAAA8xC,WAAA,SAAAz4B,GAAoCA,EAAA8yB,MAAA9yB,EAAAN,OAAAozB,MAAA,IAAoCj3B,IAAO48B,WAAAC,IAC/E/xC,EAAA+Y,OAAA,KACA7D,EAAA,WAAAC,OAAA,QAEA,OAAAnV,GA5CA,GAAAW,GAAA20C,GACAE,EAAAD,EAsDA,OARAmtC,GAAA/hF,GAAA,SAAA0P,GACA,MAAAjJ,WAAAC,QAAA1G,EAAAo0C,GAAA1kC,GAAAqyE,GAAA/hF,GAGA+hF,EAAAltC,SAAA,SAAAnlC,GACA,MAAAjJ,WAAAC,QAAAmuC,EAAAT,GAAA1kC,GAAAqyE,GAAAltC,GAGAktC,EA0EArsC,IAAAzyC,UAAAvC,OAAAwe,OAAA8xB,GAAA/tC,UA0BA,IAAAizB,IAAA,WAMA,QAAAA,GAAA72B,GACA,GAAAgV,GAAAshC,GAAAt2C,EAOA,IAJAgV,EAAAgsE,UAAA6B,GAAA7tE,EAAA+D,OAAAjY,GAAAkU,EAAAwN,EACAxN,EAAA88B,WAAAgxC,GAGA5B,EAAAlhF,EAAA8xC,WAAAixC,OAIA,CACA,GAAAj+E,GAAA9E,EACA+E,EAAA/E,EACAkF,EAAAlF,CACAA,GAAA8xC,WAAA,SAAAz4B,GACAA,EAAAhJ,EAAAvL,EAAAuL,IAAAvL,EAAAuU,GACAA,EAAAhJ,EAAAtL,EAAAsL,IAAAtL,EAAAsU,GACAA,EAAA8yB,MAAAjnC,EAAAinC,QAAAjnC,EAAAmU,IAEA,IAAAgI,GAAAvc,IAAAC,EAAA,EAAAk8E,EAAAn8E,EAAAC,GAAA,EACAqrC,EAAA/uB,EAAAvc,EAAAuL,EACA6/B,EAAA/wB,GAAApa,EAAAsL,EAAAgR,EAAA+uB,GACAD,EAAA/wB,GAAAla,EAAAinC,OAAA,EACAnsC,GAAA8xC,WAAA,SAAAz4B,GACAA,EAAAhJ,GAAAgJ,EAAAhJ,EAAA+/B,GAAAF,EACA72B,EAAAtH,EAAAsH,EAAA8yB,MAAAgE,IAIA,MAAAnwC,GAOA,QAAA6iF,GAAAroE,GACA,GAAAq2B,GAAAr2B,EAAAq2B,SACAoxC,EAAAznE,EAAAzB,OAAA83B,SACAzsC,EAAAoW,EAAAvF,EAAAgtE,EAAAznE,EAAAvF,EAAA,OACA,IAAA47B,EAAA,CACAoF,GAAAz7B,EACA,IAAAwoE,IAAAnyC,EAAA,GAAAruB,EAAAquB,IAAAxpC,OAAA,GAAAmb,GAAA,CACApe,IACAoW,EAAAgI,EAAApe,EAAAoe,EAAAy+D,EAAAzmE,EAAA7F,EAAAvQ,EAAAuQ,GACA6F,EAAA1Z,EAAA0Z,EAAAgI,EAAAwgE,GAEAxoE,EAAAgI,EAAAwgE,MAEK5+E,KACLoW,EAAAgI,EAAApe,EAAAoe,EAAAy+D,EAAAzmE,EAAA7F,EAAAvQ,EAAAuQ,GAEA6F,GAAAzB,OAAA46B,EAAAsvC,EAAAzoE,EAAApW,EAAAoW,EAAAzB,OAAA46B,GAAAsuC,EAAA,IAIA,QAAAa,GAAAtoE,GACAA,EAAA7F,EAAAtE,EAAAmK,EAAAgI,EAAAhI,EAAAzB,OAAAjY,EACA0Z,EAAA1Z,GAAA0Z,EAAAzB,OAAAjY,EAcA,QAAAmiF,GAAAzoE,EAAApW,EAAAgyC,GACA,GAAAhyC,EAAA,CAUA,IATA,GAQA2xC,GARAmtC,EAAA1oE,EACA2oE,EAAA3oE,EACA27B,EAAA/xC,EACAg/E,EAAAF,EAAAnqE,OAAA83B,SAAA,GACAwyC,EAAAH,EAAApiF,EACAwiF,EAAAH,EAAAriF,EACAyiF,EAAAptC,EAAAr1C,EACA0iF,EAAAJ,EAAAtiF,EAEAq1C,EAAAR,GAAAQ,GAAA+sC,EAAAxtC,GAAAwtC,GAAA/sC,GAAA+sC,GACAE,EAAA1tC,GAAA0tC,GACAD,EAAAxtC,GAAAwtC,GACAA,EAAA3yE,EAAAgK,EACAu7B,EAAAI,EAAA3zB,EAAA+gE,EAAAL,EAAA1gE,EAAA6gE,EAAApC,EAAA9qC,EAAAxhC,EAAAuuE,EAAAvuE,GACAohC,EAAA,IACAH,GAAAM,GAAAC,EAAA37B,EAAA47B,GAAA57B,EAAAu7B,GACAstC,GAAAttC,EACAutC,GAAAvtC,GAEAwtC,GAAAptC,EAAAr1C,EACAuiF,GAAAH,EAAApiF,EACA0iF,GAAAJ,EAAAtiF,EACAwiF,GAAAH,EAAAriF,CAEAq1C,KAAAR,GAAAwtC,KACAA,EAAAnuE,EAAAmhC,EACAgtC,EAAAriF,GAAAyiF,EAAAD,GAEAJ,IAAAxtC,GAAA0tC,KACAA,EAAApuE,EAAAkuE,EACAE,EAAAtiF,GAAAuiF,EAAAG,EACAptC,EAAA57B,GAGA,MAAA47B,GAGA,QAAA2sC,GAAA1pE,GACAA,EAAAhJ,GAAA8O,EACA9F,EAAAtH,EAAAsH,EAAA8yB,MAAA/sB,EAxHA,GAAA6hE,GAAAxrC,GACAt2B,EAAA,EACAC,EAAA,EACA8hE,EAAA,IAoIA,OAZArqD,GAAAoqD,WAAA,SAAA5wE,GACA,MAAAjJ,WAAAC,QAAA45E,EAAA5wE,EAAAwmB,GAAAoqD,GAGApqD,EAAA8U,KAAA,SAAAt7B,GACA,MAAAjJ,WAAAC,QAAA65E,GAAA,EAAA/hE,GAAA9O,EAAA,GAAA+O,GAAA/O,EAAA,GAAAwmB,GAAAqqD,EAAA,MAAA/hE,EAAAC,IAGAyX,EAAAqqD,SAAA,SAAA7wE,GACA,MAAAjJ,WAAAC,QAAA65E,GAAA,EAAA/hE,GAAA9O,EAAA,GAAA+O,GAAA/O,EAAA,GAAAwmB,GAAAqqD,GAAA/hE,EAAAC,GAAA,MAGAyX,GAGAwgB,GAAA,SAAAt+B,EAAAqe,EAAAC,EAAAC,EAAAC,GAOA,IANA,GACAle,GADA8e,EAAApf,EAAA83B,SAEA57B,GAAA,EACAC,EAAAijB,EAAA9wB,OACA6M,EAAA6E,EAAAxX,QAAAg2B,EAAAF,GAAAte,EAAAxX,QAEA0T,EAAAC,GACAmE,EAAA8e,EAAAljB,GAAAoE,EAAA+d,KAAA/d,EAAAie,KACAje,EAAAge,KAAAhe,EAAAke,GAAAF,GAAAhe,EAAA9X,MAAA2S,GAIA6nB,IAAA,EAAAhrB,KAAAqS,KAAA,MAmDAqgE,GAAA,QAAAtV,GAAA33B,GAEA,QAAAitC,GAAA1qE,EAAAqe,EAAAC,EAAAC,EAAAC,GACAgf,GAAAC,EAAAz9B,EAAAqe,EAAAC,EAAAC,EAAAC,GAOA,MAJAksD,GAAAjtC,MAAA,SAAAnmC,GACA,MAAA89D,IAAA99D,MAAA,EAAAA,EAAA,IAGAozE,GACC1nD,IAED2nD,GAAA,WAYA,QAAAC,GAAA3jF,GAQA,MAPAA,GAAAo3B,GACAp3B,EAAAq3B,GAAA,EACAr3B,EAAAs3B,GAAAnY,EACAnf,EAAAu3B,GAAAnY,EACApf,EAAA8xC,WAAAwwC,GACAsB,GAAA,GACAxxE,GAAApS,EAAA8xC,WAAAswC,IACApiF,EAGA,QAAAsiF,GAAAjpE,GACA,GAAArY,GAAA4iF,EAAAvqE,EAAA8yB,OACA/U,EAAA/d,EAAA+d,GAAAp2B,EACAq2B,EAAAhe,EAAAge,GAAAr2B,EACAs2B,EAAAje,EAAAie,GAAAt2B,EACAu2B,EAAAle,EAAAke,GAAAv2B,CACAs2B,GAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAle,EAAA+d,KACA/d,EAAAge,KACAhe,EAAAie,KACAje,EAAAke,KACAle,EAAAw3B,WACA7vC,EAAA4iF,EAAAvqE,EAAA8yB,MAAA,GAAAsN,EAAApgC,GAAA,EACA+d,GAAAysD,EAAAxqE,GAAArY,EACAq2B,GAAAysD,EAAAzqE,GAAArY,EACAs2B,GAAAysD,EAAA1qE,GAAArY,EACAu2B,GAAAysD,EAAA3qE,GAAArY,EACAs2B,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACAC,EAAAF,MAAAE,GAAAF,EAAAE,GAAA,GACA0sD,EAAA5qE,EAAA+d,EAAAC,EAAAC,EAAAC,IA1CA,GAAA0sD,GAAAR,GACArxE,GAAA,EACA+M,EAAA,EACAC,EAAA,EACAwkE,GAAA,GACAnqC,EAAAzE,GACA8uC,EAAA9uC,GACA+uC,EAAA/uC,GACAgvC,EAAAhvC,GACA6uC,EAAA7uC,EA6EA,OAxCA2uC,GAAAvxE,MAAA,SAAA/B,GACA,MAAAjJ,WAAAC,QAAA+K,IAAA/B,EAAAszE,GAAAvxE,GAGAuxE,EAAAh4C,KAAA,SAAAt7B,GACA,MAAAjJ,WAAAC,QAAA8X,GAAA9O,EAAA,GAAA+O,GAAA/O,EAAA,GAAAszE,IAAAxkE,EAAAC,IAGAukE,EAAAM,KAAA,SAAA5zE,GACA,MAAAjJ,WAAAC,QAAA48E,EAAAlvC,GAAA1kC,GAAAszE,GAAAM,GAGAN,EAAAvuC,QAAA,SAAA/kC,GACA,MAAAjJ,WAAAC,OAAAs8E,EAAAlqC,aAAAppC,GAAAqpC,aAAArpC,GAAAszE,EAAAlqC,gBAGAkqC,EAAAlqC,aAAA,SAAAppC,GACA,MAAAjJ,WAAAC,QAAAoyC,EAAA,kBAAAppC,KAAA6xE,IAAA7xE,GAAAszE,GAAAlqC,GAGAkqC,EAAAjqC,aAAA,SAAArpC,GACA,MAAAjJ,WAAAC,OAAAs8E,EAAAG,WAAAzzE,GAAA0zE,aAAA1zE,GAAA2zE,cAAA3zE,GAAAwzE,YAAAxzE,GAAAszE,EAAAG,cAGAH,EAAAG,WAAA,SAAAzzE,GACA,MAAAjJ,WAAAC,QAAAy8E,EAAA,kBAAAzzE,KAAA6xE,IAAA7xE,GAAAszE,GAAAG,GAGAH,EAAAI,aAAA,SAAA1zE,GACA,MAAAjJ,WAAAC,QAAA08E,EAAA,kBAAA1zE,KAAA6xE,IAAA7xE,GAAAszE,GAAAI,GAGAJ,EAAAK,cAAA,SAAA3zE,GACA,MAAAjJ,WAAAC,QAAA28E,EAAA,kBAAA3zE,KAAA6xE,IAAA7xE,GAAAszE,GAAAK,GAGAL,EAAAE,YAAA,SAAAxzE,GACA,MAAAjJ,WAAAC,QAAAw8E,EAAA,kBAAAxzE,KAAA6xE,IAAA7xE,GAAAszE,GAAAE,GAGAF,GAGAO,GAAA,SAAAnrE,EAAAqe,EAAAC,EAAAC,EAAAC,GAWA,QAAA8qD,GAAAptE,EAAAgD,EAAA1W,EAAA61B,EAAAC,EAAAC,EAAAC,GACA,GAAAtiB,GAAAgD,EAAA,GACA,GAAAoB,GAAA8e,EAAAljB,EAGA,OAFAoE,GAAA+d,KAAA/d,EAAAge,KACAhe,EAAAie,KAAAje,EAAAke,KACA,OAQA,IALA,GAAA4sD,GAAAC,EAAAnvE,GACAovE,EAAA9iF,EAAA,EAAA4iF,EACAjwE,EAAAe,EAAA,EACAiiD,EAAAj/C,EAAA,EAEA/D,EAAAgjD,GAAA,CACA,GAAAC,GAAAjjD,EAAAgjD,IAAA,CACAktB,GAAAjtB,GAAAktB,EAAAnwE,EAAAijD,EAAA,EACAD,EAAAC,EAGAktB,EAAAD,EAAAlwE,EAAA,GAAAkwE,EAAAlwE,GAAAmwE,GAAApvE,EAAA,EAAAf,MAEA,IAAAowE,GAAAF,EAAAlwE,GAAAiwE,EACAI,EAAAhjF,EAAA+iF,CAEA,IAAAhtD,EAAAF,EAAAG,EAAAF,EAAA,CACA,GAAAmtD,IAAAptD,EAAAmtD,EAAAjtD,EAAAgtD,GAAA/iF,CACA8gF,GAAAptE,EAAAf,EAAAowE,EAAAltD,EAAAC,EAAAmtD,EAAAjtD,GACA8qD,EAAAnuE,EAAA+D,EAAAssE,EAAAC,EAAAntD,EAAAC,EAAAC,OACK,CACL,GAAAktD,IAAAptD,EAAAktD,EAAAhtD,EAAA+sD,GAAA/iF,CACA8gF,GAAAptE,EAAAf,EAAAowE,EAAAltD,EAAAC,EAAAC,EAAAmtD,GACApC,EAAAnuE,EAAA+D,EAAAssE,EAAAntD,EAAAqtD,EAAAntD,EAAAC,IAzCA,GACAtiB,GACAlG,EAFAopB,EAAApf,EAAA83B,SACA37B,EAAAijB,EAAA9wB,OACA+8E,EAAA,GAAA78E,OAAA2N,EAAA,EAEA,KAAAkvE,EAAA,GAAAr1E,EAAAkG,EAAA,EAA6BA,EAAAC,IAAOD,EACpCmvE,EAAAnvE,EAAA,GAAAlG,GAAAopB,EAAAljB,GAAA1T,KAGA8gF,GAAA,EAAAntE,EAAA6D,EAAAxX,MAAA61B,EAAAC,EAAAC,EAAAC,IAsCAmtD,GAAA,SAAA3rE,EAAAqe,EAAAC,EAAAC,EAAAC,IACA,EAAAxe,EAAAozB,MAAAkL,GAAAD,IAAAr+B,EAAAqe,EAAAC,EAAAC,EAAAC,IAGAotD,GAAA,QAAAxW,GAAA33B,GAEA,QAAAmuC,GAAA5rE,EAAAqe,EAAAC,EAAAC,EAAAC,GACA,IAAAb,EAAA3d,EAAA6rE,YAAAluD,EAAA8f,UAUA,IATA,GAAA9f,GACAF,EACA2B,EACAljB,EAEAC,EADA+C,GAAA,EAEAnX,EAAA41B,EAAArvB,OACA9F,EAAAwX,EAAAxX,QAEA0W,EAAAnX,GAAA,CAEA,IADA01B,EAAAE,EAAAze,GAAAkgB,EAAA3B,EAAAqa,SACA57B,EAAAuhB,EAAAj1B,MAAA,EAAA2T,EAAAijB,EAAA9wB,OAAiD4N,EAAAC,IAAOD,EAAAuhB,EAAAj1B,OAAA42B,EAAAljB,GAAA1T,KACxDi1B,GAAA2gB,KAAAC,GAAA5gB,EAAAY,EAAAC,EAAAC,EAAAD,IAAAE,EAAAF,GAAAb,EAAAj1B,SACA81C,GAAA7gB,EAAAY,EAAAC,EAAAD,IAAAE,EAAAF,GAAAZ,EAAAj1B,QAAAg2B,GACAh2B,GAAAi1B,EAAAj1B,UAGAwX,GAAA6rE,UAAAluD,EAAA6f,GAAAC,EAAAz9B,EAAAqe,EAAAC,EAAAC,EAAAC,GACAb,EAAA8f,QAQA,MAJAmuC,GAAAnuC,MAAA,SAAAnmC,GACA,MAAA89D,IAAA99D,MAAA,EAAAA,EAAA,IAGAs0E,GACC5oD,IAED8oD,GAAA,SAAAzgD,GAOA,IANA,GAEA5zB,GAFAyE,GAAA,EACAC,EAAAkvB,EAAA/8B,OAEAoJ,EAAA2zB,EAAAlvB,EAAA,GACA3F,EAAA,IAEA0F,EAAAC,GACA1E,EAAAC,EACAA,EAAA2zB,EAAAnvB,GACA1F,GAAAiB,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAGA,OAAAlB,GAAA,GAGAu1E,GAAA,SAAA1gD,GAUA,IATA,GAIA5zB,GAEAzP,EANAkU,GAAA,EACAC,EAAAkvB,EAAA/8B,OACAgJ,EAAA,EACA0B,EAAA,EAEAtB,EAAA2zB,EAAAlvB,EAAA,GAEAhB,EAAA,IAEAe,EAAAC,GACA1E,EAAAC,EACAA,EAAA2zB,EAAAnvB,GACAf,GAAAnT,EAAAyP,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAH,IAAAG,EAAA,GAAAC,EAAA,IAAA1P,EACAgR,IAAAvB,EAAA,GAAAC,EAAA,IAAA1P,CAGA,OAAAmT,IAAA,GAAA7D,EAAA6D,EAAAnC,EAAAmC,IAOAujC,GAAA,SAAAjnC,EAAAC,EAAA1P,GACA,OAAA0P,EAAA,GAAAD,EAAA,KAAAzP,EAAA,GAAAyP,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAzP,EAAA,GAAAyP,EAAA,KAuBAu0E,GAAA,SAAAziD,GACA,IAAAptB,EAAAotB,EAAAj7B,QAAA,aAEA,IAAA4N,GACAC,EACA8vE,EAAA,GAAAz9E,OAAA2N,GACA+vE,EAAA,GAAA19E,OAAA2N,EAEA,KAAAD,EAAA,EAAaA,EAAAC,IAAOD,EAAA+vE,EAAA/vE,KAAAqtB,EAAArtB,GAAA,IAAAqtB,EAAArtB,GAAA,GAAAA,EAEpB,KADA+vE,EAAA3oC,KAAA/E,IACAriC,EAAA,EAAaA,EAAAC,IAAOD,EAAAgwE,EAAAhwE,IAAA+vE,EAAA/vE,GAAA,IAAA+vE,EAAA/vE,GAAA,GAEpB,IAAAiwE,GAAA3tC,GAAAytC,GACAG,EAAA5tC,GAAA0tC,GAGAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAA99E,OAAA,KAAA69E,IAAA79E,OAAA,GACA09E,IAIA,KAAA9vE,EAAAiwE,EAAA79E,OAAA,EAAmC4N,GAAA,IAAQA,EAAA8vE,EAAAz7E,KAAAg5B,EAAA0iD,EAAAE,EAAAjwE,IAAA,IAC3C,KAAAA,GAAAmwE,EAAqBnwE,EAAAkwE,EAAA99E,OAAAg+E,IAAqCpwE,EAAA8vE,EAAAz7E,KAAAg5B,EAAA0iD,EAAAG,EAAAlwE,IAAA,IAE1D,OAAA8vE,IAGAO,GAAA,SAAAlhD,EAAA7S,GAQA,OAHA+F,GAAAC,EAJAriB,EAAAkvB,EAAA/8B,OACArG,EAAAojC,EAAAlvB,EAAA,GACA7E,EAAAkhB,EAAA,GAAAxf,EAAAwf,EAAA,GACA6F,EAAAp2B,EAAA,GAAAq2B,EAAAr2B,EAAA,GAEAukF,GAAA,EAEAtwE,EAAA,EAAiBA,EAAAC,IAAOD,EACxBjU,EAAAojC,EAAAnvB,GAAAqiB,EAAAt2B,EAAA,GAAAu2B,EAAAv2B,EAAA,GACAu2B,EAAAxlB,GAAAslB,EAAAtlB,GAAA1B,GAAA+mB,EAAAE,IAAAvlB,EAAAwlB,IAAAF,EAAAE,GAAAD,IAAAiuD,MACAnuD,EAAAE,EAAAD,EAAAE,CAGA,OAAAguD,IAGAC,GAAA,SAAAphD,GAUA,IATA,GAGAhe,GACAC,EAJApR,GAAA,EACAC,EAAAkvB,EAAA/8B,OACAoJ,EAAA2zB,EAAAlvB,EAAA,GAGAoR,EAAA7V,EAAA,GACA8V,EAAA9V,EAAA,GACAg1E,EAAA,IAEAxwE,EAAAC,GACAkR,EAAAE,EACAD,EAAAE,EACA9V,EAAA2zB,EAAAnvB,GACAqR,EAAA7V,EAAA,GACA8V,EAAA9V,EAAA,GACA2V,GAAAE,EACAD,GAAAE,EACAk/D,GAAA10E,KAAAqS,KAAAgD,IAAAC,IAGA,OAAAo/D,IAGAC,MAAA7wE,MAEAwjC,KAcAX,IAAA9zC,UAAA20C,GAAA30C,WACAy1D,YAAA3hB,GACAiuC,MAAA,SAAA7vE,GACA,qBAAAA,GAAA,SAAAX,OAAA,mBACA,IAAA7U,KAAA4nB,MAAA,SAAA/S,OAAA,oBACA,UAAA7U,KAAAs3C,OAAA,MAAAt3C,KACA,IAAA0U,GAAA0wE,GAAA7kF,KAAAuG,UAAA,EAIA,OAHA4N,GAAA1L,KAAAwM,KACAxV,KAAAw3C,SAAAx3C,KAAAu3C,OAAAvuC,KAAA0L,GACAkjC,GAAA53C,MACAA,MAEA83C,MAAA,WAEA,MADA,OAAA93C,KAAAs3C,QAAAQ,GAAA93C,KAAA,GAAA6U,OAAA,UACA7U,MAEAslF,MAAA,SAAA9vE,GACA,qBAAAA,GAAA,SAAAX,OAAA,mBACA,IAAA7U,KAAA4nB,MAAA,SAAA/S,OAAA,iBAGA,OAFA7U,MAAA4nB,MAAA,SAAA9W,EAAAy0E,GAA2C/vE,EAAAnO,MAAA,MAAAyJ,GAAAxJ,OAAAi+E,KAC3CvtC,GAAAh4C,MACAA,MAEAwlF,SAAA,SAAAhwE,GACA,qBAAAA,GAAA,SAAAX,OAAA,mBACA,IAAA7U,KAAA4nB,MAAA,SAAA/S,OAAA,iBAGA,OAFA7U,MAAA4nB,MAAApS,EACAwiC,GAAAh4C,MACAA,MA8EA,IAAAylF,IAAA,WACA,MAAAh1E,MAAAohC,UAGA6zC,GAAA,QAAAC,GAAAvxD,GACA,QAAAvlB,GAAAsS,EAAAzQ,GAKA,MAJAyQ,GAAA,MAAAA,EAAA,GAAAA,EACAzQ,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAA5J,UAAAC,QAAA2J,EAAAyQ,IAAA,GACAzQ,GAAAyQ,EACA,WACA,MAAAiT,KAAA1jB,EAAAyQ,GAMA,MAFAtS,GAAAulB,OAAAuxD,EAEA92E,GACC42E,IAEDloD,GAAA,QAAAqoD,GAAAxxD,GACA,QAAAtlB,GAAA+2E,EAAAC,GACA,GAAA/1E,GAAA2Q,CAGA,OAFAmlE,GAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,GAAAr0E,EAGA,UAAA1B,EAAA0B,EAAA1B,IAAA,SAGA,GACAA,GAAA,EAAAqkB,IAAA,EACA3iB,EAAA,EAAA2iB,IAAA,EACA1T,EAAA3Q,IAAA0B,WACOiP,KAAA,EAEP,OAAAmlE,GAAAC,EAAAr0E,EAAAhB,KAAAqS,MAAA,EAAArS,KAAArJ,IAAAsZ,OAMA,MAFA5R,GAAAslB,OAAAwxD,EAEA92E,GACC22E,IAEDM,GAAA,QAAAC,GAAA5xD,GACA,QAAA6xD,KACA,GAAAn3E,GAAAyuB,GAAAnJ,UAAA/sB,MAAArH,KAAA8G,UACA,mBACA,MAAA2J,MAAAiW,IAAA5X,MAMA,MAFAm3E,GAAA7xD,OAAA4xD,EAEAC,GACCR,IAEDS,GAAA,QAAAC,GAAA/xD,GACA,QAAAgyD,GAAAxxE,GACA,kBACA,OAAAnG,GAAA,EAAAkG,EAAA,EAA8BA,EAAAC,IAAOD,EAAAlG,GAAA2lB,GACrC,OAAA3lB,IAMA,MAFA23E,GAAAhyD,OAAA+xD,EAEAC,GACCX,IAEDY,GAAA,QAAAC,GAAAlyD,GACA,QAAAmyD,GAAA3xE,GACA,GAAAwxE,GAAAF,GAAA9xD,UAAAxf,EACA,mBACA,MAAAwxE,KAAAxxE,GAMA,MAFA2xE,GAAAnyD,OAAAkyD,EAEAC,GACCd,IAEDe,GAAA,QAAAC,GAAAryD,GACA,QAAAsyD,GAAAlrD,GACA,kBACA,OAAA/qB,KAAArJ,IAAA,EAAAgtB,KAAAoH,GAMA,MAFAkrD,GAAAtyD,OAAAqyD,EAEAC,GACCjB,IAEDkB,GAAA,SAAAC,EAAApxE,GAqBA,QAAAqxE,GAAAnvE,GACA,GAAAqtB,GAAA+hD,EAAA1uC,EAAA0uC,MACA,KAAAA,GAAAzuC,GAAAD,IACA0uC,GAAA,KAAAA,EAAA,KACA,MAAAA,EAAA,CACA,GAAAvuC,EACA,IACAxT,EAAAwT,EAAAh4C,KAAAomF,EAAAvuC,GACS,MAAA9yB,GAET,WADA1W,GAAArO,KAAA,QAAAomF,EAAArhE,OAIAyf,GAAAqT,CAEAxpC,GAAArO,KAAA,OAAAomF,EAAA5hD,OAEAn2B,GAAArO,KAAA,QAAAomF,EAAAjvE,GArCA,GAAAivE,GAEAI,EAKAxuC,EACAD,EAPA1pC,EAAAlB,EAAA,wCAEAs5E,EAAA7xD,KACAijB,EAAA,GAAA6uC,gBACAC,EAAA,KACAC,EAAA,KAGA5+D,EAAA,CAsHA,IAnHA,mBAAA6+D,iBACA,mBAAAhvC,KACA,oBAAAoE,KAAAoqC,KAAAxuC,EAAA,GAAAgvC,iBAEA,UAAAhvC,GACAA,EAAAivC,OAAAjvC,EAAAkvC,QAAAlvC,EAAAmvC,UAAAV,EACAzuC,EAAAovC,mBAAA,SAAA9vE,GAA8C0gC,EAAAqvC,WAAA,GAAAZ,EAAAnvE,IAuB9C0gC,EAAAsvC,WAAA,SAAApiE,GACA1W,EAAArO,KAAA,WAAAomF,EAAArhE,IAGAqhE,GACAgB,OAAA,SAAAvyE,EAAAnU,GAEA,MADAmU,MAAA,IAAAsK,cACA5Y,UAAAC,OAAA,EAAAigF,EAAA94E,IAAAkH,IACA,MAAAnU,EAAA+lF,EAAAj9E,OAAAqL,GACA4xE,EAAAzxE,IAAAH,EAAAnU,EAAA,IACA0lF,IAIAI,SAAA,SAAA9lF,GACA,MAAA6F,WAAAC,QACAggF,EAAA,MAAA9lF,EAAA,KAAAA,EAAA,GACA0lF,GAFAI,GAOAzuC,aAAA,SAAAr3C,GACA,MAAA6F,WAAAC,QACAuxC,EAAAr3C,EACA0lF,GAFAruC,GAKA/vB,QAAA,SAAAtnB,GACA,MAAA6F,WAAAC,QACAwhB,GAAAtnB,EACA0lF,GAFAp+D,GAKA2+D,KAAA,SAAAjmF,GACA,MAAA6F,WAAAC,OAAA,EAAAmgF,KAAA,MAAAjmF,EAAA,KAAAA,EAAA,GAAA0lF,IAGAQ,SAAA,SAAAlmF,GACA,MAAA6F,WAAAC,OAAA,EAAAogF,KAAA,MAAAlmF,EAAA,KAAAA,EAAA,GAAA0lF,IAKApuC,SAAA,SAAAt3C,GAEA,MADAs3C,GAAAt3C,EACA0lF,GAIAz4E,IAAA,SAAAzG,EAAA+N,GACA,MAAAmxE,GAAAiB,KAAA,MAAAngF,EAAA+N,IAIAqyE,KAAA,SAAApgF,EAAA+N,GACA,MAAAmxE,GAAAiB,KAAA,OAAAngF,EAAA+N,IAIAoyE,KAAA,SAAAE,EAAArgF,EAAA+N,GAYA,MAXA4iC,GAAA2vC,KAAAD,EAAAlB,GAAA,EAAAM,EAAAC,GACA,MAAAJ,GAAAC,EAAAjuC,IAAA,WAAAiuC,EAAAzxE,IAAA,SAAAwxE,EAAA,QACA3uC,EAAA4vC,kBAAAhB,EAAA5yE,KAAA,SAAAnT,EAAAmU,GAAoEgjC,EAAA4vC,iBAAA5yE,EAAAnU,KACpE,MAAA8lF,GAAA3uC,EAAA6vC,kBAAA7vC,EAAA6vC,iBAAAlB,GACA,MAAAzuC,IAAAF,EAAAE,gBACA/vB,EAAA,IAAA6vB,EAAA7vB,WACA,MAAA/S,GAAA,kBAAA/N,KAAA+N,EAAA/N,IAAA,MACA,MAAA+N,GAAA,IAAAA,EAAAzO,SAAAyO,EAAA2iC,GAAA3iC,IACA,MAAAA,GAAAmxE,EAAAhgF,GAAA,QAAA6O,GAAA7O,GAAA,gBAAAyxC,GAAoF5iC,EAAA,KAAA4iC,KACpFxpC,EAAArO,KAAA,aAAAomF,EAAAvuC,GACAA,EAAAwvC,KAAA,MAAAngF,EAAA,KAAAA,GACAk/E,GAGA7uC,MAAA,WAEA,MADAM,GAAAN,QACA6uC,GAGAhgF,GAAA,WACA,GAAA1F,GAAA2N,EAAAjI,GAAAU,MAAAuH,EAAA9H,UACA,OAAA7F,KAAA2N,EAAA+3E,EAAA1lF,IAIA,MAAAuU,EAAA,CACA,qBAAAA,GAAA,SAAAX,OAAA,qBAAAW,EACA,OAAAmxE,GAAAz4E,IAAAsH,GAGA,MAAAmxE,IAgBAuB,GAAA,SAAAC,EAAA5vC,GACA,gBAAAquC,EAAApxE,GACA,GAAAkL,GAAAimE,GAAAC,GAAAG,SAAAoB,GAAA5vC,WACA,UAAA/iC,EAAA,CACA,qBAAAA,GAAA,SAAAX,OAAA,qBAAAW,EACA,OAAAkL,GAAAxS,IAAAsH,GAEA,MAAAkL,KAIAxb,GAAAgjF,GAAA,qBAAA9vC,GACA,MAAAziC,UAAAyyE,cAAAC,yBAAAjwC,EAAAI,gBAGA8vC,GAAAJ,GAAA,4BAAA9vC,GACA,MAAAriB,MAAAvQ,MAAA4yB,EAAAI,gBAGA9kC,GAAAw0E,GAAA,sBAAA9vC,GACA,MAAAA,GAAAI,eAGA2gB,GAAA+uB,GAAA,2BAAA9vC,GACA,GAAA+gB,GAAA/gB,EAAAmwC,WACA,KAAApvB,EAAA,SAAAtkD,OAAA,cACA,OAAAskD,KAGAqvB,GAAA,SAAAL,EAAA3iE,GACA,gBAAAohE,EAAA1wD,EAAA1gB,GACA1O,UAAAC,OAAA,IAAAyO,EAAA0gB,IAAA,KACA,IAAAxV,GAAAimE,GAAAC,GAAAG,SAAAoB,EAGA,OAFAznE,GAAAwV,IAAA,SAAA7hB,GAAyB,MAAAvN,WAAAC,OAAA2Z,EAAA63B,SAAAE,GAAAjzB,EAAA0Q,EAAA7hB,IAAA6hB,GACzBxV,EAAAwV,OACA1gB,EAAAkL,EAAAxS,IAAAsH,GAAAkL,IAUA+nE,GAAAD,GAAA,WAAAhV,IAEAkV,GAAAF,GAAA,4BAAA3U,IAEA8U,GAAA1hF,MAAA3D,UAEAg3C,GAAAquC,GAAAv/E,IACA0vC,GAAA6vC,GAAAp0E,MAEAskC,IAAgBzjC,KAAA,YA+IhBskC,GAAA,SAAA3pC,GACA,kBACA,MAAAA,KAIAwqC,GAAA,SAAAxqC,GACA,OAAAA,GAGAsqC,IAAA,KA4GA7nC,GAAA,SAAAD,EAAAhC,EAAAioB,GACA,GAGAS,GAHA5oB,EAAAkC,EAAA,GACAjC,EAAAiC,IAAAxL,OAAA,GACAyJ,EAAAW,EAAAd,EAAAC,EAAA,MAAAC,EAAA,GAAAA,EAGA,QADAioB,EAAAD,GAAA,MAAAC,EAAA,KAAAA,GACAA,EAAAljB,MACA,QACA,GAAArU,GAAAwP,KAAAC,IAAAD,KAAAY,IAAAhB,GAAAI,KAAAY,IAAAf,GAEA,OADA,OAAAkoB,EAAAS,WAAA9U,MAAA8U,EAAA+gD,GAAAxpE,EAAAvP,MAAAu3B,EAAAS,aACAr5B,EAAA05B,aAAAd,EAAAv3B,EAEA,QACA,QACA,QACA,QACA,QACA,MAAAu3B,EAAAS,WAAA9U,MAAA8U,EAAAghD,GAAAzpE,EAAAC,KAAAC,IAAAD,KAAAY,IAAAhB,GAAAI,KAAAY,IAAAf,QAAAkoB,EAAAS,aAAA,MAAAT,EAAAljB,MACA,MAEA,SACA,QACA,MAAAkjB,EAAAS,WAAA9U,MAAA8U,EAAA8gD,GAAAvpE,MAAAgoB,EAAAS,YAAA,SAAAT,EAAAljB,OAIA,MAAA1V,GAAA2O,OAAAiqB,IAwFAkiB,GAAA,SAAAnoC,EAAAwW,GACAxW,IAAAgC,OAEA,IAIAG,GAJAiiC,EAAA,EACAC,EAAArkC,EAAAxL,OAAA,EACA+vB,EAAAvkB,EAAAokC,GACA3f,EAAAzkB,EAAAqkC,EAUA,OAPA5f,GAAAF,IACApiB,EAAAiiC,IAAAC,IAAAliC,EACAA,EAAAoiB,IAAAE,IAAAtiB,GAGAnC,EAAAokC,GAAA5tB,EAAAnY,MAAAkmB,GACAvkB,EAAAqkC,GAAA7tB,EAAAie,KAAAhQ,GACAzkB,GA4RAmqC,GAAA,GAAAj0C,MACAk0C,GAAA,GAAAl0C,MAmEAmgF,GAAAzsC,GAAA,aAEC,SAAAI,EAAA/rC,GACD+rC,EAAAE,SAAAF,EAAA/rC,IACC,SAAAH,EAAA0W,GACD,MAAAA,GAAA1W,GAIAu4E,IAAA38D,MAAA,SAAArY,GAEA,MADAA,GAAAnD,KAAAG,MAAAgD,GACAE,SAAAF,MAAA,EACAA,EAAA,EACAuoC,GAAA,SAAAI,GACAA,EAAAE,QAAAhsC,KAAAG,MAAA2rC,EAAA3oC,OACG,SAAA2oC,EAAA/rC,GACH+rC,EAAAE,SAAAF,EAAA/rC,EAAAoD,IACG,SAAAvD,EAAA0W,GACH,OAAAA,EAAA1W,GAAAuD,IANAg1E,GADA,KAWA,IAAAC,IAAAD,GAAAl6E,MAEAo6E,GAAA,IACA5rC,GAAA,IACA6rC,GAAA,KACAC,GAAA,MACA7rC,GAAA,OAEA8rC,GAAA9sC,GAAA,SAAAI,GACAA,EAAAE,QAAAhsC,KAAAG,MAAA2rC,EAAAusC,SACC,SAAAvsC,EAAA/rC,GACD+rC,EAAAE,SAAAF,EAAA/rC,EAAAs4E,KACC,SAAAz4E,EAAA0W,GACD,OAAAA,EAAA1W,GAAAy4E,IACC,SAAAvsC,GACD,MAAAA,GAAA2J,kBAGAgjC,GAAAD,GAAAv6E,MAEAy6E,GAAAhtC,GAAA,SAAAI,GACAA,EAAAE,QAAAhsC,KAAAG,MAAA2rC,EAAAW,SACC,SAAAX,EAAA/rC,GACD+rC,EAAAE,SAAAF,EAAA/rC,EAAA0sC,KACC,SAAA7sC,EAAA0W,GACD,OAAAA,EAAA1W,GAAA6sC,IACC,SAAAX,GACD,MAAAA,GAAAkJ,eAGA2jC,GAAAD,GAAAz6E,MAEA26E,GAAAltC,GAAA,SAAAI,GACA,GAAA3qC,GAAA2qC,EAAAU,oBAAAC,GAAA6rC,EACAn3E,GAAA,IAAAA,GAAAm3E,IACAxsC,EAAAE,QAAAhsC,KAAAG,QAAA2rC,EAAA3qC,GAAAm3E,OAAAn3E,IACC,SAAA2qC,EAAA/rC,GACD+rC,EAAAE,SAAAF,EAAA/rC,EAAAu4E,KACC,SAAA14E,EAAA0W,GACD,OAAAA,EAAA1W,GAAA04E,IACC,SAAAxsC,GACD,MAAAA,GAAAyE,aAGAsoC,GAAAD,GAAA36E,MAEA42C,GAAAnJ,GAAA,SAAAI,GACAA,EAAAS,SAAA,UACC,SAAAT,EAAA/rC,GACD+rC,EAAAM,QAAAN,EAAAO,UAAAtsC,IACC,SAAAH,EAAA0W,GACD,OAAAA,EAAA1W,GAAA0W,EAAAk2B,oBAAA5sC,EAAA4sC,qBAAAC,IAAA8rC,IACC,SAAAzsC,GACD,MAAAA,GAAAO,UAAA,IAGA4E,GAAA4D,GAAA52C,MAaAi3C,GAAA/I,GAAA,GACAgJ,GAAAhJ,GAAA,GACA2sC,GAAA3sC,GAAA,GACA4sC,GAAA5sC,GAAA,GACA6sC,GAAA7sC,GAAA,GACA8sC,GAAA9sC,GAAA,GACA+sC,GAAA/sC,GAAA,GAEAgtC,GAAAjkC,GAAAj3C,MACAm7E,GAAAjkC,GAAAl3C,MACAo7E,GAAAP,GAAA76E,MACAq7E,GAAAP,GAAA96E,MACAs7E,GAAAP,GAAA/6E,MACAu7E,GAAAP,GAAAh7E,MACAw7E,GAAAP,GAAAj7E,MAEAy7E,GAAAhuC,GAAA,SAAAI,GACAA,EAAAM,QAAA,GACAN,EAAAS,SAAA,UACC,SAAAT,EAAA/rC,GACD+rC,EAAA6tC,SAAA7tC,EAAAoE,WAAAnwC,IACC,SAAAH,EAAA0W,GACD,MAAAA,GAAA45B,WAAAtwC,EAAAswC,WAAA,IAAA55B,EAAA8+B,cAAAx1C,EAAAw1C,gBACC,SAAAtJ,GACD,MAAAA,GAAAoE,aAGAiB,GAAAuoC,GAAAz7E,MAEA62C,GAAApJ,GAAA,SAAAI,GACAA,EAAA6tC,SAAA,KACA7tC,EAAAS,SAAA,UACC,SAAAT,EAAA/rC,GACD+rC,EAAAsB,YAAAtB,EAAAsJ,cAAAr1C,IACC,SAAAH,EAAA0W,GACD,MAAAA,GAAA8+B,cAAAx1C,EAAAw1C,eACC,SAAAtJ,GACD,MAAAA,GAAAsJ,eAIAN,IAAAt5B,MAAA,SAAArY,GACA,MAAAE,UAAAF,EAAAnD,KAAAG,MAAAgD,OAAA,EAAAuoC,GAAA,SAAAI,GACAA,EAAAsB,YAAAptC,KAAAG,MAAA2rC,EAAAsJ,cAAAjyC,MACA2oC,EAAA6tC,SAAA,KACA7tC,EAAAS,SAAA,UACG,SAAAT,EAAA/rC,GACH+rC,EAAAsB,YAAAtB,EAAAsJ,cAAAr1C,EAAAoD,KALA,KASA,IAAAy2E,IAAA9kC,GAAA72C,MAEA47E,GAAAnuC,GAAA,SAAAI,GACAA,EAAAguC,cAAA,MACC,SAAAhuC,EAAA/rC,GACD+rC,EAAAE,SAAAF,EAAA/rC,EAAA0sC,KACC,SAAA7sC,EAAA0W,GACD,OAAAA,EAAA1W,GAAA6sC,IACC,SAAAX,GACD,MAAAA,GAAA0J,kBAGAukC,GAAAF,GAAA57E,MAEA+7E,GAAAtuC,GAAA,SAAAI,GACAA,EAAAmuC,cAAA,QACC,SAAAnuC,EAAA/rC,GACD+rC,EAAAE,SAAAF,EAAA/rC,EAAAu4E,KACC,SAAA14E,EAAA0W,GACD,OAAAA,EAAA1W,GAAA04E,IACC,SAAAxsC,GACD,MAAAA,GAAAgF,gBAGAopC,GAAAF,GAAA/7E,MAEAo3C,GAAA3J,GAAA,SAAAI,GACAA,EAAAiB,YAAA,UACC,SAAAjB,EAAA/rC,GACD+rC,EAAAc,WAAAd,EAAAe,aAAA9sC,IACC,SAAAH,EAAA0W,GACD,OAAAA,EAAA1W,GAAA24E,IACC,SAAAzsC,GACD,MAAAA,GAAAe,aAAA,IAGAstC,GAAA9kC,GAAAp3C,MAaAy3C,GAAA/I,GAAA,GACAgJ,GAAAhJ,GAAA,GACAytC,GAAAztC,GAAA,GACA0tC,GAAA1tC,GAAA,GACA2tC,GAAA3tC,GAAA,GACA4tC,GAAA5tC,GAAA,GACA6tC,GAAA7tC,GAAA,GAEA8tC,GAAA/kC,GAAAz3C,MACAy8E,GAAA/kC,GAAA13C,MACA08E,GAAAP,GAAAn8E,MACA28E,GAAAP,GAAAp8E,MACA48E,GAAAP,GAAAr8E,MACA68E,GAAAP,GAAAt8E,MACA88E,GAAAP,GAAAv8E,MAEA+8E,GAAAtvC,GAAA,SAAAI,GACAA,EAAAc,WAAA,GACAd,EAAAiB,YAAA,UACC,SAAAjB,EAAA/rC,GACD+rC,EAAAmvC,YAAAnvC,EAAA6E,cAAA5wC,IACC,SAAAH,EAAA0W,GACD,MAAAA,GAAAq6B,cAAA/wC,EAAA+wC,cAAA,IAAAr6B,EAAAs/B,iBAAAh2C,EAAAg2C,mBACC,SAAA9J,GACD,MAAAA,GAAA6E,gBAGAuqC,GAAAF,GAAA/8E,MAEAq3C,GAAA5J,GAAA,SAAAI,GACAA,EAAAmvC,YAAA,KACAnvC,EAAAiB,YAAA,UACC,SAAAjB,EAAA/rC,GACD+rC,EAAAyB,eAAAzB,EAAA8J,iBAAA71C,IACC,SAAAH,EAAA0W,GACD,MAAAA,GAAAs/B,iBAAAh2C,EAAAg2C,kBACC,SAAA9J,GACD,MAAAA,GAAA8J,kBAIAN,IAAA95B,MAAA,SAAArY,GACA,MAAAE,UAAAF,EAAAnD,KAAAG,MAAAgD,OAAA,EAAAuoC,GAAA,SAAAI,GACAA,EAAAyB,eAAAvtC,KAAAG,MAAA2rC,EAAA8J,iBAAAzyC,MACA2oC,EAAAmvC,YAAA,KACAnvC,EAAAiB,YAAA,UACG,SAAAjB,EAAA/rC,GACH+rC,EAAAyB,eAAAzB,EAAA8J,iBAAA71C,EAAAoD,KALA,KASA,IAkhBA2yC,IAlhBAqlC,GAAA7lC,GAAAr3C,MA2TA6vC,IAAYstC,IAAA,GAAAx3E,EAAA,IAAAy3E,EAAA,KACZ1mC,GAAA,UACAC,GAAA,KACAH,GAAA,iCA0NAoB,KACA9E,SAAA,SACAjF,KAAA,aACAv0B,KAAA,eACAy5B,SAAA,WACAC,MAAA,wEACAC,WAAA,2CACAC,QAAA,+GACAC,aAAA,0EAYA,IAAAkqC,IAAA,wBAMAC,GAAAvjF,KAAAnF,UAAAojD,YACAD,GACA7mD,EAAAklD,UAAAinC,IAOAE,IAAA,GAAAxjF,MAAA,4BACAk+C,GACA/mD,EAAAmlD,SAAAgnC,IAEAhkC,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,EAAAD,GACAE,GAAA,GAAAF,GACAJ,GAAA,IAAAI,GAsHAlgC,GAAA,WACA,MAAA8+B,IAAAvB,GAAA4kC,GAAAxkC,GAAAL,GAAA+jC,GAAAF,GAAAF,GAAAL,GAAAhpF,EAAA0O,YAAAiE,QAAA,GAAA9J,MAAA,YAAAA,MAAA,YAGAyjF,GAAA,WACA,MAAAplC,IAAAf,GAAA0lC,GAAAtlC,GAAAL,GAAA2kC,GAAAH,GAAArB,GAAAL,GAAAhpF,EAAAklD,WAAAvyC,QAAA9J,KAAAs1C,IAAA,SAAAt1C,KAAAs1C,IAAA,YAGA78C,GAAA,SAAA6f,GACA,MAAAA,GAAA2X,MAAA,SAAsBtvB,IAAA,SAAA2G,GACtB,UAAAA,KAIAo8E,GAAAjrF,GAAA,gEAEAkrF,GAAAlrF,GAAA,4HAEAmrF,GAAAnrF,GAAA,4HAEAorF,GAAAprF,GAAA,4HAEAqrF,GAAA5gB,GAAAloD,GAAA,UAAAA,IAAA,WAEA+oE,GAAA7gB,GAAAloD,IAAA,aAAAA,GAAA,YAEAgpE,GAAA9gB,GAAAloD,GAAA,aAAAA,GAAA,YAEAipE,GAAAjpE,KAEAkpE,GAAA,SAAAj4E,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAAjE,KAAAG,MAAA8D,GACA,IAAAk4E,GAAAn8E,KAAAY,IAAAqD,EAAA,GAIA,OAHAg4E,IAAAvoF,EAAA,IAAAuQ,EAAA,IACAg4E,GAAA3rE,EAAA,QAAA6rE,EACAF,GAAA1rE,EAAA,MAAA4rE,EACAF,GAAA,IAUAG,GAAAxkC,GAAAnnD,GAAA,qgDAEA4rF,GAAAzkC,GAAAnnD,GAAA,qgDAEA6rF,GAAA1kC,GAAAnnD,GAAA,qgDAEA8rF,GAAA3kC,GAAAnnD,GAAA,qgDA+BA4qD,GAAA,SAAA/7C,GACA,kBACA,MAAAA,KAIAk9E,GAAAx8E,KAAAY,IACA67E,GAAAz8E,KAAAmS,MACAuqE,GAAA18E,KAAAmR,IACAwoC,GAAA35C,KAAAC,IACA08E,GAAA38E,KAAA0Q,IACAksE,GAAA58E,KAAAoR,IACAkoC,GAAAt5C,KAAAqS,KAEA8qC,GAAA,MACAnF,GAAAh4C,KAAA04D,GACAxgB,GAAAF,GAAA,EACA6kC,GAAA,EAAA7kC,GAgFAuK,GAAA,WAUA,QAAAA,KACA,GAAAvH,GACA/qC,EACA0tB,GAAAya,EAAAxhD,MAAArH,KAAA8G,WACA0rC,GAAAuW,EAAA1hD,MAAArH,KAAA8G,WACAi9B,EAAAhP,EAAA1tB,MAAArH,KAAA8G,WAAA6hD,GACArlB,EAAArO,EAAA5tB,MAAArH,KAAA8G,WAAA6hD,GACAlV,EAAAw5C,GAAA3pD,EAAAS,GACA4lB,EAAArmB,EAAAS,CAQA,IANA5xB,MAAAs5C,EAAAx4C,MAGAu/B,EAAApE,IAAA1tB,EAAA8xB,IAAApE,IAAA1tB,GAGA8xB,EAAAob,GAGA,GAAAna,EAAA65C,GAAA1/B,GACAz7C,EAAA65C,OAAAxZ,EAAA26C,GAAAppD,GAAAyO,EAAA66C,GAAAtpD,IACA5xB,EAAA6gD,IAAA,IAAAxgB,EAAAzO,EAAAT,GAAAqmB,GACAvb,EAAAwf,KACAz7C,EAAA65C,OAAA5d,EAAA++C,GAAA7pD,GAAA8K,EAAAi/C,GAAA/pD,IACAnxB,EAAA6gD,IAAA,IAAA5kB,EAAA9K,EAAAS,EAAA4lB,QAKA,CACA,GAWApnC,GACAE,EAZA8qE,EAAAxpD,EACAypD,EAAAlqD,EACAqJ,EAAA5I,EACA0pD,EAAAnqD,EACAoqD,EAAAj6C,EACAk6C,EAAAl6C,EACAm6C,EAAAzkC,EAAA9hD,MAAArH,KAAA8G,WAAA,EACA+mF,EAAAD,EAAAhgC,KAAAkgC,KAAAzmF,MAAArH,KAAA8G,WAAAijD,GAAA3b,IAAAoE,MACAkX,EAAA0jC,GAAAH,GAAAz6C,EAAApE,GAAA,GAAA2/C,EAAA1mF,MAAArH,KAAA8G,YACAknF,EAAAtkC,EACAukC,EAAAvkC,CAKA,IAAAmkC,EAAAjgC,GAAA,CACA,GAAAtwB,GAAAorB,GAAAmlC,EAAAz/C,EAAAi/C,GAAAO,IACAvhC,EAAA3D,GAAAmlC,EAAAr7C,EAAA66C,GAAAO,KACAF,GAAA,EAAApwD,GAAAswB,IAAAtwB,GAAAqsB,EAAA,KAAAhd,GAAArP,EAAAmwD,GAAAnwD,IACAowD,EAAA,EAAA/gD,EAAA8gD,GAAA1pD,EAAAT,GAAA,IACAqqD,GAAA,EAAAthC,GAAAuB,IAAAvB,GAAA1C,EAAA,KAAA4jC,GAAAlhC,EAAAmhC,GAAAnhC,IACAshC,EAAA,EAAAJ,EAAAC,GAAAzpD,EAAAT,GAAA,GAGA,GAAAsmB,GAAApX,EAAA26C,GAAAI,GACA1jC,EAAArX,EAAA66C,GAAAE,GACAlkC,EAAAjb,EAAA++C,GAAAM,GACAnkC,EAAAlb,EAAAi/C,GAAAI,EAGA,IAAA/jC,EAAAkE,GAAA,CACA,GAAA1D,GAAA1X,EAAA26C,GAAAK,GACArjC,EAAA3X,EAAA66C,GAAAG,GACA1lD,EAAAsG,EAAA++C,GAAAxgD,GACA3E,EAAAoG,EAAAi/C,GAAA1gD,EAGA,IAAA8G,EAAAgV,GAAA,CACA,GAAAylC,GAAAR,EAAA9/B,GAAAxE,GAAAQ,EAAAC,EAAA/hB,EAAAE,EAAAkiB,EAAAC,EAAAd,EAAAC,IAAAD,EAAAC,GACA/V,EAAAqW,EAAAskC,EAAA,GACA16C,EAAAqW,EAAAqkC,EAAA,GACAr9B,EAAA3G,EAAAgkC,EAAA,GACAp9B,EAAA3G,EAAA+jC,EAAA,GACAC,EAAA,EAAAd,GAAA7kC,IAAAjV,EAAAsd,EAAArd,EAAAsd,IAAA/G,GAAAxW,IAAAC,KAAAuW,GAAA8G,IAAAC,OAAA,GACAs9B,EAAArkC,GAAAmkC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAF,GAAAZ,GAAA1jC,GAAAtb,EAAAggD,IAAAD,EAAA,IACAF,EAAAb,GAAA1jC,GAAAlX,EAAA47C,IAAAD,EAAA,KAKAR,EAAA//B,GAGAqgC,EAAArgC,IACArrC,EAAAknC,GAAA3hB,EAAAE,EAAA4hB,EAAAC,EAAArX,EAAAy7C,EAAAtkC,GACAlnC,EAAAgnC,GAAAS,EAAAC,EAAAd,EAAAC,EAAA9W,EAAAy7C,EAAAtkC,GAEAx3C,EAAA65C,OAAAzpC,EAAA6d,GAAA7d,EAAAqnC,IAAArnC,EAAA8d,GAAA9d,EAAAsnC,KAGAokC,EAAAvkC,EAAAv3C,EAAA6gD,IAAAzwC,EAAA6d,GAAA7d,EAAA8d,GAAA4tD,EAAAf,GAAA3qE,EAAAsnC,IAAAtnC,EAAAqnC,KAAAsjC,GAAAzqE,EAAAonC,IAAApnC,EAAAmnC,MAAAD,IAIAx3C,EAAA6gD,IAAAzwC,EAAA6d,GAAA7d,EAAA8d,GAAA4tD,EAAAf,GAAA3qE,EAAAsnC,IAAAtnC,EAAAqnC,KAAAsjC,GAAA3qE,EAAA4nC,IAAA5nC,EAAA2nC,MAAAP,GACAx3C,EAAA6gD,IAAA,IAAAxgB,EAAA06C,GAAA3qE,EAAA8d,GAAA9d,EAAA4nC,IAAA5nC,EAAA6d,GAAA7d,EAAA2nC,KAAAgjC,GAAAzqE,EAAA4d,GAAA5d,EAAA0nC,IAAA1nC,EAAA2d,GAAA3d,EAAAynC,MAAAP,GACAx3C,EAAA6gD,IAAAvwC,EAAA2d,GAAA3d,EAAA4d,GAAA4tD,EAAAf,GAAAzqE,EAAA0nC,IAAA1nC,EAAAynC,KAAAgjC,GAAAzqE,EAAAonC,IAAApnC,EAAAmnC,MAAAD,MAKAx3C,EAAA65C,OAAApC,EAAAC,GAAA13C,EAAA6gD,IAAA,IAAAxgB,EAAA+6C,EAAAC,GAAA7jC,IArBAx3C,EAAA65C,OAAApC,EAAAC,GAyBAzb,EAAAwf,IAAA8/B,EAAA9/B,GAGAogC,EAAApgC,IACArrC,EAAAknC,GAAAJ,EAAAC,EAAAY,EAAAC,EAAA/b,GAAA4/C,EAAArkC,GACAlnC,EAAAgnC,GAAAG,EAAAC,EAAA/hB,EAAAE,EAAAoG,GAAA4/C,EAAArkC,GAEAx3C,EAAAq+D,OAAAjuD,EAAA6d,GAAA7d,EAAAqnC,IAAArnC,EAAA8d,GAAA9d,EAAAsnC,KAGAmkC,EAAAtkC,EAAAv3C,EAAA6gD,IAAAzwC,EAAA6d,GAAA7d,EAAA8d,GAAA2tD,EAAAd,GAAA3qE,EAAAsnC,IAAAtnC,EAAAqnC,KAAAsjC,GAAAzqE,EAAAonC,IAAApnC,EAAAmnC,MAAAD,IAIAx3C,EAAA6gD,IAAAzwC,EAAA6d,GAAA7d,EAAA8d,GAAA2tD,EAAAd,GAAA3qE,EAAAsnC,IAAAtnC,EAAAqnC,KAAAsjC,GAAA3qE,EAAA4nC,IAAA5nC,EAAA2nC,MAAAP,GACAx3C,EAAA6gD,IAAA,IAAA5kB,EAAA8+C,GAAA3qE,EAAA8d,GAAA9d,EAAA4nC,IAAA5nC,EAAA6d,GAAA7d,EAAA2nC,KAAAgjC,GAAAzqE,EAAA4d,GAAA5d,EAAA0nC,IAAA1nC,EAAA2d,GAAA3d,EAAAynC,KAAAP,GACAx3C,EAAA6gD,IAAAvwC,EAAA2d,GAAA3d,EAAA4d,GAAA2tD,EAAAd,GAAAzqE,EAAA0nC,IAAA1nC,EAAAynC,KAAAgjC,GAAAzqE,EAAAonC,IAAApnC,EAAAmnC,MAAAD,KAKAx3C,EAAA6gD,IAAA,IAAA5kB,EAAAq/C,EAAA9gD,EAAAgd,GArBAx3C,EAAAq+D,OAAAnnB,EAAAC;KA1FAn3C,GAAA65C,OAAA,IAoHA,IAFA75C,EAAAo+D,YAEA9kB,EAAA,MAAAt5C,GAAA,KAAAs5C,EAAA,SA7IA,GAAA5C,GAAAD,GACAG,EAAAD,GACAilC,EAAAjiC,GAAA,GACAgiC,EAAA,KACA/4D,EAAAi0B,GACA/zB,EAAAg0B,GACAE,EAAAD,GACA/2C,EAAA,IA+KA,OAtCA6gD,GAAAsoB,SAAA,WACA,GAAA56D,KAAAmoC,EAAAxhD,MAAArH,KAAA8G,aAAAiiD,EAAA1hD,MAAArH,KAAA8G,YAAA,EACAoJ,IAAA6kB,EAAA1tB,MAAArH,KAAA8G,aAAAmuB,EAAA5tB,MAAArH,KAAA8G,YAAA,EAAA2hD,GAAA,CACA,QAAA0kC,GAAAj9E,GAAAwQ,EAAA2sE,GAAAn9E,GAAAwQ,IAGAsyC,EAAAnK,YAAA,SAAAx0C,GACA,MAAAvN,WAAAC,QAAA8hD,EAAA,kBAAAx0C,KAAAy3C,IAAAz3C,GAAA2+C,GAAAnK,GAGAmK,EAAAjK,YAAA,SAAA10C,GACA,MAAAvN,WAAAC,QAAAgiD,EAAA,kBAAA10C,KAAAy3C,IAAAz3C,GAAA2+C,GAAAjK,GAGAiK,EAAA+6B,aAAA,SAAA15E,GACA,MAAAvN,WAAAC,QAAAgnF,EAAA,kBAAA15E,KAAAy3C,IAAAz3C,GAAA2+C,GAAA+6B,GAGA/6B,EAAA86B,UAAA,SAAAz5E,GACA,MAAAvN,WAAAC,QAAA+mF,EAAA,MAAAz5E,EAAA,uBAAAA,KAAAy3C,IAAAz3C,GAAA2+C,GAAA86B,GAGA96B,EAAAj+B,WAAA,SAAA1gB,GACA,MAAAvN,WAAAC,QAAAguB,EAAA,kBAAA1gB,KAAAy3C,IAAAz3C,GAAA2+C,GAAAj+B,GAGAi+B,EAAA/9B,SAAA,SAAA5gB,GACA,MAAAvN,WAAAC,QAAAkuB,EAAA,kBAAA5gB,KAAAy3C,IAAAz3C,GAAA2+C,GAAA/9B,GAGA+9B,EAAA7J,SAAA,SAAA90C,GACA,MAAAvN,WAAAC,QAAAoiD,EAAA,kBAAA90C,KAAAy3C,IAAAz3C,GAAA2+C,GAAA7J,GAGA6J,EAAA7gD,QAAA,SAAAkC,GACA,MAAAvN,WAAAC,QAAAoL,EAAA,MAAAkC,EAAA,KAAAA,EAAA2+C,GAAA7gD,GAGA6gD,EAOApI,IAAAtnD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAq+E,OAAA,GAEAxjD,QAAA,YACA76B,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,GAAAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,EAAsE,MACpG,QAAAzR,KAAAq+E,OAAA,CACA,SAAAr+E,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,KAKA,IAAA88E,IAAA,SAAAp8E,GACA,UAAAy4C,IAAAz4C,IAWAhD,GAAA,WAQA,QAAAA,GAAA1H,GACA,GAAAkN,GAEApM,EAEAkjD,EAHA72C,EAAAnN,EAAAV,OAEAynF,GAAA,CAKA,KAFA,MAAAr8E,IAAAwd,EAAAq7B,EAAAS,EAAAx4C,OAEA0B,EAAA,EAAeA,GAAAC,IAAQD,IACvBA,EAAAC,GAAA65E,EAAAlmF,EAAAd,EAAAkN,KAAAlN,MAAA+mF,KACAA,MAAA7+D,EAAAiL,YACAjL,EAAAkL,WAEA2zD,GAAA7+D,EAAAsB,OAAA26B,EAAArjD,EAAAoM,EAAAlN,IAAAokD,EAAAtjD,EAAAoM,EAAAlN,GAGA,IAAAgkD,EAAA,MAAA97B,GAAA,KAAA87B,EAAA,SAxBA,GAAAG,GAAAf,GACAgB,EAAAf,GACA2jC,EAAA3iC,IAAA,GACA35C,EAAA,KACA64C,EAAAujC,GACA5+D,EAAA,IA0CA,OApBAxgB,GAAAY,EAAA,SAAAsE,GACA,MAAAvN,WAAAC,QAAA6kD,EAAA,kBAAAv3C,KAAAy3C,IAAAz3C,GAAAlF,GAAAy8C,GAGAz8C,EAAAsC,EAAA,SAAA4C,GACA,MAAAvN,WAAAC,QAAA8kD,EAAA,kBAAAx3C,KAAAy3C,IAAAz3C,GAAAlF,GAAA08C,GAGA18C,EAAAs/E,QAAA,SAAAp6E,GACA,MAAAvN,WAAAC,QAAA0nF,EAAA,kBAAAp6E,KAAAy3C,KAAAz3C,GAAAlF,GAAAs/E,GAGAt/E,EAAA67C,MAAA,SAAA32C,GACA,MAAAvN,WAAAC,QAAAikD,EAAA32C,EAAA,MAAAlC,IAAAwd,EAAAq7B,EAAA74C,IAAAhD,GAAA67C,GAGA77C,EAAAgD,QAAA,SAAAkC,GACA,MAAAvN,WAAAC,QAAA,MAAAsN,EAAAlC,EAAAwd,EAAA,KAAAA,EAAAq7B,EAAA74C,EAAAkC,GAAAlF,GAAAgD,GAGAhD,GAGAu/E,GAAA,WAUA,QAAAz/E,GAAAxH,GACA,GAAAkN,GACAgD,EACA/D,EAEArL,EAEAkjD,EAHA72C,EAAAnN,EAAAV,OAEAynF,GAAA,EAEAG,EAAA,GAAA1nF,OAAA2N,GACAg6E,EAAA,GAAA3nF,OAAA2N,EAIA,KAFA,MAAAzC,IAAAwd,EAAAq7B,EAAAS,EAAAx4C,OAEA0B,EAAA,EAAeA,GAAAC,IAAQD,EAAA,CACvB,KAAAA,EAAAC,GAAA65E,EAAAlmF,EAAAd,EAAAkN,KAAAlN,MAAA+mF,EACA,GAAAA,KACA72E,EAAAhD,EACAgb,EAAA0+D,YACA1+D,EAAAiL,gBACS,CAGT,IAFAjL,EAAAkL,UACAlL,EAAAiL,YACAhnB,EAAAe,EAAA,EAAyBf,GAAA+D,IAAQ/D,EACjC+b,EAAAsB,MAAA09D,EAAA/6E,GAAAg7E,EAAAh7E,GAEA+b,GAAAkL,UACAlL,EAAA2+D,UAGAE,IACAG,EAAAh6E,IAAAmiB,EAAAvuB,EAAAoM,EAAAlN,GAAAmnF,EAAAj6E,IAAAoiB,EAAAxuB,EAAAoM,EAAAlN,GACAkoB,EAAAsB,MAAA+F,KAAAzuB,EAAAoM,EAAAlN,GAAAknF,EAAAh6E,GAAAsiB,KAAA1uB,EAAAoM,EAAAlN,GAAAmnF,EAAAj6E,KAIA,GAAA82C,EAAA,MAAA97B,GAAA,KAAA87B,EAAA,SAGA,QAAAojC,KACA,MAAA1/E,MAAAs/E,WAAAzjC,SAAA74C,WAhDA,GAAA2kB,GAAA+zB,GACA7zB,EAAA,KACAD,EAAA+0B,GAAA,GACA70B,EAAA6zB,GACA2jC,EAAA3iC,IAAA,GACA35C,EAAA,KACA64C,EAAAujC,GACA5+D,EAAA,IA6FA,OAjDA1gB,GAAAc,EAAA,SAAAsE,GACA,MAAAvN,WAAAC,QAAA+vB,EAAA,kBAAAziB,KAAAy3C,IAAAz3C,GAAA2iB,EAAA,KAAA/nB,GAAA6nB,GAGA7nB,EAAA6nB,GAAA,SAAAziB,GACA,MAAAvN,WAAAC,QAAA+vB,EAAA,kBAAAziB,KAAAy3C,IAAAz3C,GAAApF,GAAA6nB,GAGA7nB,EAAA+nB,GAAA,SAAA3iB,GACA,MAAAvN,WAAAC,QAAAiwB,EAAA,MAAA3iB,EAAA,uBAAAA,KAAAy3C,IAAAz3C,GAAApF,GAAA+nB,GAGA/nB,EAAAwC,EAAA,SAAA4C,GACA,MAAAvN,WAAAC,QAAAgwB,EAAA,kBAAA1iB,KAAAy3C,IAAAz3C,GAAA4iB,EAAA,KAAAhoB,GAAA8nB,GAGA9nB,EAAA8nB,GAAA,SAAA1iB,GACA,MAAAvN,WAAAC,QAAAgwB,EAAA,kBAAA1iB,KAAAy3C,IAAAz3C,GAAApF,GAAA8nB,GAGA9nB,EAAAgoB,GAAA,SAAA5iB,GACA,MAAAvN,WAAAC,QAAAkwB,EAAA,MAAA5iB,EAAA,uBAAAA,KAAAy3C,IAAAz3C,GAAApF,GAAAgoB,GAGAhoB,EAAA6/E,OACA7/E,EAAA8/E,OAAA,WACA,MAAAF,KAAA9+E,EAAA+mB,GAAArlB,EAAAslB,IAGA9nB,EAAA+/E,OAAA,WACA,MAAAH,KAAA9+E,EAAA+mB,GAAArlB,EAAAwlB,IAGAhoB,EAAAggF,OAAA,WACA,MAAAJ,KAAA9+E,EAAAinB,GAAAvlB,EAAAslB,IAGA9nB,EAAAw/E,QAAA,SAAAp6E,GACA,MAAAvN,WAAAC,QAAA0nF,EAAA,kBAAAp6E,KAAAy3C,KAAAz3C,GAAApF,GAAAw/E,GAGAx/E,EAAA+7C,MAAA,SAAA32C,GACA,MAAAvN,WAAAC,QAAAikD,EAAA32C,EAAA,MAAAlC,IAAAwd,EAAAq7B,EAAA74C,IAAAlD,GAAA+7C,GAGA/7C,EAAAkD,QAAA,SAAAkC,GACA,MAAAvN,WAAAC,QAAA,MAAAsN,EAAAlC,EAAAwd,EAAA,KAAAA,EAAAq7B,EAAA74C,EAAAkC,GAAApF,GAAAkD,GAGAlD,GAGAigF,GAAA,SAAAh/E,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAsJ,KAGA21E,GAAA,SAAA5mF,GACA,MAAAA,IAGA6mF,GAAA,WAQA,QAAAA,GAAA3nF,GACA,GAAAkN,GAEAgD,EACA/D,EAMA0vB,EAGAppB,EAXAtF,EAAAnN,EAAAV,OAGA0H,EAAA,EACAoI,EAAA,GAAA5P,OAAA2N,GACAy6E,EAAA,GAAApoF,OAAA2N,GACAmvB,GAAAhP,EAAA1tB,MAAArH,KAAA8G,WACA2sC,EAAAhjC,KAAA0Q,IAAAmsE,GAAA78E,KAAAC,KAAA48E,GAAAr4D,EAAA5tB,MAAArH,KAAA8G,WAAAi9B,IAEArjC,EAAA+P,KAAA0Q,IAAA1Q,KAAAY,IAAAoiC,GAAA7+B,EAAAu0C,EAAA9hD,MAAArH,KAAA8G,YACA+1E,EAAAn8E,GAAA+yC,EAAA,OAGA,KAAA9+B,EAAA,EAAeA,EAAAC,IAAOD,GACtBuF,EAAAm1E,EAAAx4E,EAAAlC,OAAA1T,EAAAwG,EAAAkN,KAAAlN,IAAA,IACAgH,GAAAyL,EASA,KAJA,MAAA83D,EAAAn7D,EAAAklC,KAAA,SAAApnC,EAAAgD,GAAuD,MAAAq6D,GAAAqd,EAAA16E,GAAA06E,EAAA13E,MACvD,MAAAokC,GAAAllC,EAAAklC,KAAA,SAAApnC,EAAAgD,GAAsD,MAAAokC,GAAAt0C,EAAAkN,GAAAlN,EAAAkQ,MAGtDhD,EAAA,EAAAf,EAAAnF,GAAAglC,EAAA7+B,EAAAioE,GAAApuE,EAAA,EAAkDkG,EAAAC,IAAOD,EAAAovB,EAAAT,EACzD3rB,EAAAd,EAAAlC,GAAAuF,EAAAm1E,EAAA13E,GAAA2rB,EAAAS,GAAA7pB,EAAA,EAAAA,EAAAtG,EAAA,GAAAipE,EAAAwS,EAAA13E,IACAlQ,OAAAkQ,GACAd,MAAAlC,EACA1T,MAAAiZ,EACA6a,WAAAgP,EACA9O,SAAAqO,EACA6lB,SAAAzoD,EAIA,OAAA2uF,GA5CA,GAAApuF,GAAAkuF,GACAnd,EAAAkd,GACAnzC,EAAA,KACAhnB,EAAA+2B,GAAA,GACA72B,EAAA62B,GAAAwhC,IACAnkC,EAAA2C,GAAA,EAkEA,OAxBAsjC,GAAAnuF,MAAA,SAAAoT,GACA,MAAAvN,WAAAC,QAAA9F,EAAA,kBAAAoT,KAAAy3C,IAAAz3C,GAAA+6E,GAAAnuF,GAGAmuF,EAAApd,WAAA,SAAA39D,GACA,MAAAvN,WAAAC,QAAAirE,EAAA39D,EAAA0nC,EAAA,KAAAqzC,GAAApd,GAGAod,EAAArzC,KAAA,SAAA1nC,GACA,MAAAvN,WAAAC,QAAAg1C,EAAA1nC,EAAA29D,EAAA,KAAAod,GAAArzC,GAGAqzC,EAAAr6D,WAAA,SAAA1gB,GACA,MAAAvN,WAAAC,QAAAguB,EAAA,kBAAA1gB,KAAAy3C,IAAAz3C,GAAA+6E,GAAAr6D,GAGAq6D,EAAAn6D,SAAA,SAAA5gB,GACA,MAAAvN,WAAAC,QAAAkuB,EAAA,kBAAA5gB,KAAAy3C,IAAAz3C,GAAA+6E,GAAAn6D,GAGAm6D,EAAAjmC,SAAA,SAAA90C,GACA,MAAAvN,WAAAC,QAAAoiD,EAAA,kBAAA90C,KAAAy3C,IAAAz3C,GAAA+6E,GAAAjmC,GAGAimC,GAGAE,GAAApkC,GAAAqjC,GAMAxjC,IAAAznD,WACA+qF,UAAA,WACAruF,KAAAirD,OAAAojC,aAEAC,QAAA,WACAtuF,KAAAirD,OAAAqjC,WAEA1zD,UAAA,WACA56B,KAAAirD,OAAArwB,aAEAC,QAAA,WACA76B,KAAAirD,OAAApwB,WAEA5J,MAAA,SAAA/gB,EAAAwQ,GACA1gB,KAAAirD,OAAAh6B,MAAAvQ,EAAAjQ,KAAAoR,IAAA3R,GAAAwQ,GAAAjQ,KAAAmR,IAAA1R,KA4BA,IAAAq/E,IAAA,WACA,MAAAnkC,IAAAj8C,KAAA67C,MAAAskC,MAGAE,GAAA,WACA,GAAAt/E,GAAAw+E,KAAA1jC,MAAAskC,IACA7uF,EAAAyP,EAAA86C,MACAl0B,EAAA5mB,EAAA4+E,OACA93D,EAAA9mB,EAAA++E,OACAl4D,EAAA7mB,EAAA6+E,OACA93D,EAAA/mB,EAAA8+E,MAiBA,OAfA9+E,GAAA+tB,MAAA/tB,EAAAH,QAAAG,GAAAH,EACAG,EAAA6kB,WAAA7kB,EAAA4mB,SAAA5mB,GAAA4mB,GACA5mB,EAAA+kB,SAAA/kB,EAAA8mB,SAAA9mB,GAAA8mB,GACA9mB,EAAA2kB,OAAA3kB,EAAAuB,QAAAvB,GAAAuB,EACAvB,EAAA24C,YAAA34C,EAAA6mB,SAAA7mB,GAAA6mB,GACA7mB,EAAA64C,YAAA74C,EAAA+mB,SAAA/mB,GAAA+mB,GACA/mB,EAAAu/E,eAAA,WAAiC,MAAArkC,IAAAt0B,YAA2B5mB,GAAA4+E,OAC5D5+E,EAAAw/E,aAAA,WAA+B,MAAAtkC,IAAAp0B,YAA2B9mB,GAAA++E,OAC1D/+E,EAAAy/E,gBAAA,WAAkC,MAAAvkC,IAAAr0B,YAA2B7mB,GAAA6+E,OAC7D7+E,EAAA0/E,gBAAA,WAAkC,MAAAxkC,IAAAn0B,YAA2B/mB,GAAA8+E,OAE7D9+E,EAAA86C,MAAA,SAAA32C,GACA,MAAAvN,WAAAC,OAAAtG,EAAAyqD,GAAA72C,IAAA5T,IAAAwqD,QAGA/6C,GAGAk8C,GAAA,SAAAr8C,EAAA0B,GACA,QAAAA,MAAAhB,KAAAmR,IAAA7R,GAAAU,KAAA04D,GAAA,GAAA13D,EAAAhB,KAAAoR,IAAA9R,KAGA47C,GAAA1kD,MAAA3D,UAAAiR,MAiFAs7E,IACAC,KAAA,SAAA39E,EAAAk5B,GACA,GAAA3qB,GAAAjQ,KAAAqS,KAAAuoB,EAAAod,GACAt2C,GAAA65C,OAAAtrC,EAAA,GACAvO,EAAA6gD,IAAA,IAAAtyC,EAAA,EAAA4sE,MAIAyC,IACAD,KAAA,SAAA39E,EAAAk5B,GACA,GAAA3qB,GAAAjQ,KAAAqS,KAAAuoB,EAAA,IACAl5B,GAAA65C,QAAA,EAAAtrC,MACAvO,EAAAq+D,QAAA9vD,MACAvO,EAAAq+D,QAAA9vD,GAAA,EAAAA,GACAvO,EAAAq+D,OAAA9vD,GAAA,EAAAA,GACAvO,EAAAq+D,OAAA9vD,MACAvO,EAAAq+D,OAAA,EAAA9vD,MACAvO,EAAAq+D,OAAA,EAAA9vD,KACAvO,EAAAq+D,OAAA9vD,KACAvO,EAAAq+D,OAAA9vD,EAAA,EAAAA,GACAvO,EAAAq+D,QAAA9vD,EAAA,EAAAA,GACAvO,EAAAq+D,QAAA9vD,KACAvO,EAAAq+D,QAAA,EAAA9vD,KACAvO,EAAAo+D,cAIAyf,GAAAv/E,KAAAqS,KAAA,KACAmtE,GAAA,EAAAD,GAEAE,IACAJ,KAAA,SAAA39E,EAAAk5B,GACA,GAAA55B,GAAAhB,KAAAqS,KAAAuoB,EAAA4kD,IACAlgF,EAAA0B,EAAAu+E,EACA79E,GAAA65C,OAAA,GAAAv6C,GACAU,EAAAq+D,OAAAzgE,EAAA,GACAoC,EAAAq+D,OAAA,EAAA/+D,GACAU,EAAAq+D,QAAAzgE,EAAA,GACAoC,EAAAo+D,cAIA4f,GAAA,kBACAC,GAAA3/E,KAAAoR,IAAA4mC,GAAA,IAAAh4C,KAAAoR,IAAA,EAAA4mC,GAAA,IACA7Y,GAAAn/B,KAAAoR,IAAAyrE,GAAA,IAAA8C,GACAvgD,IAAAp/B,KAAAmR,IAAA0rE,GAAA,IAAA8C,GAEAC,IACAP,KAAA,SAAA39E,EAAAk5B,GACA,GAAA3qB,GAAAjQ,KAAAqS,KAAAuoB,EAAA8kD,IACApgF,EAAA6/B,GAAAlvB,EACAjP,EAAAo+B,GAAAnvB,CACAvO,GAAA65C,OAAA,GAAAtrC,GACAvO,EAAAq+D,OAAAzgE,EAAA0B,EACA,QAAAkD,GAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,GAAAzE,GAAAo9E,GAAA34E,EAAA,EACAlU,EAAAgQ,KAAAmR,IAAA1R,GACA6Q,EAAAtQ,KAAAoR,IAAA3R,EACAiC,GAAAq+D,OAAAzvD,EAAAL,GAAAjgB,EAAAigB,GACAvO,EAAAq+D,OAAA/vE,EAAAsP,EAAAgR,EAAAtP,EAAAsP,EAAAhR,EAAAtP,EAAAgR,GAEAU,EAAAo+D,cAIA+f,IACAR,KAAA,SAAA39E,EAAAk5B,GACA,GAAAvnC,GAAA2M,KAAAqS,KAAAuoB,GACAt7B,GAAAjM,EAAA,CACAqO,GAAA0oD,KAAA9qD,IAAAjM,OAIAysF,GAAA9/E,KAAAqS,KAAA,GAEA0tE,IACAV,KAAA,SAAA39E,EAAAk5B,GACA,GAAA55B,IAAAhB,KAAAqS,KAAAuoB,GAAA,EAAAklD,IACAp+E,GAAA65C,OAAA,IAAAv6C,GACAU,EAAAq+D,QAAA+f,GAAA9+E,MACAU,EAAAq+D,OAAA+f,GAAA9+E,MACAU,EAAAo+D,cAIA9vE,IAAA,GACAsgB,GAAAtQ,KAAAqS,KAAA,KACAlP,GAAA,EAAAnD,KAAAqS,KAAA,IACA5S,GAAA,GAAA0D,GAAA,KAEA68E,IACAX,KAAA,SAAA39E,EAAAk5B,GACA,GAAA3qB,GAAAjQ,KAAAqS,KAAAuoB,EAAAn7B,IACA4mB,EAAApW,EAAA,EACAqW,EAAArW,EAAA9M,GACAojB,EAAAF,EACAG,EAAAvW,EAAA9M,GAAA8M,EACAsrB,GAAAhV,EACAiV,EAAAhV,CACA9kB,GAAA65C,OAAAl1B,EAAAC,GACA5kB,EAAAq+D,OAAAx5C,EAAAC,GACA9kB,EAAAq+D,OAAAxkC,EAAAC,GACA95B,EAAAq+D,OAAA/vE,GAAAq2B,EAAA/V,GAAAgW,EAAAhW,GAAA+V,EAAAr2B,GAAAs2B,GACA5kB,EAAAq+D,OAAA/vE,GAAAu2B,EAAAjW,GAAAkW,EAAAlW,GAAAiW,EAAAv2B,GAAAw2B,GACA9kB,EAAAq+D,OAAA/vE,GAAAurC,EAAAjrB,GAAAkrB,EAAAlrB,GAAAirB,EAAAvrC,GAAAwrC,GACA95B,EAAAq+D,OAAA/vE,GAAAq2B,EAAA/V,GAAAgW,EAAAt2B,GAAAs2B,EAAAhW,GAAA+V,GACA3kB,EAAAq+D,OAAA/vE,GAAAu2B,EAAAjW,GAAAkW,EAAAx2B,GAAAw2B,EAAAlW,GAAAiW,GACA7kB,EAAAq+D,OAAA/vE,GAAAurC,EAAAjrB,GAAAkrB,EAAAxrC,GAAAwrC,EAAAlrB,GAAAirB,GACA75B,EAAAo+D,cAIAmgB,IACAb,GACAE,GACAG,GACAI,GACAD,GACAG,GACAC,IAGA13D,GAAA,WAKA,QAAAA,KACA,GAAA0yB,EAGA,IAFAt5C,MAAAs5C,EAAAx4C,MACAqC,EAAAjO,MAAArH,KAAA8G,WAAAgpF,KAAA39E,GAAAk5B,EAAAhkC,MAAArH,KAAA8G,YACA2kD,EAAA,MAAAt5C,GAAA,KAAAs5C,EAAA,SARA,GAAAn2C,GAAAw2C,GAAA+jC,IACAxkD,EAAAygB,GAAA,IACA35C,EAAA,IAqBA,OAZA4mB,GAAAzjB,KAAA,SAAAjB,GACA,MAAAvN,WAAAC,QAAAuO,EAAA,kBAAAjB,KAAAy3C,GAAAz3C,GAAA0kB,GAAAzjB,GAGAyjB,EAAAsS,KAAA,SAAAh3B,GACA,MAAAvN,WAAAC,QAAAskC,EAAA,kBAAAh3B,KAAAy3C,IAAAz3C,GAAA0kB,GAAAsS,GAGAtS,EAAA5mB,QAAA,SAAAkC,GACA,MAAAvN,WAAAC,QAAAoL,EAAA,MAAAkC,EAAA,KAAAA,EAAA0kB,GAAA5mB,GAGA4mB,GAGA43D,GAAA,YAiBA/jC,IAAAtpD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IACAx0B,KAAAu0B,IAAAv0B,KAAAy0B,IAAAjb,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,OAAA76B,KAAAq+E,QACA,OAAA1xB,GAAA3sD,UAAAw0B,IAAAx0B,KAAAy0B,IACA,QAAAz0B,KAAA+pC,SAAAymC,OAAAxwE,KAAAw0B,IAAAx0B,KAAAy0B,MAEAz0B,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,GAAAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,EAAsE,MACpG,QAAAzR,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA+pC,SAAAymC,QAAA,EAAAxwE,KAAAs0B,IAAAt0B,KAAAw0B,KAAA,KAAAx0B,KAAAu0B,IAAAv0B,KAAAy0B,KAAA,EAC9B,SAAAk4B,GAAA3sD,KAAA+P,EAAA0B,GAEAzR,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAzkB,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAhjB,GAIA,IAAAm/E,IAAA,SAAAz+E,GACA,UAAAy6C,IAAAz6C,GAOA06C,IAAAvpD,WACA+qF,UAAAsC,GACArC,QAAAqC,GACA/1D,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAA6wF,IAAA7wF,KAAA8wF,IACA9wF,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAA+wF,IAAA/wF,KAAAgxF,IAAAx3E,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,OAAA76B,KAAAq+E,QACA,OACAr+E,KAAA+pC,SAAAiiB,OAAAhsD,KAAAotD,IAAAptD,KAAAqtD,KACArtD,KAAA+pC,SAAAwmC,WACA,MAEA,QACAvwE,KAAA+pC,SAAAiiB,QAAAhsD,KAAAotD,IAAA,EAAAptD,KAAA6wF,KAAA,GAAA7wF,KAAAqtD,IAAA,EAAArtD,KAAA+wF,KAAA,GACA/wF,KAAA+pC,SAAAymC,QAAAxwE,KAAA6wF,IAAA,EAAA7wF,KAAAotD,KAAA,GAAAptD,KAAA+wF,IAAA,EAAA/wF,KAAAqtD,KAAA,GACArtD,KAAA+pC,SAAAwmC,WACA,MAEA,QACAvwE,KAAAixB,MAAAjxB,KAAAotD,IAAAptD,KAAAqtD,KACArtD,KAAAixB,MAAAjxB,KAAA6wF,IAAA7wF,KAAA+wF,KACA/wF,KAAAixB,MAAAjxB,KAAA8wF,IAAA9wF,KAAAgxF,OAKA//D,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAAotD,IAAAr9C,EAAA/P,KAAAqtD,IAAA57C,CAA4B,MAC1D,QAAAzR,KAAAq+E,OAAA,EAA8Br+E,KAAA6wF,IAAA9gF,EAAA/P,KAAA+wF,IAAAt/E,CAA4B,MAC1D,QAAAzR,KAAAq+E,OAAA,EAA8Br+E,KAAA8wF,IAAA/gF,EAAA/P,KAAAgxF,IAAAv/E,EAA4BzR,KAAA+pC,SAAAiiB,QAAAhsD,KAAAs0B,IAAA,EAAAt0B,KAAAw0B,IAAAzkB,GAAA,GAAA/P,KAAAu0B,IAAA,EAAAv0B,KAAAy0B,IAAAhjB,GAAA,EAA4F,MACtJ,SAAAk7C,GAAA3sD,KAAA+P,EAAA0B,GAEAzR,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAzkB,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAhjB,GAIA,IAAAw/E,IAAA,SAAA9+E,GACA,UAAA06C,IAAA16C,GAOA26C,IAAAxpD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IACAx0B,KAAAu0B,IAAAv0B,KAAAy0B,IAAAjb,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,YACA76B,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,CAA8B,IAAAvnD,IAAA92B,KAAAs0B,IAAA,EAAAt0B,KAAAw0B,IAAAzkB,GAAA,EAAAgnB,GAAA/2B,KAAAu0B,IAAA,EAAAv0B,KAAAy0B,IAAAhjB,GAAA,CAAoFzR,MAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAA15C,EAAAC,GAAA/2B,KAAA+pC,SAAAiiB,OAAAl1B,EAAAC,EAA0E,MAC5L,QAAA/2B,KAAAq+E,OAAA,CACA,SAAA1xB,GAAA3sD,KAAA+P,EAAA0B,GAEAzR,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAzkB,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAhjB,GAIA,IAAAy/E,IAAA,SAAA/+E,GACA,UAAA26C,IAAA36C,GAQA46C,IAAAzpD,WACAs3B,UAAA,WACA56B,KAAAk3B,MACAl3B,KAAAm3B,MACAn3B,KAAAgtD,OAAApyB,aAEAC,QAAA,WACA,GAAA9qB,GAAA/P,KAAAk3B,GACAzlB,EAAAzR,KAAAm3B,GACAxf,EAAA5H,EAAAhJ,OAAA,CAEA,IAAA4Q,EAAA,EAQA,IAPA,GAKAjD,GALAoiB,EAAA/mB,EAAA,GACAgnB,EAAAtlB,EAAA,GACAoN,EAAA9O,EAAA4H,GAAAmf,EACAhY,EAAArN,EAAAkG,GAAAof,EACApiB,GAAA,IAGAA,GAAAgD,GACAjD,EAAAC,EAAAgD,EACA3X,KAAAgtD,OAAA/7B,MACAjxB,KAAAitD,MAAAl9C,EAAA4E,IAAA,EAAA3U,KAAAitD,QAAAn2B,EAAApiB,EAAAmK,GACA7e,KAAAitD,MAAAx7C,EAAAkD,IAAA,EAAA3U,KAAAitD,QAAAl2B,EAAAriB,EAAAoK,GAKA9e,MAAAk3B,GAAAl3B,KAAAm3B,GAAA,KACAn3B,KAAAgtD,OAAAnyB,WAEA5J,MAAA,SAAAlhB,EAAA0B,GACAzR,KAAAk3B,GAAAluB,MAAA+G,GACA/P,KAAAm3B,GAAAnuB,MAAAyI,IAIA,IAAA0/E,IAAA,QAAAtjB,GAAAn3B,GAEA,QAAAy6C,GAAAh/E,GACA,WAAAukC,EAAA,GAAAkW,IAAAz6C,GAAA,GAAA46C,IAAA56C,EAAAukC,GAOA,MAJAy6C,GAAAz6C,KAAA,SAAAA,GACA,MAAAm3B,IAAAn3B,IAGAy6C,GACC,IAkBD7jC,IAAAhqD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAotD,IACAptD,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAA7zC,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,OAAA76B,KAAAq+E,QACA,OAAAr+E,KAAA+pC,SAAAymC,OAAAxwE,KAAAotD,IAAAptD,KAAAqtD,IAAuD,MACvD,QAAAH,GAAAltD,UAAAw0B,IAAAx0B,KAAAy0B,MAEAz0B,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,GAAAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,EAAsE,MACpG,QAAAzR,KAAAq+E,OAAA,EAA8Br+E,KAAAw0B,IAAAzkB,EAAA/P,KAAAy0B,IAAAhjB,CAA4B,MAC1D,QAAAzR,KAAAq+E,OAAA,CACA,SAAAnxB,GAAAltD,KAAA+P,EAAA0B,GAEAzR,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAAotD,IAAAr9C,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAAqtD,IAAA57C,GAIA,IAAA2/E,IAAA,QAAAvjB,GAAAtgB,GAEA,QAAA6jC,GAAAj/E,GACA,UAAAm7C,IAAAn7C,EAAAo7C,GAOA,MAJA6jC,GAAA7jC,QAAA,SAAAA,GACA,MAAAsgB,IAAAtgB,IAGA6jC,GACC,EAOD5jC,IAAAlqD,WACA+qF,UAAAsC,GACArC,QAAAqC,GACA/1D,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAA6wF,IAAA7wF,KAAA8wF,IAAA9wF,KAAAqxF,IACArxF,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAA+wF,IAAA/wF,KAAAgxF,IAAAhxF,KAAAsxF,IAAA93E,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,OAAA76B,KAAAq+E,QACA,OACAr+E,KAAA+pC,SAAAiiB,OAAAhsD,KAAA6wF,IAAA7wF,KAAA+wF,KACA/wF,KAAA+pC,SAAAwmC,WACA,MAEA,QACAvwE,KAAA+pC,SAAAymC,OAAAxwE,KAAA6wF,IAAA7wF,KAAA+wF,KACA/wF,KAAA+pC,SAAAwmC,WACA,MAEA,QACAvwE,KAAAixB,MAAAjxB,KAAA6wF,IAAA7wF,KAAA+wF,KACA/wF,KAAAixB,MAAAjxB,KAAA8wF,IAAA9wF,KAAAgxF,KACAhxF,KAAAixB,MAAAjxB,KAAAqxF,IAAArxF,KAAAsxF,OAKArgE,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6wF,IAAA9gF,EAAA/P,KAAA+wF,IAAAt/E,CAA4B,MAC1D,QAAAzR,KAAAq+E,OAAA,EAA8Br+E,KAAA+pC,SAAAiiB,OAAAhsD,KAAA8wF,IAAA/gF,EAAA/P,KAAAgxF,IAAAv/E,EAAkD,MAChF,QAAAzR,KAAAq+E,OAAA,EAA8Br+E,KAAAqxF,IAAAthF,EAAA/P,KAAAsxF,IAAA7/E,CAA4B,MAC1D,SAAAy7C,GAAAltD,KAAA+P,EAAA0B,GAEAzR,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAAotD,IAAAr9C,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAAqtD,IAAA57C,GAIA,IAAA8/E,IAAA,QAAA1jB,GAAAtgB,GAEA,QAAAikC,GAAAr/E,GACA,UAAAq7C,IAAAr7C,EAAAo7C,GAOA,MAJAikC,GAAAjkC,QAAA,SAAAA,GACA,MAAAsgB,IAAAtgB,IAGAikC,GACC,EAOD/jC,IAAAnqD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAotD,IACAptD,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAA7zC,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,YACA76B,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAxwE,KAAAotD,IAAAptD,KAAAqtD,KAAArtD,KAAA+pC,SAAAiiB,OAAAhsD,KAAAotD,IAAAptD,KAAAqtD,IAAkG,MAChI,QAAArtD,KAAAq+E,OAAA,CACA,SAAAnxB,GAAAltD,KAAA+P,EAAA0B,GAEAzR,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAAotD,IAAAr9C,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAAqtD,IAAA57C,GAIA,IAAAggF,IAAA,QAAA5jB,GAAAtgB,GAEA,QAAAikC,GAAAr/E,GACA,UAAAs7C,IAAAt7C,EAAAo7C,GAOA,MAJAikC,GAAAjkC,QAAA,SAAAA,GACA,MAAAsgB,IAAAtgB,IAGAikC,GACC,EA8BDtjC,IAAA5qD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAotD,IACAptD,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAA7zC,IACAxZ,KAAA2tD,OAAA3tD,KAAA8tD,OAAA9tD,KAAAguD,OACAhuD,KAAA6tD,QAAA7tD,KAAA+tD,QAAA/tD,KAAAiuD,QACAjuD,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,OAAA76B,KAAAq+E,QACA,OAAAr+E,KAAA+pC,SAAAymC,OAAAxwE,KAAAotD,IAAAptD,KAAAqtD,IAAuD,MACvD,QAAArtD,KAAAixB,MAAAjxB,KAAAotD,IAAAptD,KAAAqtD,MAEArtD,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GAGA,GAFA1B,KAAA0B,KAEAzR,KAAAq+E,OAAA,CACA,GAAAqT,GAAA1xF,KAAAotD,IAAAr9C,EACA4hF,EAAA3xF,KAAAqtD,IAAA57C,CACAzR,MAAAguD,OAAAv9C,KAAAqS,KAAA9iB,KAAAiuD,QAAAx9C,KAAAM,IAAA2gF,IAAAC,IAAA3xF,KAAAmuD,SAGA,OAAAnuD,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,GAAAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,EAAsE,MACpG,QAAAzR,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,CACA,SAAA3wB,GAAA1tD,KAAA+P,EAAA0B,GAGAzR,KAAA2tD,OAAA3tD,KAAA8tD,OAAA9tD,KAAA8tD,OAAA9tD,KAAAguD,OACAhuD,KAAA6tD,QAAA7tD,KAAA+tD,QAAA/tD,KAAA+tD,QAAA/tD,KAAAiuD,QACAjuD,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAAotD,IAAAr9C,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAAqtD,IAAA57C,GAIA,IAAAmgF,IAAA,QAAA/jB,GAAAp3B,GAEA,QAAAm7C,GAAAz/E,GACA,MAAAskC,GAAA,GAAAyX,IAAA/7C,EAAAskC,GAAA,GAAA6W,IAAAn7C,EAAA,GAOA,MAJAy/E,GAAAn7C,MAAA,SAAAA,GACA,MAAAo3B,IAAAp3B,IAGAm7C,GACC,GAODxjC,IAAA9qD,WACA+qF,UAAAsC,GACArC,QAAAqC,GACA/1D,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAA6wF,IAAA7wF,KAAA8wF,IAAA9wF,KAAAqxF,IACArxF,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAA+wF,IAAA/wF,KAAAgxF,IAAAhxF,KAAAsxF,IAAA93E,IACAxZ,KAAA2tD,OAAA3tD,KAAA8tD,OAAA9tD,KAAAguD,OACAhuD,KAAA6tD,QAAA7tD,KAAA+tD,QAAA/tD,KAAAiuD,QACAjuD,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,OAAA76B,KAAAq+E,QACA,OACAr+E,KAAA+pC,SAAAiiB,OAAAhsD,KAAA6wF,IAAA7wF,KAAA+wF,KACA/wF,KAAA+pC,SAAAwmC,WACA,MAEA,QACAvwE,KAAA+pC,SAAAymC,OAAAxwE,KAAA6wF,IAAA7wF,KAAA+wF,KACA/wF,KAAA+pC,SAAAwmC,WACA,MAEA,QACAvwE,KAAAixB,MAAAjxB,KAAA6wF,IAAA7wF,KAAA+wF,KACA/wF,KAAAixB,MAAAjxB,KAAA8wF,IAAA9wF,KAAAgxF,KACAhxF,KAAAixB,MAAAjxB,KAAAqxF,IAAArxF,KAAAsxF,OAKArgE,MAAA,SAAAlhB,EAAA0B,GAGA,GAFA1B,KAAA0B,KAEAzR,KAAAq+E,OAAA,CACA,GAAAqT,GAAA1xF,KAAAotD,IAAAr9C,EACA4hF,EAAA3xF,KAAAqtD,IAAA57C,CACAzR,MAAAguD,OAAAv9C,KAAAqS,KAAA9iB,KAAAiuD,QAAAx9C,KAAAM,IAAA2gF,IAAAC,IAAA3xF,KAAAmuD,SAGA,OAAAnuD,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6wF,IAAA9gF,EAAA/P,KAAA+wF,IAAAt/E,CAA4B,MAC1D,QAAAzR,KAAAq+E,OAAA,EAA8Br+E,KAAA+pC,SAAAiiB,OAAAhsD,KAAA8wF,IAAA/gF,EAAA/P,KAAAgxF,IAAAv/E,EAAkD,MAChF,QAAAzR,KAAAq+E,OAAA,EAA8Br+E,KAAAqxF,IAAAthF,EAAA/P,KAAAsxF,IAAA7/E,CAA4B,MAC1D,SAAAi8C,GAAA1tD,KAAA+P,EAAA0B,GAGAzR,KAAA2tD,OAAA3tD,KAAA8tD,OAAA9tD,KAAA8tD,OAAA9tD,KAAAguD,OACAhuD,KAAA6tD,QAAA7tD,KAAA+tD,QAAA/tD,KAAA+tD,QAAA/tD,KAAAiuD,QACAjuD,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAAotD,IAAAr9C,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAAqtD,IAAA57C,GAIA,IAAAogF,IAAA,QAAAhkB,GAAAp3B,GAEA,QAAAq7C,GAAA3/E,GACA,MAAAskC,GAAA,GAAA2X,IAAAj8C,EAAAskC,GAAA,GAAA+W,IAAAr7C,EAAA,GAOA,MAJA2/E,GAAAr7C,MAAA,SAAAA,GACA,MAAAo3B,IAAAp3B,IAGAq7C,GACC,GAODzjC,IAAA/qD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAotD,IACAptD,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAA7zC,IACAxZ,KAAA2tD,OAAA3tD,KAAA8tD,OAAA9tD,KAAAguD,OACAhuD,KAAA6tD,QAAA7tD,KAAA+tD,QAAA/tD,KAAAiuD,QACAjuD,KAAAq+E,OAAA,GAEAxjD,QAAA,YACA76B,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GAGA,GAFA1B,KAAA0B,KAEAzR,KAAAq+E,OAAA,CACA,GAAAqT,GAAA1xF,KAAAotD,IAAAr9C,EACA4hF,EAAA3xF,KAAAqtD,IAAA57C,CACAzR,MAAAguD,OAAAv9C,KAAAqS,KAAA9iB,KAAAiuD,QAAAx9C,KAAAM,IAAA2gF,IAAAC,IAAA3xF,KAAAmuD,SAGA,OAAAnuD,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAxwE,KAAAotD,IAAAptD,KAAAqtD,KAAArtD,KAAA+pC,SAAAiiB,OAAAhsD,KAAAotD,IAAAptD,KAAAqtD,IAAkG,MAChI,QAAArtD,KAAAq+E,OAAA,CACA,SAAA3wB,GAAA1tD,KAAA+P,EAAA0B,GAGAzR,KAAA2tD,OAAA3tD,KAAA8tD,OAAA9tD,KAAA8tD,OAAA9tD,KAAAguD,OACAhuD,KAAA6tD,QAAA7tD,KAAA+tD,QAAA/tD,KAAA+tD,QAAA/tD,KAAAiuD,QACAjuD,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAx0B,KAAAotD,IAAAptD,KAAAotD,IAAAr9C,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAz0B,KAAAqtD,IAAArtD,KAAAqtD,IAAA57C,GAIA,IAAAsgF,IAAA,QAAAlkB,GAAAp3B,GAEA,QAAAq7C,GAAA3/E,GACA,MAAAskC,GAAA,GAAA4X,IAAAl8C,EAAAskC,GAAA,GAAAgX,IAAAt7C,EAAA,GAOA,MAJA2/E,GAAAr7C,MAAA,SAAAA,GACA,MAAAo3B,IAAAp3B,IAGAq7C,GACC,GAMDxjC,IAAAhrD,WACA+qF,UAAAsC,GACArC,QAAAqC,GACA/1D,UAAA,WACA56B,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA76B,KAAAq+E,QAAAr+E,KAAA+pC,SAAAwmC,aAEAt/C,MAAA,SAAAlhB,EAAA0B,GACA1B,KAAA0B,KACAzR,KAAAq+E,OAAAr+E,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,IACAzR,KAAAq+E,OAAA,EAAAr+E,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,KAIA,IAAAugF,IAAA,SAAA7/E,GACA,UAAAm8C,IAAAn8C,GA0CA08C,IAAAvrD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAs0B,IAAAt0B,KAAAw0B,IACAx0B,KAAAu0B,IAAAv0B,KAAAy0B,IACAz0B,KAAAiyF,IAAAz4E,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,OAAA76B,KAAAq+E,QACA,OAAAr+E,KAAA+pC,SAAAymC,OAAAxwE,KAAAw0B,IAAAx0B,KAAAy0B,IAAuD,MACvD,QAAAm6B,GAAA5uD,UAAAiyF,IAAAtjC,GAAA3uD,UAAAiyF,OAEAjyF,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,OAEAojB,MAAA,SAAAlhB,EAAA0B,GACA,GAAAgR,GAAAjJ,GAGA,IADAzJ,KAAA0B,KACA1B,IAAA/P,KAAAw0B,KAAA/iB,IAAAzR,KAAAy0B,IAAA,CACA,OAAAz0B,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,GAAAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,EAAsE,MACpG,QAAAzR,KAAAq+E,OAAA,CAA8B,MAC9B,QAAAr+E,KAAAq+E,OAAA,EAA8BzvB,GAAA5uD,KAAA2uD,GAAA3uD,KAAAyiB,EAAA+rC,GAAAxuD,KAAA+P,EAAA0B,IAAAgR,EAA0D,MACxF,SAAAmsC,GAAA5uD,UAAAiyF,IAAAxvE,EAAA+rC,GAAAxuD,KAAA+P,EAAA0B,IAGAzR,KAAAs0B,IAAAt0B,KAAAw0B,IAAAx0B,KAAAw0B,IAAAzkB,EACA/P,KAAAu0B,IAAAv0B,KAAAy0B,IAAAz0B,KAAAy0B,IAAAhjB,EACAzR,KAAAiyF,IAAAxvE,MAQAqsC,GAAAxrD,UAAAvC,OAAAwe,OAAAsvC,GAAAvrD,YAAA2tB,MAAA,SAAAlhB,EAAA0B,GACAo9C,GAAAvrD,UAAA2tB,MAAA1wB,KAAAP,KAAAyR,EAAA1B,IAOAg/C,GAAAzrD,WACA0oD,OAAA,SAAAj8C,EAAA0B,GAA0BzR,KAAA+pC,SAAAiiB,OAAAv6C,EAAA1B,IAC1BwgE,UAAA,WAAyBvwE,KAAA+pC,SAAAwmC,aACzBC,OAAA,SAAAzgE,EAAA0B,GAA0BzR,KAAA+pC,SAAAymC,OAAA/+D,EAAA1B,IAC1Bk8C,cAAA,SAAAj1B,EAAAC,EAAA+U,EAAAC,EAAAl8B,EAAA0B,GAAiDzR,KAAA+pC,SAAAkiB,cAAAh1B,EAAAD,EAAAiV,EAAAD,EAAAv6B,EAAA1B,KAejDm/C,GAAA5rD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAk3B,MACAl3B,KAAAm3B,OAEA0D,QAAA,WACA,GAAA9qB,GAAA/P,KAAAk3B,GACAzlB,EAAAzR,KAAAm3B,GACAviB,EAAA7E,EAAAhJ,MAEA,IAAA6N,EAEA,GADA5U,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAzgE,EAAA,GAAA0B,EAAA,IAAAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA,GAAA0B,EAAA,IACA,IAAAmD,EACA5U,KAAA+pC,SAAAymC,OAAAzgE,EAAA,GAAA0B,EAAA,QAIA,QAFAygF,GAAA/iC,GAAAp/C,GACAoiF,EAAAhjC,GAAA19C,GACAklC,EAAA,EAAAC,EAAA,EAAgCA,EAAAhiC,IAAQ+hC,IAAAC,EACxC52C,KAAA+pC,SAAAkiB,cAAAimC,EAAA,GAAAv7C,GAAAw7C,EAAA,GAAAx7C,GAAAu7C,EAAA,GAAAv7C,GAAAw7C,EAAA,GAAAx7C,GAAA5mC,EAAA6mC,GAAAnlC,EAAAmlC,KAKA52C,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA+G,IAAA5U,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,MAAA,EAAA7N,KAAA6N,MACA7N,KAAAk3B,GAAAl3B,KAAAm3B,GAAA,MAEAlG,MAAA,SAAAlhB,EAAA0B,GACAzR,KAAAk3B,GAAAluB,MAAA+G,GACA/P,KAAAm3B,GAAAnuB,MAAAyI,IAuBA,IAAA2gF,IAAA,SAAAjgF,GACA,UAAA+8C,IAAA/8C,GAQAi9C,IAAA9rD,WACA+qF,UAAA,WACAruF,KAAA6N,MAAA,GAEAygF,QAAA,WACAtuF,KAAA6N,MAAA2L,KAEAohB,UAAA,WACA56B,KAAAk3B,GAAAl3B,KAAAm3B,GAAA3d,IACAxZ,KAAAq+E,OAAA,GAEAxjD,QAAA,WACA,EAAA76B,KAAAqvD,IAAArvD,KAAAqvD,GAAA,OAAArvD,KAAAq+E,QAAAr+E,KAAA+pC,SAAAymC,OAAAxwE,KAAAk3B,GAAAl3B,KAAAm3B,KACAn3B,KAAA6N,OAAA,IAAA7N,KAAA6N,OAAA,IAAA7N,KAAAq+E,SAAAr+E,KAAA+pC,SAAAwmC,YACAvwE,KAAA6N,OAAA,IAAA7N,KAAAqvD,GAAA,EAAArvD,KAAAqvD,GAAArvD,KAAA6N,MAAA,EAAA7N,KAAA6N,QAEAojB,MAAA,SAAAlhB,EAAA0B,GAEA,OADA1B,KAAA0B,KACAzR,KAAAq+E,QACA,OAAAr+E,KAAAq+E,OAAA,EAA8Br+E,KAAA6N,MAAA7N,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,GAAAzR,KAAA+pC,SAAAiiB,OAAAj8C,EAAA0B,EAAsE,MACpG,QAAAzR,KAAAq+E,OAAA,CACA,SACA,GAAAr+E,KAAAqvD,IAAA,EACArvD,KAAA+pC,SAAAymC,OAAAxwE,KAAAk3B,GAAAzlB,GACAzR,KAAA+pC,SAAAymC,OAAAzgE,EAAA0B,OACS,CACT,GAAAulB,GAAAh3B,KAAAk3B,IAAA,EAAAl3B,KAAAqvD,IAAAt/C,EAAA/P,KAAAqvD,EACArvD,MAAA+pC,SAAAymC,OAAAx5C,EAAAh3B,KAAAm3B,IACAn3B,KAAA+pC,SAAAymC,OAAAx5C,EAAAvlB,IAKAzR,KAAAk3B,GAAAnnB,EAAA/P,KAAAm3B,GAAA1lB,GAIA,IAAAjB,IAAA,SAAA2B,GACA,UAAAi9C,IAAAj9C,EAAA,KAWAkgF,GAAA,SAAA3iC,EAAAt8C,GACA,IAAAwB,EAAA86C,EAAA3oD,QAAA,EACA,OAAA4Q,GAAAwa,EAAAvd,EAAAD,EAAA,EAAA0d,EAAAq9B,EAAAt8C,EAAA,IAAA5S,EAAA6xB,EAAAtrB,OAAiE4N,EAAAC,IAAOD,EAExE,IADAwd,EAAAE,IAAAq9B,EAAAt8C,EAAAuB,IACAgD,EAAA,EAAeA,EAAAnX,IAAOmX,EACtB0a,EAAA1a,GAAA,IAAA0a,EAAA1a,GAAA,GAAAwM,MAAAgO,EAAAxa,GAAA,IAAAwa,EAAAxa,GAAA,GAAAwa,EAAAxa,GAAA,IAKA26E,GAAA,SAAA5iC,GAEA,IADA,GAAA96C,GAAA86C,EAAA3oD,OAAA2Q,EAAA,GAAAzQ,OAAA2N,KACAA,GAAA,GAAA8C,EAAA9C,IACA,OAAA8C,IAOAjK,GAAA,WAMA,QAAAA,GAAAhG,GACA,GACAkN,GAIA49E,EALAC,EAAA3qF,EAAAR,MAAArH,KAAA8G,WAEAtG,EAAAiH,EAAAV,OACA6N,EAAA49E,EAAAzrF,OACA0rF,EAAA,GAAAxrF,OAAA2N,EAGA,KAAAD,EAAA,EAAeA,EAAAC,IAAOD,EAAA,CACtB,OAAA+9E,GAAAC,EAAAH,EAAA79E,GAAAi+E,EAAAH,EAAA99E,GAAA,GAAA1N,OAAAzG,GAAAmX,EAAA,EAAiEA,EAAAnX,IAAOmX,EACxEi7E,EAAAj7E,GAAA+6E,GAAA,GAAAzxF,EAAAwG,EAAAkQ,GAAAg7E,EAAAh7E,EAAAlQ,IACAirF,EAAAjrF,OAAAkQ,EAEAi7E,GAAAvvF,IAAAsvF,EAGA,IAAAh+E,EAAA,EAAA49E,EAAAn/E,EAAAq/E,GAA+B99E,EAAAC,IAAOD,EACtC89E,EAAAF,EAAA59E,IAAAkC,MAAAlC,CAIA,OADA/C,GAAA6gF,EAAAF,GACAE,EA1BA,GAAA5qF,GAAAikD,OACA14C,EAAAk/E,GACA1gF,EAAAygF,GACApxF,EAAAuuD,EA0CA,OAhBA/hD,GAAA5F,KAAA,SAAAwM,GACA,MAAAvN,WAAAC,QAAAc,EAAA,kBAAAwM,KAAAy3C,GAAAH,GAAAprD,KAAA8T,IAAA5G,GAAA5F,GAGA4F,EAAAxM,MAAA,SAAAoT,GACA,MAAAvN,WAAAC,QAAA9F,EAAA,kBAAAoT,KAAAy3C,IAAAz3C,GAAA5G,GAAAxM,GAGAwM,EAAA2F,MAAA,SAAAiB,GACA,MAAAvN,WAAAC,QAAAqM,EAAA,MAAAiB,EAAAi+E,GAAA,kBAAAj+E,KAAAy3C,GAAAH,GAAAprD,KAAA8T,IAAA5G,GAAA2F,GAGA3F,EAAAmE,OAAA,SAAAyC,GACA,MAAAvN,WAAAC,QAAA6K,EAAA,MAAAyC,EAAAg+E,GAAAh+E,EAAA5G,GAAAmE,GAGAnE,GAGAolF,GAAA,SAAAnjC,EAAAt8C,GACA,IAAAwB,EAAA86C,EAAA3oD,QAAA,GACA,OAAA4N,GAAAC,EAAAnD,EAAAkG,EAAA,EAAAnX,EAAAkvD,EAAA,GAAA3oD,OAAgD4Q,EAAAnX,IAAOmX,EAAA,CACvD,IAAAlG,EAAAkD,EAAA,EAAmBA,EAAAC,IAAOD,EAAAlD,GAAAi+C,EAAA/6C,GAAAgD,GAAA,KAC1B,IAAAlG,EAAA,IAAAkD,EAAA,EAAsBA,EAAAC,IAAOD,EAAA+6C,EAAA/6C,GAAAgD,GAAA,IAAAlG,EAE7B4gF,GAAA3iC,EAAAt8C,KAGA0/E,GAAA,SAAApjC,EAAAt8C,GACA,IAAAwB,EAAA86C,EAAA3oD,QAAA,EACA,OAAA4N,GAAApM,EAAAuW,EAAA6X,EAAAo8D,EAAAn+E,EAAA+C,EAAA,EAAAnX,EAAAkvD,EAAAt8C,EAAA,IAAArM,OAAmE4Q,EAAAnX,IAAOmX,EAC1E,IAAAgf,EAAAo8D,EAAA,EAAAp+E,EAAA,EAA4BA,EAAAC,IAAOD,GACnCmK,GAAAvW,EAAAmnD,EAAAt8C,EAAAuB,IAAAgD,IAAA,GAAApP,EAAA,QACAA,EAAA,GAAAouB,EAAApuB,EAAA,GAAAouB,GAAA7X,GACOA,EAAA,GACPvW,EAAA,GAAAwqF,EAAAxqF,EAAA,GAAAwqF,GAAAj0E,GAEAvW,EAAA,GAAAouB,GAMAq8D,GAAA,SAAAtjC,EAAAt8C,GACA,IAAAwB,EAAA86C,EAAA3oD,QAAA,GACA,OAAA6N,GAAA+C,EAAA,EAAAwa,EAAAu9B,EAAAt8C,EAAA,IAAA5S,EAAA2xB,EAAAprB,OAA0D4Q,EAAAnX,IAAOmX,EAAA,CACjE,OAAAhD,GAAA,EAAAlD,EAAA,EAA0BkD,EAAAC,IAAOD,EAAAlD,GAAAi+C,EAAA/6C,GAAAgD,GAAA,KACjCwa,GAAAxa,GAAA,IAAAwa,EAAAxa,GAAA,IAAAlG,EAAA,EAEA4gF,GAAA3iC,EAAAt8C,KAGA6/E,GAAA,SAAAvjC,EAAAt8C,GACA,IAAAwB,EAAA86C,EAAA3oD,QAAA,IAAAvG,GAAA2xB,EAAAu9B,EAAAt8C,EAAA,KAAArM,QAAA,GACA,OAAAorB,GAAA3xB,EAAAoU,EAAAnD,EAAA,EAAAkG,EAAA,EAAkCA,EAAAnX,IAAOmX,EAAA,CACzC,OAAAhD,GAAA,EAAA0d,EAAA,EAAA6gE,EAAA,EAAmCv+E,EAAAC,IAAOD,EAAA,CAK1C,OAJAi+E,GAAAljC,EAAAt8C,EAAAuB,IACAw+E,EAAAP,EAAAj7E,GAAA,MACAy7E,EAAAR,EAAAj7E,EAAA,SACA07E,GAAAF,EAAAC,GAAA,EACAx/E,EAAA,EAAqBA,EAAAe,IAAOf,EAAA,CAC5B,GAAAygC,GAAAqb,EAAAt8C,EAAAQ,IACA0/E,EAAAj/C,EAAA18B,GAAA,MACA47E,EAAAl/C,EAAA18B,EAAA,QACA07E,IAAAC,EAAAC,EAEAlhE,GAAA8gE,EAAAD,GAAAG,EAAAF,EAEAhhE,EAAAxa,EAAA,OAAAwa,EAAAxa,EAAA,MAAAlG,EACA4gB,IAAA5gB,GAAAyhF,EAAA7gE,GAEAF,EAAAxa,EAAA,OAAAwa,EAAAxa,EAAA,MAAAlG,EACA4gF,GAAA3iC,EAAAt8C,KAGAogF,GAAA,SAAA9jC,GACA,GAAAo0B,GAAAp0B,EAAAtmD,IAAAqmD,GACA,OAAA6iC,IAAA5iC,GAAA3T,KAAA,SAAA7rC,EAAAC,GAA6C,MAAA2zE,GAAA5zE,GAAA4zE,EAAA3zE,MAS7CsjF,GAAA,SAAA/jC,GACA,MAAA8jC,IAAA9jC,GAAAtoB,WAGAssD,GAAA,SAAAhkC,GACA,GACA/6C,GACAgD,EAFA/C,EAAA86C,EAAA3oD,OAGA+8E,EAAAp0B,EAAAtmD,IAAAqmD,IACAr8C,EAAAk/E,GAAA5iC,GAAA3T,KAAA,SAAA7rC,EAAAC,GAAkD,MAAA2zE,GAAA3zE,GAAA2zE,EAAA5zE,KAClDvL,EAAA,EACAC,EAAA,EACA+uF,KACAC,IAEA,KAAAj/E,EAAA,EAAaA,EAAAC,IAAOD,EACpBgD,EAAAvE,EAAAuB,GACAhQ,EAAAC,GACAD,GAAAm/E,EAAAnsE,GACAg8E,EAAA3qF,KAAA2O,KAEA/S,GAAAk/E,EAAAnsE,GACAi8E,EAAA5qF,KAAA2O,GAIA,OAAAi8E,GAAAxsD,UAAA9/B,OAAAqsF,IAGAvsD,GAAA,SAAAsoB,GACA,MAAA4iC,IAAA5iC,GAAAtoB,WAGAysD,GAAA,SAAA9jF,GACA,kBACA,MAAAA,IAyBA8/C,IAAAvsD,WACAy1D,YAAAlJ,GAEAl8C,OAAA,SAAAmgF,EAAA/6E,GACA,GAAAN,GAAAs7E,EAAAC,CAEA,IAAAF,EAAA,CAKA,GAJA/6E,EAAAi3C,EAAA8jC,EACA/6E,EAAAiZ,EAAA8hE,EAAA9hE,EACA8hE,EAAA9hE,IAAA8hE,EAAA9hE,EAAAg+B,EAAAj3C,GACA+6E,EAAA9hE,EAAAjZ,EACA+6E,EAAA/jC,EAAA,CAEA,IADA+jC,IAAA/jC,EACA+jC,EAAAl2C,GAAAk2C,IAAAl2C,CACAk2C,GAAAl2C,EAAA7kC,MAEA+6E,GAAA/jC,EAAAh3C,CAEAN,GAAAq7E,MACK9zF,MAAAqU,GACLy/E,EAAA3jC,GAAAnwD,KAAAqU,GACA0E,EAAAi3C,EAAA,KACAj3C,EAAAiZ,EAAA8hE,EACAA,EAAA9jC,EAAA8jC,EAAAl2C,EAAA7kC,EACAN,EAAAq7E,IAEA/6E,EAAAi3C,EAAAj3C,EAAAiZ,EAAA,KACAhyB,KAAAqU,EAAA0E,EACAN,EAAA,KAOA,KALAM,EAAA6kC,EAAA7kC,EAAAg3C,EAAA,KACAh3C,EAAA8lC,EAAApmC,EACAM,EAAAwK,GAAA,EAEAuwE,EAAA/6E,EACAN,KAAA8K,GACAwwE,EAAAt7E,EAAAomC,EACApmC,IAAAs7E,EAAAn2C,GACAo2C,EAAAD,EAAAhkC,EACAikC,KAAAzwE,GACA9K,EAAA8K,EAAAywE,EAAAzwE,GAAA,EACAwwE,EAAAxwE,GAAA,EACAuwE,EAAAC,IAEAD,IAAAr7E,EAAAs3C,IACAE,GAAAjwD,KAAAyY,GACAq7E,EAAAr7E,EACAA,EAAAq7E,EAAAj1C,GAEApmC,EAAA8K,GAAA,EACAwwE,EAAAxwE,GAAA,EACA2sC,GAAAlwD,KAAA+zF,MAGAC,EAAAD,EAAAn2C,EACAo2C,KAAAzwE,GACA9K,EAAA8K,EAAAywE,EAAAzwE,GAAA,EACAwwE,EAAAxwE,GAAA,EACAuwE,EAAAC,IAEAD,IAAAr7E,EAAAmlC,IACAsS,GAAAlwD,KAAAyY,GACAq7E,EAAAr7E,EACAA,EAAAq7E,EAAAj1C,GAEApmC,EAAA8K,GAAA,EACAwwE,EAAAxwE,GAAA,EACA0sC,GAAAjwD,KAAA+zF,KAGAt7E,EAAAq7E,EAAAj1C,CAEA7+C,MAAAqU,EAAAkP,GAAA,GAGAxZ,OAAA,SAAAgP,GACAA,EAAAiZ,IAAAjZ,EAAAiZ,EAAAg+B,EAAAj3C,EAAAi3C,GACAj3C,EAAAi3C,IAAAj3C,EAAAi3C,EAAAh+B,EAAAjZ,EAAAiZ,GACAjZ,EAAAiZ,EAAAjZ,EAAAi3C,EAAA,IAEA,IACAikC,GAGA78D,EACAmwC,EALA9uD,EAAAM,EAAA8lC,EAEAr6C,EAAAuU,EAAA6kC,EACAn5C,EAAAsU,EAAAg3C,CAsCA,IAhCA34B,EAFA5yB,EACAC,EACA0rD,GAAA1rD,GADAD,EADAC,EAIAgU,EACAA,EAAAmlC,IAAA7kC,EAAAN,EAAAmlC,EAAAxmB,EACA3e,EAAAs3C,EAAA34B,EAEAp3B,KAAAqU,EAAA+iB,EAGA5yB,GAAAC,GACA8iE,EAAAnwC,EAAA7T,EACA6T,EAAA7T,EAAAxK,EAAAwK,EACA6T,EAAAwmB,EAAAp5C,EACAA,EAAAq6C,EAAAznB,EACAA,IAAA3yB,GACAgU,EAAA2e,EAAAynB,EACAznB,EAAAynB,EAAA9lC,EAAA8lC,EACA9lC,EAAAqe,EAAA24B,EACAt3C,EAAAmlC,EAAA7kC,EACAqe,EAAA24B,EAAAtrD,EACAA,EAAAo6C,EAAAznB,IAEAA,EAAAynB,EAAApmC,EACAA,EAAA2e,EACAre,EAAAqe,EAAA24B,KAGAwX,EAAAxuD,EAAAwK,EACAxK,EAAAqe,GAGAre,MAAA8lC,EAAApmC,IACA8uD,EAAA,CACA,GAAAxuD,KAAAwK,EAAyC,YAAhBxK,EAAAwK,GAAA,EAEzB,IACA,GAAAxK,IAAA/Y,KAAAqU,EAAA,KACA,IAAA0E,IAAAN,EAAAmlC,GAQA,GAPAq2C,EAAAx7E,EAAAs3C,EACAkkC,EAAA1wE,IACA0wE,EAAA1wE,GAAA,EACA9K,EAAA8K,GAAA,EACA0sC,GAAAjwD,KAAAyY,GACAw7E,EAAAx7E,EAAAs3C,GAEAkkC,EAAAr2C,GAAAq2C,EAAAr2C,EAAAr6B,GACA0wE,EAAAlkC,GAAAkkC,EAAAlkC,EAAAxsC,EAAA,CACA0wE,EAAAlkC,GAAAkkC,EAAAlkC,EAAAxsC,IACA0wE,EAAAr2C,EAAAr6B,GAAA,EACA0wE,EAAA1wE,GAAA,EACA2sC,GAAAlwD,KAAAi0F,GACAA,EAAAx7E,EAAAs3C,GAEAkkC,EAAA1wE,EAAA9K,EAAA8K,EACA9K,EAAA8K,EAAA0wE,EAAAlkC,EAAAxsC,GAAA,EACA0sC,GAAAjwD,KAAAyY,GACAM,EAAA/Y,KAAAqU,CACA,YAUA,IAPA4/E,EAAAx7E,EAAAmlC,EACAq2C,EAAA1wE,IACA0wE,EAAA1wE,GAAA,EACA9K,EAAA8K,GAAA,EACA2sC,GAAAlwD,KAAAyY,GACAw7E,EAAAx7E,EAAAmlC,GAEAq2C,EAAAr2C,GAAAq2C,EAAAr2C,EAAAr6B,GACA0wE,EAAAlkC,GAAAkkC,EAAAlkC,EAAAxsC,EAAA,CACA0wE,EAAAr2C,GAAAq2C,EAAAr2C,EAAAr6B,IACA0wE,EAAAlkC,EAAAxsC,GAAA,EACA0wE,EAAA1wE,GAAA,EACA0sC,GAAAjwD,KAAAi0F,GACAA,EAAAx7E,EAAAmlC,GAEAq2C,EAAA1wE,EAAA9K,EAAA8K,EACA9K,EAAA8K,EAAA0wE,EAAAr2C,EAAAr6B,GAAA,EACA2sC,GAAAlwD,KAAAyY,GACAM,EAAA/Y,KAAAqU,CACA,OAGA4/E,EAAA1wE,GAAA,EACAxK,EAAAN,EACAA,IAAAomC,SACK9lC,EAAAwK,EAELxK,OAAAwK,GAAA,KAkVA,IAEAqwC,IAwQAO,GACA3D,GACAtc,GACAoc,GA7QAoD,MA4EAO,MA4LAzC,GAAA,KACA+B,GAAA,KA6DAoC,IAAAryD,WACAy1D,YAAApD,GAEAu+B,SAAA,WACA,GAAA5jC,GAAAtwD,KAAAswD,KAEA,OAAAtwD,MAAAwwD,MAAApnD,IAAA,SAAAwoD,GACA,GAAA9tB,GAAA8tB,EAAAnB,UAAArnD,IAAA,SAAAuL,GAAoD,MAAAo9C,IAAAH,EAAAtB,EAAA37C,KAEpD,OADAmvB,GAAAr8B,KAAAmqD,EAAAF,KAAAjqD,KACAq8B,KAIAqwD,UAAA,WACA,GAAAA,MACA7jC,EAAAtwD,KAAAswD,KAsBA,OApBAtwD,MAAAwwD,MAAAtoD,QAAA,SAAA0pD,EAAAj9C,GACA,GAAAnU,GAAAiwD,EAAAmB,EAAAnB,WAAA1pD,OASA,IARA,GACA0pD,GAEAjwD,EACA2xB,EAJAu/B,EAAAE,EAAAF,KAEA/5C,GAAA,EAGAma,EAAAw+B,EAAAG,EAAAjwD,EAAA,IACA6xB,EAAAP,EAAAttB,OAAAktD,EAAA5/B,EAAArtB,MAAAqtB,EAAAttB,OAEAmT,EAAAnX,GACA2xB,EAAAE,EACAP,EAAAw+B,EAAAG,EAAA94C,IACA0a,EAAAP,EAAAttB,OAAAktD,EAAA5/B,EAAArtB,MAAAqtB,EAAAttB,KACA2tB,GAAAE,GAAA1d,EAAAwd,EAAAtb,OAAAlC,EAAA0d,EAAAxb,OAAA4+C,GAAA/D,EAAAv/B,EAAAE,GAAA,GACA8hE,EAAAnrF,MAAA0oD,EAAAjqD,KAAA0qB,EAAA1qB,KAAA4qB,EAAA5qB,SAKA0sF,GAGA/d,MAAA,WACA,MAAAp2E,MAAAswD,MAAAn8C,OAAA,SAAAk8C,GACA,MAAAA,GAAA5rD,QACK2E,IAAA,SAAAinD,GACL,OACAj8B,OAAAi8B,EAAA7rD,KAAAiD,KACAiX,OAAA2xC,EAAA5rD,MAAAgD,SAKAywB,KAAA,SAAAnoB,EAAA0B,EAAAojB,GAIA,IAHA,GAAA8hB,GAAAib,EAAAz5C,EAAAnY,KAAA42C,EAAAz+B,EAAAi8E,QAAA,EAAAx/E,EAAAuD,EAAAq4C,MAAAzpD,SAGA6qD,EAAAz5C,EAAAq4C,MAAA5Z,KAAA,KAAAA,GAAAhiC,EAAA,WACA,IAAAiK,GAAA9O,EAAA6hD,EAAAF,KAAA,GAAA5yC,EAAArN,EAAAmgD,EAAAF,KAAA,GAAA5lB,EAAAjtB,IAAAC,GAGA,GACA8yC,GAAAz5C,EAAAq4C,MAAA7Z,EAAAC,KAAA,KACAgb,EAAAnB,UAAAvoD,QAAA,SAAAod,GACA,GAAA+qC,GAAAl4C,EAAAm4C,MAAAhrC,GAAApL,EAAAm2C,EAAA7rD,IACA,IAAA0V,IAAA03C,EAAAF,MAAAx3C,MAAAm2C,EAAA5rD,OAAA,CACA,GAAAuzB,GAAAjoB,EAAAmK,EAAA,GAAA+d,EAAAxmB,EAAAyI,EAAA,GAAA2J,EAAAmU,IAAAC,GACApU,GAAAioB,MAAAjoB,EAAA+yB,EAAA18B,EAAArD,gBAEK,OAAA+/B,EAIL,OAFAz+B,GAAAi8E,OAAAz9C,EAEA,MAAA9hB,GAAAiX,GAAAjX,IAAA+8B,EAAAF,KAAA,MAIA,IAAA2iC,IAAA,WAKA,QAAAA,GAAA5sF,GACA,UAAAkuD,IAAAluD,EAAA2B,IAAA,SAAAb,EAAAoM,GACA,GAAAoM,IAAAtQ,KAAAqB,MAAA85C,EAAArjD,EAAAoM,EAAAlN,GAAA+pD,OAAA/gD,KAAAqB,MAAA+5C,EAAAtjD,EAAAoM,EAAAlN,GAAA+pD,OAGA,OAFAzwC,GAAAlK,MAAAlC,EACAoM,EAAAtZ,KAAAc,EACAwY,IACKvS,GAVL,GAAAo9C,GAAA+D,GACA9D,EAAA+D,GACAphD,EAAA,IAuCA,OA5BA6lF,GAAAH,SAAA,SAAAzsF,GACA,MAAA4sF,GAAA5sF,GAAAysF,YAGAG,EAAAje,MAAA,SAAA3uE,GACA,MAAA4sF,GAAA5sF,GAAA2uE,SAGAie,EAAAF,UAAA,SAAA1sF,GACA,MAAA4sF,GAAA5sF,GAAA0sF,aAGAE,EAAAtkF,EAAA,SAAAsE,GACA,MAAAvN,WAAAC,QAAA6kD,EAAA,kBAAAv3C,KAAAw/E,IAAAx/E,GAAAggF,GAAAzoC,GAGAyoC,EAAA5iF,EAAA,SAAA4C,GACA,MAAAvN,WAAAC,QAAA8kD,EAAA,kBAAAx3C,KAAAw/E,IAAAx/E,GAAAggF,GAAAxoC,GAGAwoC,EAAA7lF,OAAA,SAAA6F,GACA,MAAAvN,WAAAC,QAAAyH,EAAA,MAAA6F,EAAA,QAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,QAAAggF,GAAA7lF,OAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGA6lF,EAAAhpD,KAAA,SAAAh3B,GACA,MAAAvN,WAAAC,QAAAyH,EAAA,MAAA6F,EAAA,cAAAA,EAAA,IAAAA,EAAA,KAAAggF,GAAA7lF,MAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAGA6lF,GAGAC,GAAA,SAAAvkF,GACA,kBACA,MAAAA,IAgBA+lD,IAAAxyD,WACAy1D,YAAAjD,GACApwD,MAAA,SAAAkO,GACA,WAAAA,EAAA5T,KAAA,GAAA81D,IAAA91D,KAAA4T,IAAA5T,KAAA+P,EAAA/P,KAAAyR,IAEAoU,UAAA,SAAA9V,EAAA0B,GACA,WAAA1B,EAAA,IAAA0B,EAAAzR,KAAA,GAAA81D,IAAA91D,KAAA4T,EAAA5T,KAAA+P,EAAA/P,KAAA4T,EAAA7D,EAAA/P,KAAAyR,EAAAzR,KAAA4T,EAAAnC,IAEApK,MAAA,SAAA4pB,GACA,OAAAA,EAAA,GAAAjxB,KAAA4T,EAAA5T,KAAA+P,EAAAkhB,EAAA,GAAAjxB,KAAA4T,EAAA5T,KAAAyR,IAEA8iF,OAAA,SAAAxkF,GACA,MAAAA,GAAA/P,KAAA4T,EAAA5T,KAAA+P,GAEAykF,OAAA,SAAA/iF,GACA,MAAAA,GAAAzR,KAAA4T,EAAA5T,KAAAyR,GAEA4vB,OAAA,SAAAozD,GACA,QAAAA,EAAA,GAAAz0F,KAAA+P,GAAA/P,KAAA4T,GAAA6gF,EAAA,GAAAz0F,KAAAyR,GAAAzR,KAAA4T,IAEA8gF,QAAA,SAAA3kF,GACA,OAAAA,EAAA/P,KAAA+P,GAAA/P,KAAA4T,GAEA+gF,QAAA,SAAAljF,GACA,OAAAA,EAAAzR,KAAAyR,GAAAzR,KAAA4T,GAEAghF,SAAA,SAAA7kF,GACA,MAAAA,GAAAgD,OAAAR,OAAAxC,EAAArB,QAAAtF,IAAApJ,KAAA00F,QAAA10F,MAAAoJ,IAAA2G,EAAAsxB,OAAAtxB,KAEA8kF,SAAA,SAAApjF,GACA,MAAAA,GAAAsB,OAAAR,OAAAd,EAAA/C,QAAAtF,IAAApJ,KAAA20F,QAAA30F,MAAAoJ,IAAAqI,EAAA4vB,OAAA5vB,KAEAiF,SAAA,WACA,mBAAA1W,KAAA+P,EAAA,IAAA/P,KAAAyR,EAAA,WAAAzR,KAAA4T,EAAA,KAIA,IAAAqiD,IAAA,GAAAH,IAAA,MAEAC,IAAAzyD,UAAAwyD,GAAAxyD,SAUA,IAAAwxF,IAAA,WACAl1F,EAAAgP,MAAA4vD,iBACA5+D,EAAAgP,MAAAqP,4BAiCA82E,GAAA,WAqBA,QAAAA,GAAA/hF,GACAA,EACAkd,SAAA,SAAAomC,IACA3vD,GAAA,aAAAquF,GACAruF,GAAA,iBAAAg4D,GACAh4D,GAAA,gBAAAsuF,GACA9gF,OAAAyqD,GACAj4D,GAAA,kBAAAk4D,GACAl4D,GAAA,iBAAAm4D,GACAn4D,GAAA,iCAAAo4D,GACA55D,MAAA,uBACAA,MAAA,+CA0DA,QAAAO,GAAAu6E,EAAArsE,GAEA,MADAA,GAAAnD,KAAAC,IAAAwkF,EAAAzkF,KAAA0Q,IAAAg0E,EAAAvhF,IACAA,IAAAqsE,EAAArsE,EAAAqsE,EAAA,GAAAnqB,IAAAliD,EAAAqsE,EAAAlwE,EAAAkwE,EAAAxuE,GAGA,QAAAoU,GAAAo6D,EAAA3iD,EAAA+uB,GACA,GAAAt8C,GAAAutB,EAAA,GAAA+uB,EAAA,GAAA4zB,EAAArsE,EAAAnC,EAAA6rB,EAAA,GAAA+uB,EAAA,GAAA4zB,EAAArsE,CACA,OAAA7D,KAAAkwE,EAAAlwE,GAAA0B,IAAAwuE,EAAAxuE,EAAAwuE,EAAA,GAAAnqB,IAAAmqB,EAAArsE,EAAA7D,EAAA0B,GAGA,QAAA2jF,GAAAnV,EAAAzxE,GACA,GAAAg8C,GAAAy1B,EAAAyU,QAAAlmF,EAAA,OAAAsoB,EACA4zB,EAAAu1B,EAAAyU,QAAAlmF,EAAA,OAAAwoB,EACAyzB,EAAAw1B,EAAA0U,QAAAnmF,EAAA,OAAAuoB,EACA4zB,EAAAs1B,EAAA0U,QAAAnmF,EAAA,OAAAyoB,CACA,OAAAgpD,GAAAp6D,UACA6kC,EAAAF,KAAAE,GAAA,EAAAj6C,KAAA0Q,IAAA,EAAAqpC,IAAA/5C,KAAAC,IAAA,EAAAg6C,GACAC,EAAAF,KAAAE,GAAA,EAAAl6C,KAAA0Q,IAAA,EAAAspC,IAAAh6C,KAAAC,IAAA,EAAAi6C,IAIA,QAAA2wB,GAAA9sE,GACA,SAAAA,EAAA,QAAAA,EAAA,WAAAA,EAAA,QAAAA,EAAA,UAGA,QAAA2a,GAAAxf,EAAAs2E,EAAAtuE,GACAhI,EACAhD,GAAA,wBAAsCq4D,EAAAh/D,KAAA8G,WAAAuJ,UACtC1J,GAAA,qCAAmDq4D,EAAAh/D,KAAA8G,WAAAigB,QACnDmD,MAAA,kBACA,GAAA/R,GAAAnY,KACAoY,EAAAtR,UACA6Z,EAAAq+C,EAAA7mD,EAAAC,GACAkN,EAAA9W,EAAAnH,MAAA8Q,EAAAC,GACA1X,EAAAiR,GAAA2pE,EAAAh2D,GACAxhB,EAAA2M,KAAAC,IAAA4U,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACApV,EAAAiI,EAAA69C,OACA7lD,EAAA,kBAAA8vE,KAAA54E,MAAA8Q,EAAAC,GAAA6nE,EACAtrE,EAAA0uB,EAAAnzB,EAAAmxB,OAAA3gC,GAAA4G,OAAAxD,EAAAoM,EAAA0D,GAAAzD,EAAAkxB,OAAA3gC,GAAA4G,OAAAxD,EAAAqM,EAAAyD,GACA,iBAAAc,GACA,OAAAA,IAAAvE,MACA,CAAkB,GAAA6Q,GAAArM,EAAAD,GAAAd,EAAA9P,EAAAkd,EAAA,EAA4BtM,GAAA,GAAAohD,IAAAliD,EAAAlT,EAAA,GAAAsgB,EAAA,GAAApN,EAAAlT,EAAA,GAAAsgB,EAAA,GAAApN,GAC9C+M,EAAAo0E,KAAA,KAAArgF,MAKA,QAAAsqD,GAAA7mD,EAAAC,GACA,OAAAuI,GAAAhM,EAAA,EAAAC,EAAA2qD,EAAAx4D,OAA2C4N,EAAAC,IAAOD,EAClD,IAAAgM,EAAA4+C,EAAA5qD,IAAAwD,SACA,MAAAwI,EAGA,WAAA00E,GAAAl9E,EAAAC,GAGA,QAAAi9E,GAAAl9E,EAAAC,GACApY,KAAAmY,OACAnY,KAAAoY,OACApY,KAAA6W,OAAA,EACA7W,KAAA4e,OAAA,EACA5e,KAAAwO,SAAAnH,MAAA8Q,EAAAC,GAgCA,QAAA48E,KA8BA,QAAAM,KACA30E,EAAA40E,MAAA,KACA50E,EAAAoG,MA/BA,GAAA5S,EAAA9M,MAAArH,KAAA8G,WAAA,CACA,GAAA6Z,GAAAq+C,EAAAh/D,KAAA8G,WACA4N,EAAA1U,KAAAg2D,OACApiD,EAAAnD,KAAAC,IAAAwkF,EAAAzkF,KAAA0Q,IAAAg0E,EAAAzgF,EAAAd,EAAAnD,KAAAM,IAAA,EAAAykF,EAAAnuF,MAAArH,KAAA8G,cACApG,EAAAmK,GAAA7K,KAIA,IAAA2gB,EAAA40E,MACA50E,EAAA9V,MAAA,QAAAnK,EAAA,IAAAigB,EAAA9V,MAAA,QAAAnK,EAAA,KACAigB,EAAA9V,MAAA,GAAA6J,EAAA2sB,OAAA1gB,EAAA9V,MAAA,GAAAnK,IAEAooB,aAAAnI,EAAA40E,WAIA,IAAA7gF,EAAAd,MAAA,MAIA+M,GAAA9V,OAAAnK,EAAAgU,EAAA2sB,OAAA3gC,IACA+yB,GAAAzzB,MACA2gB,EAAAtQ,QAGAykF,KACAn0E,EAAA40E,MAAAj3E,WAAAg3E,EAAAG,GACA90E,EAAAo0E,KAAA,QAAAK,EAAAvvE,EAAAngB,EAAAgP,EAAAd,GAAA+M,EAAA9V,MAAA,GAAA8V,EAAA9V,MAAA,IAAA8V,EAAAnS,UAQA,QAAAmwD,KAcA,QAAAM,KAEA,GADA61B,MACAn0E,EAAAiQ,MAAA,CACA,GAAA/R,GAAAjf,EAAAgP,MAAA4rD,QAAA1jC,EAAAhY,EAAAlf,EAAAgP,MAAA6rD,QAAA1jC,CACApW,GAAAiQ,MAAA/R,IAAAC,IAAAwgD,EAEA3+C,EAAAo0E,KAAA,QAAAK,EAAAvvE,EAAAlF,EAAAxI,KAAA69C,OAAAr1C,EAAA9V,MAAA,GAAAA,GAAA8V,EAAAxI,MAAAwI,EAAA9V,MAAA,IAAA8V,EAAAnS,SAGA,QAAA0wD,KACAhlD,EAAAvT,GAAA,oCACAuX,GAAAte,EAAAgP,MAAAuP,KAAAwC,EAAAiQ,OACAkkE,KACAn0E,EAAAoG,MA1BA,IAAA8L,GAAA1e,EAAA9M,MAAArH,KAAA8G,WAAA,CACA,GAAA6Z,GAAAq+C,EAAAh/D,KAAA8G,WACAoT,EAAAjV,GAAArF,EAAAgP,MAAAuP,MAAAxX,GAAA,iBAAAs4D,GAAA,GAAAt4D,GAAA,eAAAu4D,GAAA,GACAx+D,EAAAmK,GAAA7K,MACA82B,EAAAl3B,EAAAgP,MAAA4rD,QACAzjC,EAAAn3B,EAAAgP,MAAA6rD,OAEAjnC,IAAA5zB,EAAAgP,MAAAuP,MACA+3C,KACAv1C,EAAA9V,OAAAnK,EAAAV,KAAAg2D,OAAA30B,OAAA3gC,IACA+yB,GAAAzzB,MACA2gB,EAAAtQ,SAmBA,QAAA4kF,KACA,GAAA9gF,EAAA9M,MAAArH,KAAA8G,WAAA,CACA,GAAAyb,GAAAviB,KAAAg2D,OACA14B,EAAAzyB,GAAA7K,MACAqsD,EAAA9pC,EAAA8e,OAAA/D,GACA63D,EAAA5yE,EAAA3O,GAAAhU,EAAAgP,MAAA0kB,SAAA,MACA7Q,EAAA2yE,EAAAvvE,EAAAngB,EAAA6c,EAAA4yE,GAAA73D,EAAA+uB,GAAA79C,EAAAnH,MAAArH,KAAA8G,WAEAguF,MACAlrF,EAAA,EAAA3E,GAAAjF,MAAA2J,aAAAC,YAAArJ,KAAA4oB,EAAA1G,EAAA6a,GACAr4B,GAAAjF,MAAAO,KAAAw0F,EAAAhhF,UAAA0O,IAGA,QAAAo8C,KACA,GAAA1qD,EAAA9M,MAAArH,KAAA8G,WAAA,CACA,GAEA0pB,GACA7b,EAAAD,EAAAhU,EAHAigB,EAAAq+C,EAAAh/D,KAAA8G,WACA8rB,EAAAhzB,EAAAgP,MAAAskB,eAEAte,EAAAge,EAAA7rB,MAGA,KADAmvD,KACAvhD,EAAA,EAAeA,EAAAC,IAAOD,EACtBD,EAAAke,EAAAje,GAAAjU,EAAA69D,GAAAv+D,KAAA4yB,EAAAle,EAAAqK,YACAre,KAAAV,KAAAg2D,OAAA30B,OAAA3gC,GAAAgU,EAAAqK,YACA4B,EAAA+0E,OACA/0E,EAAAg1E,SAAAh1E,EAAAg1E,OAAAj1F,IADAigB,EAAA+0E,OAAAh1F,EAAA8vB,GAAA,EAKA,OAAAolE,KACAA,EAAA9sE,aAAA8sE,IACAj1E,EAAAg1E,SACAh1E,EAAAoG,MACArmB,EAAAuE,GAAAjF,MAAA2G,GAAA,sBACAjG,KAAA2G,MAAArH,KAAA8G,kBAKA0pB,IACAolE,EAAAt3E,WAAA,WAA6Cs3E,EAAA,MAAwBC,GACrEpiE,GAAAzzB,MACA2gB,EAAAtQ,WAIA,QAAAyuD,KACA,GAEAnqD,GAAAD,EAAAhU,EAAAsgB,EAFAL,EAAAq+C,EAAAh/D,KAAA8G,WACA8rB,EAAAhzB,EAAAgP,MAAAskB,eACAte,EAAAge,EAAA7rB,MAIA,KAFA+tF,KACAc,MAAA9sE,aAAA8sE,IACAjhF,EAAA,EAAeA,EAAAC,IAAOD,EACtBD,EAAAke,EAAAje,GAAAjU,EAAA69D,GAAAv+D,KAAA4yB,EAAAle,EAAAqK,YACA4B,EAAA+0E,QAAA/0E,EAAA+0E,OAAA,KAAAhhF,EAAAqK,WAAA4B,EAAA+0E,OAAA,GAAAh1F,EACAigB,EAAAg1E,QAAAh1E,EAAAg1E,OAAA,KAAAjhF,EAAAqK,aAAA4B,EAAAg1E,OAAA,GAAAj1F,EAGA,IADAgU,EAAAiM,EAAAxI,KAAA69C,OACAr1C,EAAAg1E,OAAA,CACA,GAAAr4D,GAAA3c,EAAA+0E,OAAA,GAAAI,EAAAn1E,EAAA+0E,OAAA,GACArpC,EAAA1rC,EAAAg1E,OAAA,GAAAI,EAAAp1E,EAAAg1E,OAAA,GACAK,KAAA3pC,EAAA,GAAA/uB,EAAA,IAAA04D,KAAA3pC,EAAA,GAAA/uB,EAAA,IAAA04D,EACAC,KAAAF,EAAA,GAAAD,EAAA,IAAAG,KAAAF,EAAA,GAAAD,EAAA,IAAAG,CACAvhF,GAAAhP,EAAAgP,EAAAjE,KAAAqS,KAAAkzE,EAAAC,IACAv1F,IAAA48B,EAAA,GAAA+uB,EAAA,OAAA/uB,EAAA,GAAA+uB,EAAA,OACArrC,IAAA80E,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,WAEA,KAAAp1E,EAAA+0E,OACA,MADAh1F,GAAAigB,EAAA+0E,OAAA,GAAA10E,EAAAL,EAAA+0E,OAAA,GAEA/0E,EAAAo0E,KAAA,QAAAK,EAAAvvE,EAAAnR,EAAAhU,EAAAsgB,GAAAL,EAAAnS,SAGA,QAAAuwD,KACA,GAEApqD,GAAAD,EAFAiM,EAAAq+C,EAAAh/D,KAAA8G,WACA8rB,EAAAhzB,EAAAgP,MAAAskB,eACAte,EAAAge,EAAA7rB,MAKA,KAHAmvD,KACArjC,GAAA/J,aAAA+J,GACAA,EAAAvU,WAAA,WAAyCuU,EAAA,MAAsBgjE,GAC/DlhF,EAAA,EAAeA,EAAAC,IAAOD,EACtBD,EAAAke,EAAAje,GACAgM,EAAA+0E,QAAA/0E,EAAA+0E,OAAA,KAAAhhF,EAAAqK,iBAAA4B,GAAA+0E,OACA/0E,EAAAg1E,QAAAh1E,EAAAg1E,OAAA,KAAAjhF,EAAAqK,kBAAA4B,GAAAg1E,MAEAh1E,GAAAg1E,SAAAh1E,EAAA+0E,SAAA/0E,EAAA+0E,OAAA/0E,EAAAg1E,aAAAh1E,GAAAg1E,QACAh1E,EAAA+0E,OAAA/0E,EAAA+0E,OAAA,GAAA11F,KAAAg2D,OAAA30B,OAAA1gB,EAAA+0E,OAAA,IACA/0E,EAAAoG,MAjVA,GAcA6uE,GACA/iE,EAfA1e,EAAAgiD,GACA3nD,EAAA4nD,GACAo/B,EAAAj/B,GACAqI,EAAAlI,GACAw+B,EAAA,EACAC,EAAAxsE,IACAmO,GAAAq+D,EACAn+D,EAAAm+D,EACAp+D,EAAAD,EACAG,EAAAD,EACAptB,EAAA,IACAy5B,EAAA2nC,GACAzL,KACA7rC,EAAAhmB,EAAA,sBAGAmoF,EAAA,IACAJ,EAAA,IACAn2B,EAAA,CA2WA,OA3VAy1B,GAAAhhF,UAAA,SAAAmiF,EAAAjW,GACA,GAAAjtE,GAAAkjF,EAAAljF,UAAAkjF,EAAAljF,YAAAkjF,CACAljF,GAAAkd,SAAA,SAAAomC,IACA4/B,IAAAljF,EACAmW,EAAA+sE,EAAAjW,GAEAjtE,EAAAygB,YAAArf,KAAA,WACA4qD,EAAAh/D,KAAA8G,WACAuJ,QACA0kF,KAAA,uBAAA9U,KAAA54E,MAAArH,KAAA8G,WAAAm5E,GACAl5D,SAKAguE,EAAAoB,QAAA,SAAAnjF,EAAAY,GACAmhF,EAAAqB,QAAApjF,EAAA,WACA,GAAAkiF,GAAAl1F,KAAAg2D,OAAApiD,EACAuhF,EAAA,kBAAAvhF,KAAAvM,MAAArH,KAAA8G,WAAA8M,CACA,OAAAshF,GAAAC,KAIAJ,EAAAqB,QAAA,SAAApjF,EAAAY,GACAmhF,EAAAhhF,UAAAf,EAAA,WACA,GAAAsS,GAAA9W,EAAAnH,MAAArH,KAAA8G,WACAyb,EAAAviB,KAAAg2D,OACA14B,EAAAg+C,EAAAh2D,GACA+mC,EAAA9pC,EAAA8e,OAAA/D,GACA63D,EAAA,kBAAAvhF,KAAAvM,MAAArH,KAAA8G,WAAA8M,CACA,OAAAwhF,GAAAvvE,EAAAngB,EAAA6c,EAAA4yE,GAAA73D,EAAA+uB,GAAA/mC,MAIAyvE,EAAAsB,YAAA,SAAArjF,EAAAjD,EAAA0B,GACAsjF,EAAAhhF,UAAAf,EAAA,WACA,MAAAoiF,GAAAp1F,KAAAg2D,OAAAnwC,UACA,kBAAA9V,KAAA1I,MAAArH,KAAA8G,WAAAiJ,EACA,kBAAA0B,KAAApK,MAAArH,KAAA8G,WAAA2K,GACAjD,EAAAnH,MAAArH,KAAA8G,eAIAiuF,EAAAuB,YAAA,SAAAtjF,EAAAjD,EAAA0B,GACAsjF,EAAAhhF,UAAAf,EAAA,WACA,GAAAsS,GAAA9W,EAAAnH,MAAArH,KAAA8G,WACA4N,EAAA1U,KAAAg2D,OACAt1D,EAAA46E,EAAAh2D,EACA,OAAA8vE,GAAAn/B,GAAApwC,UAAAnlB,EAAA,GAAAA,EAAA,IAAAgF,MAAAgP,EAAAd,GAAAiS,UACA,kBAAA9V,MAAA1I,MAAArH,KAAA8G,YAAAiJ,EACA,kBAAA0B,MAAApK,MAAArH,KAAA8G,YAAA2K,GACA6T,MAoEA+vE,EAAA/xF,WACA+M,MAAA,WAKA,MAJA,OAAArQ,KAAA4e,SACA5e,KAAA6W,MAAA0oD,EAAAv2D,KAAAhJ,MAAA,EACAA,KAAA0yB,KAAA,UAEA1yB,MAEA+0F,KAAA,SAAA1xF,EAAA48E,GAMA,MALAjgF,MAAA6K,OAAA,UAAAxH,IAAArD,KAAA6K,MAAA,GAAAo1E,EAAA5+C,OAAArhC,KAAA6K,MAAA,KACA7K,KAAA01F,QAAA,UAAAryF,IAAArD,KAAA01F,OAAA,GAAAzV,EAAA5+C,OAAArhC,KAAA01F,OAAA,KACA11F,KAAA21F,QAAA,UAAAtyF,IAAArD,KAAA21F,OAAA,GAAA1V,EAAA5+C,OAAArhC,KAAA21F,OAAA,KACA31F,KAAAmY,KAAA69C,OAAAiqB,EACAjgF,KAAA0yB,KAAA,QACA1yB,MAEA+mB,IAAA,WAMA,MALA,OAAA/mB,KAAA4e,SACA2gD,EAAA/0C,OAAAxqB,KAAA6W,MAAA,GACA7W,KAAA6W,OAAA,EACA7W,KAAA0yB,KAAA,QAEA1yB,MAEA0yB,KAAA,SAAApd,GACA4C,EAAA,GAAA29C,IAAAk/B,EAAAz/E,EAAAtV,KAAAmY,KAAA69C,QAAAtiC,EAAArsB,MAAAqsB,GAAApe,EAAAtV,KAAAmY,KAAAnY,KAAAoY,SAkKA28E,EAAAS,WAAA,SAAAnhF,GACA,MAAAvN,WAAAC,QAAAyuF,EAAA,kBAAAnhF,KAAAigF,IAAAjgF,GAAA0gF,GAAAS,GAGAT,EAAA5gF,OAAA,SAAAE,GACA,MAAAvN,WAAAC,QAAAoN,EAAA,kBAAAE,KAAAigF,KAAAjgF,GAAA0gF,GAAA5gF,GAGA4gF,EAAAn2B,UAAA,SAAAvqD,GACA,MAAAvN,WAAAC,QAAA63D,EAAA,kBAAAvqD,KAAAigF,KAAAjgF,GAAA0gF,GAAAn2B,GAGAm2B,EAAAvmF,OAAA,SAAA6F,GACA,MAAAvN,WAAAC,QAAAyH,EAAA,kBAAA6F,KAAAigF,MAAAjgF,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAA0gF,GAAAvmF,GAGAumF,EAAAwB,YAAA,SAAAliF,GACA,MAAAvN,WAAAC,QAAAmuF,GAAA7gF,EAAA,GAAA8gF,GAAA9gF,EAAA,GAAA0gF,IAAAG,EAAAC,IAGAJ,EAAAyB,gBAAA,SAAAniF,GACA,MAAAvN,WAAAC,QAAA+vB,GAAAziB,EAAA,MAAA2iB,GAAA3iB,EAAA,MAAA0iB,GAAA1iB,EAAA,MAAA4iB,GAAA5iB,EAAA,MAAA0gF,KAAAj+D,EAAAC,IAAAC,EAAAC,KAGA89D,EAAAnrF,SAAA,SAAAyK,GACA,MAAAvN,WAAAC,QAAA6C,GAAAyK,EAAA0gF,GAAAnrF,GAGAmrF,EAAA1xD,YAAA,SAAAhvB,GACA,MAAAvN,WAAAC,QAAAs8B,EAAAhvB,EAAA0gF,GAAA1xD,GAGA0xD,EAAApuF,GAAA,WACA,GAAA1F,GAAAyyB,EAAA/sB,GAAAU,MAAAqsB,EAAA5sB,UACA,OAAA7F,KAAAyyB,EAAAqhE,EAAA9zF,GAGA8zF,EAAAt1B,cAAA,SAAAprD,GACA,MAAAvN,WAAAC,QAAAu4D,GAAAjrD,QAAA0gF,GAAAtkF,KAAAqS,KAAAw8C,IAGAy1B,EAGAn1F,GAAA+2D,WACA/2D,EAAA62F,OAAAx8C,GACAr6C,EAAAq6C,eACAr6C,EAAAyK,cACAzK,EAAAoQ,aACApQ,EAAA0K,YACA1K,EAAAo3D,SACAp3D,EAAAu3D,cACAv3D,EAAA43D,aACA53D,EAAA4O,UACA5O,EAAAi4D,aACAj4D,EAAA82F,0BAAAz+B,GACAr4D,EAAA+2F,eAAAz+B;AACAt4D,EAAAg3F,iBAAAj/B,GACA/3D,EAAA8Q,OACA9Q,EAAA23D,QACA33D,EAAAu4D,UACAv4D,EAAA+O,SACA/O,EAAAuhB,OACAvhB,EAAAm3D,SACAn3D,EAAA24D,WACA34D,EAAAi3F,SAAAh7C,GACAj8C,EAAA8O,MAAAk4B,GACAhnC,EAAA64D,QACA74D,EAAAg5D,WACAh5D,EAAA6O,OACA7O,EAAAyS,SACAzS,EAAAwQ,gBACAxQ,EAAAuR,WACAvR,EAAAi5D,aACAj5D,EAAAy3D,YACAz3D,EAAAk5D,OACAl5D,EAAA6U,UACA7U,EAAAyO,YACAzO,EAAAuO,aACAvO,EAAAwO,WACAxO,EAAAowB,SACApwB,EAAA+P,UACA/P,EAAAkwB,UACAlwB,EAAA6vB,kBACA7vB,EAAA0vE,SACA1vE,EAAAyxE,UACAzxE,EAAAqJ,QACArJ,EAAA2V,IAAAogB,GACA/1B,EAAAwJ,IAAA+rB,GACAv1B,EAAAiI,QACAjI,EAAAyJ,UACAzJ,EAAAuJ,WACAvJ,EAAA6f,SACA7f,EAAAihB,OACAjhB,EAAAwhB,OACAxhB,EAAAwiB,OACAxiB,EAAAmjB,OACAnjB,EAAA6jB,aACA7jB,EAAA8N,WACA9N,EAAA8+D,QACA9+D,EAAA4zB,eACA5zB,EAAAk3F,WAAA54E,GACAte,EAAAm3F,UAAApkB,GACA/yE,EAAA4zE,YACA5zE,EAAA6zE,gBACA7zE,EAAA8zE,aACA9zE,EAAA+zE,iBACA/zE,EAAAi0E,YACAj0E,EAAAk0E,gBACAl0E,EAAAm0E,aACAn0E,EAAAo0E,iBACAp0E,EAAAyL,WAAA4hB,GACArtB,EAAAo3F,SAAA5pE,GACAxtB,EAAAq3F,WAAA/pE,GACAttB,EAAAs3F,YAAA/pE,GACAvtB,EAAAgN,cAAAwgB,GACAxtB,EAAAu3F,UAAA5pE,GACA3tB,EAAAw3F,YAAA/pE,GACAztB,EAAAy3F,aAAA/pE,GACA1tB,EAAA03F,eAAA/pE,GACA3tB,EAAA23F,SAAAxpB,GACAnuE,EAAA43F,WAAA5pB,GACAhuE,EAAA63F,YAAA3pB,GACAluE,EAAA83F,cAAA3pB,GACAnuE,EAAA+3F,QAAAhqE,GACA/tB,EAAAg4F,UAAApqE,GACA5tB,EAAAi4F,WAAAnqE,GACA9tB,EAAAk4F,aAAAnqE,GACA/tB,EAAAm4F,QAAAhqE,GACAnuB,EAAAo4F,UAAAnqE,GACAjuB,EAAAq4F,WAAAnqE,GACAluB,EAAAs4F,aAAAnqE,GACAnuB,EAAAu4F,WAAAjqE,GACAtuB,EAAAw4F,aAAApqE,GACApuB,EAAAy4F,cAAApqE,GACAruB,EAAA04F,gBAAApqE,GACAtuB,EAAA24F,WAAAnqE,GACAxuB,EAAA44F,aAAArqE,GACAvuB,EAAA64F,cAAArqE,GACAxuB,EAAA84F,gBAAA3pE,GACAnvB,EAAA+4F,SAAAxqB,GACAvuE,EAAAg5F,WAAA3qB,GACAruE,EAAAi5F,YAAA3qB,GACAtuE,EAAAk5F,cAAA3qB,GACAvuE,EAAAm5F,YAAAvqB,GACA5uE,EAAAo5F,cAAAzqB,GACA3uE,EAAAq5F,eAAAzqB,GACA5uE,EAAAs5F,iBAAAzqB,GACA7uE,EAAAu5F,YAAAllB,GACAr0E,EAAAw5F,aAAA1jB,GACA91E,EAAAy5F,UAAA7tC,GACA5rD,EAAA05F,cAAA/hB,GACA33E,EAAA25F,YAAApuC,GACAvrD,EAAA45F,gBAAA3iB,GACAj3E,EAAA65F,OAAAzhB,GACAp4E,EAAA85F,OAAAzhB,GACAr4E,EAAA+5F,oBAAAxgE,GACAv5B,EAAAy5B,gBACAz5B,EAAA24B,mBACA34B,EAAAm6E,kBACAn6E,EAAAo6E,mBACAp6E,EAAAq6E,kBACAr6E,EAAAg6F,QAAA3qF,GACArP,EAAAi6F,UAAA1e,GACAv7E,EAAAk6F,YAAAxe,GACA17E,EAAAm6F,UAAAhmD,GACAn0C,EAAAo6F,oBAAAzsD,GACA3tC,EAAAq6F,cAAAnsD,GACAluC,EAAAs6F,cAAA1c,GACA59E,EAAAu6F,iBAAAh3D,GACAvjC,EAAAw6F,YAAAz8B,GACA/9D,EAAAy6F,YAAAn0D,GACAtmC,EAAA06F,aAAAxzD,GACAlnC,EAAA26F,eAAA9yD,GACA7nC,EAAA46F,eAAA5c,GACAh+E,EAAA66F,UAAAhd,GACA79E,EAAA86F,QAAAlc,GACA5+E,EAAA+6F,UAAA9b,GACAj/E,EAAAg7F,aAAA9b,GACAl/E,EAAAi7F,sBAAArb,GACA5/E,EAAAk7F,yBAAAxb,GACA1/E,EAAAm7F,wBAAArb,GACA9/E,EAAAo7F,2BAAAvb,GACA7/E,EAAAq7F,kBAAArb,GACAhgF,EAAAs7F,qBAAA/rD,GACAvvC,EAAAu7F,kBAAAvc,GACAh/E,EAAAw7F,qBAAAjtD,GACAvuC,EAAAy7F,oBAAAvb,GACAlgF,EAAA07F,uBAAA/rD,GACA3vC,EAAA27F,mBAAA1b,GACAjgF,EAAA47F,sBAAAlsD,GACA1vC,EAAA67F,YAAA1b,GACAngF,EAAA87F,eAAAhsD,GACA9vC,EAAA+7F,YAAA3b,GACApgF,EAAAg8F,cAAA7wD,GACAnrC,EAAAi8F,qBAAA9uD,GACAntC,EAAAk8F,YAAAnc,GACA//E,EAAAm8F,eAAAjtD,GACAlvC,EAAAo8F,iBAAA5b,GACAxgF,EAAAq8F,oBAAAjsD,GACApwC,EAAAs8F,gBAAA7b,GACAzgF,EAAAu8F,mBAAAjsD,GACAtwC,EAAAw8F,iBAAA9b,GACA1gF,EAAAy8F,oBAAAlsD,GACAvwC,EAAA08F,sBAAA/b,GACA3gF,EAAA28F,yBAAAnsD,GACAxwC,EAAA48F,YAAAp7D,GACAxhC,EAAAsrC,aACAtrC,EAAA68F,aAAA1oF,GACAnU,EAAA4gF,WACA5gF,EAAAsxC,aACAtxC,EAAA00C,KAAAutC,GACAjiF,EAAA88F,aAAA/a,GACA/hF,EAAAq0C,YAAAM,GACA30C,EAAAmiF,aACAniF,EAAAwiF,YACAxiF,EAAA22B,QACA32B,EAAAyjF,QAAAD,GACAxjF,EAAA+8F,cAAA/Y,GACAhkF,EAAAk3C,eACAl3C,EAAAm3C,gBACAn3C,EAAAg9F,iBAAAxY,GACAxkF,EAAAi9F,gBAAA1Z,GACAvjF,EAAAk9F,kBAAAzY,GACAzkF,EAAAyjC,YAAAvP,GACAl0B,EAAAm9F,iBAAAnzB,GACAhqE,EAAAo9F,iBAAA3zB,GACAzpE,EAAAq9F,uBAAA3zB,GACA1pE,EAAAs9F,gBAAA3gD,GACA38C,EAAAu9F,kBAAAh3E,GACAvmB,EAAAw9F,kBAAAhoE,GACAx1B,EAAA46C,oBACA56C,EAAAqqE,qBACArqE,EAAA6qE,2BACA7qE,EAAA8qE,2BACA9qE,EAAAorE,mBACAprE,EAAA2pE,kBACA3pE,EAAAy9F,oBAAA3zB,GACA9pE,EAAA09F,0BAAA3zB,GACA/pE,EAAA29F,eAAAjyB,GACA1rE,EAAA49F,mBAAAjyB,GACA3rE,EAAA69F,eAAAz2E,GACApnB,EAAA89F,eAAAlyB,GACA5rE,EAAA+9F,mBAAAlyB,EACA7rE,GAAAg+F,qBAAAlyB,EACA9rE,GAAAi+F,yBAAAlyB,GACA/rE,EAAAgsE,YACAhsE,EAAAqT,QACArT,EAAAk+F,YAAAvZ,GACA3kF,EAAAm+F,gBAAAvZ,GACA5kF,EAAAo+F,YAAAvZ,GACA7kF,EAAA4mC,gBAAAw+C,GACAplF,EAAAq+F,cAAA/Y,GACAtlF,EAAAg4B,YACAh4B,EAAAq4C,SACAr4C,EAAAiP,cAAA62E,GACA9lF,EAAAkP,aAAAyuB,GACA39B,EAAAqmF,gBAAAF,GACAnmF,EAAA2mF,YAAAF,GACAzmF,EAAAwmF,gBAAAF,GACAtmF,EAAA8mF,kBAAAF,GACA5mF,EAAA+mF,WACA/mF,EAAAsF,QACAtF,EAAA0oF,QACA1oF,EAAA8T,QACA9T,EAAAu5D,OACAv5D,EAAA2zE,IAAAkV,GACA7oF,EAAAg0E,IAAA8U,GACA9oF,EAAA4P,UAAAwpC,GACAp5C,EAAA2P,WAAAiqC,GACA55C,EAAAs+F,cAAAtjD,GACAh7C,EAAA6P,YAAAkrC,GACA/6C,EAAAu+F,SAAA/iD,GACAx7C,EAAA8P,aAAAipC,GACA/4C,EAAAw+F,cAAAvlD,GACAj5C,EAAAy+F,SAAA5iD,GACA77C,EAAA0+F,UAAA5iD,GACA97C,EAAA2+F,cAAA5iD,GACA/7C,EAAA4+F,cAAAviD,GACAr8C,EAAA6+F,eAAAviD,GACAt8C,EAAA0P,UAAA0Y,GACApoB,EAAA8+F,SAAAxS,GACAtsF,EAAA++F,iBAAAxS,GACAvsF,EAAAg/F,kBAAAxS,GACAxsF,EAAAi/F,kBAAAxS,GACAzsF,EAAAk/F,iBAAAxS,GACA1sF,EAAAm/F,4BAAAxS,GACA3sF,EAAAo/F,mBAAArS,GACA/sF,EAAAq/F,gBAAAzS,GACA5sF,EAAAs/F,gBAAAzS,GACA7sF,EAAAu/F,mBAAAtS,GACAjtF,EAAAw/F,iBAAAtS,GACAltF,EAAAy/F,mBAAAtS,GACAntF,EAAA0/F,kBAAAtS,GACAptF,EAAA2/F,gBAAAj3C,GACA1oD,EAAA25D,WACA35D,EAAA0W,MAAAC,EACA3W,EAAA45D,QAAAS,GACAr6D,EAAAiL,SACAjL,EAAAy5D,aACAz5D,EAAAq5D,cACAr5D,EAAAqF,UACArF,EAAAsT,aACAtT,EAAAoT,aACApT,EAAA65D,YACA75D,EAAA07D,eACA17D,EAAAuF,MAAAuV,EACA9a,EAAA2+D,SACA3+D,EAAAgzB,WACAhzB,EAAAsd,OAAAtC,GACAhb,EAAAsY,cACAtY,EAAAozD,OACApzD,EAAAqP,KAAAy/E,GACA9uF,EAAAuP,QACAvP,EAAAwvF,OACAxvF,EAAA4vF,cACA5vF,EAAA4/F,WAAAhQ,GACA5vF,EAAAwrD,WAAAmkC,GACA3vF,EAAA6/F,WAAAlQ,GACA3vF,EAAAwsD,eACAxsD,EAAA4sD,kBACA5sD,EAAA6sD,gBACA7sD,EAAA8sD,cACA9sD,EAAAm5B,UACAn5B,EAAA8wF,WACA9wF,EAAA8/F,aAAA7P,GACAjwF,EAAA+/F,YAAA5P,GACAnwF,EAAAggG,cAAA1P,GACAtwF,EAAAigG,aAAAvP,GACA1wF,EAAAkgG,WAAAzP,GACAzwF,EAAAmgG,eAAAvP,GACA5wF,EAAAogG,UAAAvP,GACA7wF,EAAAqgG,iBAAAhP,GACArxF,EAAAsgG,eAAAhP,GACAtxF,EAAAugG,WAAAvP,GACAhxF,EAAAwgG,YAAAjP,GACAvxF,EAAAygG,oBAAA9O,GACA3xF,EAAA0gG,kBAAA7O,GACA7xF,EAAA2gG,cAAAnP,GACAxxF,EAAA4gG,sBAAA3O,GACAjyF,EAAA6gG,oBAAA1O,GACAnyF,EAAAsP,gBAAA0iF,GACAhyF,EAAA8gG,kBAAA1O,GACApyF,EAAA2uF,eACA3uF,EAAA+gG,eAAA3xC,GACApvD,EAAAghG,eAAA3xC,GACArvD,EAAAihG,aAAAzO,GACAxyF,EAAAkhG,UAAAtwF,GACA5Q,EAAAmhG,eAAAxxC,GACA3vD,EAAAohG,gBAAA1xC,GACA1vD,EAAA6N,SACA7N,EAAAqhG,kBAAApO,GACAjzF,EAAAshG,qBAAApO,GACAlzF,EAAAwP,gBAAAijF,GACAzyF,EAAAuhG,sBAAAnO,GACApzF,EAAAwhG,kBAAAnO,GACArzF,EAAAyhG,oBAAA7N,GACA5zF,EAAA0hG,qBAAA7N,GACA7zF,EAAA2hG,oBAAA7N,GACA9zF,EAAAyP,eAAAijF,GACA1yF,EAAA4hG,kBAAAp6D,GACAxnC,EAAA6hG,aAAAtlD,GACAv8C,EAAA8hG,gBAAA9Y,GACAhpF,EAAA+hG,iBAAA9Y,GACAjpF,EAAAgiG,eAAAhZ,GACAhpF,EAAAiiG,gBAAAhZ,GACAjpF,EAAAkiG,WAAA7Y,GACArpF,EAAAmiG,YAAA7Y,GACAtpF,EAAAoiG,UAAA/Y,GACArpF,EAAAqiG,WAAA/Y,GACAtpF,EAAAsiG,WAAA/Y,GACAvpF,EAAAuiG,YAAA/Y,GACAxpF,EAAAwiG,SAAA/Y,GACAzpF,EAAAyiG,UAAA/Y,GACA1pF,EAAAmP,QAAAu2C,GACA1lD,EAAA0iG,SAAA5gD,GACA9hD,EAAA2iG,SAAA58C,GACA/lD,EAAA4iG,UAAA5Y,GACAhqF,EAAA6iG,WAAA98C,GACA/lD,EAAA8iG,YAAA9Y,GACAhqF,EAAA+iG,WAAA/8C,GACAhmD,EAAAgjG,YAAA/Y,GACAjqF,EAAAijG,YAAAtZ,GACA3pF,EAAAkjG,aAAAhZ,GACAlqF,EAAAmjG,cAAAvZ,GACA5pF,EAAAojG,eAAAjZ,GACAnqF,EAAAqjG,aAAAxZ,GACA7pF,EAAAsjG,cAAAlZ,GACApqF,EAAAujG,WAAAzZ,GACA9pF,EAAAwjG,YAAAnZ,GACArqF,EAAAyjG,aAAA1Z,GACA/pF,EAAA0jG,cAAApZ,GACAtqF,EAAAoP,UAAAm7E,GACAvqF,EAAA2jG,WAAA3hD,GACAhiD,EAAA4jG,SAAAj+C,GACA3lD,EAAA6jG,UAAApZ,GACAzqF,EAAA0qF,aACA1qF,EAAA4qF,cACA5qF,EAAA6qF,WACA7qF,EAAA+qF,YACA/qF,EAAAkmD,UACAlmD,EAAAgrF,WACAhrF,EAAA8jG,QAAAv9C,GACAvmD,EAAA+jG,SAAAzY,GACAtrF,EAAAumD,aACAvmD,EAAAsrF,cACAtrF,EAAAwmD,aACAxmD,EAAAurF,cACAvrF,EAAAirF,cACAjrF,EAAAwrF,eACAxrF,EAAAkrF,gBACAlrF,EAAAyrF,iBACAzrF,EAAAmrF,eACAnrF,EAAA0rF,gBACA1rF,EAAAorF,aACAprF,EAAA2rF,cACA3rF,EAAAqrF,eACArrF,EAAA4rF,gBACA5rF,EAAA6rF,YACA7rF,EAAA+rF,aACA/rF,EAAAmmD,WACAnmD,EAAAgsF,YACAhsF,EAAAgkG,wBAAAt9C,GACA1mD,EAAAikG,iBAAA3lD,GACAt+C,EAAAkkG,UAAA9X,GACApsF,EAAAmkG,SAAA9X,GACArsF,EAAAynB,OACAznB,EAAAkoB,SACAloB,EAAAsoB,cACAtoB,EAAA2oB,QAAAwB,GACAnqB,EAAAmpB,SAAAkjD,GACArsE,EAAA+J,cACA/J,EAAAgf,UACAhf,EAAA6zB,aACA7zB,EAAAy0F,WACAz0F,EAAAm1F,QACAn1F,EAAAokG,cAAAjuC,GACAn2D,EAAAqkG,aAAAhuC,GAEAl1D,OAAAC,eAAApB,EAAA,cAA8CqB,OAAA,OL0tBxC,SAAUpB,EAAQD,EAASM,GAEhC,YAaA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GM/1iBjF,QAASsjG,GAAaC,GA8B3B,QAASC,GAAMC,EAAOC,EAAUC,GAC9B,GAAMC,GAAMC,EAAYC,EAAiBnkG,KAAKP,KAAMqkG,EAAOE,GAE3DC,GAAInd,OAASsd,EAAgB5oC,KACjByoC,EACAI,EAAa5kG,KAAKgE,QAAShE,KAAKoE,UAChCkgG,GAQd,QAASO,GAAe3/F,GACtB,MAAOA,GAAK+/C,QAAQ,IAAb,IAAsBlhD,EAAO+gG,uBAStC,QAASJ,GAAkBL,EAAOE,GAChC,IAAKF,EACH,MAAO,KAGTA,GAAMh/F,KAAK,UAAW,OACnBA,KAAK,QAAS,6BACjB,IAAM0/F,IAAa,EAAAC,EAAAlkG,WACfoE,EAAO6/F,EAAWV,EAAMtrF,OAK5B,OAHA7T,GAAO+/F,EAAa1kG,KAAKP,KAAMkF,EAAMq/F,EAAO1kF,SAASwkF,EAAMh/F,KAAK,SAAU,KAC1EH,EAAO2/F,EAAc3/F,GAWvB,QAAS0/F,GAAc5gG,EAAOI,GAC5B,GAAM8gG,GAASvvF,SAASM,cAAc,SAKtC,OAHAivF,GAAO9gG,OAASA,EAChB8gG,EAAOlhG,MAAQA,EAERkhG,EAQT,QAAST,GAAaU,GACpB,GAAMX,GAAM,GAAIY,MAIhB,OAFAZ,GAAIa,IAAJ,GAAathG,EAAOuhG,gBAAkBC,EAAiBJ,GAEhDX,EAQT,QAASgB,GAAmBC,EAAOP,GAGjC,MAFAA,GAAOQ,WAAW,MAAMC,UAAUF,EAAO,EAAG,GAErCP,EAWT,QAASU,GAAgBV,GAAwE,GAAhEZ,GAAgEx9F,UAAAC,OAAA,GAAAlF,SAAAiF,UAAA,GAAAA,UAAA,GAArD/C,EAAO8hG,gBAAiBC,EAA6Bh/F,UAAAC,OAAA,GAAAlF,SAAAiF,UAAA,GAAAA,UAAA,GAAb,YAC5E8/E,EAAMse,EAAOa,UAAUD,GACvBt6C,EAAO71C,SAASM,cAAc,IAEpCu1C,GAAKw6C,KAAOpf,EACZp7B,EAAKy6C,SAAW3B,EAChB3uF,SAASuwF,KAAKzpF,YAAY+uC,GAC1BA,EAAK26C,QACLxwF,SAASuwF,KAAKnpF,YAAYyuC,GAS5B,QAASm5C,GAAiBO,EAAQZ,EAAUh/E,GAC1CA,EAAEk5C,iBAEFonC,EAAeJ,EAAkBxlG,KAAMklG,GAASZ,GAUlD,QAASW,GAAc//F,EAAMq/F,EAAO6B,GAClC,IAAK7B,IAAU6B,EACb,MAAOlhG,EAFmC,IAIrCq+D,GAJqCrgE,EAAAmjG,aAIrC9iC,IAIP,OAFAr+D,GAAOA,EAAK+/C,QAAQ,KAAb,YAA+BjlD,KAAKuE,SAASC,KAA7C,QAAyDT,EAAOuiG,eAAhE,kBAAgGviG,EAAOwiG,gBAAvG,gBAAsIxiG,EAAOyiG,cAA7I,WAAqKjjC,EAAK,GAA1K,MAAkLghC,EAAlL,eAxJT,GAAIkC,GAAUvpF,OAAOwpF,IAEhBD,KACHA,EAAUtC,EAAQ,WAAWwC,OAK/B,IAAMpB,GAAmB,SAACqB,GAAD,MAASH,GAAQI,mBAAmBD,GACxD3hD,QAAQ,kBAAmB,SAACvsB,EAAO2zB,GAAR,MAAey6C,QAAOC,aAAP,KAAyB16C,OAElEtoD,GACJ8hG,gBAAiB,YACjBmB,gBAAiB,QACjB1B,gBAAiB,6BACjBkB,cAAe,OACfD,gBAAiB,4BACjBD,eAAgB,GAChBxB,GAAIA,yBACF,+BAAgC9kG,KAAKgnG,gBAArC,cA0IJ,QACE5C,OACAM,mBACAD,cACAe,qBNkriBHzkG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EMv1iBeskG,aAHhB,IAAAhhG,GAAAhD,EAAA,GACA+mG,EAAA/mG,EAAA,GN+1iBK8kG,EAAwBrkG,EAAuBsmG,IA8K9C,SAAUpnG,EAAQD,GAEvB,YAEAmB,QAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GOnhjBH,IAAMimG,aACXC,QAAS,WAGE57F,gBACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWg4D,UACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAGWriE,WACXgmG,SACA37F,aACAg4D,SPogjBI,SAAU1jE,EAAQD,GAEvB,YQvijBDC,GAAOD,QAAW,WAId,OAMIwnG,qBANG,WAyBC,QAASC,GAA6BC,GAClC,GAAIC,MACA5tC,EAAUhkD,SAASuwF,KAAKzpF,YAAY9G,SAASM,cAAcqxF,IAC3DE,EAAgBtqF,OAAOrC,iBAAiB8+C,EAM5C,UAJGzxD,QAAQ3H,KAAKinG,EAAe,SAACriG,GAC5BoiG,EAAapiG,GAASqiG,EAAcriG,KAExCwQ,SAASuwF,KAAKnpF,YAAY48C,GACnB4tC,EAGX,QAASE,GAA0BH,GAK/B,MAJAA,GAAUA,EAAQnuB,cACbuuB,EAAuBJ,KACxBI,EAAuBJ,GAAWD,EAA6BC,IAE5DI,EAAuBJ,GAGlC,QAASK,GAAoBC,GAEzB,GAAIC,MACAC,SACAN,SACAD,SACAxiE,QAEJ,IAAK6iE,GAAQA,EAAKG,WAAa12D,KAAK22D,aA4BpC,MAtBAH,MACAC,EAAWF,EAAKrsC,iBAAiB,QAE9BrzD,QAAQ3H,KAAKunG,EAAU,SAACG,EAAItzF,GACtBuzF,EAAYD,EAAGX,WAChBE,EAAgBtqF,OAAOrC,iBAAiBotF,GACxCV,EAAeE,EAAyBQ,EAAGX,SAC3CO,EAASlzF,GAAKszF,EAAG9iG,MAAMgjG,WACpBjgG,QAAQ3H,KAAKinG,EAAe,SAACY,GACxBZ,EAAcY,KAAiBb,EAAaa,KAC5CH,EAAG9iG,MAAMijG,GAAeZ,EAAcY,SAMtDrjE,EAAS6iE,EAAKS,UACdP,KAAc1+F,IAAI7I,KAAKunG,EAAU,SAACG,EAAItzF,GAElC,MADAszF,GAAG9iG,MAAMgjG,QAAUN,EAASlzF,GACrBszF,IAGJljE,EAxEX,GAAM2iE,MAGAQ,GAAeI,MAAO,EAAKC,MAAO,EAAKC,MAAO,EAAKC,MAAO,EAAKC,SAAU,EAAKC,UAAW,EAAKC,OAAQ,EAAKC,QAAS,EAAKC,OAAQ,EAAKC,OAAQ,GAI9IC,GAAY,IAAI,OAAO,UAAU,OAAO,UAAU,QAAQ,QAAQ,IAAI,OAAO,MAAM,MAAM,aAAa,OAAO,KAAK,SAAS,SAAS,UAAU,SAAS,OAAO,OAAO,MAAM,WAAW,UAAU,WAAW,KAAK,MAAM,UAAU,MAAM,MAAM,KAAK,KAAK,KAAK,QAAQ,WAAW,aAAa,SAAS,OAAO,SAAS,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,SAAS,SAAS,KAAK,OAAO,IAAI,SAAS,MAAM,QAAQ,MAAM,MAAM,QAAQ,SAAS,KAAK,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,QAAQ,MAAM,OAAO,WAAW,SAAS,KAAK,SAAS,WAAW,SAAS,IAAI,QAAQ,MAAM,WAAW,IAAI,KAAK,KAAK,OAAO,IAAI,OAAO,SAAS,UAAU,SAAS,QAAQ,SAAS,OAAO,SAAS,QAAQ,MAAM,UAAU,MAAM,MAAM,QAAQ,QAAQ,KAAK,WAAW,QAAQ,KAAK,QAAQ,OAAO,QAAQ,KAAK,QAAQ,IAAI,KAAK,MAAM,QAAQ,MAqE3zB,UAlEG9gG,QAAQ3H,KAAKyoG,EAAU,SAAC5zF,GAClB8yF,EAAY9yF,KACbsyF,EAAuBtyF,GAAQiyF,EAA6BjyF,MAgE7DuyF,QR+ijBb,SAAU9nG,EAAQD,GAEvB,YAEAmB,QAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GS7ojBG4G,SACXW,KAAM,MACNE,MAAO,QACPK,GAAI,KACJF,MAAO,QACPC,MAAO,QACPV,OAAQ,SACRN,OAAQ,WTopjBJ,SAAUjI,EAAQD,EAASM,GAEhC,YAcA,SAAS+oG,GAAmBC,GAAO,GAAIjiG,MAAMouB,QAAQ6zE,GAAM,CAAE,IAAK,GAAIv0F,GAAI,EAAGw0F,EAAOliG,MAAMiiG,EAAIniG,QAAS4N,EAAIu0F,EAAIniG,OAAQ4N,IAAOw0F,EAAKx0F,GAAKu0F,EAAIv0F,EAAM,OAAOw0F,GAAe,MAAOliG,OAAMg8B,KAAKimE,GUpqjBpL,QAASvhG,GAAWyhG,GACzB,MAAOrzE,MAAKvQ,MAAMuQ,KAAKC,UAAUozE,IAG5B,QAAS/gG,GAAUb,EAAO6hG,GAC/B,GAAMC,GAAa3hG,EAAUH,EAW7B,OAViB,SAAb6hG,GACFC,EAAWphG,QAAQ,SAACK,GAClBA,EAAEX,EAAAC,KAAKW,MAAQ,GAAIC,MAAKF,EAAEX,EAAAC,KAAKW,SAEjC8gG,EAAWvtD,KAAK,SAAC7rC,EAAGC,GAAJ,MAAUD,GAAEtI,EAAAC,KAAKW,MAAM+gG,UAAYp5F,EAAEvI,EAAAC,KAAKW,MAAM+gG,aAC1C,WAAbF,EACTC,EAAWvtD,KAAK,SAAC7rC,EAAGC,GAAJ,MAAUD,GAAEtI,EAAAC,KAAKW,MAAMghG,cAAcr5F,EAAEvI,EAAAC,KAAKW,MAAO,MAAOihG,SAAS,MAEnFH,EAAWvtD,KAAK,SAAC7rC,EAAGC,GAAJ,MAAUD,GAAEtI,EAAAC,KAAKW,MAAQ2H,EAAEvI,EAAAC,KAAKW,QAE3C8gG,EAGF,QAAS9/F,GAAW0/F,GACzB,SAAA5hG,OAAA2hG,EAAW,GAAIvzE,KAAIwzE,KAGd,QAAS/+F,GAAayD,EAAQ3D,EAASo/F,GAC5C,GAAiB,SAAbA,EACF,MAAOz7F,GAAOyzB,OAAOp3B,EAErB,IAAMy/F,GAAW97F,EAAO4C,OAClBqG,EAAQpG,KAAKqB,MAAO7H,EAAWy/F,EACrC,OAAO97F,GAAO2E,SAASsE,GAIpB,QAAS3L,GAAUgF,EAAGC,GAC3B,GAAMw5F,KACN,KAAK,GAAM55F,KAAKG,GACVA,EAAE3M,eAAewM,KACnB45F,EAAM55F,GAAMA,IAAKI,GAAKA,EAAEJ,GAAKG,EAAEH,GAGnC,OAAO45F,GAGF,QAAS/+F,GAAU4K,EAAUo0F,GAClC,GAAIC,IAAO,EACP/hF,EAAQ,IACZ,OAAO,YAA8B,OAAAjhB,GAAAC,UAAAC,OAANqR,EAAMnR,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANkR,EAAMlR,GAAAJ,UAAAI,EAC9B2iG,KACHA,GAAO,EACP/gF,aAAahB,GACbA,EAAQxJ,WAAW,WACjBurF,GAAO,EACPr0F,eAAY4C,IACXwxF,KVmmjBR7oG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EU3pjBe+H,YV4pjBf/H,EUxpjBeyI,WVypjBfzI,EU1ojBe4J,YV2ojBf5J,EUvojBeuK,cVwojBfvK,EU9njBesL,WV+njBftL,EUrnjBegL,UAlDhB,IAAAhD,GAAA1H,EAAA,IVwvjBM,SAAUL,EAAQD,EAASM,GAEhC,YAeA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EWpwjBpP,QAAS0mG,KA4BtB,QAASC,GAAaC,GACpB,GAAM1lG,GAAaP,EAAOC,MAAQD,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MACjEwlG,EAAc,KACd7/F,EAAS,IAab,OAZuB,SAAnBrG,EAAOuE,SACT2hG,EAAcjlG,EAAGwJ,OAAOw7F,GACxB5/F,EAASpF,EAAGsK,cAEZ26F,EAAcD,EACd5/F,EAA+B,QAArBrG,EAAOqH,WAA4C,eAArBrH,EAAOqH,UAA8BpG,EAAGwK,YAAcxK,EAAGuK,aACjGnF,EAAO0qC,QAAQ,IAGjB1qC,EAAOmI,OAAO03F,GACXv7F,OAAO,EAAGpK,IAEN8F,EAGT,QAAS8/F,GAAaC,GACpB,GAAMzlG,GAAcX,EAAOK,OAASL,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,OAChEqI,EAASjI,EAAGyK,cACb8C,OAAO43F,GACP7wD,YAAY50C,EAAa,IACzBg2C,MAEL,OAAOztC,GAGT,QAASm9F,KACP,GAAMC,GAAM5iG,EAAK7D,aAAawF,IAAIkhG,GAC5Bl9F,EAAapI,EAAG0K,eACjBhB,MAAM3K,EAAOuH,YAAYlC,IAAI,SAACb,GAAD,MAAOA,GAAEtH,SACtCsR,OAAOxO,EAAOuH,YAAYlC,IAAI,SAACb,EAAGoM,GAAJ,MAAUpM,GAAElF,KAAOgnG,EAAI11F,MACrDikC,QAAQ70C,EAAOyH,aAEpB,OAAO4B,GAGT,QAASm9F,KACP,GAAM3sF,KAaN,OAZAnW,GAAK7D,aAAasE,QAAQ,SAACK,GACzB,GAAMlF,GAAMkF,EAAEX,EAAAC,KAAKiB,MACd8U,GAAOva,KACVua,EAAOva,IACLmnG,aACAC,aAGJ7sF,EAAOva,GAAKmnG,UAAY5sF,EAAOva,GAAKmnG,UAAUljG,OAAOiB,EAAEX,EAAAC,KAAKO,QAAQgB,IAAIshG,IACxE9sF,EAAOva,GAAKonG,QAAU7sF,EAAOva,GAAKonG,QAAQnjG,OAAOiB,EAAEX,EAAAC,KAAKO,QAAQgB,IAAIF,MAG/D0U,EAGT,QAAS+sF,KACP,GAAMC,GAAkBnjG,EAAKlC,UAAU6D,IAAI,SAACb,GAAD,MAAOvD,GAAGyJ,IAAIlG,EAAEmnD,OAAOtmD,IAAI,SAACyhG,GAAD,MAAQA,GAAG5pG,WAE3EuM,EAAY/F,EAAKlC,UAAU6D,IAAI,SAACb,GACpC,GAAMy5B,IACJ3+B,IAAKkF,EAAEX,EAAAC,KAAKW,MAMd,OAJAD,GAAEmnD,OAAOxnD,QAAQ,SAAC2iG,GAChB7oE,EAAO6oE,EAAGjjG,EAAAC,KAAKkB,KAAO8hG,EAAGjjG,EAAAC,KAAKa,SAGzBs5B,IAGHv0B,EAAQzI,EAAGyI,QACd5F,KAAKJ,EAAK7D,aAAawF,IAAIkhG,IAC3Bl3F,MAAMpO,EAAGqK,gBACTuC,OAAO5M,EAAGoK,iBAEP07F,EAAe9lG,EAAGwJ,OAAOo8F,GAEzBH,EAAUhjG,EAAKjC,eAAe4D,IAAIF,GAClC6hG,GAAgB,EAAArjG,EAAA8B,WAAUihG,GAE1BrgG,EAAS2/F,EAAYgB,GACrB39F,EAAag9F,IACbn9F,EAASi9F,GAAa,EAAGY,EAAa,IAE5C,QACEt9F,YACAC,QACArD,SACA6C,SACAG,cAIJ,QAAS49F,KACP,GAAMptF,GAAS2sF,IAETp9F,EAAgB1F,EAAKhC,UAAUsB,OAAS,EAExCkkG,EAAartF,EAAOnW,EAAKhC,UAAU,IACnCslG,EAAgBE,EAAWR,QAC3BK,EAAe9lG,EAAGwJ,OAAOy8F,EAAWT,WAEpCpgG,EAAS2/F,EAAYgB,GACrB39F,EAAag9F,IACbn9F,EAASi9F,EAAYY,GAEvB59F,EAAU,IACd,IAAIC,EAAe,CACjB,GAAM+9F,GAAattF,EAAOnW,EAAKhC,UAAU,IACnC0lG,EAAgBnmG,EAAGwJ,OAAO08F,EAAWV,UAE3Ct9F,GAAUD,EAAO8F,OACdR,OAAO44F,GAGZ,OACEh+F,gBACA/C,SACA6C,SACAG,aACAF,WAIJ,QAASnH,KACP,MAAyB,eAArBhC,EAAOqH,WACe,gBAArBrH,EAAOqH,UACHu/F,IAEAK,IAIX,QAASplG,GAAWqF,GAElB,MADAlH,IAAS,EAAA2D,EAAAwD,UAASnH,EAAQkH,GACnBjL,KAGT,QAAS6F,GAAS2B,GAEhB,MADAC,GAAO1G,OAAO0F,UAAWgB,EAAMD,GACxBxH,KAtKT,GAAI+D,IACFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAERJ,OAAQ,KACRJ,MAAO,KACPsE,QAAS,KACT8C,UAAW,KACXE,YAAa,KACbE,aAAc,MAGZ/D,GACFlC,UAAW,KACX3B,aAAc,KACd4B,eAAgB,KAChBC,UAAW,MAGP6kG,EAAQ,SAAC/hG,GAAD,MAAOA,GAAEX,EAAAC,KAAKkB,KACtBG,EAAS,SAACX,GAAD,MAAOA,GAAEX,EAAAC,KAAKW,OACvBkiG,EAAW,SAACniG,GAAD,MAAOA,GAAEX,EAAAC,KAAKa,OAiJ/B,QACE9C,YACAC,UACAE,aXykjBHhF,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QW1vjBegpG,CALxB,IAAAn8F,GAAAzN,EAAA,GAAY8E,EXmwjBF7B,EAAwBwK,GWjwjBlC/F,EAAA1H,EAAA,GACAwH,EAAAxH,EAAA,IX87jBM,SAAUL,EAAQD,EAASM,GAEhC,YAeA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EY78jBpP,QAASgoG,GAAM5nG,GAoC5B,QAASE,KACPC,EAAMW,WAAaP,EAAOC,MAAQD,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MACrEd,EAAMe,YAAcX,EAAOK,OAASL,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,OAEjEjB,EAAMkB,MACTlB,EAAMkB,IAAMlB,EAAMM,UAAUwP,OAAO,KAC9B6qD,QAAQ,cAAc,IAG7B36D,EAAMkB,IAAIQ,KAAK,YAAf,aAAyCtB,EAAOQ,OAAOC,KAAvD,KAAgET,EAAOQ,OAAOI,IAA9E,KAGF,QAAS0mG,KACP,GAAMC,GAAatmG,EAAGmK,OACjBY,EAAE,SAACxH,GAAD,MAAOzC,GAAOsE,OAAO7B,EAAEX,EAAAC,KAAKW,SAC9BiJ,EAAE,SAAClJ,GAAD,MAAOzC,GAAOmH,OAAO1E,EAAEX,EAAAC,KAAKa,UAE7B6iG,EAAcvmG,EAAGmK,OAClBY,EAAE,SAACxH,GAAD,MAAOzC,GAAOsE,OAAO7B,EAAEX,EAAAC,KAAKW,SAC9BiJ,EAAE,SAAClJ,GAAD,MAAOzC,GAAOoH,QAAQ3E,EAAEX,EAAAC,KAAKa,UAC/BsiD,MAAMhmD,EAAGkK,iBAER63B,EAAQpjC,EAAMkB,IAAIqO,UAAU,cAC7BzL,KAAKA,EAAK7D,aAEfmjC,GAAMvzB,QACHC,OAAO,QACPpO,KAAK,QAAS,kBAAO,OAAQ,QAAQmhB,KAAK,OAC1C7X,MAAMo4B,GACN1hC,KAAK,IAAK,SAACkD,GACV,MAAIA,GAAEX,EAAAC,KAAKiB,SAAWrB,EAAKhC,UAAU,GAC5B6lG,EAAW/iG,EAAEX,EAAAC,KAAKO,SAElBmjG,EAAYhjG,EAAEX,EAAAC,KAAKO,WAG7BjD,MAAM,SAAUqmG,GAChBrmG,MAAM,OAAQ,QAEjB4hC,EAAMzzB,OAAOvJ,SAGf,QAAS0hG,KACP,GAAMC,GAAa1mG,EAAGiK,OACjBc,EAAE,SAACxH,GAAD,MAAOzC,GAAOsE,OAAO7B,EAAEX,EAAAC,KAAKW,SAC9BuuB,GAAG,SAACxuB,GAAD,MAAOzC,GAAOmH,OAAO1E,EAAEX,EAAAC,KAAKa,UAC/BuuB,GAAG,iBAAMlzB,GAAOW,cAEfinG,EAAc3mG,EAAGiK,OAClBc,EAAE,SAACxH,GAAD,MAAOzC,GAAOsE,OAAO7B,EAAEX,EAAAC,KAAKW,SAC9BuuB,GAAG,SAACxuB,GAAD,MAAOzC,GAAOoH,QAAQ3E,EAAEX,EAAAC,KAAKa,UAChCuuB,GAAG,iBAAMlzB,GAAOW,cAChBsmD,MAAMhmD,EAAGkK,iBAER08F,EAAQjoG,EAAMkB,IAAIqO,UAAU,cAC7BzL,KAAKA,EAAK7D,aAEfgoG,GAAMp4F,QACHC,OAAO,QACPpO,KAAK,QAAS,kBAAO,OAAQ,QAAQmhB,KAAK,OAC1C7X,MAAMi9F,GACNvmG,KAAK,IAAK,SAACkD,GACV,MAAIA,GAAEX,EAAAC,KAAKiB,SAAWrB,EAAKhC,UAAU,GAC5BimG,EAAWnjG,EAAEX,EAAAC,KAAKO,SAElBujG,EAAYpjG,EAAEX,EAAAC,KAAKO,WAG7BjD,MAAM,SAAUqmG,GAChBrmG,MAAM,OAAQqmG,GAEjBI,EAAMt4F,OAAOvJ,SAGf,QAAS8hG,KACP,GAAMP,GAAatmG,EAAGiK,OACjBc,EAAE,SAACxH,GAAD,MAAOzC,GAAOsE,OAAO7B,EAAEd,KAAKG,EAAAC,KAAKW,SACnCuuB,GAAG,SAACxuB,GAAD,MAAOzC,GAAOmH,OAAO1E,EAAE,MAC1B0uB,GAAG,SAAC1uB,GAAD,MAAOzC,GAAOmH,OAAO1E,EAAE,MAEzBqjG,EAAQjoG,EAAMkB,IAAIqO,UAAU,sBAC7BzL,KAAKA,EAAKgG,MAAMhG,EAAK+F,WAE1Bo+F,GAAMp4F,QACHC,OAAO,QACPpO,KAAK,QAAS,kBAAO,OAAQ,gBAAgBmhB,KAAK,OAClD7X,MAAMi9F,GACNvmG,KAAK,IAAKimG,GACVnmG,MAAM,SAAU,QAChBA,MAAM,OAAQ,SAACoD,GAAD,MAAOzC,GAAOsH,WAAW7E,EAAElF,OAE5CuoG,EAAMt4F,OAAOvJ,SAGf,QAASzD,KACP5C,IAEyB,SAArBK,EAAOqH,UACTqgG,IAC8B,SAArB1nG,EAAOqH,UAChBigG,IAC8B,gBAArBtnG,EAAOqH,WAChBygG,IAIJ,QAASjmG,GAAWqF,GAElB,MADAlH,IAAS,EAAA2D,EAAAwD,UAASnH,EAAQkH,GACnBjL,KAGT,QAASiG,GAAW6lG,GAElB,MADAhmG,IAAS,EAAA4B,EAAAwD,UAASpF,EAAQgmG,GACnB9rG,KAGT,QAAS6F,GAAS2B,GAEhB,MADAC,GAAO1G,OAAO0F,UAAWgB,EAAMD,GACxBxH,KAxJT,GAAI+D,IACFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAERR,MAAO,IACPI,OAAQ,IACRgH,UAAW,MAGTtF,GACFsH,WAAY,KACZhD,OAAQ,KACR6C,OAAQ,KACRC,QAAS,MAGLvJ,GACJM,UAAWT,EACXqB,IAAK,KACLH,YAAa,MAGX+C,GACF7D,aAAc,KACd6B,UAAW,KACXgI,MAAO,KACPD,UAAW,MAGPg+F,EAAW,SAACjjG,GAAD,MAAOzC,GAAOsH,WAAW7E,EAAEX,EAAAC,KAAKkB,KA2HjD,QACEnD,YACAK,YACAJ,UACAS,aZ+xjBHvF,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QYn8jBesqG,CALxB,IAAAz9F,GAAAzN,EAAA,GAAY8E,EZ48jBF7B,EAAwBwK,GY18jBlC/F,EAAA1H,EAAA,GACAwH,EAAAxH,EAAA,IZunkBM,SAAUL,EAAQD,EAASM,GAEhC,Ya1nkBc,SAAS6rG,GAAKhoG,EAAQJ,GAInC,QAASqoG,KACP,GAAMC,GAAOtoG,EAAMkB,IAAII,OAAO,gBACzBiO,UAAU,SACVzL,KAAK9D,EAAMC,aAAa,GAAGyF,OAEhC4iG,GAAKz4F,QACFC,OAAO,QACPpO,KAAK,QAAS,kBAAO,OAAQ,QAAQmhB,KAAK,OAC1C7X,MAAMs9F,GACN5mG,KAAK,IAAK,SAACkD,GAAD,MAAO5E,GAAMyG,OAAO7B,EAAEX,EAAAC,KAAKW,SACrCnD,KAAK,IAAK,SAACkD,GAAD,MAAO5E,GAAMsJ,OAAO1E,EAAEX,EAAAC,KAAKa,UACrCrD,KAAK,QAAS,iBAAM1B,GAAMyG,OAAOyH,cACjCxM,KAAK,SAAU,SAACkD,GAAD,MAAO5E,GAAMe,YAAcf,EAAMsJ,OAAO1E,EAAEX,EAAAC,KAAKa,UAC9DvD,MAAM,SAAU,SAChBA,MAAM,OAAQqmG,GAEjBS,EAAK34F,OAAOvJ,SAGd,QAASmiG,KAEP,GAAMC,GAAmBxoG,EAAMkB,IAAII,OAAO,gBACrCiO,UAAU,eACVzL,KAAK9D,EAAM8J,MAAM9J,EAAM6J,YAEtB4+F,EAAgBD,EAAiB34F,QACpCC,OAAO,KACPpO,KAAK,QAAS,cACdsJ,MAAMw9F,GACN9mG,KAAK,OAAQ,SAACkD,GAAD,MAAO5E,GAAMyJ,WAAW7E,EAAElF,OACvCgC,KAAK,SAAU,QAElB8mG,GAAiB74F,OAAOvJ,QAExB,IAAMsiG,GAAcD,EAAcl5F,UAAU,SACvCzL,KAAK,SAACc,GAAD,MAAOA,IAEjB8jG,GAAY74F,QACTC,OAAO,QACPpO,KAAK,QAAS,QACdsJ,MAAM09F,GACNhnG,KAAK,IAAK,SAACkD,GAAD,MAAO5E,GAAMyG,OAAO7B,EAAEd,KAAKG,EAAAC,KAAKW,SAC1CnD,KAAK,IAAK,SAACkD,GAAD,MAAO5E,GAAMsJ,OAAO1E,EAAE,MAChClD,KAAK,SAAU,SAACkD,GAAD,MAAO5E,GAAMsJ,OAAO1E,EAAE,IAAM5E,EAAMsJ,OAAO1E,EAAE,MAC1DlD,KAAK,QAAS1B,EAAMyG,OAAOyH,aAE9Bw6F,EAAY/4F,OAAOvJ,SAhDrB,GAAMyhG,GAAW,SAACjjG,GAAD,MAAO5E,GAAMyJ,WAAW7E,EAAEX,EAAAC,KAAKkB,KAmDhD,QACEijG,WACAE,mBbqkkBHnrG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,Qa/nkBeirG,CAFxB,IAAAnkG,GAAA1H,EAAA,Ib8rkBM,SAAUL,EAAQD,EAASM,GAEhC,YAaA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EczskBpP,QAASkpG,GAAM9oG,GA2C5B,QAASE,KACPC,EAAMW,WAAaP,EAAOC,MAAQD,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MACrEd,EAAMe,YAAcX,EAAOK,OAASL,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,OAEjEjB,EAAMkB,MACTlB,EAAMkB,IAAMlB,EAAMM,UAAUwP,OAAO,KAC9B6qD,QAAQ,cAAc,GAE3B36D,EAAMkB,IAAI4O,OAAO,KAAKpO,KAAK,QAAS,oBACpC1B,EAAMkB,IAAI4O,OAAO,KAAKpO,KAAK,QAAS,UACpC1B,EAAMkB,IAAI4O,OAAO,KAAKpO,KAAK,QAAS,UACpC1B,EAAMkB,IAAI4O,OAAO,KAAKpO,KAAK,QAAS,YAGtC1B,EAAMkB,IAAIQ,KAAK,YAAf,aAAyCtB,EAAOQ,OAAOC,KAAvD,KAAgET,EAAOQ,OAAOI,IAA9E,KAGF,QAAS4nG,KAKP,GAJA5oG,EAAM0J,MAAQrI,EAAGmJ,WAAWrI,EAAOsE,QAC9BoK,SAASzQ,EAAO8H,UAAW,GAC3BH,YAAY3H,EAAO2H,aAED,SAAnB3H,EAAOuE,QAAoB,CAC7B,GAAMkkG,GAAYxnG,EAAGsJ,WAAWvK,EAAO4H,YACvChI,GAAM0J,MAAMmF,WAAWg6F,OAEvB7oG,GAAM0J,MAAM+E,WAAWtM,EAAOsE,OAAOmI,SAAS4B,OAAO,SAAC5L,EAAGoM,GAAJ,QAAYA,EAAI5Q,EAAO6H,YAG9EjI,GAAM2J,MAAQtI,EAAGoJ,SAAStI,EAAOmH,QAC5BoF,MAAMtO,EAAO+H,QACb0I,UAAUzQ,EAAO8H,YACjBH,YAAY3H,EAAO2H,aACnB8G,WAAWxN,EAAGuJ,OAAOxK,EAAOiI,cAE7BlG,EAAOqH,gBACTxJ,EAAM4J,OAASvI,EAAGqJ,UAAUvI,EAAOoH,SAC9BmF,MAAMtO,EAAO+H,QACb0I,UAAUzQ,EAAO8H,YACjBH,YAAY3H,EAAO2H,aACnB8G,WAAWxN,EAAGuJ,OAAOxK,EAAOiI,eAIrC,QAAS9F,KAwBP,MAvBAxC,KACA6oG,IAEA5oG,EAAMkB,IAAII,OAAO,WACZI,KAAK,YADV,gBACuC1B,EAAMe,YAD7C,KAEKnE,KAAKoD,EAAM0J,OAEhB1J,EAAMkB,IAAII,OAAO,WACZI,KAAK,YADV,cACqCtB,EAAO0H,aAAajH,KADzD,QAEKmF,aACAC,SAAS7F,EAAOoI,wBAChBrC,KAAK/F,EAAO+F,MACZvJ,KAAKoD,EAAM2J,OAEZxH,EAAOqH,eACTxJ,EAAMkB,IAAII,OAAO,YACZI,KAAK,YADV,cACoC1B,EAAMW,WAAaP,EAAO0H,aAAahH,OAD3E,QAEKkF,aACAC,SAAS7F,EAAOoI,wBAChBrC,KAAK/F,EAAO+F,MACZvJ,KAAKoD,EAAM4J,QAGXvN,KAGT,QAASmG,KAcP,MAbAxC,GAAMkB,IAAII,OAAO,YACdyO,KAAK3P,EAAOsI,QACZhH,KAAK,cAAe,UACpBA,KAAK,YAAa,WACjB,GAAMonG,GAAazsG,KAAK0sG,UAAUtoG,MAClC,qBAAqBqoG,EAAY1oG,EAAOK,OAAS,GAAjD,kBAGJT,EAAMkB,IAAII,OAAO,YACdyO,KAAK3P,EAAOqI,QACZ/G,KAAK,cAAe,UACpBA,KAAK,YAHR,cAGmCtB,EAAOC,MAAQ,EAAGD,EAAOK,QAH5D,KAKOpE,KAGT,QAASoG,KAuCP,MAtCoB,eAAhBrC,EAAOmI,MAAyC,SAAhBnI,EAAOmI,OACzCvI,EAAMgpG,oBAAsBhpG,EAAMkB,IAAII,OAAO,qBACxCiO,UAAU,6BACVzL,KAAK3B,EAAOmH,OAAOoF,MAAMtO,EAAO+H,SAErCnI,EAAMgpG,oBAAoBn5F,QACvBC,OAAO,QACPpO,KAAK,QAAS,wBACdsJ,MAAMhL,EAAMgpG,qBACZhjG,aACAC,SAAS7F,EAAOoI,wBAChB9G,KAAK,MAAQtB,EAAO0H,aAAajH,MACjCa,KAAK,KAAM1B,EAAMW,YACjBe,KAAK,KAAMS,EAAOmH,QAClB5H,KAAK,KAAMS,EAAOmH,QAErBtJ,EAAMgpG,oBAAoBr5F,OAAOvJ,UAGf,aAAhBhG,EAAOmI,MAAuC,SAAhBnI,EAAOmI,OACvCvI,EAAMipG,kBAAoBjpG,EAAMkB,IAAII,OAAO,qBACtCiO,UAAU,2BACVzL,KAAK9D,EAAM0J,MAAM+E,cAEtBzO,EAAMipG,kBAAkBp5F,QACrBC,OAAO,QACPpO,KAAK,QAAS,sBACdsJ,MAAMhL,EAAMipG,mBACZjjG,aACAC,SAAS7F,EAAOoI,wBAChB9G,KAAK,KAAM,GACXA,KAAK,KAAM1B,EAAMe,aACjBW,KAAK,KAAMS,EAAOsE,QAClB/E,KAAK,KAAMS,EAAOsE,QAErBzG,EAAMipG,kBAAkBt5F,OAAOvJ,UAG1B/J,KAGT,QAAS4F,GAAWqF,GAElB,MADAlH,IAAS,EAAA2D,EAAAwD,UAASnH,EAAQkH,GACnBjL,KAGT,QAASiG,GAAW6lG,GAElB,MADAhmG,IAAS,EAAA4B,EAAAwD,UAASpF,EAAQgmG,GACnB9rG,KAlLT,GAAI+D,IACFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAERR,MAAO,IACPI,OAAQ,IACRyH,UAAW,KACXH,YAAa,KACbC,YAAa,KACbrD,QAAS,KACTwD,OAAQ,KACRE,YAAa,KACbP,aAAc,KACdU,uBAAwB,KACxBrC,KAAM,KACNuC,OAAQ,KACRD,OAAQ,KACRF,KAAM,MAGJpG,GACFsE,OAAQ,KACR6C,OAAQ,KACRC,QAAS,KACTC,cAAe,MAGXxJ,GACJM,UAAWT,EACXkB,YAAa,KACbJ,WAAY,KACZ+I,MAAO,KACPC,MAAO,KACPC,OAAQ,KACRo/F,oBAAqB,KACrBC,kBAAmB,KA+IrB,QACEhnG,YACAK,YACAC,WACAC,iBACAC,iBdkgkBHrF,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QcjskBewrG,CAJxB,IAAA3+F,GAAAzN,EAAA,GAAY8E,EdyskBF7B,EAAwBwK,GcvskBlCjG,EAAAxH,EAAA,Id81kBM,SAAUL,EAAQD,EAASM,GAEhC,YAkBA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,Ee/2kBpP,QAASzB,GAAS6B,GA8D/B,QAASE,KAEFC,EAAMkB,MACTlB,EAAMkB,IAAMlB,EAAMM,UAAUwP,OAAO,KAC9B6qD,QAAQ,iBAAiB,GAE9B36D,EAAMkpG,kBAAoBlpG,EAAMkB,IAAI4O,OAAO,QACtC6qD,QAAQ,0BAA0B,GAEvC36D,EAAMmpG,aAAenpG,EAAMkB,IAAI4O,OAAO,QACjC6qD,QAAQ,iBAAiB,GACzBj5D,KAAK,oBAAqB,WAE/B1B,EAAMopG,eAAiBppG,EAAMkB,IAAI4O,OAAO,QACnC6qD,QAAQ,mBAAmB,GAEhC36D,EAAMqpG,YAAcrpG,EAAMkB,IAAI4O,OAAO,KAChC6qD,QAAQ,gBAAgB,GAE7B2uC,EAAQ,OAAQ,QAChBC,KAGFvpG,EAAMW,WAAaP,EAAOC,MAAQD,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MACrEd,EAAMe,YAAcX,EAAOK,OAASL,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,OAEtEjB,EAAMkpG,kBAAkBxnG,KAAK,KAAMtB,EAAO0I,qBACrCpH,KAAK,KAAMtB,EAAO0I,qBAEvB9I,EAAMmpG,aAAaznG,KAAK,KAAMtB,EAAO+wC,SAChCzvC,KAAK,KAAMtB,EAAO+wC,SAGzB,QAASq4D,GAA0BljG,GACjC,GAAMmjG,GAAWnjG,EAAUlG,EAAOQ,OAAOC,KACrCoN,EAAS,EACPy7F,EAAWtpG,EAAOQ,OAAOI,GAM/B,OAJIsF,GAAWtG,EAAMW,WAAa,IAChCsN,GAAU7N,EAAO+I,eAGXsgG,EAAWx7F,EAAQy7F,GAG7B,QAASC,GAAaC,GAAY,GAAAC,GACHL,EAAyBI,GADtBE,EAAAC,EAAAF,EAAA,GACzBJ,EADyBK,EAAA,GACfJ,EADeI,EAAA,EAQhC,OALA9pG,GAAMkB,IAAI8E,aACPC,SAAS7F,EAAO2I,oBAChB5C,KAAK/F,EAAO4I,aACZtH,KAAK,YAHR,aAGkC+nG,EAHlC,KAG+CC,EAH/C,KAKOrtG,KAGT,QAASitG,GAASU,EAAQC,GACxB,GAAIxpG,GAASwpG,CACG,UAAZA,IACFxpG,EAAST,EAAMqpG,YAAYj0F,OAAO+hD,wBAAwB12D,OAASL,EAAO8pG,YAAc9pG,EAAO+wC,QAEjG,IAAI9wC,GAAQ2pG,CAYZ,OAXe,SAAXA,IACF3pG,EAAQL,EAAMqpG,YAAYj0F,OAAO+hD,wBAAwB92D,MAAyB,EAAjBD,EAAO+wC,SAG1EnxC,EAAMkpG,kBAAkBxnG,KAAK,QAASrB,GACnCqB,KAAK,SAAUjB,GAElBT,EAAMopG,eAAe1nG,KAAK,KAAMrB,GAC7BqB,KAAK,KAAMtB,EAAO8pG,aAClBxoG,KAAK,KAAMtB,EAAO8pG,aAEd7tG,KAGT,QAAS8tG,GAAkBC,GACzB,GAAMC,GAAcrqG,EAAMqpG,YAAY95F,UAAU,sBAC3CzL,KAAKsmG,EACVC,GAAYx6F,QAAQC,OAAO,QACxB6qD,QAAQ,qBAAqB,GAC7Bj5D,KAAK,oBAAqB,WAC1BA,KAAK,KAAMtB,EAAO+wC,SAClBzvC,KAAK,KAAuB,EAAjBtB,EAAO+wC,QAAc/wC,EAAOuI,WACvCqC,MAAMq/F,GACN3oG,KAAK,IAAK,SAACkD,EAAGoM,GAAJ,MAAUA,GAAI5Q,EAAOkqG,cAAgBlqG,EAAO8pG,cACtDn6F,KAAK,SAACnL,GAAD,MAAOA,GAAEX,EAAAC,KAAKgB,SACtBmlG,EAAY16F,OAAOvJ,QAEnB,IAAMV,GAAS0kG,EAAQ3kG,IAAI8kG,GACrBC,EAAexqG,EAAMqpG,YAAY95F,UAAU,uBAC5CzL,KAAK4B,EACV8kG,GAAa36F,QAAQC,OAAO,QACzB6qD,QAAQ,sBAAsB,GAC9Bj5D,KAAK,cAAe,OACpBA,KAAK,oBAAqB,WAC1BA,KAAK,KAAMtB,EAAO+wC,SAClBzvC,KAAK,MAAOtB,EAAO+wC,SACnBnmC,MAAMw/F,GACN9oG,KAAK,IAAKtB,EAAO+I,cACjBzH,KAAK,IAAK,SAACkD,EAAGoM,GAAJ,MAAUA,GAAI5Q,EAAOkqG,cAAgBlqG,EAAO8pG,cACtDn6F,KAAK,SAACnL,GAAD,MAAOA,KACf4lG,EAAa76F,OAAOvJ,QAEpB,IAAMqkG,GAAiBzqG,EAAMqpG,YAAY95F,UAAU,mBAC9CzL,KAAKsmG,EACVK,GAAe56F,QAAQC,OAAO,UAC3B6qD,QAAQ,kBAAkB,GAC1B3vD,MAAMy/F,GACN/oG,KAAK,KAAMtB,EAAO+wC,QAAU/wC,EAAOuI,WACnCjH,KAAK,KAAM,SAACkD,EAAGoM,GAAJ,MAAUA,GAAI5Q,EAAOkqG,cAAgBlqG,EAAO8pG,YAAc9pG,EAAOkqG,cAAgB,IAC5F5oG,KAAK,IAAKtB,EAAOuI,WACjBnH,MAAM,OAAQ,SAACoD,GAAD,MAAOzC,GAAOsH,WAAW7E,EAAEX,EAAAC,KAAKkB,OACjDqlG,EAAe96F,OAAOvJ,SAGxB,QAASskG,GAAUC,GACjB,GAAI/J,GAAQ+J,CAOZ,OANuB,SAAnBvqG,EAAOuE,UACTi8F,EAAQv/F,EAAGsJ,WAAWvK,EAAOgJ,YAAYuhG,IAG3C3qG,EAAMmpG,aAAap5F,KAAK6wF,GAEjBvkG,KAGT,QAASkuG,GAAc1mG,GACrB,GAAMvG,GAAQuG,EAAMI,EAAAC,KAAKa,MACzB,IAAIzH,EAAO,CACT,GAAMurG,GAAYxnG,EAAGuJ,OAAOxK,EAAOwI,YACnC,OAAOigG,GAAUhlG,EAAMI,EAAAC,KAAKa,QAE5B,MAAO,MAIX,QAAS6lG,GAAYR,GACnB,GAAIr+C,GAASq+C,CAUb,OARIhqG,GAAOiJ,YAAYjG,OACrB2oD,EAAS8+C,EAAkBT,GAClBA,EAAQhnG,QAAUgnG,EAAQ,GAAGnmG,EAAAC,KAAKgB,SAC3C6mD,EAAS++C,EAAYV,IAGvBD,EAAiBp+C,GAEV1vD,KAGT,QAASwuG,GAAmBT,GAA+B,GAAtBW,GAAsB5nG,UAAAC,OAAA,GAAAlF,SAAAiF,UAAA,GAAAA,UAAA,GAAbkG,WAC5C,OAAO0hG,GAAOtlG,IAAI,SAACulG,GAAD,MAAeZ,GAAQ55F,OAAO,SAAAy6F,GAAA,GAAEx5F,GAAFw5F,EAAEx5F,IAAF,OAAYA,KAASu5F,IAAW,KAGlF,QAASF,GAAaV,GACpB,GAAMr+C,IAAS,EAAAhoD,EAAAC,WAAUomG,EACzB,OAAOr+C,GAAO3T,KAAK,SAAC7rC,EAAGC,GAAJ,MAAUD,GAAEtI,EAAAC,KAAKgB,OAAO2gG,cAAcr5F,EAAEvI,EAAAC,KAAKgB,OAAQ,MAAO4gG,SAAS,MAG1F,QAASyD,KACP,MAAKvpG,GAAMkB,KACXlB,EAAMkB,IAAIM,MAAM,UAAW,QAEpBnF,MAHkB,KAM3B,QAAS6uG,KACP,MAAKlrG,GAAMkB,KACXlB,EAAMkB,IAAIM,MAAM,UAAW,SAEpBnF,MAHkB,KAM3B,QAAS8uG,GAAaC,EAAYxB,GAQhC,MAPA7pG,KACA2qG,EAASU,EAAWnnG,EAAAC,KAAKW,OACzB+lG,EAAWQ,EAAWnnG,EAAAC,KAAKC,SAC3BmlG,EAAQlpG,EAAO+I,aAAc,QAC7BwgG,EAAYC,GACZsB,IAEO7uG,KAGT,QAASuG,GAAYyoG,GACnBA,EAAYroG,GAAG,oBAAqBkoG,GACjCloG,GAAG,oBAAqBmoG,GACxBnoG,GAAG,mBAAoBumG,GAG5B,QAAStnG,GAAWqF,GAElB,MADAlH,IAAS,EAAA2D,EAAAwD,UAASnH,EAAQkH,GACnBjL,KAGT,QAASiG,GAAW6lG,GAElB,MADAhmG,IAAS,EAAA4B,EAAAwD,UAASpF,EAAQgmG,GACnB9rG,KAGT,QAASmL,KACPxH,EAAMM,UAAU0C,GAAG,WAAY,MAC/BhD,EAAMkB,IAAIkF,SAvQZ,GAAIhG,IACFQ,QACEI,IAAK,EACLF,MAAO,EACPG,OAAQ,EACRJ,KAAM,GAERR,MAAO,IACPI,OAAQ,GAERmI,YAAa,MAEbC,sBAAuB,IACvBC,oBAAqB,EAGrBC,mBAAoB,GACpBC,YAAa3H,EAAG4H,cAEhBihG,YAAa,GACbI,cAAe,GACfn5D,QAAS,EACTxoC,UAAW,EAEXO,cAAe,GACfC,aAAc,IAEdC,WAAY,YACZC,eAGA1E,QAAS,QAGPxC,GACFsH,WAAY,MAGRzJ,GACJM,UAAWT,EACXqB,IAAK,KACLP,WAAY,KACZI,YAAa,KACbqoG,eAAgB,KAChBC,YAAa,KACbF,aAAc,KACdD,kBAAmB,KA4NrB,QACEtmG,aACA+mG,cACAL,UACAsB,aACAF,WACAnB,OACA2B,OACAC,cACAlpG,YACAK,YACAkF,WfwkkBHpK,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GAGT,IAAIysG,GAAiB,WAAc,QAASuB,GAAc/F,EAAKv0F,GAAK,GAAIu6F,MAAeC,GAAK,EAAUnhG,GAAK,EAAWohG,EAAKvtG,MAAW,KAAM,IAAK,GAAiCwtG,GAA7BC,EAAKpG,EAAIqG,OAAOC,cAAmBL,GAAME,EAAKC,EAAGl4E,QAAQq4E,QAAoBP,EAAKlmG,KAAKqmG,EAAGpuG,QAAY0T,GAAKu6F,EAAKnoG,SAAW4N,GAA3Dw6F,GAAK,IAAoE,MAAOO,GAAO1hG,GAAK,EAAMohG,EAAKM,EAAO,QAAU,KAAWP,GAAMG,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIthG,EAAI,KAAMohG,IAAQ,MAAOF,GAAQ,MAAO,UAAUhG,EAAKv0F,GAAK,GAAI1N,MAAMouB,QAAQ6zE,GAAQ,MAAOA,EAAY,IAAIqG,OAAOC,WAAYzuG,QAAOmoG,GAAQ,MAAO+F,GAAc/F,EAAKv0F,EAAa,MAAM,IAAIq3D,WAAU,2DAEtlBpsE,GAAQkB,Qer2kBea,CALxB,IAAAgM,GAAAzN,EAAA,GAAY8E,Ef82kBF7B,EAAwBwK,Ge52kBlC/F,EAAA1H,EAAA,GACAwH,EAAAxH,EAAA,IfkolBM,SAAUL,EAAQD,EAASM,GAEhC,YAWA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GgBhplBzE,QAASc,GAAQI,GAC9B,OAAO,EAAAG,EAAAnB,SAAQgB,GAAQ,GhBsolBxBf,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QgB1olBeY,CAFxB,IAAAM,GAAA9B,EAAA,IhBgplBK+B,EAAYtB,EAAuBqB,IAUlC,SAAUnC,EAAQD,EAASM,GAEhC,YAeA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EiBtqlBpP,QAAS/B,GAAOmC,GAgC7B,QAASE,KACPC,EAAMW,WAAaP,EAAOC,MAAQD,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MACrEd,EAAMe,YAAcX,EAAOK,OAASL,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,OAEjEjB,EAAMkB,MACTlB,EAAMkB,IAAMlB,EAAMM,UAAUwP,OAAO,KAC9B6qD,QAAQ,eAAe,IAG9B36D,EAAMkB,IAAIQ,KAAK,YAAf,aAAyCtB,EAAOQ,OAAOC,KAAvD,KAAgET,EAAOQ,OAAOI,IAA9E,KAGF,QAASgrG,GAAuBnoG,GAC9B,GAAM8wD,GAAStzD,EAAG2J,MAAMnH,EAAM4B,IAAI,SAACb,GAAD,MAAOA,GAAEX,EAAAC,KAAKO,UAChD,QAAO,EAAAV,EAAAW,UAASiwD,EAAQv0D,EAAOuE,SAGjC,QAASsnG,KACPjsG,EAAMqsB,MAAQrsB,EAAMqsB,OAAShrB,EAAG2K,SAC3BhJ,GAAG,QAASkpG,GACZlpG,GAAG,QAASmpG,GACZnpG,GAAG,MAAOopG,GAEfpsG,EAAMqsB,MAAMxhB,SAAS,EAAG,IAAK7K,EAAMW,WAAYX,EAAMe,eAErDf,EAAMqsG,WAAarsG,EAAMkB,IAAItE,KAAKoD,EAAMqsB,OAExCrsB,EAAMqsG,WAAW98F,UAAU,eACxB7N,KAAK,SAAU1B,EAAMe,aAG1B,QAASurG,KACP,GAAMj9F,GAAYhO,EAAG4J,MAAMoE,UACrBk9F,EAAal9F,EAAU5J,IAAI,SAACb,GAAD,OAAO,EAAAb,EAAAyC,aAAYpG,EAAOqG,OAAQ7B,EAAGxE,EAAOuE,UAC7E,OAAO4nG,GAGT,QAASL,KACPrpG,EAAWjG,KAAK,aAAcP,KAAMiwG,IAAiBlsG,GAGvD,QAAS+rG,KACPtpG,EAAWjG,KAAK,YAAaP,KAAMiwG,IAAiBlsG,GAGtD,QAASgsG,KAEP,GAAK/qG,EAAG4J,MAAMyJ,aAAgBrT,EAAG4J,MAAMoE,UAAvC,CAIA,GAAMk9F,GAAaD,GAEnBjrG,GAAGC,OAAOjF,MACP2J,aACApJ,KAAKyE,EAAG4J,MAAM8P,OAAO0S,KAAM8+E,EAAW9mG,IAAIrF,EAAOqG,SAEpD5D,EAAWjG,KAAK,WAAYP,KAAMkwG,EAAYnsG,IAGhD,QAAS2C,KAQP,MAPAhD,KAEI+D,EAAK7D,eACPD,EAAM8D,KAAOkoG,GAAsB,EAAAjoG,EAAAC,WAAUF,EAAK7D,eAClDgsG,KAGK5vG,KAgDT,QAAS2G,KACP,MAAOH,GAAWG,GAAXU,MAAAb,EAAAM,WAGT,QAASlB,GAAWqF,GAElB,MADAlH,IAAS,EAAA2D,EAAAwD,UAASnH,EAAQkH,GACnBjL,KAGT,QAAS6F,GAAS2B,GAEhB,MADAC,GAAO1G,OAAO0F,UAAWgB,EAAMD,GACxBxH,KAGT,QAASmL,KACPxH,EAAMkB,IAAIkF,SAjKZ,GAAIhG,IACFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAERR,MAAO,IACPI,OAAQ,IACRkE,QAAS,KACT8B,OAAQ,MAGJzG,GACJM,UAAWT,EACX2sG,WAAY,KAAM,MAClBngF,MAAO,KACPggF,WAAY,KACZ3/E,OAAQ,KACR/rB,WAAY,KACZI,YAAa,MAGX+C,GACF7D,aAAc,MAIV4C,EAAaxB,EAAG0I,SAAS,aAAc,YAAa,WAwI1D,QACE/G,KACAf,YACAC,UACAsF,UACAzE,ajB8+kBH3F,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QiB5plBeO,CALxB,IAAAsM,GAAAzN,EAAA,GAAY8E,EjBqqlBF7B,EAAwBwK,GiBnqlBlC/F,EAAA1H,EAAA,GACAwH,EAAAxH,EAAA,IjBu1lBM,SAAUL,EAAQD,EAASM,GAEhC,YAeA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EkBt2lBpP,QAAShC,GAAOoC,GA+C7B,QAASE,KACPC,EAAMW,WAAaP,EAAOC,MAAQD,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MACrEd,EAAMe,YAAcX,EAAOK,OAASL,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,OAEjEjB,EAAMkB,MACTlB,EAAMkB,IAAMlB,EAAMM,UAAUwP,OAAO,KAC9B6qD,QAAQ,eAAe,GACvBn5D,MAAM,iBAAkB,SAMjC,QAASirG,GAAWrB,EAAYsB,GAC9B3sG,IAEI2sG,IACFC,EAAmBD,GACnBE,IACyB,gBAArBxsG,EAAOqH,WACe,gBAArBrH,EAAOqH,WACc,eAArBrH,EAAOqH,UACVolG,EAA2BzB,GAE3B0B,EAAoB1B,GAEtBvoG,EAAWjG,KAAK,QAASP,KAAM+uG,IAInC,QAASF,KACP,MAAKlrG,GAAMkB,KACXlB,EAAMkB,IAAIM,MAAM,UAAW,SAEpBnF,MAHkB,KAM3B,QAASktG,KACP,MAAKvpG,GAAMkB,KACXlB,EAAMkB,IAAIM,MAAM,UAAW,QAEpBnF,MAHkB,KAM3B,QAASywG,GAAqB1B,GAC5B,GAAM2B,GAAW3B,EAAWnnG,EAAAC,KAAKC,OAEjC6oG,GAAwBD,GAG1B,QAASC,GAAyBC,GAChC,GAAMC,GAAOltG,EAAMkB,IAAIqO,UAAU,QAC5BzL,KAAKmpG,EAEVC,GAAKr9F,QACFC,OAAO,UACPpO,KAAK,QAAS,OACdsJ,MAAMkiG,GACNxrG,KAAK,KAAM,SAACkD,GAEX,MAAsB,KAAlBA,EAAEX,EAAAC,KAAKiB,OACFhD,EAAOmH,OAAO1E,EAAEX,EAAAC,KAAKa,QAErB5C,EAAOoH,QAAQ3E,EAAEX,EAAAC,KAAKa,UAGhCrD,KAAK,IAAKtB,EAAOuI,WACjBnH,MAAM,SAAU,QAChBA,MAAM,OAAQqmG,GAEjBqF,EAAKv9F,OAAOvJ,SAGd,QAASymG,GAA4BzB,GACnC,GAAM+B,IAAoBztG,IAAK0rG,EAAWnnG,EAAAC,KAAKW,MAC/CumG,GAAWr/C,OAAOxnD,QAAQ,SAACK,GACzB,GAAMlI,GAAKkI,EAAEX,EAAAC,KAAKkB,GAClB+nG,GAAiBzwG,GAAMkI,EAAEX,EAAAC,KAAKa,SAalC,QAAS6nG,KACP,GAAMQ,GAAqBptG,EAAMkB,IAAIqO,UAAU,QAC1CzL,MAAM,GAEXspG,GAAmBv9F,QAChBC,OAAO,QACP6qD,QAAQ,mBAAmB,GAC3B3vD,MAAMoiG,GACN1rG,KAAK,KAAM,GACXA,KAAK,KAAM1B,EAAMe,aAEpBqsG,EAAmBz9F,OAAOvJ,SAG5B,QAASumG,GAAoBU,GAC3BrtG,EAAMkB,IAAIQ,KAAK,YAAf,cAA0C2rG,EAA2BjtG,EAAOQ,OAAOC,KAAMT,EAAOQ,OAAOI,KAAvG,KAGF,QAAS4B,GAAYyoG,GACnBA,EAAYroG,GAAG,kBAAmBkoG,GAC/BloG,GAAG,kBAAmBypG,GACtBzpG,GAAG,iBAAkBumG,GAI1B,QAASvmG,KACP,MAAOH,GAAWG,GAAXU,MAAAb,EAAAM,WAGT,QAASlB,GAAWqF,GAElB,MADAlH,IAAS,EAAA2D,EAAAwD,UAASnH,EAAQkH,GACnBjL,KAGT,QAASiG,GAAW6lG,GAElB,MADAhmG,IAAS,EAAA4B,EAAAwD,UAASpF,EAAQgmG,GACnB9rG,KAGT,QAASmL,KACPxH,EAAMkB,IAAIkF,SA/KZ,GAAIhG,IACFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAERR,MAAO,IACPI,OAAQ,IACRkI,UAAW,MAGTxG,GACFmH,OAAQ,KACRC,QAAS,KACTC,cAAe,KACfC,WAAY,MAGRzJ,GACJM,UAAWT,EACXqB,IAAK,KACLP,WAAY,KACZI,YAAa,KACbyrG,WAAY,KAAM,MAClBngF,MAAO,KACPggF,WAAY,KACZ3/E,OAAQ,KACR5oB,KAAM,MAIFjB,EAAaxB,EAAG0I,SAAS,SAWzB89F,EAAW,SAACjjG,GAAD,MAAOzC,GAAOsH,WAAW7E,EAAEX,EAAAC,KAAKkB,KAuIjD,QACEnD,YACAK,YACAM,aACAkqG,sBACAD,6BACAD,qBACAD,qBACA3pG,KACAwE,WlB4plBHpK,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QkB51lBeM,CALxB,IAAAuM,GAAAzN,EAAA,GAAY8E,ElBq2lBF7B,EAAwBwK,GkBn2lBlC/F,EAAA1H,EAAA,GACAwH,EAAAxH,EAAA,IlB6hmBM,SAAUL,EAAQD,EAASM,GAEhC,YAaA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EmB3imBpP,QAAS7B,GAASO,GA0B/B,QAAS2B,KACPC,IAIF,QAASA,KACPutG,EAAattG,EAAMutG,MAAMC,WACzBvrG,EAAUjC,EAAMutG,MAAME,aAEjBztG,EAAMkB,MACTlB,EAAMkB,IAAMosG,EAAWpsG,IAAI4O,OAAO,KAC7B6qD,QAAQ,iBAAiB,GACzB7qD,OAAO,QAEZ9P,EAAMkB,IAAI4O,OAAO,SACdC,KAAK3P,EAAOstG,OACZhsG,KAAK,IAAK,OACVA,KAAK,QAAS,SAGnB1B,EAAMkB,IAAIQ,KAAK,YAAf,cAA0CtB,EAAOQ,OAAOC,KAAM,GAA9D,IAEA,IAAM8sG,GAAQ3tG,EAAMkB,IAAIqO,UAAU,gBAC7BzL,KAAK1D,EAAOwtG,OACjBD,GAAM99F,QAAQC,OAAO,SAClBpO,KAAK,QAAS,SAACkD,GAAD,cAAeA,EAAf,iBACdlD,KAAK,KAAM,SACXA,KAAK,IAAK,OACVsB,GAAG,gBAAgB,EAAA3D,EAAAwuG,aAAY,qCAC/B7qG,GAAG,oBAAqB,SAAgB4B,GACvC,GAAMkpG,GAAazxG,KAAKmb,UAAUwiD,SAAS,WAC3Cn3D,GAAWjG,KAAK,SAAUP,KAAMuI,GAAIkpG,iBAErC9iG,MAAM2iG,GACN59F,KAAK,SAACnL,GAAD,MAAOA,KACf+oG,EAAMh+F,OAAOvJ;AAEb,GAAM2nG,GAAiB/tG,EAAMkB,IAAIqO,UAAU,oBACtCzL,KAAK1D,EAAO4tG,gBACjBD,GAAel+F,QAAQC,OAAO,SAC3BpO,KAAK,QAAS,SAACkD,GAAD,cAAeA,EAAf,qBACdlD,KAAK,KAAM,SACXA,KAAK,IAAK,OACVsB,GAAG,gBAAgB,EAAA3D,EAAA2uG,iBAAgB,yCACnChrG,GAAG,oBAAqB,SAAgB4B,GACvC,GAAMkpG,GAAazxG,KAAKmb,UAAUwiD,SAAS,WAC3Cn3D,GAAWjG,KAAK,SAAUP,KAAMuI,GAAIkpG,iBAErC9iG,MAAM+iG,GACNh+F,KAAK,SAACnL,GAAD,MAAOA,KACfmpG,EAAep+F,OAAOvJ,SAGxB,QAASpD,KACP,MAAOH,GAAWG,GAAXU,MAAAb,EAAAM,WAGT,QAASlB,GAAWqF,GAElB,MADAlH,GAAShD,OAAO0F,UAAW1C,EAAQkH,GAC5BjL,KAGT,QAASmxG,KACP,MAAOxtG,GAGT,QAASwH,KACPxH,EAAMkB,IAAIkF,SAGZ,QAAS+O,KAEP,MADArV,KACOzD,KAhGT,GAAI+D,IACFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAER+sG,QAAS,QACTI,iBAAkB,KAAM,KAAM,MAAO,MACrCN,MAAO,QAGH1tG,GACJutG,MAAOpvG,EACP+C,IAAK,MAGHosG,GACFpsG,IAAK,MAID2B,EAAaxB,EAAG0I,SAAS,SA6E/B,OAxEAjK,MAyEE0tG,WACAxqG,KACAf,YACAuF,UACA2N,UnBs7lBH/X,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QmBnimBeS,CAJxB,IAAAoM,GAAAzN,EAAA,GAAY8E,EnB2imBF7B,EAAwBwK,GmBzimBlC3K,EAAA9C,EAAA,KnBipmBM,SAAUL,EAAQD,EAASM,GAEhC,YAYA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EoBtpmB5P,QAASouG,GAAa/3C,GAC3B,MAAOk4C,GAAgBl4C,GACrBm4C,oBAAoB,EACpBC,yBAAyB,IAItB,QAASF,GAAiBl4C,GAAiF,GAAvEq4C,GAAuEhrG,UAAAC,OAAA,GAAAlF,SAAAiF,UAAA,GAAAA,UAAA,IAA5D8qG,oBAAoB,EAAOC,yBAAyB,EAExG,OAAO,YAEL,GAAM15F,GAAOnY,KACT+xG,GAAe,EACb/+F,EAAYhO,EAAGC,OAAOjF,KAAKgyG,yBAC5B9+F,UAAUumD,EAEfzmD,GAAUsrD,QAAQ,WAAY,WAC5B,GAAMmzC,GAAazxG,KAAKmb,UAAUwiD,SAAS,YACrCs0C,EAAqBjyG,OAASmY,EAChC+5F,GAAmB,CASvB,OANEA,GADED,GACiBH,EAAQF,qBAAsBH,IAE9BK,EAAQD,yBAA0BJ,EAGvDM,EAAeA,GAAgBG,EACxBA,IAETl/F,EAAUsrD,QAAQ,SAAU,WAC1B,MAAOyzC,KAAiB/xG,KAAKmb,UAAUwiD,SAAS,epB6mmBrD58D,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EoB/omBe4xG,cpBgpmBf5xG,EoBzomBe+xG,iBAlBhB,IAAAhkG,GAAAzN,EAAA,GAAY8E,EpB+pmBF7B,EAAwBwK,IAqD5B,SAAU9N,EAAQD,EAASM,GAEhC,YAaA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EqB/tmBpP,QAAS9B,GAAcQ,GA8BpC,QAAS2B,KACPC,IAIF,QAASA,KAOP,GANAutG,EAAattG,EAAMutG,MAAMC,WACzBvrG,EAAUjC,EAAMutG,MAAME,aAEtBztG,EAAMW,WAAaP,EAAOC,MAAQD,EAAOQ,OAAOC,KAAOT,EAAOQ,OAAOE,MACrEd,EAAMe,YAAcX,EAAOK,OAASL,EAAOQ,OAAOI,IAAMZ,EAAOQ,OAAOK,QAEjEjB,EAAMkB,IAAK,CACdlB,EAAMkB,IAAMosG,EAAWpsG,IAAI4O,OAAO,KAC7B6qD,QAAQ,uBAAuB,GAEpC36D,EAAMwuG,UAAYntG,EAAGC,OAAOtB,EAAMkB,IAAIkU,OAAOuW,gBAAgBrb,YAC7DtQ,EAAMwuG,UAAU1+F,OAAO,SACpBpO,KAAK,QAAS,sBACdF,MAAM,WAAY,YAClBA,MAAM,MAAUpB,EAAOQ,OAAOI,IAHjC,MAIGQ,MAAM,OAAWpB,EAAOQ,OAAOC,KAAOT,EAAOsnC,KAAKvnC,EAJrD,MAKGqB,MAAM,QAAYpB,EAAOsnC,KAAKvnC,EALjC,MAMGqB,MAAM,SAAapB,EAAOsnC,KAAKlnC,EANlC,MAQAR,EAAMwuG,UAAU1+F,OAAO,SACpBpO,KAAK,QAAS,sBACdF,MAAM,WAAY,YAClBA,MAAM,MAAUpB,EAAOQ,OAAOI,IAAMhB,EAAMe,YAAcX,EAAOsnC,KAAKlnC,EAHvE,MAIGgB,MAAM,OAAWpB,EAAOQ,OAAOC,KAAOT,EAAOsnC,KAAKvnC,EAJrD,MAKGqB,MAAM,QAAYpB,EAAOsnC,KAAKvnC,EALjC,KAOA,IAAMsuG,GAAW,EACjBzuG,GAAMwuG,UAAU1+F,OAAO,OACpBpO,KAAK,QAAS,eACdF,MAAM,WAAY,YAClBA,MAAM,QAAYitG,EAHrB,MAIGjtG,MAAM,SAAaitG,EAJtB,MAKGjtG,MAAM,MAAUpB,EAAOQ,OAAOI,IAAMytG,EALvC,MAMGjtG,MAAM,OAAWpB,EAAOQ,OAAOC,KAAO4tG,EANzC,MAeAzuG,EAAMutG,MAAMvqG,GAAG,aAAc,SAAC4B,GAAD,MAAOpB,SAAQC,IAAImB,MAIpD,QAAS5B,KACP,MAAOH,GAAWG,GAAXU,MAAAb,EAAAM,WAGT,QAASlB,GAAWqF,GAElB,MADAlH,GAAShD,OAAO0F,UAAW1C,EAAQkH,GAC5BjL,KAGT,QAASmxG,KACP,MAAOxtG,GAGT,QAASwH,KACPxH,EAAMkB,IAAIkF,SAGZ,QAAS+O,KAEP,MADArV,KACOzD,KAnGT,GAAI+D,IACFQ,QACEI,IAAK,GACLF,MAAO,GACPG,OAAQ,GACRJ,KAAM,IAERR,MAAO,IACPI,OAAQ,IACR0O,UAAW/C,EAAG,EAAG0B,EAAG,GACpB45B,MAAOlnC,EAAG,GAAIL,EAAG,KAGbH,GACJutG,MAAOpvG,EACP+C,IAAK,KACLstG,UAAW,KACX7tG,WAAY,KACZI,YAAa,MAGXusG,GACFpsG,IAAK,MAID2B,EAAaxB,EAAG0I,SAAS,aAAc,gBA4E7C,OAvEAjK,MAwEE0tG,WACAxqG,KACAf,YACAuF,UACA2N,UrBummBH/X,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QqBvtmBeQ,CAJxB,IAAAqM,GAAAzN,EAAA,GAAY8E,ErB+tmBF7B,EAAwBwK,EqB7tmBlCzN,GAAA,KrBo0mBM,SAAUL,EAAQD,EAASM,GAEhC,YAiDA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EAElQ,QAAS6lG,GAAmBC,GAAO,GAAIjiG,MAAMouB,QAAQ6zE,GAAM,CAAE,IAAK,GAAIv0F,GAAI,EAAGw0F,EAAOliG,MAAMiiG,EAAIniG,QAAS4N,EAAIu0F,EAAIniG,OAAQ4N,IAAOw0F,EAAKx0F,GAAKu0F,EAAIv0F,EAAM,OAAOw0F,GAAe,MAAOliG,OAAMg8B,KAAKimE,GsBr3mB5K,QAASznG,KActB,QAAS4wG,GAAsBC,GAC7B,MAAO7hG,MAAKohC,SAASn7B,SAAS,IAAIuuC,QAAQ,cAAe,IAAIstD,OAAO,EAAGD,GAAW,GAGpF,QAASE,GAAgBC,EAAWC,EAAQC,GAC1C,GAAI1xG,GAAQ+D,EAAG6J,cAAHxH,MAAArC,EAAAikG,EAAoByJ,MAC1BE,EAAmB,GACnBC,GAAsBH,EAAO,GAAKA,EAAO,IAAME,EAC/CE,EAAM9tG,EAAG8J,aAAa,EAAG,EAC/B,OAAO2jG,GAAUrpG,IAAI,SAACb,GAKpB,MAJAtH,IAAgB6xG,IAAQD,GACnBF,GAAkB1xG,EAAQ4xG,IAC7B5xG,GAAgB4xG,IAGhB5xG,QACAoC,IAAwB,SAAnBU,EAAOuE,QAAqBC,EAAEm+C,cAAgBn+C,KAKzD,QAASwqG,KACP,GAAIC,GAAW,IACQ,UAAnBjvG,EAAOuE,SACT3E,EAAMsvG,SAAW,GAAIxqG,MACrBuqG,EAAWhuG,EAAG+J,QAAQL,MAAM1J,EAAGgK,UAAU4B,MAAMjN,EAAMsvG,UAAWjuG,EAAGgK,UAAUg4B,KAAKrjC,EAAMsvG,YAC5D,WAAnBlvG,EAAOuE,SAChB0qG,EAAWhuG,EAAG0J,MAAM,EAAG3K,EAAOmvG,YAAY9pG,IAAI,iBAAMipG,OACpDW,EAASj3D,KAAK,SAAC7rC,EAAGC,GAAJ,MAAUD,GAAEs5F,cAAcr5F,EAAG,MAAOs5F,SAAS,OAC/B,WAAnB1lG,EAAOuE,UAChB0qG,EAAWhuG,EAAG0J,MAAM,EAAG3K,EAAOmvG,YAAY9pG,IAAI,SAACb,EAAGoM,GAAJ,MAAUA,KAG1D,IAAM+6C,GAAS1qD,EAAG0J,MAAM3K,EAAOovG,WAAW/pG,IAAI,SAACb,GAAD,OAC5C8oG,eAAgB9oG,EAChBlI,GAAIkI,EACJuO,MAAOvO,EAAIxE,EAAOqvG,WAAa7qG,EAAI,EACnCc,OAAQmpG,EAAeQ,EAAUjvG,EAAO2K,SAO1C,OAJA/K,GAAM8D,MAAQioD,UAIP/rD,EAAM8D,KAGf,QAAS4rG,GAAalJ,GACpB,GAAM1iG,IAAO,EAAAC,EAAAC,WAAUhE,EAAM8D,KAU7B,OARAA,GAAKG,EAAAC,KAAKC,QAAQI,QAAQ,SAACwnD,GACzB,GAAMrmD,GAASqmD,EAAO9nD,EAAAC,KAAKO,QACrBqiG,EAAUphG,EAAOD,IAAI,SAAAb,GAAA,MAAKA,GAAEX,EAAAC,KAAKW,QACjC8qG,EAAiB7I,EAAQp1F,QAAQ80F,EAAQ,IACzCoJ,EAAiB9I,EAAQp1F,QAAQ80F,EAAQ,GAC/Cz6C,GAAO9nD,EAAAC,KAAKO,QAAUsnD,EAAO9nD,EAAAC,KAAKO,QAAQmM,MAAM++F,EAAgBC,KAG3D9rG,EAGT,QAAS+rG,GAAcC,GACrB,GAAMhsG,IAAO,EAAAC,EAAAC,WAAUhE,EAAM8D,KAU7B,OARAA,GAAKG,EAAAC,KAAKC,QAAQI,QAAQ,SAACwnD,GACzBA,EAAO9nD,EAAAC,KAAKO,QAAUsnD,EAAO9nD,EAAAC,KAAKO,QAAQ+L,OAAO,SAAC5L,GAChD,GAAMmrG,GAAQ,GAAIjrG,MAAKF,EAAEX,EAAAC,KAAKW,OAAO+gG,SACrC,OAAOmK,IAASD,EAAY,GAAGlK,WAC1BmK,GAASD,EAAY,GAAGlK,cAI1B9hG,EAGT,QAAS7B,GAAWqF,GAElB,MADAlH,GAAShD,OAAO0F,UAAW1C,EAAQkH,GAC5BjL,KAzFT,GAAI+D,IACFuE,QAAS,SACToG,OAAQ,EAAG,KACXwkG,WAAY,IACZE,WAAY,EACZD,UAAW,GAEPxvG,GACJ8D,KAAM,KACNwrG,SAAU,KAmFZ,QACEF,sBACAP,iBACAgB,eACAH,cACAztG,atBiumBH7E,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQ+O,MAAQ/O,EAAQ8O,MAAQ9O,EAAQ6O,IAAM7O,EAAQ4O,OAAS5O,EAAQ0K,SAAWzI,MAElF,IAAI8xG,GAAWzzG,EAAoB,GAEnCa,QAAOC,eAAepB,EAAS,YAC7BqO,YAAY,EACZC,IAAK,WACH,MAAOylG,GsBn1mBJrpG,YtBs1mBPvJ,OAAOC,eAAepB,EAAS,UAC7BqO,YAAY,EACZC,IAAK,WACH,MAAOylG,GsBz1mBMnlG,UtB41mBjBzN,OAAOC,eAAepB,EAAS,OAC7BqO,YAAY,EACZC,IAAK,WACH,MAAOylG,GsB/1mBcllG,OtBk2mBzB1N,OAAOC,eAAepB,EAAS,SAC7BqO,YAAY,EACZC,IAAK,WACH,MAAOylG,GsBr2mBmBjlG,StBw2mB9B3N,OAAOC,eAAepB,EAAS,SAC7BqO,YAAY,EACZC,IAAK,WACH,MAAOylG,GsB32mB0BhlG,StB82mBrC/O,EAAQkB,QsBz2mBeW,CANxB,IAAAkM,GAAAzN,EAAA,GAAY8E,EtBm3mBF7B,EAAwBwK,GsBh3mBlC/F,EAAA1H,EAAA,GACAwH,EAAAxH,EAAA,ItB2+mBM,SAAUL,EAAQD,EAASM,IuB9+mBjC,SAAA0P,EAAAjQ,GACAA,EAAAC,IAGCI,KAAA,SAAAJ,GAA4B,YAgC7B,SAAAiQ,GAAAC,GACA,gBAAAvH,EAAAwH,GACA,MAAAC,GAAAF,EAAAvH,GAAAwH,IAeA,QAAAE,GAAAC,EAAAC,GACA,OAAAD,EAAAC,GAwKA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,GAAAC,IAAAF,EAAAD,GAAAI,KAAAC,IAAA,EAAAH,GACAI,EAAAF,KAAAG,MAAAH,KAAArJ,IAAAoJ,GAAAC,KAAAI,MACAC,EAAAN,EAAAC,KAAAM,IAAA,GAAAJ,EACA,OAAAA,IAAA,GACAG,GAAAE,EAAA,GAAAF,GAAAG,EAAA,EAAAH,GAAAI,EAAA,KAAAT,KAAAM,IAAA,GAAAJ,IACAF,KAAAM,IAAA,IAAAJ,IAAAG,GAAAE,EAAA,GAAAF,GAAAG,EAAA,EAAAH,GAAAI,EAAA,KAGA,QAAAC,GAAAd,EAAAC,EAAAC,GACA,GAAAa,GAAAX,KAAAY,IAAAf,EAAAD,GAAAI,KAAAC,IAAA,EAAAH,GACAe,EAAAb,KAAAM,IAAA,GAAAN,KAAAG,MAAAH,KAAArJ,IAAAgK,GAAAX,KAAAI,OACAC,EAAAM,EAAAE,CAIA,OAHAR,IAAAE,EAAAM,GAAA,GACAR,GAAAG,EAAAK,GAAA,EACAR,GAAAI,IAAAI,GAAA,GACAhB,EAAAD,GAAAiB,IAoTA,QAAAvK,GAAAwB,GACA,MAAAA,GAAAxB,OA7hBA,GAAAiJ,GAAA,SAAAE,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAqJ,KAGAlP,EAAA,SAAA6pB,GAEA,MADA,KAAAA,EAAAptB,SAAAotB,EAAAtkB,EAAAskB,KAEA3vB,KAAA,SAAA0L,EAAAH,EAAA+5C,EAAA8M,GAGA,IAFA,MAAA9M,MAAA,GACA,MAAA8M,MAAA1mD,EAAAnJ,QACA+iD,EAAA8M,GAAA,CACA,GAAAC,GAAA/M,EAAA8M,IAAA,CACAziC,GAAAjkB,EAAA2mD,GAAA9mD,GAAA,EAAA+5C,EAAA+M,EAAA,EACAD,EAAAC,EAEA,MAAA/M,IAEArlD,MAAA,SAAAyL,EAAAH,EAAA+5C,EAAA8M,GAGA,IAFA,MAAA9M,MAAA,GACA,MAAA8M,MAAA1mD,EAAAnJ,QACA+iD,EAAA8M,GAAA,CACA,GAAAC,GAAA/M,EAAA8M,IAAA,CACAziC,GAAAjkB,EAAA2mD,GAAA9mD,GAAA,EAAA6mD,EAAAC,EACA/M,EAAA+M,EAAA,EAEA,MAAA/M,MAWAgN,EAAAxsD,EAAA0F,GACAiqC,EAAA6c,EAAAryD,MACA4F,EAAAysD,EAAAtyD,KAEAuyD,EAAA,SAAA30B,EAAAtyB,GACA,MAAAA,MAAAG,EAEA,KADA,GAAA0E,GAAA,EAAAC,EAAAwtB,EAAAr7B,OAAA,EAAArG,EAAA0hC,EAAA,GAAA20B,EAAA,GAAA9vD,OAAA2N,EAAA,IAAAA,GACAD,EAAAC,GAAAmiD,EAAApiD,GAAA7E,EAAApP,IAAA0hC,IAAAztB,GACA,OAAAoiD,IAOAC,EAAA,SAAAC,EAAAC,EAAA1mB,GACA,GAGAmG,GACAC,EACAjiC,EACAwW,EANA8G,EAAAglC,EAAAlwD,OACAqrB,EAAA8kC,EAAAnwD,OACAsC,EAAA,GAAApC,OAAAgrB,EAAAG,EAQA,KAFA,MAAAoe,MAAAvgC,GAEA0mC,EAAAhiC,EAAA,EAAkBgiC,EAAA1kB,IAAS0kB,EAC3B,IAAAxrB,EAAA8rC,EAAAtgB,GAAAC,EAAA,EAAsCA,EAAAxkB,IAASwkB,IAAAjiC,EAC/CtL,EAAAsL,GAAA67B,EAAArlB,EAAA+rC,EAAAtgB,GAIA,OAAAvtC,IAGA8tD,EAAA,SAAAjnD,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAsJ,KAGA49C,EAAA,SAAArnD,GACA,cAAAA,EAAAyJ,KAAAzJ,GAGAsnD,EAAA,SAAAhuD,EAAAiuD,GACA,GAIAr2D,GACA08B,EALA/oB,EAAAvL,EAAAtC,OACAvG,EAAA,EACAmU,GAAA,EACA4iD,EAAA,EAGA9oD,EAAA,CAEA,UAAA6oD,EACA,OAAA3iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,EAAA/tD,EAAAsL,OACAgpB,EAAA18B,EAAAs2D,EACAA,GAAA55B,IAAAn9B,EACAiO,GAAAkvB,GAAA18B,EAAAs2D,QAMA,QAAA5iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,EAAAE,EAAAjuD,EAAAsL,KAAAtL,OACAs0B,EAAA18B,EAAAs2D,EACAA,GAAA55B,IAAAn9B,EACAiO,GAAAkvB,GAAA18B,EAAAs2D,GAKA,IAAA/2D,EAAA,QAAAiO,IAAAjO,EAAA,IAGAg3D,EAAA,SAAAp1B,EAAAtyB,GACA,GAAAoK,GAAAm9C,EAAAj1B,EAAAtyB,EACA,OAAAoK,GAAAzJ,KAAAqS,KAAA5I,MAGA1L,EAAA,SAAAnF,EAAAiuD,GACA,GAEAr2D,GACAkgB,EACAzQ,EAJAkE,EAAAvL,EAAAtC,OACA4N,GAAA,CAKA,UAAA2iD,GACA,OAAA3iD,EAAAC,GACA,UAAA3T,EAAAoI,EAAAsL,KAAA1T,KAEA,IADAkgB,EAAAzQ,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAoI,EAAAsL,MACAwM,EAAAlgB,IAAAkgB,EAAAlgB,GACAyP,EAAAzP,IAAAyP,EAAAzP,QAQA,QAAA0T,EAAAC,GACA,UAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,KAEA,IADAkgB,EAAAzQ,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,MACA8X,EAAAlgB,IAAAkgB,EAAAlgB,GACAyP,EAAAzP,IAAAyP,EAAAzP,GAOA,QAAAkgB,EAAAzQ,IAGA0xB,EAAAn7B,MAAA3D,UAEAiR,EAAA6tB,EAAA7tB,MACAnL,EAAAg5B,EAAAh5B,IAEAquD,EAAA,SAAA1nD,GACA,kBACA,MAAAA,KAIA2nD,EAAA,SAAA3nD,GACA,MAAAA,IAGArB,EAAA,SAAA2B,EAAAC,EAAAE,GACAH,KAAAC,KAAAE,GAAAoE,EAAA9N,UAAAC,QAAA,GAAAuJ,EAAAD,IAAA,KAAAuE,EAAA,KAAApE,CAMA,KAJA,GAAAmE,IAAA,EACAC,EAAA,EAAAnE,KAAAC,IAAA,EAAAD,KAAAu2B,MAAA12B,EAAAD,GAAAG,IACA9B,EAAA,GAAAzH,OAAA2N,KAEAD,EAAAC,GACAlG,EAAAiG,GAAAtE,EAAAsE,EAAAnE,CAGA,OAAA9B,IAGAsC,EAAAP,KAAAqS,KAAA,IACA7R,EAAAR,KAAAqS,KAAA,IACA5R,EAAAT,KAAAqS,KAAA,GAEAzQ,EAAA,SAAAhC,EAAAC,EAAAC,GACA,GAAA62B,GAEAxyB,EACAvC,EACA7B,EAHAmE,GAAA,CAMA,IADArE,KAAAD,KAAAE,KACAF,IAAAC,GAAAC,EAAA,SAAAF,EAEA,KADA+2B,EAAA92B,EAAAD,KAAAuE,EAAAvE,IAAAC,IAAAsE,GACA,KAAApE,EAAAJ,EAAAC,EAAAC,EAAAC,MAAAuD,SAAAtD,GAAA,QAEA,IAAAA,EAAA,EAIA,IAHAH,EAAAI,KAAAu2B,KAAA32B,EAAAG,GACAF,EAAAG,KAAAG,MAAAN,EAAAE,GACA6B,EAAA,GAAApL,OAAA2N,EAAAnE,KAAAu2B,KAAA12B,EAAAD,EAAA,MACAsE,EAAAC,GAAAvC,EAAAsC,IAAAtE,EAAAsE,GAAAnE,MAKA,KAHAH,EAAAI,KAAAG,MAAAP,EAAAG,GACAF,EAAAG,KAAAu2B,KAAA12B,EAAAE,GACA6B,EAAA,GAAApL,OAAA2N,EAAAnE,KAAAu2B,KAAA32B,EAAAC,EAAA,MACAqE,EAAAC,GAAAvC,EAAAsC,IAAAtE,EAAAsE,GAAAnE,CAKA,OAFA42B,IAAA/0B,EAAA+0B,UAEA/0B,GAsBAslD,EAAA,SAAAtuD,GACA,MAAAoH,MAAAu2B,KAAAv2B,KAAArJ,IAAAiC,EAAAtC,QAAA0J,KAAAmnD,KAAA,GAGAC,EAAA,WAKA,QAAAA,GAAApwD,GACA,GAAAkN,GAEA5E,EADA6E,EAAAnN,EAAAV,OAEAsC,EAAA,GAAApC,OAAA2N,EAEA,KAAAD,EAAA,EAAeA,EAAAC,IAAOD,EACtBtL,EAAAsL,GAAA1T,EAAAwG,EAAAkN,KAAAlN,EAGA,IAAA6vB,GAAA/kB,EAAAlJ,GACAytB,EAAAQ,EAAA,GACAN,EAAAM,EAAA,GACAwgC,EAAAjc,EAAAxyC,EAAAytB,EAAAE,EAGA/vB,OAAAouB,QAAAyiC,KACAA,EAAA3mD,EAAA2lB,EAAAE,EAAA8gC,GACAA,EAAAppD,EAAA+B,KAAAu2B,KAAAlQ,EAAAghC,KAAArnD,KAAAG,MAAAomB,EAAA8gC,QAKA,KADA,GAAAt3D,GAAAs3D,EAAA/wD,OACA+wD,EAAA,IAAAhhC,GAAAghC,EAAAriB,UAAAj1C,CACA,MAAAs3D,EAAAt3D,EAAA,GAAAw2B,GAAA8gC,EAAAlyC,QAAAplB,CAEA,IACAu3D,GADAC,EAAA,GAAA/wD,OAAAzG,EAAA,EAIA,KAAAmU,EAAA,EAAeA,GAAAnU,IAAQmU,EACvBojD,EAAAC,EAAArjD,MACAojD,EAAAjhC,GAAAniB,EAAA,EAAAmjD,EAAAnjD,EAAA,GAAAmiB,EACAihC,EAAA/gC,GAAAriB,EAAAnU,EAAAs3D,EAAAnjD,GAAAqiB,CAIA,KAAAriB,EAAA,EAAeA,EAAAC,IAAOD,EACtB5E,EAAA1G,EAAAsL,GACAmiB,GAAA/mB,MAAAinB,GACAghC,EAAA/d,EAAA6d,EAAA/nD,EAAA,EAAAvP,IAAAwI,KAAAvB,EAAAkN,GAIA,OAAAqjD,GAhDA,GAAA/2D,GAAAy2D,EACAnlD,EAAA/D,EACAqtC,EAAA8b,CA6DA,OAZAE,GAAA52D,MAAA,SAAAoT,GACA,MAAAvN,WAAAC,QAAA9F,EAAA,kBAAAoT,KAAAojD,EAAApjD,GAAAwjD,GAAA52D,GAGA42D,EAAAtlD,OAAA,SAAA8B,GACA,MAAAvN,WAAAC,QAAAwL,EAAA,kBAAA8B,KAAAojD,GAAApjD,EAAA,GAAAA,EAAA,KAAAwjD,GAAAtlD,GAGAslD,EAAAjc,WAAA,SAAAvnC,GACA,MAAAvN,WAAAC,QAAA80C,EAAA,kBAAAxnC,KAAAojD,EAAAxwD,MAAAouB,QAAAhhB,GAAAE,EAAAhU,KAAA8T,MAAAwjD,GAAAhc,GAGAgc,GAGAg/B,EAAA,SAAAxtF,EAAA3I,EAAA42D,GAEA,GADA,MAAAA,MAAAF,GACAxiD,EAAAvL,EAAAtC,OAAA,CACA,IAAArG,OAAA,GAAAkU,EAAA,SAAA0iD,EAAAjuD,EAAA,KAAAA,EACA,IAAA3I,GAAA,SAAA42D,EAAAjuD,EAAAuL,EAAA,GAAAA,EAAA,EAAAvL,EACA,IAAAuL,GACAD,GAAAC,EAAA,GAAAlU,EACAi2C,EAAAlmC,KAAAG,MAAA+D,GACAwW,GAAAmsC,EAAAjuD,EAAAstC,KAAAttC,GACA2hB,GAAAssC,EAAAjuD,EAAAstC,EAAA,GAAAA,EAAA,EAAAttC,EACA,OAAA8hB,IAAAH,EAAAG,IAAAxW,EAAAgiC,KAGAshB,EAAA,SAAA5uD,EAAA8X,EAAAzQ,GAEA,MADArH,GAAAD,EAAA7I,KAAA8I,EAAA+tD,GAAArb,KAAA/rC,GACAS,KAAAu2B,MAAAt2B,EAAAyQ,IAAA,GAAA01E,EAAAxtF,EAAA,KAAAwtF,EAAAxtF,EAAA,MAAAoH,KAAAM,IAAA1H,EAAAtC,QAAA,QAGAmxD,EAAA,SAAA7uD,EAAA8X,EAAAzQ,GACA,MAAAD,MAAAu2B,MAAAt2B,EAAAyQ,IAAA,IAAAq2C,EAAAnuD,GAAAoH,KAAAM,IAAA1H,EAAAtC,QAAA,QAGA2J,EAAA,SAAArH,EAAAiuD,GACA,GAEAr2D,GACAyP,EAHAkE,EAAAvL,EAAAtC,OACA4N,GAAA,CAIA,UAAA2iD,GACA,OAAA3iD,EAAAC,GACA,UAAA3T,EAAAoI,EAAAsL,KAAA1T,KAEA,IADAyP,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAoI,EAAAsL,KAAA1T,EAAAyP,IACAA,EAAAzP,OAQA,QAAA0T,EAAAC,GACA,UAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,KAEA,IADAyP,EAAAzP,IACA0T,EAAAC,GACA,OAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,EAAAyP,IACAA,EAAAzP,EAOA,OAAAyP,IAGA6mD,EAAA,SAAAluD,EAAAiuD,GACA,GAGAr2D,GAHA2T,EAAAvL,EAAAtC,OACAvG,EAAAoU,EACAD,GAAA,EAEAlG,EAAA,CAEA,UAAA6oD,EACA,OAAA3iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,EAAA/tD,EAAAsL,OACAnU,EADAiO,GAAAxN,MAMA,QAAA0T,EAAAC,GACAuP,MAAAljB,EAAAm2D,EAAAE,EAAAjuD,EAAAsL,KAAAtL,OACA7I,EADAiO,GAAAxN,CAKA,IAAAT,EAAA,MAAAiO,GAAAjO,GAGA23D,EAAA,SAAA9uD,EAAAiuD,GACA,GAEAr2D,GAFA2T,EAAAvL,EAAAtC,OACA4N,GAAA,EAEAyjD,IAEA,UAAAd,EACA,OAAA3iD,EAAAC,GACAuP,MAAAljB,EAAAm2D,EAAA/tD,EAAAsL,MACAyjD,EAAApvD,KAAA/H,OAMA,QAAA0T,EAAAC,GACAuP,MAAAljB,EAAAm2D,EAAAE,EAAAjuD,EAAAsL,KAAAtL,MACA+uD,EAAApvD,KAAA/H,EAKA,OAAA41F,GAAAz+B,EAAArc,KAAA/rC,GAAA,KAGArB,EAAA,SAAA0pD,GAQA,IAPA,GACA73D,GAGA83D,EACAl2B,EALAxtB,EAAAyjD,EAAAtxD,OAEA4N,GAAA,EACAgD,EAAA,IAIAhD,EAAAC,GAAA+C,GAAA0gD,EAAA1jD,GAAA5N,MAGA,KAFAuxD,EAAA,GAAArxD,OAAA0Q,KAEA/C,GAAA,GAGA,IAFAwtB,EAAAi2B,EAAAzjD,GACApU,EAAA4hC,EAAAr7B,SACAvG,GAAA,GACA83D,IAAA3gD,GAAAyqB,EAAA5hC,EAIA,OAAA83D,IAGAn3C,EAAA,SAAA9X,EAAAiuD,GACA,GAEAr2D,GACAkgB,EAHAvM,EAAAvL,EAAAtC,OACA4N,GAAA,CAIA,UAAA2iD,GACA,OAAA3iD,EAAAC,GACA,UAAA3T,EAAAoI,EAAAsL,KAAA1T,KAEA,IADAkgB,EAAAlgB,IACA0T,EAAAC,GACA,OAAA3T,EAAAoI,EAAAsL,KAAAwM,EAAAlgB,IACAkgB,EAAAlgB,OAQA,QAAA0T,EAAAC,GACA,UAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAApI,KAEA,IADAkgB,EAAAlgB,IACA0T,EAAAC,GACA,OAAA3T,EAAAq2D,EAAAjuD,EAAAsL,KAAAtL,KAAA8X,EAAAlgB,IACAkgB,EAAAlgB,EAOA,OAAAkgB,IAGAo3C,EAAA,SAAAn2B,EAAA8U,GAEA,IADA,GAAAviC,GAAAuiC,EAAAnwC,OAAAyxD,EAAA,GAAAvxD,OAAA0N,GACAA,KAAA6jD,EAAA7jD,GAAAytB,EAAA8U,EAAAviC,GACA,OAAA6jD,IAGAC,EAAA,SAAApvD,EAAA8qB,GACA,GAAAvf,EAAAvL,EAAAtC,OAAA,CACA,GAAA6N,GAGA8jD,EAFA/jD,EAAA,EACAgD,EAAA,EAEAghD,EAAAtvD,EAAAsO,EAIA,KAFA,MAAAwc,MAAAnkB,KAEA2E,EAAAC,IACAuf,EAAAukC,EAAArvD,EAAAsL,GAAAgkD,GAAA,OAAAxkC,EAAAwkC,QACAA,EAAAD,EAAA/gD,EAAAhD,EAIA,YAAAwf,EAAAwkC,KAAAhhD,EAAA,SAGAihD,EAAA,SAAAx2B,EAAAuU,EAAAC,GAKA,IAJA,GACAliC,GACAC,EAFAnU,GAAA,MAAAo2C,EAAAxU,EAAAr7B,OAAA6vC,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIAn2C,GACAmU,EAAAlE,KAAAohC,SAAArxC,IAAA,EACAkU,EAAA0tB,EAAA5hC,EAAAm2C,GACAvU,EAAA5hC,EAAAm2C,GAAAvU,EAAAztB,EAAAgiC,GACAvU,EAAAztB,EAAAgiC,GAAAjiC,CAGA,OAAA0tB,IAGA3zB,EAAA,SAAApF,EAAAiuD,GACA,GAEAr2D,GAFA2T,EAAAvL,EAAAtC,OACA4N,GAAA,EAEAlG,EAAA,CAEA,UAAA6oD,EACA,OAAA3iD,EAAAC,IACA3T,GAAAoI,EAAAsL,MAAAlG,GAAAxN,OAKA,QAAA0T,EAAAC,IACA3T,GAAAq2D,EAAAjuD,EAAAsL,KAAAtL,MAAAoF,GAAAxN,EAIA,OAAAwN,IAGAoqD,EAAA,SAAAxzC,GACA,KAAAzQ,EAAAyQ,EAAAte,QAAA,QACA,QAAA4N,IAAA,EAAAnU,EAAA2gB,EAAAkE,EAAAte,GAAA8xD,EAAA,GAAA5xD,OAAAzG,KAAqEmU,EAAAnU,GACrE,OAAAoU,GAAA+C,GAAA,EAAAue,EAAA2iC,EAAAlkD,GAAA,GAAA1N,OAAA2N,KAA0D+C,EAAA/C,GAC1DshB,EAAAve,GAAA0N,EAAA1N,GAAAhD,EAGA,OAAAkkD,IAOAC,EAAA,WACA,MAAAD,GAAA/xD,WAGAlH,GAAA62F,OAAAx8C,EACAr6C,EAAAq6C,cACAr6C,EAAAyK,aACAzK,EAAAoQ,YACApQ,EAAA0K,WACA1K,EAAAo3D,QACAp3D,EAAAu3D,aACAv3D,EAAA43D,YACA53D,EAAA4O,SACA5O,EAAAi4D,YACAj4D,EAAA82F,0BAAAz+B,EACAr4D,EAAA+2F,eAAAz+B,EACAt4D,EAAAg3F,iBAAAj/B,EACA/3D,EAAA8Q,MACA9Q,EAAA23D,OACA33D,EAAAu4D,SACAv4D,EAAA+O,QACA/O,EAAAuhB,MACAvhB,EAAAm3D,QACAn3D,EAAA24D,UACA34D,EAAAi3F,WACAj3F,EAAA8O,QACA9O,EAAA64D,OACA74D,EAAAg5D,UACAh5D,EAAA6O,MACA7O,EAAAyS,QACAzS,EAAAwQ,gBACAxQ,EAAAuR,WACAvR,EAAAi5D,YACAj5D,EAAAy3D,WACAz3D,EAAAk5D,MAEA/3D,OAAAC,eAAApB,EAAA,cAA8CqB,OAAA,OvBw/mBxC,SAAUpB,EAAQD,EAASM,GAEhC,YAWA,SAASiD,GAAwBvC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIwC,KAAa,IAAW,MAAPxC,EAAe,IAAK,GAAIyC,KAAOzC,GAAWG,OAAOuC,UAAUC,eAAehD,KAAKK,EAAKyC,KAAMD,EAAOC,GAAOzC,EAAIyC,GAAgC,OAAtBD,GAAOtC,QAAUF,EAAYwC,EwB9koBpP,QAAS5B,GAAUY,GAUhC,QAASwxG,KAEP,MADAptG,GAAWG,GAAXU,MAAAb,EAAAM,WACO9G,KAGT,QAAS6zG,GAAKC,GAAuB,OAAAjtG,GAAAC,UAAAC,OAANqR,EAAMnR,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANkR,EAAMlR,EAAA,GAAAJ,UAAAI,EAEnC,OADAV,GAAWjG,KAAX8G,MAAAb,GAAgBstG,EAAc9zG,MAA9BsH,OAAuC8Q,IAChCpY,KAhBT,GAAMwG,GAAaxB,EAAG0I,SAAS,cAAe,cACxCqmG,EAAc3xG,CAkBpB,OAhBAoE,GAAWG,GAAG,uBAAwB,SAACyoG,EAAI4E,GACzC,GAAMC,GAAoC,SAAzBD,EAAa1rG,QAAqByrG,EAAYP,aAAapE,GACxE2E,EAAYV,YAAYjE,EAC5ByE,GAAI,aAAcI,MAclBL,MACAC,OxB+ioBH9yG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QwBxkoBeU,CAFxB,IAAAmM,GAAAzN,EAAA,GAAY8E,ExB8koBF7B,EAAwBwK","file":"mapd3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.colors = exports.Interactors = exports.Hover = exports.Brush = exports.DomainEditor = exports.Binning = exports.Observer = exports.DataManager = exports.Legend = exports.Tooltip = exports.Chart = undefined;\n\t\n\tvar _chart = __webpack_require__(1);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _tooltip = __webpack_require__(13);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(14);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _dataManager = __webpack_require__(20);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tvar _observer = __webpack_require__(22);\n\t\n\tvar _observer2 = _interopRequireDefault(_observer);\n\t\n\tvar _binning = __webpack_require__(17);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(19);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brush = __webpack_require__(15);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(16);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _interactors = __webpack_require__(18);\n\t\n\tvar _interactors2 = _interopRequireDefault(_interactors);\n\t\n\tvar _colors = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Chart = _chart2.default;\n\texports.Tooltip = _tooltip2.default;\n\texports.Legend = _legend2.default;\n\texports.DataManager = _dataManager2.default;\n\texports.Observer = _observer2.default;\n\texports.Binning = _binning2.default;\n\texports.DomainEditor = _domainEditor2.default;\n\texports.Brush = _brush2.default;\n\texports.Hover = _hover2.default;\n\texports.Interactors = _interactors2.default;\n\texports.colors = _colors.colors;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Chart;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _exportChart = __webpack_require__(4);\n\t\n\tvar _colors = __webpack_require__(5);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tvar _scale = __webpack_require__(9);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _line = __webpack_require__(10);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _bar = __webpack_require__(11);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _axis = __webpack_require__(12);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tvar _tooltip = __webpack_require__(13);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(14);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _brush = __webpack_require__(15);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(16);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _binning = __webpack_require__(17);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(19);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Chart(_container) {\n\t\n\t  var config = {\n\t    // common\n\t    margin: {\n\t      top: 48,\n\t      right: 32,\n\t      bottom: 48,\n\t      left: 32\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    chartType: \"line\", // line, area, stackedLine, stackedArea\n\t    ease: d3.easeLinear,\n\t\n\t    // intro animation\n\t    isAnimated: false,\n\t    animationDuration: 1500,\n\t\n\t    // scale\n\t    colorSchema: _colors.colors.mapdColors.map(function (d) {\n\t      return { value: d };\n\t    }),\n\t    defaultColor: \"skyblue\",\n\t\n\t    // axis\n\t    xAxisPadding: {\n\t      top: 0,\n\t      left: 0,\n\t      bottom: 0,\n\t      right: 0\n\t    },\n\t    tickPadding: 5,\n\t    xAxisFormat: \"%c\",\n\t    tickSkip: 1,\n\t    tickSizes: 8,\n\t    yTicks: 5,\n\t    yTicks2: 5,\n\t    yAxisFormat: \".2f\",\n\t    yAxisFormat2: \".2f\",\n\t    grid: null,\n\t    axisTransitionDuration: 0,\n\t\n\t    xTitle: \"\",\n\t    yTitle: \"\",\n\t\n\t    // hover\n\t    dotRadius: 4,\n\t\n\t    // tooltip\n\t    valueFormat: \".2f\",\n\t    tooltipMaxTopicLength: 170,\n\t    tooltipBorderRadius: 3,\n\t    mouseChaseDuration: 30,\n\t    tooltipEase: d3.easeQuadInOut,\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: []\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    maskingRectangle: null,\n\t    chartWidth: null, chartHeight: null,\n\t    xAxis: null, yAxis: null, yAxis2: null,\n\t\n\t    dataBySeries: null,\n\t    dataByKey: null,\n\t    data: null,\n\t    groupKeys: [],\n\t    hasSecondAxis: false,\n\t    stackData: null,\n\t    stack: null,\n\t    flatDataSorted: null\n\t\n\t    // accessors\n\t  };var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getGroup = function getGroup(d) {\n\t    return d[_constants.keys.GROUP];\n\t  };\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"mouseOver\", \"mouseOut\", \"mouseMove\", \"hoverYAxis\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    if (cache.dataBySeries) {\n\t      buildChart();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    var w = config.width || cache.container.clientWidth;\n\t    var h = config.height || cache.container.clientHeight;\n\t    cache.chartWidth = w - config.margin.left - config.margin.right;\n\t    cache.chartHeight = h - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      var template = \"<div class=\\\"mapd3-container\\\">\\n        <svg class=\\\"mapd3 chart\\\">\\n          <rect class=\\\"masking-rectangle\\\"></rect>\\n        </svg>\\n      </div>\";\n\t\n\t      var base = d3.select(cache.container).html(template);\n\t\n\t      base.select(\".mapd3-container\").style(\"position\", \"relative\");\n\t\n\t      cache.svg = base.select(\"svg\");\n\t\n\t      addEvents();\n\t    }\n\t\n\t    cache.svg.attr(\"width\", config.width).attr(\"height\", config.height).select(\".container-group\").attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildChart() {\n\t    var dataObject = {\n\t      dataByKey: cache.dataByKey,\n\t      dataBySeries: cache.dataBySeries,\n\t      flatDataSorted: cache.flatDataSorted,\n\t      groupKeys: cache.groupKeys\n\t    };\n\t\n\t    var scale = (0, _scale2.default)().setConfig(config).setData(dataObject);\n\t    scales = scale.getScales();\n\t\n\t    (0, _axis2.default)(cache.svg).setConfig(config).setScales(scales).drawAxis().drawAxisTitles().drawGridLines();\n\t\n\t    (0, _line2.default)(cache.svg).setConfig(config).setScales(scales).setData(dataObject).drawMarks();\n\t\n\t    // const bar = Bar(config, cache)\n\t    // if (config.chartType === \"bar\") {\n\t    //   bar.drawBars()\n\t    // } else if (config.chartType === \"stackedBar\") {\n\t    //   bar.drawStackedBars()\n\t    // }\n\t\n\t    (0, _tooltip2.default)(cache.svg).setConfig(config).setScales(scales).bindEvents(dispatcher);\n\t\n\t    // const legend = Legend(cache.svg)\n\t    //   .setContent(data.series)\n\t    //   .setTitle(\"Title\")\n\t    //   .setSize(80, \"auto\")\n\t    //   .setPosition(780)\n\t    //   .show()\n\t\n\t    (0, _brush2.default)(cache.svg).setConfig(Object.assign({}, config, scales)).setData(dataObject).drawBrush().on(\"brushMove\", function () {\n\t      var _console;\n\t\n\t      for (var _len = arguments.length, arg = Array(_len), _key = 0; _key < _len; _key++) {\n\t        arg[_key] = arguments[_key];\n\t      }\n\t\n\t      return (_console = console).log.apply(_console, [\"brush\"].concat(arg));\n\t    });\n\t\n\t    (0, _hover2.default)(cache.svg).setConfig(config).setScales(scales).bindEvents(dispatcher);\n\t\n\t    // const binning = Binning(cache.svg)\n\t    //   .on(\"change\", (...arg) => console.log(\"binning\", ...arg))\n\t\n\t    // const domainEditor = DomainEditor(cache.svg)\n\t\n\t    triggerIntroAnimation();\n\t\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    cache.data = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var cleanedData = cleanData(_data);\n\t    cache.dataBySeries = cleanedData.dataBySeries;\n\t    cache.dataByKey = cleanedData.dataByKey;\n\t\n\t    render();\n\t\n\t    return this;\n\t  }\n\t\n\t  function cleanData(_data) {\n\t    var dataBySeries = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var flatData = [];\n\t\n\t    // Normalize dataBySeries\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES] = (0, _common.sortData)(serie[_constants.keys.VALUES], config.keyType);\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        d[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        d[_constants.keys.VALUE] = Number(d[_constants.keys.VALUE]);\n\t      });\n\t    });\n\t\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        var dataPoint = {};\n\t        dataPoint[_constants.keys.LABEL] = serie[_constants.keys.LABEL];\n\t        dataPoint[_constants.keys.GROUP] = serie[_constants.keys.GROUP];\n\t        dataPoint[_constants.keys.ID] = serie[_constants.keys.ID];\n\t        dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        dataPoint[_constants.keys.VALUE] = d[_constants.keys.VALUE];\n\t        flatData.push(dataPoint);\n\t      });\n\t    });\n\t\n\t    cache.flatDataSorted = (0, _common.sortData)(flatData, config.keyType);\n\t\n\t    var dataByKey = d3.nest().key(getKey).entries(cache.flatDataSorted).map(function (d) {\n\t      var dataPoint = {};\n\t      dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key;\n\t      dataPoint[_constants.keys.SERIES] = d.values;\n\t      return dataPoint;\n\t    });\n\t\n\t    var allGroupKeys = dataBySeries.map(getGroup);\n\t    cache.groupKeys = (0, _common.getUnique)(allGroupKeys);\n\t\n\t    return { dataBySeries: dataBySeries, dataByKey: dataByKey };\n\t  }\n\t\n\t  function triggerIntroAnimation() {\n\t    if (config.isAnimated) {\n\t      cache.maskingRectangle = cache.svg.d3.select(\".masking-rectangle\").attr(\"width\", cache.chartWidth - 2).attr(\"height\", cache.chartHeight).attr(\"x\", config.margin.left + 1).attr(\"y\", config.margin.top);\n\t\n\t      cache.maskingRectangle.transition().duration(config.animationDuration).ease(config.ease).attr(\"width\", 0).attr(\"x\", config.width - config.margin.right).on(\"end\", function () {\n\t        return cache.maskingRectangle.remove();\n\t      });\n\t    }\n\t  }\n\t\n\t  function getNearestDataPoint(_mouseX) {\n\t    var keyFromInvertedX = (0, _common.invertScale)(scales.xScale, _mouseX, config.keyType);\n\t    var bisectLeft = d3.bisector(getKey).left;\n\t    var dataEntryIndex = bisectLeft(cache.dataByKey, keyFromInvertedX);\n\t    var dataEntryForXPosition = cache.dataByKey[dataEntryIndex];\n\t    var nearestDataPoint = null;\n\t\n\t    if (keyFromInvertedX) {\n\t      nearestDataPoint = dataEntryForXPosition;\n\t    }\n\t    return nearestDataPoint;\n\t  }\n\t\n\t  function addEvents() {\n\t    var THROTTLE_DELAY = 20;\n\t    var throttledDispatch = (0, _common.throttle)(function () {\n\t      dispatcher.call.apply(dispatcher, arguments);\n\t    }, THROTTLE_DELAY);\n\t\n\t    cache.svg.on(\"mouseover.dispatch\", function mouseover(d) {\n\t      if (!cache.data) {\n\t        return;\n\t      }\n\t      dispatcher.call(\"mouseOver\", this, d, d3.mouse(this));\n\t    }).on(\"mouseout.dispatch\", function mouseout(d) {\n\t      if (!cache.data) {\n\t        return;\n\t      }\n\t      dispatcher.call(\"mouseOut\", this, d, d3.mouse(this));\n\t    }).on(\"mousemove.dispatch\", function mousemove() {\n\t      if (!cache.data) {\n\t        return;\n\t      }\n\t      var mouseX = d3.mouse(this)[0];\n\t      var xPosition = mouseX - config.margin.left;\n\t      var dataPoint = getNearestDataPoint(xPosition);\n\t\n\t      if (dataPoint) {\n\t        var dataPointXPosition = scales.xScale(dataPoint[_constants.keys.DATA]);\n\t        dispatcher.call(\"mouseMove\", this, dataPoint, dataPointXPosition);\n\t        throttledDispatch(\"mouseMove\", this, dataPoint, dataPointXPosition);\n\t      }\n\t    });\n\t  }\n\t\n\t  // function save (_filename, _title) {\n\t  //   exportChart.call(this, cache.svg, _filename, _title)\n\t  // }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.on(\".\", null).remove();\n\t  }\n\t\n\t  return {\n\t    render: render,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    on: on,\n\t    // save,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, \"axisBottom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisBottom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisLeft\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisLeft;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisRight\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisRight;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"format\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.format;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"bisector\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.bisector;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.extent;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.sum;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.range;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.merge;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"nest\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.nest;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"dispatch\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.dispatch;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeQuadInOut\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeQuadInOut;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"select\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.select;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"mouse\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.mouse;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"event\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.event;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"transition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.transition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomUniform\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomUniform;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomNormal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomNormal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeDay\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeDay;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeMonth\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeMonth;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"area\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.area;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"curveCatmullRom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.curveCatmullRom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"line\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.line;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stack\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stack;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOffsetNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOffsetNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOrderNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOrderNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleTime\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleTime;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scalePoint\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scalePoint;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleBand\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleBand;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleOrdinal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleOrdinal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"brushX\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.brushX;\n\t\t}\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.11.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar radial = function(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tvar naturalEarth1 = function() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t};\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$2 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function constrain(transform$$1, extent) {\n\t    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n\t        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n\t        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n\t        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n\t    return transform$$1.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.exportChart = exportChart;\n\t\n\tvar _colors = __webpack_require__(5);\n\t\n\tvar _serializeWithStyles = __webpack_require__(6);\n\t\n\tvar _serializeWithStyles2 = _interopRequireDefault(_serializeWithStyles);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction exportChart(require) {\n\t  var encoder = window.btoa;\n\t\n\t  if (!encoder) {\n\t    encoder = require(\"base-64\").encode;\n\t  }\n\t\n\t  // Base64 doesn't work really well with Unicode strings, so we need to use this function\n\t  // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n\t  var b64EncodeUnicode = function b64EncodeUnicode(str) {\n\t    return encoder(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n\t      return String.fromCharCode(\"0x\" + p1);\n\t    }));\n\t  };\n\t\n\t  var config = {\n\t    defaultFilename: \"mapd3.png\",\n\t    chartBackground: \"white\",\n\t    imageSourceBase: \"data:image/svg+xml;base64,\",\n\t    titleFontSize: \"15px\",\n\t    titleFontFamily: \"'Benton Sans', sans-serif\",\n\t    titleTopOffset: 30,\n\t    get styleBackgroundString() {\n\t      return \"<style>svg{background:\" + this.chartBackground + \";}</style>\";\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Main function to be used as a method by chart instances to export charts to png\n\t   * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n\t   * @param  {string} filename    [download to be called <filename>.png]\n\t   * @param  {string} title       Title for the image\n\t   */\n\t  function save(d3svg, filename, title) {\n\t    var img = createImage(convertSvgToHtml.call(this, d3svg, title));\n\t\n\t    img.onload = handleImageLoad.bind(img, createCanvas(this.width(), this.height()), filename);\n\t  }\n\t\n\t  /**\n\t   * adds background styles to raw html\n\t   * @param {string} html raw html\n\t   */\n\t  function addBackground(html) {\n\t    return html.replace(\">\", \">\" + config.styleBackgroundString);\n\t  }\n\t\n\t  /**\n\t   * takes d3 svg el, adds proper svg tags, adds inline styles\n\t   * from stylesheets, adds white background and returns string\n\t   * @param  {object} d3svg TYPE d3 svg element\n\t   * @return {string} string of passed d3\n\t   */\n\t  function convertSvgToHtml(d3svg, title) {\n\t    if (!d3svg) {\n\t      return null;\n\t    }\n\t\n\t    d3svg.attr(\"version\", \"1.1\").attr(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\t    var serializer = (0, _serializeWithStyles2.default)();\n\t    var html = serializer(d3svg.node());\n\t\n\t    html = prependTitle.call(this, html, title, parseInt(d3svg.attr(\"width\"), 10));\n\t    html = addBackground(html);\n\t\n\t    return html;\n\t  }\n\t\n\t  /**\n\t   * Create Canvas\n\t   * @param  {number} width\n\t   * @param  {number} height\n\t   * @return {object} TYPE canvas element\n\t   */\n\t  function createCanvas(width, height) {\n\t    var canvas = document.createElement(\"canvas\");\n\t\n\t    canvas.height = height;\n\t    canvas.width = width;\n\t\n\t    return canvas;\n\t  }\n\t\n\t  /**\n\t   * Create Image\n\t   * @param  {string} svgHtml string representation of svg el\n\t   * @return {object}  TYPE element <img>, src points at svg\n\t   */\n\t  function createImage(svgHtml) {\n\t    var img = new Image();\n\t\n\t    img.src = \"\" + config.imageSourceBase + b64EncodeUnicode(svgHtml);\n\t\n\t    return img;\n\t  }\n\t\n\t  /**\n\t   * Draws image on canvas\n\t   * @param  {object} image TYPE:el <img>, to be drawn\n\t   * @param  {object} canvas TYPE: el <canvas>, to draw on\n\t   */\n\t  function drawImageOnCanvas(image, canvas) {\n\t    canvas.getContext(\"2d\").drawImage(image, 0, 0);\n\t\n\t    return canvas;\n\t  }\n\t\n\t  /**\n\t   * Triggers browser to download image, convert canvas to url,\n\t   * we need to append the link el to the dom before clicking it for Firefox to register\n\t   * point <a> at it and trigger click\n\t   * @param  {object} canvas TYPE: el <canvas>\n\t   * @param  {string} filename\n\t   * @param  {string} extensionType\n\t   */\n\t  function downloadCanvas(canvas) {\n\t    var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.defaultFilename;\n\t    var extensionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"image/png\";\n\t\n\t    var url = canvas.toDataURL(extensionType);\n\t    var link = document.createElement(\"a\");\n\t\n\t    link.href = url;\n\t    link.download = filename;\n\t    document.body.appendChild(link);\n\t    link.click();\n\t    document.body.removeChild(link);\n\t  }\n\t\n\t  /**\n\t  * Handles on load event fired by img.onload, this=img\n\t  * @param  {object} canvas TYPE: el <canvas>\n\t  * @param  {string} filename\n\t  * @param  {object} e\n\t  */\n\t  function handleImageLoad(canvas, filename, e) {\n\t    e.preventDefault();\n\t\n\t    downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n\t  }\n\t\n\t  /**\n\t   * if passed, append title to the raw html to appear on graph\n\t   * @param  {string} html     raw html string\n\t   * @param  {string} title    title of the graph\n\t   * @param  {number} svgWidth width of graph container\n\t   * @return {string}         raw html with title prepended\n\t   */\n\t  function prependTitle(html, title, svgWidth) {\n\t    if (!title || !svgWidth) {\n\t      return html;\n\t    }\n\t    var grey = _colors.colorSchemas.grey;\n\t\n\t\n\t    html = html.replace(/<g/, \"<text x=\\\"\" + this.margin().left + \"\\\" y=\\\"\" + config.titleTopOffset + \"\\\" font-family=\\\"\" + config.titleFontFamily + \"\\\" font-size=\\\"\" + config.titleFontSize + \"\\\" fill=\\\"\" + grey[6] + \"\\\"> \" + title + \" </text><g \");\n\t\n\t    return html;\n\t  }\n\t\n\t  return {\n\t    save: save,\n\t    convertSvgToHtml: convertSvgToHtml,\n\t    createImage: createImage,\n\t    drawImageOnCanvas: drawImageOnCanvas\n\t  };\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar mapdUI = exports.mapdUI = {\n\t  skyBlue: \"#22A7F0\"\n\t};\n\t\n\tvar mapdColors = exports.mapdColors = [\"#ea5545\", \"#bdcf32\", \"#b33dc6\", \"#ef9b20\", \"#87bc45\", \"#f46a9b\", \"#ace5c7\", \"#ede15b\", \"#836dc5\", \"#86d87f\", \"#27aeef\"];\n\t\n\tvar grey = exports.grey = [\"#F8F8FA\", \"#EFF2F5\", \"#D2D6DF\", \"#C3C6CF\", \"#ADB0B6\", \"#666A73\", \"#45494E\", \"#363A43\", \"#282C35\"];\n\t\n\tvar colors = exports.colors = {\n\t  mapdUI: mapdUI,\n\t  mapdColors: mapdColors,\n\t  grey: grey\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        /**\n\t         * returns serializer function, only run it when you know you want to serialize your chart\n\t         * @return {func} serializer to add styles in line to dom string\n\t         */\n\t        initializeSerializer: function initializeSerializer() {\n\t\n\t            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n\t            var defaultStylesByTagName = {};\n\t\n\t            // Styles inherited from style sheets will not be rendered for elements with these tag names\n\t            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\t\n\t            // This list determines which css default values lookup tables are precomputed at load time\n\t            // Lookup tables for other tag names will be automatically built at runtime if needed\n\t            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\t\n\t            // Precompute the lookup tables.\n\t            [].forEach.call(tagNames, function (name) {\n\t                if (!noStyleTags[name]) {\n\t                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n\t                }\n\t            });\n\t\n\t            function computeDefaultStyleByTagName(tagName) {\n\t                var defaultStyle = {},\n\t                    element = document.body.appendChild(document.createElement(tagName)),\n\t                    computedStyle = window.getComputedStyle(element);\n\t\n\t                [].forEach.call(computedStyle, function (style) {\n\t                    defaultStyle[style] = computedStyle[style];\n\t                });\n\t                document.body.removeChild(element);\n\t                return defaultStyle;\n\t            }\n\t\n\t            function getDefaultStyleByTagName(tagName) {\n\t                tagName = tagName.toUpperCase();\n\t                if (!defaultStylesByTagName[tagName]) {\n\t                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n\t                }\n\t                return defaultStylesByTagName[tagName];\n\t            };\n\t\n\t            function serializeWithStyles(elem) {\n\t\n\t                var cssTexts = [],\n\t                    elements = void 0,\n\t                    computedStyle = void 0,\n\t                    defaultStyle = void 0,\n\t                    result = void 0;\n\t\n\t                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n\t                    // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n\t\n\t                    return;\n\t                }\n\t\n\t                cssTexts = [];\n\t                elements = elem.querySelectorAll('*');\n\t\n\t                [].forEach.call(elements, function (el, i) {\n\t                    if (!noStyleTags[el.tagName]) {\n\t                        computedStyle = window.getComputedStyle(el);\n\t                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n\t                        cssTexts[i] = el.style.cssText;\n\t                        [].forEach.call(computedStyle, function (cssPropName) {\n\t                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n\t                                el.style[cssPropName] = computedStyle[cssPropName];\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t\n\t                result = elem.outerHTML;\n\t                elements = [].map.call(elements, function (el, i) {\n\t                    el.style.cssText = cssTexts[i];\n\t                    return el;\n\t                });\n\t\n\t                return result;\n\t            };\n\t\n\t            return serializeWithStyles;\n\t        }\n\t    };\n\t}();\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar keys = exports.keys = {\n\t  DATA: \"key\",\n\t  VALUE: \"value\",\n\t  ID: \"id\",\n\t  LABEL: \"label\",\n\t  GROUP: \"group\",\n\t  VALUES: \"values\",\n\t  SERIES: \"series\"\n\t};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cloneData = cloneData;\n\texports.sortData = sortData;\n\texports.getUnique = getUnique;\n\texports.invertScale = invertScale;\n\texports.override = override;\n\texports.throttle = throttle;\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Clones the passed array of data\n\t * @param  {Object[]} dataToClone Data to clone\n\t * @return {Object[]}             Cloned data\n\t */\n\tfunction cloneData(_dataToClone) {\n\t  return JSON.parse(JSON.stringify(_dataToClone));\n\t}\n\t\n\tfunction sortData(_data, _keyType) {\n\t  var sortedData = cloneData(_data);\n\t  if (_keyType === \"time\") {\n\t    sortedData.forEach(function (d) {\n\t      d[_constants.keys.DATA] = new Date(d[_constants.keys.DATA]);\n\t    });\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].getTime() - b[_constants.keys.DATA].getTime();\n\t    });\n\t  } else if (_keyType === \"string\") {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].localeCompare(b[_constants.keys.DATA], \"en\", { numeric: false });\n\t    });\n\t  } else {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA] - b[_constants.keys.DATA];\n\t    });\n\t  }\n\t  return sortedData;\n\t}\n\t\n\tfunction getUnique(arr) {\n\t  return [].concat(_toConsumableArray(new Set(arr)));\n\t}\n\t\n\tfunction invertScale(_scale, _mouseX, _keyType) {\n\t  if (_keyType === \"time\") {\n\t    return _scale.invert(_mouseX);\n\t  } else {\n\t    var bandStep = _scale.step();\n\t    var index = Math.round(_mouseX / bandStep);\n\t    return _scale.domain()[index];\n\t  }\n\t}\n\t\n\tfunction override(a, b) {\n\t  var accum = {};\n\t  for (var x in a) {\n\t    if (a.hasOwnProperty(x)) {\n\t      accum[x] = x in b ? b[x] : a[x];\n\t    }\n\t  }\n\t  return accum;\n\t}\n\t\n\tfunction throttle(callback, limit) {\n\t  var wait = false;\n\t  var timer = null;\n\t  return function throttleFn() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    if (!wait) {\n\t      wait = true;\n\t      clearTimeout(timer);\n\t      timer = setTimeout(function () {\n\t        wait = false;\n\t        callback.apply(undefined, args);\n\t      }, limit);\n\t    }\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Scale;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Scale() {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    height: null,\n\t    width: null,\n\t    keyType: null,\n\t    chartType: null,\n\t    colorSchema: null,\n\t    defaultColor: null\n\t  };\n\t\n\t  var data = {\n\t    dataByKey: null,\n\t    dataBySeries: null,\n\t    flatDataSorted: null,\n\t    groupKeys: null\n\t  };\n\t\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getValue = function getValue(d) {\n\t    return d[_constants.keys.VALUE];\n\t  };\n\t\n\t  function buildXScale(_allKeys) {\n\t    var chartWidth = config.width - config.margin.left - config.margin.right;\n\t    var datesExtent = null;\n\t    var xScale = null;\n\t    if (config.keyType === \"time\") {\n\t      datesExtent = d3.extent(_allKeys);\n\t      xScale = d3.scaleTime();\n\t    } else {\n\t      datesExtent = _allKeys;\n\t      xScale = config.chartType === \"bar\" || config.chartType === \"stackedBar\" ? d3.scaleBand() : d3.scalePoint();\n\t      xScale.padding(0);\n\t    }\n\t\n\t    xScale.domain(datesExtent).range([0, chartWidth]);\n\t\n\t    return xScale;\n\t  }\n\t\n\t  function buildYScale(_extent) {\n\t    var chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var yScale = d3.scaleLinear().domain(_extent).rangeRound([chartHeight, 0]).nice();\n\t\n\t    return yScale;\n\t  }\n\t\n\t  function buildColorScale() {\n\t    var ids = data.dataBySeries.map(getID);\n\t    var colorScale = d3.scaleOrdinal().range(config.colorSchema.map(function (d) {\n\t      return d.value;\n\t    })).domain(config.colorSchema.map(function (d, i) {\n\t      return d.key || ids[i];\n\t    })).unknown(config.defaultColor);\n\t\n\t    return colorScale;\n\t  }\n\t\n\t  function splitByGroups() {\n\t    var groups = {};\n\t    data.dataBySeries.forEach(function (d) {\n\t      var key = d[_constants.keys.GROUP];\n\t      if (!groups[key]) {\n\t        groups[key] = {\n\t          allValues: [],\n\t          allKeys: []\n\t        };\n\t      }\n\t      groups[key].allValues = groups[key].allValues.concat(d[_constants.keys.VALUES].map(getValue));\n\t      groups[key].allKeys = groups[key].allKeys.concat(d[_constants.keys.VALUES].map(getKey));\n\t    });\n\t\n\t    return groups;\n\t  }\n\t\n\t  function getStackedScales() {\n\t    var allStackHeights = data.dataByKey.map(function (d) {\n\t      return d3.sum(d.series.map(function (dB) {\n\t        return dB.value;\n\t      }));\n\t    });\n\t\n\t    var stackData = data.dataByKey.map(function (d) {\n\t      var points = {\n\t        key: d[_constants.keys.DATA]\n\t      };\n\t      d.series.forEach(function (dB) {\n\t        points[dB[_constants.keys.ID]] = dB[_constants.keys.VALUE];\n\t      });\n\t\n\t      return points;\n\t    });\n\t\n\t    var stack = d3.stack().keys(data.dataBySeries.map(getID)).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n\t\n\t    var valuesExtent = d3.extent(allStackHeights);\n\t\n\t    var allKeys = data.flatDataSorted.map(getKey);\n\t    var allUniqueKeys = (0, _common.getUnique)(allKeys);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale([0, valuesExtent[1]]);\n\t\n\t    return {\n\t      stackData: stackData,\n\t      stack: stack,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getHorizontalScales() {\n\t    var groups = splitByGroups();\n\t\n\t    var hasSecondAxis = data.groupKeys.length > 1;\n\t\n\t    var groupAxis1 = groups[data.groupKeys[0]];\n\t    var allUniqueKeys = groupAxis1.allKeys;\n\t    var valuesExtent = d3.extent(groupAxis1.allValues);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale(valuesExtent);\n\t\n\t    var yScale2 = null;\n\t    if (hasSecondAxis) {\n\t      var groupAxis2 = groups[data.groupKeys[1]];\n\t      var valuesExtent2 = d3.extent(groupAxis2.allValues);\n\t\n\t      yScale2 = yScale.copy().domain(valuesExtent2);\n\t    }\n\t\n\t    return {\n\t      hasSecondAxis: hasSecondAxis,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale,\n\t      yScale2: yScale2\n\t    };\n\t  }\n\t\n\t  function getScales() {\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      return getStackedScales();\n\t    } else {\n\t      return getHorizontalScales();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    getScales: getScales\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Line;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Line(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function drawLines() {\n\t    var seriesLine = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    });\n\t\n\t    var seriesLine2 = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var lines = cache.svg.selectAll(\".mark.line\").data(data.dataBySeries);\n\t\n\t    lines.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"line\"].join(\" \");\n\t    }).merge(lines).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === data.groupKeys[0]) {\n\t        return seriesLine(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesLine2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", \"none\");\n\t\n\t    lines.exit().remove();\n\t  }\n\t\n\t  function drawAreas() {\n\t    var seriesArea = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    });\n\t\n\t    var seriesArea2 = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var areas = cache.svg.selectAll(\".mark.area\").data(data.dataBySeries);\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === data.groupKeys[0]) {\n\t        return seriesArea(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesArea2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", getColor);\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawStackedAreas() {\n\t    var seriesLine = d3.area().x(function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[0]);\n\t    }).y1(function (d) {\n\t      return scales.yScale(d[1]);\n\t    });\n\t\n\t    var areas = cache.svg.selectAll(\".mark.stacked-area\").data(data.stack(data.stackData));\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"stacked-area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", seriesLine).style(\"stroke\", \"none\").style(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    });\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"area\") {\n\t      drawAreas();\n\t    } else if (config.chartType === \"line\") {\n\t      drawLines();\n\t    } else if (config.chartType === \"stackedArea\") {\n\t      drawStackedAreas();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks\n\t  };\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Bar;\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tfunction Bar(config, cache) {\n\t\n\t  var getColor = function getColor(d) {\n\t    return cache.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function drawBars() {\n\t    var bars = cache.svg.select(\".chart-group\").selectAll(\".mark\").data(cache.dataBySeries[0].values);\n\t\n\t    bars.enter().append(\"rect\").attr(\"class\", function () {\n\t      return [\"mark\", \"rect\"].join(\" \");\n\t    }).merge(bars).attr(\"x\", function (d) {\n\t      return cache.xScale(d[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[_constants.keys.VALUE]);\n\t    }).attr(\"width\", function () {\n\t      return cache.xScale.bandwidth();\n\t    }).attr(\"height\", function (d) {\n\t      return cache.chartHeight - cache.yScale(d[_constants.keys.VALUE]);\n\t    }).style(\"stroke\", \"white\").style(\"fill\", getColor);\n\t\n\t    bars.exit().remove();\n\t  }\n\t\n\t  function drawStackedBars() {\n\t\n\t    var stackedBarGroups = cache.svg.select(\".chart-group\").selectAll(\".mark-group\").data(cache.stack(cache.stackData));\n\t\n\t    var stackedUpdate = stackedBarGroups.enter().append(\"g\").attr(\"class\", \"mark-group\").merge(stackedBarGroups).attr(\"fill\", function (d) {\n\t      return cache.colorScale(d.key);\n\t    }).attr(\"stroke\", \"white\");\n\t\n\t    stackedBarGroups.exit().remove();\n\t\n\t    var stackedBars = stackedUpdate.selectAll(\".mark\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    stackedBars.enter().append(\"rect\").attr(\"class\", \"mark\").merge(stackedBars).attr(\"x\", function (d) {\n\t      return cache.xScale(d.data[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return cache.yScale(d[1]);\n\t    }).attr(\"height\", function (d) {\n\t      return cache.yScale(d[0]) - cache.yScale(d[1]);\n\t    }).attr(\"width\", cache.xScale.bandwidth());\n\t\n\t    stackedBars.exit().remove();\n\t  }\n\t\n\t  return {\n\t    drawBars: drawBars,\n\t    drawStackedBars: drawStackedBars\n\t  };\n\t}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Axis;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Axis(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    tickSizes: null,\n\t    tickPadding: null,\n\t    xAxisFormat: null,\n\t    keyType: null,\n\t    yTicks: null,\n\t    yAxisFormat: null,\n\t    xAxisPadding: null,\n\t    axisTransitionDuration: null,\n\t    ease: null,\n\t    yTitle: null,\n\t    xTitle: null,\n\t    grid: null\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    chartHeight: null,\n\t    chartWidth: null,\n\t    xAxis: null,\n\t    yAxis: null,\n\t    yAxis2: null,\n\t    horizontalGridLines: null,\n\t    verticalGridLines: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"axis-group\", true);\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\");\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis x\");\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y\");\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y2\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function buildAxis() {\n\t    cache.xAxis = d3.axisBottom(scales.xScale).tickSize(config.tickSizes, 0).tickPadding(config.tickPadding);\n\t\n\t    if (config.keyType === \"time\") {\n\t      var formatter = d3.timeFormat(config.xAxisFormat);\n\t      cache.xAxis.tickFormat(formatter);\n\t    } else {\n\t      cache.xAxis.tickValues(scales.xScale.domain().filter(function (d, i) {\n\t        return !(i % config.tickSkip);\n\t      }));\n\t    }\n\t\n\t    cache.yAxis = d3.axisLeft(scales.yScale).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.yAxis2 = d3.axisRight(scales.yScale2).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t    }\n\t  }\n\t\n\t  function drawAxis() {\n\t    buildSVG();\n\t    buildAxis();\n\t\n\t    cache.svg.select(\".axis.x\").attr(\"transform\", \"translate(0, \" + cache.chartHeight + \")\").call(cache.xAxis);\n\t\n\t    cache.svg.select(\".axis.y\").attr(\"transform\", \"translate(\" + -config.xAxisPadding.left + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis);\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.svg.select(\".axis.y2\").attr(\"transform\", \"translate(\" + (cache.chartWidth - config.xAxisPadding.right) + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis2);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawAxisTitles() {\n\t    cache.svg.select(\".y-title\").text(config.yTitle).attr(\"text-anchor\", \"middle\").attr(\"transform\", function transform() {\n\t      var textHeight = this.getBBox().height;\n\t      return \"translate(\" + [textHeight, config.height / 2] + \") rotate(-90)\";\n\t    });\n\t\n\t    cache.svg.select(\".x-title\").text(config.xTitle).attr(\"text-anchor\", \"middle\").attr(\"transform\", \"translate(\" + [config.width / 2, config.height] + \")\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawGridLines() {\n\t    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n\t      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.horizontal-grid-line\").data(scales.yScale.ticks(config.yTicks));\n\t\n\t      cache.horizontalGridLines.enter().append(\"line\").attr(\"class\", \"horizontal-grid-line\").merge(cache.horizontalGridLines).transition().duration(config.axisTransitionDuration).attr(\"x1\", -config.xAxisPadding.left).attr(\"x2\", cache.chartWidth).attr(\"y1\", scales.yScale).attr(\"y2\", scales.yScale);\n\t\n\t      cache.horizontalGridLines.exit().remove();\n\t    }\n\t\n\t    if (config.grid === \"vertical\" || config.grid === \"full\") {\n\t      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.vertical-grid-line\").data(cache.xAxis.tickValues());\n\t\n\t      cache.verticalGridLines.enter().append(\"line\").attr(\"class\", \"vertical-grid-line\").merge(cache.verticalGridLines).transition().duration(config.axisTransitionDuration).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight).attr(\"x1\", scales.xScale).attr(\"x2\", scales.xScale);\n\t\n\t      cache.verticalGridLines.exit().remove();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    drawAxis: drawAxis,\n\t    drawAxisTitles: drawAxisTitles,\n\t    drawGridLines: drawGridLines\n\t  };\n\t}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Tooltip;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Tooltip(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 2,\n\t      right: 2,\n\t      bottom: 2,\n\t      left: 2\n\t    },\n\t    width: 250,\n\t    height: 45,\n\t\n\t    valueFormat: \".2f\",\n\t\n\t    tooltipMaxTopicLength: 170,\n\t    tooltipBorderRadius: 3,\n\t\n\t    // Animations\n\t    mouseChaseDuration: 30,\n\t    tooltipEase: d3.easeQuadInOut,\n\t\n\t    titleHeight: 32,\n\t    elementHeight: 24,\n\t    padding: 8,\n\t    dotRadius: 4,\n\t\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: [],\n\t\n\t    // from chart\n\t    keyType: \"time\"\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    tooltipDivider: null,\n\t    tooltipBody: null,\n\t    tooltipTitle: null,\n\t    tooltipBackground: null\n\t\n\t    // function init () {\n\t    // if (!isStatic) {\n\t    //   cache.chart.on(\"mouseOver.tooltip\", show)\n\t    //     .on(\"mouseMove.tooltip\", update)\n\t    //     .on(\"mouseOut.tooltip\", hide)\n\t    // }\n\t\n\t    //   render()\n\t    // }\n\t    // init()\n\t\n\t  };function buildSVG() {\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"tooltip-group\", true);\n\t\n\t      cache.tooltipBackground = cache.svg.append(\"rect\").classed(\"tooltip-text-container\", true);\n\t\n\t      cache.tooltipTitle = cache.svg.append(\"text\").classed(\"tooltip-title\", true).attr(\"dominant-baseline\", \"hanging\");\n\t\n\t      cache.tooltipDivider = cache.svg.append(\"line\").classed(\"tooltip-divider\", true);\n\t\n\t      cache.tooltipBody = cache.svg.append(\"g\").classed(\"tooltip-body\", true);\n\t\n\t      setSize(\"auto\", \"auto\");\n\t      hide();\n\t    }\n\t\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    cache.tooltipBackground.attr(\"rx\", config.tooltipBorderRadius).attr(\"ry\", config.tooltipBorderRadius);\n\t\n\t    cache.tooltipTitle.attr(\"dy\", config.padding).attr(\"dx\", config.padding);\n\t  }\n\t\n\t  function calculateTooltipPosition(_mouseX) {\n\t    var tooltipX = _mouseX + config.margin.left;\n\t    var offset = 0;\n\t    var tooltipY = config.margin.top;\n\t\n\t    if (_mouseX > cache.chartWidth / 2) {\n\t      offset = -config.tooltipWidth;\n\t    }\n\t\n\t    return [tooltipX + offset, tooltipY];\n\t  }\n\t\n\t  function setPosition(_xPosition) {\n\t    var _calculateTooltipPosi = calculateTooltipPosition(_xPosition),\n\t        _calculateTooltipPosi2 = _slicedToArray(_calculateTooltipPosi, 2),\n\t        tooltipX = _calculateTooltipPosi2[0],\n\t        tooltipY = _calculateTooltipPosi2[1];\n\t\n\t    cache.svg.transition().duration(config.mouseChaseDuration).ease(config.tooltipEase).attr(\"transform\", \"translate(\" + tooltipX + \", \" + tooltipY + \")\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function setSize(_width, _height) {\n\t    var height = _height;\n\t    if (_height === \"auto\") {\n\t      height = cache.tooltipBody.node().getBoundingClientRect().height + config.titleHeight + config.padding;\n\t    }\n\t    var width = _width;\n\t    if (_width === \"auto\") {\n\t      width = cache.tooltipBody.node().getBoundingClientRect().width + config.padding * 2;\n\t    }\n\t\n\t    cache.tooltipBackground.attr(\"width\", width).attr(\"height\", height);\n\t\n\t    cache.tooltipDivider.attr(\"x2\", width).attr(\"y1\", config.titleHeight).attr(\"y2\", config.titleHeight);\n\t\n\t    return this;\n\t  }\n\t\n\t  function setSeriesContent(_series) {\n\t    var tooltipLeft = cache.tooltipBody.selectAll(\".tooltip-left-text\").data(_series);\n\t    tooltipLeft.enter().append(\"text\").classed(\"tooltip-left-text\", true).attr(\"dominant-baseline\", \"hanging\").attr(\"dy\", config.padding).attr(\"dx\", config.padding * 2 + config.dotRadius).merge(tooltipLeft).attr(\"y\", function (d, i) {\n\t      return i * config.elementHeight + config.titleHeight;\n\t    }).text(function (d) {\n\t      return d[_constants.keys.LABEL];\n\t    });\n\t    tooltipLeft.exit().remove();\n\t\n\t    var values = _series.map(getValueText);\n\t    var tooltipRight = cache.tooltipBody.selectAll(\".tooltip-right-text\").data(values);\n\t    tooltipRight.enter().append(\"text\").classed(\"tooltip-right-text\", true).attr(\"text-anchor\", \"end\").attr(\"dominant-baseline\", \"hanging\").attr(\"dy\", config.padding).attr(\"dx\", -config.padding).merge(tooltipRight).attr(\"x\", config.tooltipWidth).attr(\"y\", function (d, i) {\n\t      return i * config.elementHeight + config.titleHeight;\n\t    }).text(function (d) {\n\t      return d;\n\t    });\n\t    tooltipRight.exit().remove();\n\t\n\t    var tooltipCircles = cache.tooltipBody.selectAll(\".tooltip-circle\").data(_series);\n\t    tooltipCircles.enter().append(\"circle\").classed(\"tooltip-circle\", true).merge(tooltipCircles).attr(\"cx\", config.padding + config.dotRadius).attr(\"cy\", function (d, i) {\n\t      return i * config.elementHeight + config.titleHeight + config.elementHeight / 2;\n\t    }).attr(\"r\", config.dotRadius).style(\"fill\", function (d) {\n\t      return scales.colorScale(d[_constants.keys.ID]);\n\t    });\n\t    tooltipCircles.exit().remove();\n\t  }\n\t\n\t  function setTitle(_title) {\n\t    var title = _title;\n\t    if (config.keyType === \"time\") {\n\t      title = d3.timeFormat(config.dateFormat)(_title);\n\t    }\n\t\n\t    cache.tooltipTitle.text(title);\n\t\n\t    return this;\n\t  }\n\t\n\t  function getValueText(_data) {\n\t    var value = _data[_constants.keys.VALUE];\n\t    if (value) {\n\t      var formatter = d3.format(config.valueFormat);\n\t      return formatter(_data[_constants.keys.VALUE]);\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t\n\t  function setContent(_series) {\n\t    var series = _series;\n\t\n\t    if (config.seriesOrder.length) {\n\t      series = sortByTopicsOrder(_series);\n\t    } else if (_series.length && _series[0][_constants.keys.LABEL]) {\n\t      series = sortByAlpha(_series);\n\t    }\n\t\n\t    setSeriesContent(series);\n\t\n\t    return this;\n\t  }\n\t\n\t  function sortByTopicsOrder(_series) {\n\t    var _order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesOrder;\n\t\n\t    return _order.map(function (orderName) {\n\t      return _series.filter(function (_ref) {\n\t        var name = _ref.name;\n\t        return name === orderName;\n\t      })[0];\n\t    });\n\t  }\n\t\n\t  function sortByAlpha(_series) {\n\t    var series = (0, _common.cloneData)(_series);\n\t    return series.sort(function (a, b) {\n\t      return a[_constants.keys.LABEL].localeCompare(b[_constants.keys.LABEL], \"en\", { numeric: false });\n\t    });\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"none\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"block\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawTooltip(_dataPoint, _xPosition) {\n\t    buildSVG();\n\t    setTitle(_dataPoint[_constants.keys.DATA]);\n\t    setContent(_dataPoint[_constants.keys.SERIES]);\n\t    setSize(config.tooltipWidth, \"auto\");\n\t    setPosition(_xPosition);\n\t    show();\n\t\n\t    return this;\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOver.tooltip\", show).on(\"mouseMove.tooltip\", drawTooltip).on(\"mouseOut.tooltip\", hide);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.container.on(\".tooltip\", null);\n\t    cache.svg.remove();\n\t  }\n\t\n\t  return {\n\t    bindEvents: bindEvents,\n\t    setPosition: setPosition,\n\t    setSize: setSize,\n\t    setContent: setContent,\n\t    setTitle: setTitle,\n\t    hide: hide,\n\t    show: show,\n\t    drawTooltip: drawTooltip,\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Legend;\n\t\n\tvar _tooltip = __webpack_require__(13);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Legend(_chart) {\n\t  return (0, _tooltip2.default)(_chart, true);\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Brush;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Brush(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null,\n\t    xScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"brush-group\", true);\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function extractBrushDimension(_data) {\n\t    var merged = d3.merge(_data.map(function (d) {\n\t      return d[_constants.keys.VALUES];\n\t    }));\n\t    return (0, _common.sortData)(merged, config.keyType);\n\t  }\n\t\n\t  function buildBrush() {\n\t    cache.brush = cache.brush || d3.brushX().on(\"start\", handleBrushStart).on(\"brush\", handleBrushMove).on(\"end\", handleBrushEnd);\n\t\n\t    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]]);\n\t\n\t    cache.chartBrush = cache.svg.call(cache.brush);\n\t\n\t    cache.chartBrush.selectAll(\".brush-rect\").attr(\"height\", cache.chartHeight);\n\t  }\n\t\n\t  function getDataExtent() {\n\t    var selection = d3.event.selection;\n\t    var dataExtent = selection.map(function (d) {\n\t      return (0, _common.invertScale)(config.xScale, d, config.keyType);\n\t    });\n\t    return dataExtent;\n\t  }\n\t\n\t  function handleBrushStart() {\n\t    dispatcher.call(\"brushStart\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushMove() {\n\t    dispatcher.call(\"brushMove\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushEnd() {\n\t    // Only transition after input, ignore empty selections.\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t\n\t    var dataExtent = getDataExtent();\n\t\n\t    d3.select(this).transition().call(d3.event.target.move, dataExtent.map(config.xScale));\n\t\n\t    dispatcher.call(\"brushEnd\", this, dataExtent, config);\n\t  }\n\t\n\t  function drawBrush() {\n\t    buildSVG();\n\t\n\t    if (data.dataBySeries) {\n\t      cache.data = extractBrushDimension((0, _common.cloneData)(data.dataBySeries));\n\t      buildBrush();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  // function setBrushByPercentages (_a, _b) {\n\t  //   const x0 = _a * cache.chartWidth\n\t  //   const x1 = _b * cache.chartWidth\n\t\n\t  //   brush.move(chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function setBrushByDates (_dateA, _dateB) {\n\t  //   const x0 = cache.xScale(new Date(_dateA))\n\t  //   const x1 = cache.xScale(new Date(_dateB))\n\t\n\t  //   cache.brush.move(cache.chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function updateHandlers (_dateExtent) {\n\t  //   if (_dateExtent === null) {\n\t  //     cache.handle.attr(\"display\", \"none\")\n\t  //   } else {\n\t  //     cache.handle\n\t  //       .attr(\"display\", null)\n\t  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n\t  //   }\n\t  // }\n\t\n\t  // API\n\t\n\t  /**\n\t   * Gets or Sets the dateRange for the selected part of the brush\n\t   * @param  {String[]} _x Desired dateRange for the graph\n\t   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n\t   * @public\n\t   */\n\t  // function dateRange (_x) {\n\t  //   if (!arguments.length) {\n\t  //     return dateRange\n\t  //   }\n\t  //   dateRange = _x\n\t\n\t  //   if (Array.isArray(dateRange)) {\n\t  //     setBrushByDates(...dateRange)\n\t  //   }\n\t\n\t  //   return this\n\t  // }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    destroy: destroy,\n\t    drawBrush: drawBrush\n\t  };\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Hover;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Hover(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    dotRadius: null\n\t  };\n\t\n\t  var scales = {\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"hover\");\n\t\n\t  // function init () {\n\t  //   cache.chart.on(\"mouseOver.hover\", show)\n\t  //     .on(\"mouseMove.hover\", update)\n\t  //     .on(\"mouseOut.hover\", hide)\n\t\n\t  //   render()\n\t  //   hide()\n\t  // }\n\t  // init()\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"hover-group\", true).style(\"pointer-events\", \"none\");\n\t    }\n\t\n\t    // cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n\t  }\n\t\n\t  function drawHover(_dataPoint, _dataPointXPosition) {\n\t    buildSVG();\n\t\n\t    if (_dataPointXPosition) {\n\t      moveVerticalMarker(_dataPointXPosition);\n\t      drawVerticalMarker();\n\t      if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t        highlightStackedDataPoints(_dataPoint);\n\t      } else {\n\t        highlightDataPoints(_dataPoint);\n\t      }\n\t      dispatcher.call(\"hover\", this, _dataPoint);\n\t    }\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"block\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"none\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function highlightDataPoints(_dataPoint) {\n\t    var dotsData = _dataPoint[_constants.keys.SERIES];\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawHighlightDataPoints(_dotsData) {\n\t    var dots = cache.svg.selectAll(\".dot\").data(_dotsData);\n\t\n\t    dots.enter().append(\"circle\").attr(\"class\", \"dot\").merge(dots).attr(\"cy\", function (d) {\n\t      // if (d[keys.GROUP] === chartCache.groupKeys[0]) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return scales.yScale(d[_constants.keys.VALUE]);\n\t      } else {\n\t        return scales.yScale2(d[_constants.keys.VALUE]);\n\t      }\n\t    }).attr(\"r\", config.dotRadius).style(\"stroke\", \"none\").style(\"fill\", getColor);\n\t\n\t    dots.exit().remove();\n\t  }\n\t\n\t  function highlightStackedDataPoints(_dataPoint) {\n\t    var stackedDataPoint = { key: _dataPoint[_constants.keys.DATA] };\n\t    _dataPoint.series.forEach(function (d) {\n\t      var id = d[_constants.keys.ID];\n\t      stackedDataPoint[id] = d[_constants.keys.VALUE];\n\t    });\n\t\n\t    // const dotsStack = data.stack([stackedDataPoint])\n\t    // const dotsData = dotsStack.map((d) => {\n\t    //   const dot = {value: d[0][1]}\n\t    //   dot[keys.ID] = d.key\n\t    //   return dot\n\t    // })\n\t\n\t    // drawHighlightDataPoints(dotsData)\n\t  }\n\t\n\t  function drawVerticalMarker() {\n\t    var verticalMarkerLine = cache.svg.selectAll(\"line\").data([0]);\n\t\n\t    verticalMarkerLine.enter().append(\"line\").classed(\"vertical-marker\", true).merge(verticalMarkerLine).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight);\n\t\n\t    verticalMarkerLine.exit().remove();\n\t  }\n\t\n\t  function moveVerticalMarker(_verticalMarkerXPosition) {\n\t    cache.svg.attr(\"transform\", \"translate(\" + [_verticalMarkerXPosition + config.margin.left, config.margin.top] + \")\");\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOver.hover\", show).on(\"mouseMove.hover\", drawHover).on(\"mouseOut.hover\", hide);\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    bindEvents: bindEvents,\n\t    highlightDataPoints: highlightDataPoints,\n\t    highlightStackedDataPoints: highlightStackedDataPoints,\n\t    drawVerticalMarker: drawVerticalMarker,\n\t    moveVerticalMarker: moveVerticalMarker,\n\t    on: on,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Binning;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(18);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Binning(_chart) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    toggle: [\"auto\"],\n\t    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n\t    label: \"BIN:\"\n\t  };\n\t\n\t  var cache = {\n\t    chart: _chart,\n\t    svg: null\n\t  };\n\t\n\t  var chartCache = {\n\t    svg: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"change\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t  }\n\t  render();\n\t\n\t  function buildSVG() {\n\t    chartCache = cache.chart.getCache();\n\t    setConfig(cache.chart.getConfig());\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = chartCache.svg.append(\"g\").classed(\"binning-group\", true).append(\"text\");\n\t\n\t      cache.svg.append(\"tspan\").text(config.label).attr(\"y\", \"1em\").attr(\"class\", \"item\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + [config.margin.left, 0] + \")\");\n\t\n\t    var items = cache.svg.selectAll(\".toggleOnOff\").data(config.toggle);\n\t    items.enter().append(\"tspan\").attr(\"class\", function (d) {\n\t      return \"item \" + d + \" toggleOnOff\";\n\t    }).attr(\"dx\", \"0.8em\").attr(\"y\", \"1em\").on(\"click.select\", (0, _interactors.toggleOnOff)(\".binning-group .item.toggleOnOff\")).on(\"click.d3.dispatch\", function click(d) {\n\t      var isSelected = this.classList.contains(\"selected\");\n\t      dispatcher.call(\"change\", this, d, { isSelected: isSelected });\n\t    }).merge(items).text(function (d) {\n\t      return d;\n\t    });\n\t    items.exit().remove();\n\t\n\t    var itemsExclusive = cache.svg.selectAll(\".toggleExclusive\").data(config.exclusiveToggle);\n\t    itemsExclusive.enter().append(\"tspan\").attr(\"class\", function (d) {\n\t      return \"item \" + d + \" toggleExclusive\";\n\t    }).attr(\"dx\", \"0.8em\").attr(\"y\", \"1em\").on(\"click.select\", (0, _interactors.exclusiveToggle)(\".binning-group .item.toggleExclusive\")).on(\"click.d3.dispatch\", function click(d) {\n\t      var isSelected = this.classList.contains(\"selected\");\n\t      dispatcher.call(\"change\", this, d, { isSelected: isSelected });\n\t    }).merge(itemsExclusive).text(function (d) {\n\t      return d;\n\t    });\n\t    itemsExclusive.exit().remove();\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  function update() {\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    getCache: getCache,\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    update: update\n\t  };\n\t}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toggleOnOff = toggleOnOff;\n\texports.exclusiveToggle = exclusiveToggle;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n\t * @param  {Number} selector A valid selector of the elements to toggle\n\t * @example\n\t * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n\t *\n\t * @return {void}\n\t */\n\t\n\tfunction toggleOnOff(selector) {\n\t  return exclusiveToggle(selector, {\n\t    toggleOffIsEnabled: true,\n\t    toggleMultipleIsEnabled: false\n\t  });\n\t}\n\t\n\tfunction exclusiveToggle(selector) {\n\t  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { toggleOffIsEnabled: false, toggleMultipleIsEnabled: false };\n\t\n\t\n\t  return function toggle() {\n\t    /* eslint-disable consistent-this */\n\t    var that = this;\n\t    var hasSelection = false;\n\t    var selection = d3.select(this.farthestViewportElement).selectAll(selector);\n\t\n\t    selection.classed(\"selected\", function selectedClass() {\n\t      var isSelected = this.classList.contains(\"selected\");\n\t      var hasJustBeenClicked = this === that;\n\t      var shouldBeSelected = false;\n\t\n\t      if (hasJustBeenClicked) {\n\t        shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true;\n\t      } else {\n\t        shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false;\n\t      }\n\t\n\t      hasSelection = hasSelection || shouldBeSelected;\n\t      return shouldBeSelected;\n\t    });\n\t    selection.classed(\"dimmed\", function dimmedClass() {\n\t      return hasSelection && !this.classList.contains(\"selected\");\n\t    });\n\t    /* eslint-enable consistent-this */\n\t  };\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DomainEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(18);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction DomainEditor(_chart) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    position: { x: 0, y: 0 },\n\t    size: { h: 16, w: 40 }\n\t  };\n\t\n\t  var cache = {\n\t    chart: _chart,\n\t    svg: null,\n\t    parentDiv: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var chartCache = {\n\t    svg: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"lockToggle\", \"domainChanged\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t  }\n\t  render();\n\t\n\t  function buildSVG() {\n\t    chartCache = cache.chart.getCache();\n\t    setConfig(cache.chart.getConfig());\n\t\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = chartCache.svg.append(\"g\").classed(\"domain-editor-group\", true);\n\t\n\t      cache.parentDiv = d3.select(cache.svg.node().ownerSVGElement.parentNode);\n\t      cache.parentDiv.append(\"input\").attr(\"class\", \"input domain-y-min\").style(\"position\", \"absolute\").style(\"top\", config.margin.top + \"px\").style(\"left\", config.margin.left - config.size.w + \"px\").style(\"width\", config.size.w + \"px\").style(\"height\", config.size.h + \"px\");\n\t\n\t      cache.parentDiv.append(\"input\").attr(\"class\", \"input domain-y-max\").style(\"position\", \"absolute\").style(\"top\", config.margin.top + cache.chartHeight - config.size.h + \"px\").style(\"left\", config.margin.left - config.size.w + \"px\").style(\"width\", config.size.w + \"px\");\n\t\n\t      var lockSize = 12;\n\t      cache.parentDiv.append(\"div\").attr(\"class\", \"domain-lock\").style(\"position\", \"absolute\").style(\"width\", lockSize + \"px\").style(\"height\", lockSize + \"px\").style(\"top\", config.margin.top - lockSize + \"px\").style(\"left\", config.margin.left - lockSize + \"px\");\n\t\n\t      // panel.on(\"click\", function click () {\n\t      //   const isClosed = this.classList.contains(\"closed\")\n\t      //   loop.transition().attr(\"transform\", `translate(0, ${isClosed ? \"14\" : \"6\"})`)\n\t      //   this.classList.toggle(\"closed\", !isClosed)\n\t      // })\n\t\n\t      cache.chart.on(\"hoverYAxis\", function (d) {\n\t        return console.log(d);\n\t      });\n\t    }\n\t  }\n\t\n\t  function on() {\n\t    return dispatcher.on.apply(dispatcher, arguments);\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function getCache() {\n\t    return cache;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t  }\n\t\n\t  function update() {\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    getCache: getCache,\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    update: update\n\t  };\n\t}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.merge = exports.range = exports.sum = exports.extent = exports.bisector = undefined;\n\t\n\tvar _d3Array = __webpack_require__(21);\n\t\n\tObject.defineProperty(exports, \"bisector\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.bisector;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.extent;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.sum;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.range;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.merge;\n\t  }\n\t});\n\texports.default = DataManager;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(7);\n\t\n\tvar _common = __webpack_require__(8);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction DataManager() {\n\t  /* eslint-disable no-magic-numbers */\n\t  var config = {\n\t    keyType: \"number\", // number, string, time,\n\t    range: [0, 100],\n\t    pointCount: 200,\n\t    groupCount: 2,\n\t    lineCount: 4\n\t  };\n\t  var cache = {\n\t    data: null,\n\t    baseDate: null\n\t  };\n\t\n\t  function generateRandomString(_length) {\n\t    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5);\n\t  }\n\t\n\t  function generateSeries(_dataKeys, _range, _allowNegative) {\n\t    var value = d3.randomUniform.apply(d3, _toConsumableArray(_range))();\n\t    var variabilityRatio = 50;\n\t    var randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio;\n\t    var rnd = d3.randomNormal(0, 1);\n\t    return _dataKeys.map(function (d) {\n\t      value = value + rnd() * randomWalkStepSize;\n\t      if (!_allowNegative && value < randomWalkStepSize) {\n\t        value = value + randomWalkStepSize;\n\t      }\n\t      return {\n\t        value: value,\n\t        key: config.keyType === \"time\" ? d.toISOString() : d\n\t      };\n\t    });\n\t  }\n\t\n\t  function generateTestDataset() {\n\t    var dataKeys = null;\n\t    if (config.keyType === \"time\") {\n\t      cache.baseDate = new Date();\n\t      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate));\n\t    } else if (config.keyType === \"string\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function () {\n\t        return generateRandomString();\n\t      });\n\t      dataKeys.sort(function (a, b) {\n\t        return a.localeCompare(b, \"en\", { numeric: false });\n\t      });\n\t    } else if (config.keyType === \"number\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function (d, i) {\n\t        return i;\n\t      });\n\t    }\n\t\n\t    var series = d3.range(config.lineCount).map(function (d) {\n\t      return {\n\t        label: \"Label \" + d,\n\t        id: d,\n\t        group: d < config.groupCount ? d : 0,\n\t        values: generateSeries(dataKeys, config.range)\n\t      };\n\t    });\n\t\n\t    cache.data = { series: series\n\t\n\t      // console.log(\"generated data\", cache.data)\n\t\n\t    };return cache.data;\n\t  }\n\t\n\t  function filterByKey(_extent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      var values = series[_constants.keys.VALUES];\n\t      var allKeys = values.map(function (d) {\n\t        return d[_constants.keys.DATA];\n\t      });\n\t      var extentMinIndex = allKeys.indexOf(_extent[0]);\n\t      var extentMaxIndex = allKeys.indexOf(_extent[1]);\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].slice(extentMinIndex, extentMaxIndex);\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function filterByDate(_dateExtent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].filter(function (d) {\n\t        var epoch = new Date(d[_constants.keys.DATA]).getTime();\n\t        return epoch >= _dateExtent[0].getTime() && epoch <= _dateExtent[1].getTime();\n\t      });\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    generateTestDataset: generateTestDataset,\n\t    generateSeries: generateSeries,\n\t    filterByDate: filterByDate,\n\t    filterByKey: filterByKey,\n\t    setConfig: setConfig\n\t  };\n\t}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Observer;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Observer(_dataManager) {\n\t  var dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\");\n\t  var dataManager = _dataManager;\n\t\n\t  dispatcher.on(\"brushChange.observer\", function (_e, _brushConfig) {\n\t    var filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e) : dataManager.filterByKey(_e);\n\t    pub(\"dataFilter\", filtered);\n\t  });\n\t\n\t  function sub() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function pub(_channelName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    dispatcher.call.apply(dispatcher, [_channelName, this].concat(args));\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    sub: sub,\n\t    pub: pub\n\t  };\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// mapd3.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 31c12a82867f72ab94e7","import Chart from \"./charts/chart.js\"\nimport Tooltip from \"./charts/tooltip.js\"\nimport Legend from \"./charts/legend.js\"\nimport DataManager from \"./charts/data-manager.js\"\nimport Observer from \"./charts/observer.js\"\nimport Binning from \"./charts/binning.js\"\nimport DomainEditor from \"./charts/domain-editor.js\"\nimport Brush from \"./charts/brush.js\"\nimport Hover from \"./charts/hover.js\"\nimport Interactors from \"./charts/interactors.js\"\nimport {colors} from \"./charts/helpers/colors.js\"\n\nexport {\n  Chart,\n  Tooltip,\n  Legend,\n  DataManager,\n  Observer,\n  Binning,\n  DomainEditor,\n  Brush,\n  Hover,\n  Interactors,\n  colors\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exportChart} from \"./helpers/exportChart\"\nimport {colors} from \"./helpers/colors\"\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, getUnique, invertScale, sortData, override, throttle} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\nimport Line from \"./line\"\nimport Bar from \"./bar\"\nimport Axis from \"./axis\"\nimport Tooltip from \"./tooltip\"\nimport Legend from \"./legend\"\nimport Brush from \"./brush\"\nimport Hover from \"./hover\"\nimport Binning from \"./binning\"\nimport DomainEditor from \"./domain-editor\"\n\nexport default function Chart (_container) {\n\n  let config = {\n    // common\n    margin: {\n      top: 48,\n      right: 32,\n      bottom: 48,\n      left: 32\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    chartType: \"line\", // line, area, stackedLine, stackedArea\n    ease: d3.easeLinear,\n\n    // intro animation\n    isAnimated: false,\n    animationDuration: 1500,\n\n    // scale\n    colorSchema: colors.mapdColors.map((d) => ({value: d})),\n    defaultColor: \"skyblue\",\n\n    // axis\n    xAxisPadding: {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0\n    },\n    tickPadding: 5,\n    xAxisFormat: \"%c\",\n    tickSkip: 1,\n    tickSizes: 8,\n    yTicks: 5,\n    yTicks2: 5,\n    yAxisFormat: \".2f\",\n    yAxisFormat2: \".2f\",\n    grid: null,\n    axisTransitionDuration: 0,\n\n    xTitle: \"\",\n    yTitle: \"\",\n\n    // hover\n    dotRadius: 4,\n\n    // tooltip\n    valueFormat: \".2f\",\n    tooltipMaxTopicLength: 170,\n    tooltipBorderRadius: 3,\n    mouseChaseDuration: 30,\n    tooltipEase: d3.easeQuadInOut,\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: []\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    maskingRectangle: null,\n    chartWidth: null, chartHeight: null,\n    xAxis: null, yAxis: null, yAxis2: null,\n\n    dataBySeries: null,\n    dataByKey: null,\n    data: null,\n    groupKeys: [],\n    hasSecondAxis: false,\n    stackData: null,\n    stack: null,\n    flatDataSorted: null\n  }\n\n  // accessors\n  const getKey = (d) => d[keys.DATA]\n  const getGroup = (d) => d[keys.GROUP]\n\n  // events\n  const dispatcher = d3.dispatch(\"mouseOver\", \"mouseOut\", \"mouseMove\", \"hoverYAxis\")\n\n  function render () {\n    buildSVG()\n\n    if (cache.dataBySeries) {\n      buildChart()\n    }\n\n    return this\n  }\n\n  function buildSVG () {\n    const w = config.width || cache.container.clientWidth\n    const h = config.height || cache.container.clientHeight\n    cache.chartWidth = w - config.margin.left - config.margin.right\n    cache.chartHeight = h - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      const template = `<div class=\"mapd3-container\">\n        <svg class=\"mapd3 chart\">\n          <rect class=\"masking-rectangle\"></rect>\n        </svg>\n      </div>`\n\n      const base = d3.select(cache.container)\n          .html(template)\n\n      base.select(\".mapd3-container\").style(\"position\", \"relative\")\n\n      cache.svg = base.select(\"svg\")\n\n      addEvents()\n    }\n\n    cache.svg.attr(\"width\", config.width)\n      .attr(\"height\", config.height)\n      .select(\".container-group\")\n      .attr(\"transform\", `translate(${config.margin.left},${config.margin.top})`)\n\n    return this\n  }\n\n  function buildChart () {\n    const dataObject = {\n      dataByKey: cache.dataByKey,\n      dataBySeries: cache.dataBySeries,\n      flatDataSorted: cache.flatDataSorted,\n      groupKeys: cache.groupKeys\n    }\n\n    const scale = Scale()\n      .setConfig(config)\n      .setData(dataObject)\n    scales = scale.getScales()\n\n    Axis(cache.svg)\n      .setConfig(config)\n      .setScales(scales)\n      .drawAxis()\n      .drawAxisTitles()\n      .drawGridLines()\n\n    Line(cache.svg)\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawMarks()\n\n    // const bar = Bar(config, cache)\n    // if (config.chartType === \"bar\") {\n    //   bar.drawBars()\n    // } else if (config.chartType === \"stackedBar\") {\n    //   bar.drawStackedBars()\n    // }\n\n    Tooltip(cache.svg)\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n\n    // const legend = Legend(cache.svg)\n    //   .setContent(data.series)\n    //   .setTitle(\"Title\")\n    //   .setSize(80, \"auto\")\n    //   .setPosition(780)\n    //   .show()\n\n    Brush(cache.svg)\n      .setConfig(Object.assign({}, config, scales))\n      .setData(dataObject)\n      .drawBrush()\n      .on(\"brushMove\", (...arg) => console.log(\"brush\", ...arg))\n\n    Hover(cache.svg)\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n\n    // const binning = Binning(cache.svg)\n    //   .on(\"change\", (...arg) => console.log(\"binning\", ...arg))\n\n    // const domainEditor = DomainEditor(cache.svg)\n\n    triggerIntroAnimation()\n\n    return this\n  }\n\n  function setData (_data) {\n    cache.data = cloneData(_data[keys.SERIES])\n    const cleanedData = cleanData(_data)\n    cache.dataBySeries = cleanedData.dataBySeries\n    cache.dataByKey = cleanedData.dataByKey\n\n    render()\n\n    return this\n  }\n\n  function cleanData (_data) {\n    const dataBySeries = cloneData(_data[keys.SERIES])\n    const flatData = []\n\n    // Normalize dataBySeries\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES] = sortData(serie[keys.VALUES], config.keyType)\n      serie[keys.VALUES].forEach((d) => {\n        d[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        d[keys.VALUE] = Number(d[keys.VALUE])\n      })\n    })\n\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES].forEach((d) => {\n        const dataPoint = {}\n        dataPoint[keys.LABEL] = serie[keys.LABEL]\n        dataPoint[keys.GROUP] = serie[keys.GROUP]\n        dataPoint[keys.ID] = serie[keys.ID]\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        dataPoint[keys.VALUE] = d[keys.VALUE]\n        flatData.push(dataPoint)\n      })\n    })\n\n    cache.flatDataSorted = sortData(flatData, config.keyType)\n\n    const dataByKey = d3.nest()\n      .key(getKey)\n      .entries(cache.flatDataSorted)\n      .map((d) => {\n        const dataPoint = {}\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key\n        dataPoint[keys.SERIES] = d.values\n        return dataPoint\n      })\n\n    const allGroupKeys = dataBySeries.map(getGroup)\n    cache.groupKeys = getUnique(allGroupKeys)\n\n    return {dataBySeries, dataByKey}\n  }\n\n  function triggerIntroAnimation () {\n    if (config.isAnimated) {\n      cache.maskingRectangle = cache.svg.d3.select(\".masking-rectangle\")\n        .attr(\"width\", cache.chartWidth - 2)\n        .attr(\"height\", cache.chartHeight)\n        .attr(\"x\", config.margin.left + 1)\n        .attr(\"y\", config.margin.top)\n\n      cache.maskingRectangle.transition()\n        .duration(config.animationDuration)\n        .ease(config.ease)\n        .attr(\"width\", 0)\n        .attr(\"x\", config.width - config.margin.right)\n        .on(\"end\", () => cache.maskingRectangle.remove())\n    }\n  }\n\n  function getNearestDataPoint (_mouseX) {\n    const keyFromInvertedX = invertScale(scales.xScale, _mouseX, config.keyType)\n    const bisectLeft = d3.bisector(getKey).left\n    const dataEntryIndex = bisectLeft(cache.dataByKey, keyFromInvertedX)\n    const dataEntryForXPosition = cache.dataByKey[dataEntryIndex]\n    let nearestDataPoint = null\n\n    if (keyFromInvertedX) {\n      nearestDataPoint = dataEntryForXPosition\n    }\n    return nearestDataPoint\n  }\n\n  function addEvents () {\n    const THROTTLE_DELAY = 20\n    const throttledDispatch = throttle((...args) => {\n      dispatcher.call(...args)\n    }, THROTTLE_DELAY)\n\n    cache.svg\n      .on(\"mouseover.dispatch\", function mouseover (d) {\n        if (!cache.data) { return }\n        dispatcher.call(\"mouseOver\", this, d, d3.mouse(this))\n      })\n      .on(\"mouseout.dispatch\", function mouseout (d) {\n        if (!cache.data) { return }\n        dispatcher.call(\"mouseOut\", this, d, d3.mouse(this))\n      })\n      .on(\"mousemove.dispatch\", function mousemove () {\n        if (!cache.data) { return }\n        const mouseX = d3.mouse(this)[0]\n        const xPosition = mouseX - config.margin.left\n        const dataPoint = getNearestDataPoint(xPosition)\n\n        if (dataPoint) {\n          const dataPointXPosition = scales.xScale(dataPoint[keys.DATA])\n          dispatcher.call(\"mouseMove\", this, dataPoint, dataPointXPosition)\n          throttledDispatch(\"mouseMove\", this, dataPoint, dataPointXPosition)\n        }\n      })\n  }\n\n  // function save (_filename, _title) {\n  //   exportChart.call(this, cache.svg, _filename, _title)\n  // }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.on(\".\", null).remove()\n  }\n\n  return {\n    render,\n    setConfig,\n    setData,\n    on,\n    // save,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/chart.js","export {\n\taxisBottom,\n\taxisLeft,\n\taxisRight,\n\ttimeFormat,\n\tformat,\n\tbisector,\n\textent,\n\tsum,\n\trange,\n\tmerge,\n\tnest,\n\tdispatch,\n\teaseLinear,\n\teaseQuadInOut,\n\tselect,\n\tmouse,\n\tevent,\n\ttransition,\n\trandomUniform,\n\trandomNormal,\n\ttimeDay,\n\ttimeMonth,\n\tarea,\n\tcurveCatmullRom,\n\tline,\n\tstack,\n\tstackOffsetNone,\n\tstackOrderNone,\n\tscaleTime,\n\tscalePoint,\n\tscaleBand,\n\tscaleLinear,\n\tscaleOrdinal,\n\tbrushX\n} from \"d3/build/d3\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/d3-service.js","// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.11.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function constrain(transform$$1, extent) {\n    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n    return transform$$1.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","import {colorSchemas} from \"./colors.js\"\nimport initializeSerializer from \"./serializeWithStyles.js\"\n\nexport function exportChart (require) {\n  let encoder = window.btoa\n\n  if (!encoder) {\n    encoder = require(\"base-64\").encode\n  }\n\n  // Base64 doesn't work really well with Unicode strings, so we need to use this function\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n  const b64EncodeUnicode = (str) => encoder(encodeURIComponent(str)\n      .replace(/%([0-9A-F]{2})/g, (match, p1) => String.fromCharCode(`0x${p1}`)))\n\n  const config = {\n    defaultFilename: \"mapd3.png\",\n    chartBackground: \"white\",\n    imageSourceBase: \"data:image/svg+xml;base64,\",\n    titleFontSize: \"15px\",\n    titleFontFamily: \"'Benton Sans', sans-serif\",\n    titleTopOffset: 30,\n    get styleBackgroundString () {\n      return `<style>svg{background:${this.chartBackground};}</style>`\n    }\n  }\n\n  /**\n   * Main function to be used as a method by chart instances to export charts to png\n   * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n   * @param  {string} filename    [download to be called <filename>.png]\n   * @param  {string} title       Title for the image\n   */\n  function save (d3svg, filename, title) {\n    const img = createImage(convertSvgToHtml.call(this, d3svg, title))\n\n    img.onload = handleImageLoad.bind(\n                img,\n                createCanvas(this.width(), this.height()),\n                filename\n            )\n  }\n\n  /**\n   * adds background styles to raw html\n   * @param {string} html raw html\n   */\n  function addBackground (html) {\n    return html.replace(\">\", `>${config.styleBackgroundString}`)\n  }\n\n  /**\n   * takes d3 svg el, adds proper svg tags, adds inline styles\n   * from stylesheets, adds white background and returns string\n   * @param  {object} d3svg TYPE d3 svg element\n   * @return {string} string of passed d3\n   */\n  function convertSvgToHtml (d3svg, title) {\n    if (!d3svg) {\n      return null\n    }\n\n    d3svg.attr(\"version\", \"1.1\")\n      .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n    const serializer = initializeSerializer()\n    let html = serializer(d3svg.node())\n\n    html = prependTitle.call(this, html, title, parseInt(d3svg.attr(\"width\"), 10))\n    html = addBackground(html)\n\n    return html\n  }\n\n  /**\n   * Create Canvas\n   * @param  {number} width\n   * @param  {number} height\n   * @return {object} TYPE canvas element\n   */\n  function createCanvas (width, height) {\n    const canvas = document.createElement(\"canvas\")\n\n    canvas.height = height\n    canvas.width = width\n\n    return canvas\n  }\n\n  /**\n   * Create Image\n   * @param  {string} svgHtml string representation of svg el\n   * @return {object}  TYPE element <img>, src points at svg\n   */\n  function createImage (svgHtml) {\n    const img = new Image()\n\n    img.src = `${config.imageSourceBase}${b64EncodeUnicode(svgHtml)}`\n\n    return img\n  }\n\n  /**\n   * Draws image on canvas\n   * @param  {object} image TYPE:el <img>, to be drawn\n   * @param  {object} canvas TYPE: el <canvas>, to draw on\n   */\n  function drawImageOnCanvas (image, canvas) {\n    canvas.getContext(\"2d\").drawImage(image, 0, 0)\n\n    return canvas\n  }\n\n  /**\n   * Triggers browser to download image, convert canvas to url,\n   * we need to append the link el to the dom before clicking it for Firefox to register\n   * point <a> at it and trigger click\n   * @param  {object} canvas TYPE: el <canvas>\n   * @param  {string} filename\n   * @param  {string} extensionType\n   */\n  function downloadCanvas (canvas, filename = config.defaultFilename, extensionType = \"image/png\") {\n    const url = canvas.toDataURL(extensionType)\n    const link = document.createElement(\"a\")\n\n    link.href = url\n    link.download = filename\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n    /**\n   * Handles on load event fired by img.onload, this=img\n   * @param  {object} canvas TYPE: el <canvas>\n   * @param  {string} filename\n   * @param  {object} e\n   */\n  function handleImageLoad (canvas, filename, e) {\n    e.preventDefault()\n\n    downloadCanvas(drawImageOnCanvas(this, canvas), filename)\n  }\n\n  /**\n   * if passed, append title to the raw html to appear on graph\n   * @param  {string} html     raw html string\n   * @param  {string} title    title of the graph\n   * @param  {number} svgWidth width of graph container\n   * @return {string}         raw html with title prepended\n   */\n  function prependTitle (html, title, svgWidth) {\n    if (!title || !svgWidth) {\n      return html\n    }\n    const {grey} = colorSchemas\n\n    html = html.replace(/<g/, `<text x=\"${this.margin().left}\" y=\"${config.titleTopOffset}\" font-family=\"${config.titleFontFamily}\" font-size=\"${config.titleFontSize}\" fill=\"${grey[6]}\"> ${title} </text><g `)\n\n    return html\n  }\n\n  return {\n    save,\n    convertSvgToHtml,\n    createImage,\n    drawImageOnCanvas\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/exportChart.js","export const mapdUI = {\n  skyBlue: \"#22A7F0\"\n}\n\nexport const mapdColors = [\n  \"#ea5545\",\n  \"#bdcf32\",\n  \"#b33dc6\",\n  \"#ef9b20\",\n  \"#87bc45\",\n  \"#f46a9b\",\n  \"#ace5c7\",\n  \"#ede15b\",\n  \"#836dc5\",\n  \"#86d87f\",\n  \"#27aeef\"\n]\n\nexport const grey = [\n  \"#F8F8FA\",\n  \"#EFF2F5\",\n  \"#D2D6DF\",\n  \"#C3C6CF\",\n  \"#ADB0B6\",\n  \"#666A73\",\n  \"#45494E\",\n  \"#363A43\",\n  \"#282C35\"\n]\n\nexport const colors = {\n  mapdUI,\n  mapdColors,\n  grey\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","module.exports = (function() {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            const defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            const noStyleTags = {'BASE':true,'HEAD':true,'HTML':true,'META':true,'NOFRAME':true,'NOSCRIPT':true,'PARAM':true,'SCRIPT':true,'STYLE':true,'TITLE':true};\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            const tagNames = ['A','ABBR','ADDRESS','AREA','ARTICLE','ASIDE','AUDIO','B','BASE','BDI','BDO','BLOCKQUOTE','BODY','BR','BUTTON','CANVAS','CAPTION','CENTER','CITE','CODE','COL','COLGROUP','COMMAND','DATALIST','DD','DEL','DETAILS','DFN','DIV','DL','DT','EM','EMBED','FIELDSET','FIGCAPTION','FIGURE','FONT','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEAD','HEADER','HGROUP','HR','HTML','I','IFRAME','IMG','INPUT','INS','KBD','LABEL','LEGEND','LI','LINK','MAP','MARK','MATH','MENU','META','METER','NAV','NOBR','NOSCRIPT','OBJECT','OL','OPTION','OPTGROUP','OUTPUT','P','PARAM','PRE','PROGRESS','Q','RP','RT','RUBY','S','SAMP','SCRIPT','SECTION','SELECT','SMALL','SOURCE','SPAN','STRONG','STYLE','SUB','SUMMARY','SUP','SVG','TABLE','TBODY','TD','TEXTAREA','TFOOT','TH','THEAD','TIME','TITLE','TR','TRACK','U','UL','VAR','VIDEO','WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, (name) => {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                let defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, (style) => {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName (tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                let cssTexts = [],\n                    elements,\n                    computedStyle,\n                    defaultStyle,\n                    result;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n                    \n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, (el, i) => {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, (cssPropName) => {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, (el, i) => {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n\n            };\n\n            return serializeWithStyles;\n        }\n    }\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/serializeWithStyles.js","export const keys = {\n  DATA: \"key\",\n  VALUE: \"value\",\n  ID: \"id\",\n  LABEL: \"label\",\n  GROUP: \"group\",\n  VALUES: \"values\",\n  SERIES: \"series\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","import {keys} from \"./constants\"\n\n/**\n * Clones the passed array of data\n * @param  {Object[]} dataToClone Data to clone\n * @return {Object[]}             Cloned data\n */\nexport function cloneData (_dataToClone) {\n  return JSON.parse(JSON.stringify(_dataToClone))\n}\n\nexport function sortData (_data, _keyType) {\n  const sortedData = cloneData(_data)\n  if (_keyType === \"time\") {\n    sortedData.forEach((d) => {\n      d[keys.DATA] = new Date(d[keys.DATA])\n    })\n    sortedData.sort((a, b) => a[keys.DATA].getTime() - b[keys.DATA].getTime())\n  } else if (_keyType === \"string\") {\n    sortedData.sort((a, b) => a[keys.DATA].localeCompare(b[keys.DATA], \"en\", {numeric: false}))\n  } else {\n    sortedData.sort((a, b) => a[keys.DATA] - b[keys.DATA])\n  }\n  return sortedData\n}\n\nexport function getUnique (arr) {\n  return [...new Set(arr)]\n}\n\nexport function invertScale (_scale, _mouseX, _keyType) {\n  if (_keyType === \"time\") {\n    return _scale.invert(_mouseX)\n  } else {\n    const bandStep = _scale.step()\n    const index = Math.round((_mouseX) / bandStep)\n    return _scale.domain()[index]\n  }\n}\n\nexport function override (a, b) {\n  const accum = {}\n  for (const x in a) {\n    if (a.hasOwnProperty(x)) {\n      accum[x] = (x in b) ? b[x] : a[x]\n    }\n  }\n  return accum\n}\n\nexport function throttle (callback, limit) {\n  let wait = false\n  let timer = null\n  return function throttleFn (...args) {\n    if (!wait) {\n      wait = true\n      clearTimeout(timer)\n      timer = setTimeout(() => {\n        wait = false\n        callback(...args)\n      }, limit)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {getUnique, override} from \"./helpers/common\"\n\nexport default function Scale () {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    height: null,\n    width: null,\n    keyType: null,\n    chartType: null,\n    colorSchema: null,\n    defaultColor: null\n  }\n\n  let data = {\n    dataByKey: null,\n    dataBySeries: null,\n    flatDataSorted: null,\n    groupKeys: null\n  }\n\n  const getID = (d) => d[keys.ID]\n  const getKey = (d) => d[keys.DATA]\n  const getValue = (d) => d[keys.VALUE]\n\n  function buildXScale (_allKeys) {\n    const chartWidth = config.width - config.margin.left - config.margin.right\n    let datesExtent = null\n    let xScale = null\n    if (config.keyType === \"time\") {\n      datesExtent = d3.extent(_allKeys)\n      xScale = d3.scaleTime()\n    } else {\n      datesExtent = _allKeys\n      xScale = (config.chartType === \"bar\" || config.chartType === \"stackedBar\") ? d3.scaleBand() : d3.scalePoint()\n      xScale.padding(0)\n    }\n\n    xScale.domain(datesExtent)\n      .range([0, chartWidth])\n\n    return xScale\n  }\n\n  function buildYScale (_extent) {\n    const chartHeight = config.height - config.margin.top - config.margin.bottom\n    const yScale = d3.scaleLinear()\n        .domain(_extent)\n        .rangeRound([chartHeight, 0])\n        .nice()\n\n    return yScale\n  }\n\n  function buildColorScale () {\n    const ids = data.dataBySeries.map(getID)\n    const colorScale = d3.scaleOrdinal()\n        .range(config.colorSchema.map((d) => d.value))\n        .domain(config.colorSchema.map((d, i) => d.key || ids[i]))\n        .unknown(config.defaultColor)\n\n    return colorScale\n  }\n\n  function splitByGroups () {\n    const groups = {}\n    data.dataBySeries.forEach((d) => {\n      const key = d[keys.GROUP]\n      if (!groups[key]) {\n        groups[key] = {\n          allValues: [],\n          allKeys: []\n        }\n      }\n      groups[key].allValues = groups[key].allValues.concat(d[keys.VALUES].map(getValue))\n      groups[key].allKeys = groups[key].allKeys.concat(d[keys.VALUES].map(getKey))\n    })\n\n    return groups\n  }\n\n  function getStackedScales () {\n    const allStackHeights = data.dataByKey.map((d) => d3.sum(d.series.map((dB) => dB.value)))\n\n    const stackData = data.dataByKey.map((d) => {\n      const points = {\n        key: d[keys.DATA]\n      }\n      d.series.forEach((dB) => {\n        points[dB[keys.ID]] = dB[keys.VALUE]\n      })\n\n      return points\n    })\n\n    const stack = d3.stack()\n      .keys(data.dataBySeries.map(getID))\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone)\n\n    const valuesExtent = d3.extent(allStackHeights)\n\n    const allKeys = data.flatDataSorted.map(getKey)\n    const allUniqueKeys = getUnique(allKeys)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale([0, valuesExtent[1]])\n\n    return {\n      stackData,\n      stack,\n      xScale,\n      yScale,\n      colorScale\n    }\n  }\n\n  function getHorizontalScales () {\n    const groups = splitByGroups()\n\n    const hasSecondAxis = data.groupKeys.length > 1\n\n    const groupAxis1 = groups[data.groupKeys[0]]\n    const allUniqueKeys = groupAxis1.allKeys\n    const valuesExtent = d3.extent(groupAxis1.allValues)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale(valuesExtent)\n\n    let yScale2 = null\n    if (hasSecondAxis) {\n      const groupAxis2 = groups[data.groupKeys[1]]\n      const valuesExtent2 = d3.extent(groupAxis2.allValues)\n\n      yScale2 = yScale.copy()\n        .domain(valuesExtent2)\n    }\n\n    return {\n      hasSecondAxis,\n      xScale,\n      yScale,\n      colorScale,\n      yScale2\n    }\n  }\n\n  function getScales () {\n    if (config.chartType === \"stackedBar\"\n      || config.chartType === \"stackedArea\") {\n      return getStackedScales()\n    } else {\n      return getHorizontalScales()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setData,\n    getScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/scale.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Line (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    yScale2: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function drawLines () {\n    const seriesLine = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale(d[keys.VALUE]))\n\n    const seriesLine2 = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale2(d[keys.VALUE]))\n        .curve(d3.curveCatmullRom)\n\n    const lines = cache.svg.selectAll(\".mark.line\")\n        .data(data.dataBySeries)\n\n    lines.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"line\"].join(\" \"))\n      .merge(lines)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === data.groupKeys[0]) {\n          return seriesLine(d[keys.VALUES])\n        } else {\n          return seriesLine2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", \"none\")\n\n    lines.exit().remove()\n  }\n\n  function drawAreas () {\n    const seriesArea = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n\n    const seriesArea2 = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale2(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n        .curve(d3.curveCatmullRom)\n\n    const areas = cache.svg.selectAll(\".mark.area\")\n        .data(data.dataBySeries)\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === data.groupKeys[0]) {\n          return seriesArea(d[keys.VALUES])\n        } else {\n          return seriesArea2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", getColor)\n\n    areas.exit().remove()\n  }\n\n  function drawStackedAreas () {\n    const seriesLine = d3.area()\n        .x((d) => scales.xScale(d.data[keys.DATA]))\n        .y0((d) => scales.yScale(d[0]))\n        .y1((d) => scales.yScale(d[1]))\n\n    const areas = cache.svg.selectAll(\".mark.stacked-area\")\n        .data(data.stack(data.stackData))\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"stacked-area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", seriesLine)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", (d) => scales.colorScale(d.key))\n\n    areas.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"area\") {\n      drawAreas()\n    } else if (config.chartType === \"line\") {\n      drawLines()\n    } else if (config.chartType === \"stackedArea\") {\n      drawStackedAreas()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","import {keys} from \"./helpers/constants\"\n\nexport default function Bar (config, cache) {\n\n  const getColor = (d) => cache.colorScale(d[keys.ID])\n\n  function drawBars () {\n    const bars = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark\")\n        .data(cache.dataBySeries[0].values)\n\n    bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", () => [\"mark\", \"rect\"].join(\" \"))\n      .merge(bars)\n      .attr(\"x\", (d) => cache.xScale(d[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[keys.VALUE]))\n      .attr(\"width\", () => cache.xScale.bandwidth())\n      .attr(\"height\", (d) => cache.chartHeight - cache.yScale(d[keys.VALUE]))\n      .style(\"stroke\", \"white\")\n      .style(\"fill\", getColor)\n\n    bars.exit().remove()\n  }\n\n  function drawStackedBars () {\n\n    const stackedBarGroups = cache.svg.select(\".chart-group\")\n        .selectAll(\".mark-group\")\n        .data(cache.stack(cache.stackData))\n\n    const stackedUpdate = stackedBarGroups.enter()\n      .append(\"g\")\n      .attr(\"class\", \"mark-group\")\n      .merge(stackedBarGroups)\n      .attr(\"fill\", (d) => cache.colorScale(d.key))\n      .attr(\"stroke\", \"white\")\n\n    stackedBarGroups.exit().remove()\n\n    const stackedBars = stackedUpdate.selectAll(\".mark\")\n        .data((d) => d)\n\n    stackedBars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark\")\n      .merge(stackedBars)\n      .attr(\"x\", (d) => cache.xScale(d.data[keys.DATA]))\n      .attr(\"y\", (d) => cache.yScale(d[1]))\n      .attr(\"height\", (d) => cache.yScale(d[0]) - cache.yScale(d[1]))\n      .attr(\"width\", cache.xScale.bandwidth())\n\n    stackedBars.exit().remove()\n  }\n\n  return {\n    drawBars,\n    drawStackedBars\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Axis (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    tickSizes: null,\n    tickPadding: null,\n    xAxisFormat: null,\n    keyType: null,\n    yTicks: null,\n    yAxisFormat: null,\n    xAxisPadding: null,\n    axisTransitionDuration: null,\n    ease: null,\n    yTitle: null,\n    xTitle: null,\n    grid: null\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null\n  }\n\n  const cache = {\n    container: _container,\n    chartHeight: null,\n    chartWidth: null,\n    xAxis: null,\n    yAxis: null,\n    yAxis2: null,\n    horizontalGridLines: null,\n    verticalGridLines: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"axis-group\", true)\n\n      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\")\n      cache.svg.append(\"g\").attr(\"class\", \"axis x\")\n      cache.svg.append(\"g\").attr(\"class\", \"axis y\")\n      cache.svg.append(\"g\").attr(\"class\", \"axis y2\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function buildAxis () {\n    cache.xAxis = d3.axisBottom(scales.xScale)\n        .tickSize(config.tickSizes, 0)\n        .tickPadding(config.tickPadding)\n\n    if (config.keyType === \"time\") {\n      const formatter = d3.timeFormat(config.xAxisFormat)\n      cache.xAxis.tickFormat(formatter)\n    } else {\n      cache.xAxis.tickValues(scales.xScale.domain().filter((d, i) => !(i % config.tickSkip)))\n    }\n\n    cache.yAxis = d3.axisLeft(scales.yScale)\n        .ticks(config.yTicks)\n        .tickSize([config.tickSizes])\n        .tickPadding(config.tickPadding)\n        .tickFormat(d3.format(config.yAxisFormat))\n\n    if (scales.hasSecondAxis) {\n      cache.yAxis2 = d3.axisRight(scales.yScale2)\n          .ticks(config.yTicks)\n          .tickSize([config.tickSizes])\n          .tickPadding(config.tickPadding)\n          .tickFormat(d3.format(config.yAxisFormat))\n    }\n  }\n\n  function drawAxis () {\n    buildSVG()\n    buildAxis()\n\n    cache.svg.select(\".axis.x\")\n        .attr(\"transform\", `translate(0, ${cache.chartHeight})`)\n        .call(cache.xAxis)\n\n    cache.svg.select(\".axis.y\")\n        .attr(\"transform\", `translate(${-config.xAxisPadding.left}, 0)`)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .ease(config.ease)\n        .call(cache.yAxis)\n\n    if (scales.hasSecondAxis) {\n      cache.svg.select(\".axis.y2\")\n          .attr(\"transform\", `translate(${cache.chartWidth - config.xAxisPadding.right}, 0)`)\n          .transition()\n          .duration(config.axisTransitionDuration)\n          .ease(config.ease)\n          .call(cache.yAxis2)\n    }\n\n    return this\n  }\n\n  function drawAxisTitles () {\n    cache.svg.select(\".y-title\")\n      .text(config.yTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", function transform () {\n        const textHeight = this.getBBox().height\n        return `translate(${[textHeight, config.height / 2]}) rotate(-90)`\n      })\n\n    cache.svg.select(\".x-title\")\n      .text(config.xTitle)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(${[config.width / 2, config.height]})`)\n\n    return this\n  }\n\n  function drawGridLines () {\n    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.horizontal-grid-line\")\n          .data(scales.yScale.ticks(config.yTicks))\n\n      cache.horizontalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"horizontal-grid-line\")\n        .merge(cache.horizontalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"x1\", (-config.xAxisPadding.left))\n        .attr(\"x2\", cache.chartWidth)\n        .attr(\"y1\", scales.yScale)\n        .attr(\"y2\", scales.yScale)\n\n      cache.horizontalGridLines.exit().remove()\n    }\n\n    if (config.grid === \"vertical\" || config.grid === \"full\") {\n      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.vertical-grid-line\")\n          .data(cache.xAxis.tickValues())\n\n      cache.verticalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"vertical-grid-line\")\n        .merge(cache.verticalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", cache.chartHeight)\n        .attr(\"x1\", scales.xScale)\n        .attr(\"x2\", scales.xScale)\n\n      cache.verticalGridLines.exit().remove()\n    }\n\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    drawAxis,\n    drawAxisTitles,\n    drawGridLines\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/axis.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override} from \"./helpers/common\"\n\nexport default function Tooltip (_container) {\n\n  let config = {\n    margin: {\n      top: 2,\n      right: 2,\n      bottom: 2,\n      left: 2\n    },\n    width: 250,\n    height: 45,\n\n    valueFormat: \".2f\",\n\n    tooltipMaxTopicLength: 170,\n    tooltipBorderRadius: 3,\n\n    // Animations\n    mouseChaseDuration: 30,\n    tooltipEase: d3.easeQuadInOut,\n\n    titleHeight: 32,\n    elementHeight: 24,\n    padding: 8,\n    dotRadius: 4,\n\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: [],\n\n    // from chart\n    keyType: \"time\"\n  }\n\n  let scales = {\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    tooltipDivider: null,\n    tooltipBody: null,\n    tooltipTitle: null,\n    tooltipBackground: null\n  }\n\n  // function init () {\n    // if (!isStatic) {\n    //   cache.chart.on(\"mouseOver.tooltip\", show)\n    //     .on(\"mouseMove.tooltip\", update)\n    //     .on(\"mouseOut.tooltip\", hide)\n    // }\n\n  //   render()\n  // }\n  // init()\n\n  function buildSVG () {\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"tooltip-group\", true)\n\n      cache.tooltipBackground = cache.svg.append(\"rect\")\n          .classed(\"tooltip-text-container\", true)\n\n      cache.tooltipTitle = cache.svg.append(\"text\")\n          .classed(\"tooltip-title\", true)\n          .attr(\"dominant-baseline\", \"hanging\")\n\n      cache.tooltipDivider = cache.svg.append(\"line\")\n          .classed(\"tooltip-divider\", true)\n\n      cache.tooltipBody = cache.svg.append(\"g\")\n          .classed(\"tooltip-body\", true)\n\n      setSize(\"auto\", \"auto\")\n      hide()\n    }\n\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    cache.tooltipBackground.attr(\"rx\", config.tooltipBorderRadius)\n        .attr(\"ry\", config.tooltipBorderRadius)\n\n    cache.tooltipTitle.attr(\"dy\", config.padding)\n        .attr(\"dx\", config.padding)\n  }\n\n  function calculateTooltipPosition (_mouseX) {\n    const tooltipX = _mouseX + config.margin.left\n    let offset = 0\n    const tooltipY = config.margin.top\n\n    if (_mouseX > (cache.chartWidth / 2)) {\n      offset = -config.tooltipWidth\n    }\n\n    return [tooltipX + offset, tooltipY]\n  }\n\n  function setPosition (_xPosition) {\n    const [tooltipX, tooltipY] = calculateTooltipPosition(_xPosition)\n\n    cache.svg.transition()\n      .duration(config.mouseChaseDuration)\n      .ease(config.tooltipEase)\n      .attr(\"transform\", `translate(${tooltipX}, ${tooltipY})`)\n\n    return this\n  }\n\n  function setSize (_width, _height) {\n    let height = _height\n    if (_height === \"auto\") {\n      height = cache.tooltipBody.node().getBoundingClientRect().height + config.titleHeight + config.padding\n    }\n    let width = _width\n    if (_width === \"auto\") {\n      width = cache.tooltipBody.node().getBoundingClientRect().width + config.padding * 2\n    }\n\n    cache.tooltipBackground.attr(\"width\", width)\n      .attr(\"height\", height)\n\n    cache.tooltipDivider.attr(\"x2\", width)\n      .attr(\"y1\", config.titleHeight)\n      .attr(\"y2\", config.titleHeight)\n\n    return this\n  }\n\n  function setSeriesContent (_series) {\n    const tooltipLeft = cache.tooltipBody.selectAll(\".tooltip-left-text\")\n        .data(_series)\n    tooltipLeft.enter().append(\"text\")\n      .classed(\"tooltip-left-text\", true)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"dy\", config.padding)\n      .attr(\"dx\", config.padding * 2 + config.dotRadius)\n      .merge(tooltipLeft)\n      .attr(\"y\", (d, i) => i * config.elementHeight + config.titleHeight)\n      .text((d) => d[keys.LABEL])\n    tooltipLeft.exit().remove()\n\n    const values = _series.map(getValueText)\n    const tooltipRight = cache.tooltipBody.selectAll(\".tooltip-right-text\")\n        .data(values)\n    tooltipRight.enter().append(\"text\")\n      .classed(\"tooltip-right-text\", true)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"dy\", config.padding)\n      .attr(\"dx\", -config.padding)\n      .merge(tooltipRight)\n      .attr(\"x\", config.tooltipWidth)\n      .attr(\"y\", (d, i) => i * config.elementHeight + config.titleHeight)\n      .text((d) => d)\n    tooltipRight.exit().remove()\n\n    const tooltipCircles = cache.tooltipBody.selectAll(\".tooltip-circle\")\n        .data(_series)\n    tooltipCircles.enter().append(\"circle\")\n      .classed(\"tooltip-circle\", true)\n      .merge(tooltipCircles)\n      .attr(\"cx\", config.padding + config.dotRadius)\n      .attr(\"cy\", (d, i) => i * config.elementHeight + config.titleHeight + config.elementHeight / 2)\n      .attr(\"r\", config.dotRadius)\n      .style(\"fill\", (d) => scales.colorScale(d[keys.ID]))\n    tooltipCircles.exit().remove()\n  }\n\n  function setTitle (_title) {\n    let title = _title\n    if (config.keyType === \"time\") {\n      title = d3.timeFormat(config.dateFormat)(_title)\n    }\n\n    cache.tooltipTitle.text(title)\n\n    return this\n  }\n\n  function getValueText (_data) {\n    const value = _data[keys.VALUE]\n    if (value) {\n      const formatter = d3.format(config.valueFormat)\n      return formatter(_data[keys.VALUE])\n    } else {\n      return null\n    }\n  }\n\n  function setContent (_series) {\n    let series = _series\n\n    if (config.seriesOrder.length) {\n      series = sortByTopicsOrder(_series)\n    } else if (_series.length && _series[0][keys.LABEL]) {\n      series = sortByAlpha(_series)\n    }\n\n    setSeriesContent(series)\n\n    return this\n  }\n\n  function sortByTopicsOrder (_series, _order = seriesOrder) {\n    return _order.map((orderName) => _series.filter(({name}) => name === orderName)[0])\n  }\n\n  function sortByAlpha (_series) {\n    const series = cloneData(_series)\n    return series.sort((a, b) => a[keys.LABEL].localeCompare(b[keys.LABEL], \"en\", {numeric: false}))\n  }\n\n  function hide () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"none\")\n\n    return this\n  }\n\n  function show () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"block\")\n\n    return this\n  }\n\n  function drawTooltip (_dataPoint, _xPosition) {\n    buildSVG()\n    setTitle(_dataPoint[keys.DATA])\n    setContent(_dataPoint[keys.SERIES])\n    setSize(config.tooltipWidth, \"auto\")\n    setPosition(_xPosition)\n    show()\n\n    return this\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOver.tooltip\", show)\n      .on(\"mouseMove.tooltip\", drawTooltip)\n      .on(\"mouseOut.tooltip\", hide)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function destroy () {\n    cache.container.on(\".tooltip\", null)\n    cache.svg.remove()\n  }\n\n  return {\n    bindEvents,\n    setPosition,\n    setSize,\n    setContent,\n    setTitle,\n    hide,\n    show,\n    drawTooltip,\n    setConfig,\n    setScales,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","import Tooltip from \"./tooltip\"\n\nexport default function Legend (_chart) {\n  return Tooltip(_chart, true)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData, override} from \"./helpers/common\"\n\nexport default function Brush (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null,\n    xScale: null\n  }\n\n  const cache = {\n    container: _container,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"brush-group\", true)\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function extractBrushDimension (_data) {\n    const merged = d3.merge(_data.map((d) => d[keys.VALUES]))\n    return sortData(merged, config.keyType)\n  }\n\n  function buildBrush () {\n    cache.brush = cache.brush || d3.brushX()\n        .on(\"start\", handleBrushStart)\n        .on(\"brush\", handleBrushMove)\n        .on(\"end\", handleBrushEnd)\n\n    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]])\n\n    cache.chartBrush = cache.svg.call(cache.brush)\n\n    cache.chartBrush.selectAll(\".brush-rect\")\n      .attr(\"height\", cache.chartHeight)\n  }\n\n  function getDataExtent () {\n    const selection = d3.event.selection\n    const dataExtent = selection.map((d) => invertScale(config.xScale, d, config.keyType))\n    return dataExtent\n  }\n\n  function handleBrushStart () {\n    dispatcher.call(\"brushStart\", this, getDataExtent(), config)\n  }\n\n  function handleBrushMove () {\n    dispatcher.call(\"brushMove\", this, getDataExtent(), config)\n  }\n\n  function handleBrushEnd () {\n    // Only transition after input, ignore empty selections.\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n\n    const dataExtent = getDataExtent()\n\n    d3.select(this)\n      .transition()\n      .call(d3.event.target.move, dataExtent.map(config.xScale))\n\n    dispatcher.call(\"brushEnd\", this, dataExtent, config)\n  }\n\n  function drawBrush () {\n    buildSVG()\n\n    if (data.dataBySeries) {\n      cache.data = extractBrushDimension(cloneData(data.dataBySeries))\n      buildBrush()\n    }\n\n    return this\n  }\n\n  // function setBrushByPercentages (_a, _b) {\n  //   const x0 = _a * cache.chartWidth\n  //   const x1 = _b * cache.chartWidth\n\n  //   brush.move(chartBrush, [x0, x1])\n  // }\n\n  // function setBrushByDates (_dateA, _dateB) {\n  //   const x0 = cache.xScale(new Date(_dateA))\n  //   const x1 = cache.xScale(new Date(_dateB))\n\n  //   cache.brush.move(cache.chartBrush, [x0, x1])\n  // }\n\n  // function updateHandlers (_dateExtent) {\n  //   if (_dateExtent === null) {\n  //     cache.handle.attr(\"display\", \"none\")\n  //   } else {\n  //     cache.handle\n  //       .attr(\"display\", null)\n  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n  //   }\n  // }\n\n  // API\n\n  /**\n   * Gets or Sets the dateRange for the selected part of the brush\n   * @param  {String[]} _x Desired dateRange for the graph\n   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n   * @public\n   */\n  // function dateRange (_x) {\n  //   if (!arguments.length) {\n  //     return dateRange\n  //   }\n  //   dateRange = _x\n\n  //   if (Array.isArray(dateRange)) {\n  //     setBrushByDates(...dateRange)\n  //   }\n\n  //   return this\n  // }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  return {\n    on,\n    setConfig,\n    setData,\n    destroy,\n    drawBrush\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Hover (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    dotRadius: null\n  }\n\n  let scales = {\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"hover\")\n\n  // function init () {\n  //   cache.chart.on(\"mouseOver.hover\", show)\n  //     .on(\"mouseMove.hover\", update)\n  //     .on(\"mouseOut.hover\", hide)\n\n  //   render()\n  //   hide()\n  // }\n  // init()\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"hover-group\", true)\n          .style(\"pointer-events\", \"none\")\n    }\n\n    // cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function drawHover (_dataPoint, _dataPointXPosition) {\n    buildSVG()\n\n    if (_dataPointXPosition) {\n      moveVerticalMarker(_dataPointXPosition)\n      drawVerticalMarker()\n      if (config.chartType === \"stackedLine\"\n        || config.chartType === \"stackedArea\"\n        || config.chartType === \"stackedBar\") {\n        highlightStackedDataPoints(_dataPoint)\n      } else {\n        highlightDataPoints(_dataPoint)\n      }\n      dispatcher.call(\"hover\", this, _dataPoint)\n    }\n  }\n\n  function show () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"block\")\n\n    return this\n  }\n\n  function hide () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"none\")\n\n    return this\n  }\n\n  function highlightDataPoints (_dataPoint) {\n    const dotsData = _dataPoint[keys.SERIES]\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawHighlightDataPoints (_dotsData) {\n    const dots = cache.svg.selectAll(\".dot\")\n        .data(_dotsData)\n\n    dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .merge(dots)\n      .attr(\"cy\", (d) => {\n        // if (d[keys.GROUP] === chartCache.groupKeys[0]) {\n        if (d[keys.GROUP] === 0) {\n          return scales.yScale(d[keys.VALUE])\n        } else {\n          return scales.yScale2(d[keys.VALUE])\n        }\n      })\n      .attr(\"r\", config.dotRadius)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", getColor)\n\n    dots.exit().remove()\n  }\n\n  function highlightStackedDataPoints (_dataPoint) {\n    const stackedDataPoint = {key: _dataPoint[keys.DATA]}\n    _dataPoint.series.forEach((d) => {\n      const id = d[keys.ID]\n      stackedDataPoint[id] = d[keys.VALUE]\n    })\n\n    // const dotsStack = data.stack([stackedDataPoint])\n    // const dotsData = dotsStack.map((d) => {\n    //   const dot = {value: d[0][1]}\n    //   dot[keys.ID] = d.key\n    //   return dot\n    // })\n\n    // drawHighlightDataPoints(dotsData)\n  }\n\n  function drawVerticalMarker () {\n    const verticalMarkerLine = cache.svg.selectAll(\"line\")\n        .data([0])\n\n    verticalMarkerLine.enter()\n      .append(\"line\")\n      .classed(\"vertical-marker\", true)\n      .merge(verticalMarkerLine)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", cache.chartHeight)\n\n    verticalMarkerLine.exit().remove()\n  }\n\n  function moveVerticalMarker (_verticalMarkerXPosition) {\n    cache.svg.attr(\"transform\", `translate(${[_verticalMarkerXPosition + config.margin.left, config.margin.top]})`)\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOver.hover\", show)\n      .on(\"mouseMove.hover\", drawHover)\n      .on(\"mouseOut.hover\", hide)\n\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  return {\n    setConfig,\n    setScales,\n    bindEvents,\n    highlightDataPoints,\n    highlightStackedDataPoints,\n    drawVerticalMarker,\n    moveVerticalMarker,\n    on,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/hover.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exclusiveToggle, toggleOnOff} from \"./interactors\"\n\nexport default function Binning (_chart) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    toggle: [\"auto\"],\n    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n    label: \"BIN:\"\n  }\n\n  const cache = {\n    chart: _chart,\n    svg: null\n  }\n\n  let chartCache = {\n    svg: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"change\")\n\n  function render () {\n    buildSVG()\n  }\n  render()\n\n  function buildSVG () {\n    chartCache = cache.chart.getCache()\n    setConfig(cache.chart.getConfig())\n\n    if (!cache.svg) {\n      cache.svg = chartCache.svg.append(\"g\")\n          .classed(\"binning-group\", true)\n          .append(\"text\")\n\n      cache.svg.append(\"tspan\")\n        .text(config.label)\n        .attr(\"y\", \"1em\")\n        .attr(\"class\", \"item\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${[config.margin.left, 0]})`)\n\n    const items = cache.svg.selectAll(\".toggleOnOff\")\n        .data(config.toggle)\n    items.enter().append(\"tspan\")\n      .attr(\"class\", (d) => `item ${d} toggleOnOff`)\n      .attr(\"dx\", \"0.8em\")\n      .attr(\"y\", \"1em\")\n      .on(\"click.select\", toggleOnOff(\".binning-group .item.toggleOnOff\"))\n      .on(\"click.d3.dispatch\", function click (d) {\n        const isSelected = this.classList.contains(\"selected\")\n        dispatcher.call(\"change\", this, d, {isSelected})\n      })\n      .merge(items)\n      .text((d) => d)\n    items.exit().remove()\n\n    const itemsExclusive = cache.svg.selectAll(\".toggleExclusive\")\n        .data(config.exclusiveToggle)\n    itemsExclusive.enter().append(\"tspan\")\n      .attr(\"class\", (d) => `item ${d} toggleExclusive`)\n      .attr(\"dx\", \"0.8em\")\n      .attr(\"y\", \"1em\")\n      .on(\"click.select\", exclusiveToggle(\".binning-group .item.toggleExclusive\"))\n      .on(\"click.d3.dispatch\", function click (d) {\n        const isSelected = this.classList.contains(\"selected\")\n        dispatcher.call(\"change\", this, d, {isSelected})\n      })\n      .merge(itemsExclusive)\n      .text((d) => d)\n    itemsExclusive.exit().remove()\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  function update () {\n    render()\n    return this\n  }\n\n  return {\n    getCache,\n    on,\n    setConfig,\n    destroy,\n    update\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/binning.js","import * as d3 from \"./helpers/d3-service\"\n\n/**\n * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n * @param  {Number} selector A valid selector of the elements to toggle\n * @example\n * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n *\n * @return {void}\n */\n\nexport function toggleOnOff (selector) {\n  return exclusiveToggle(selector, {\n    toggleOffIsEnabled: true,\n    toggleMultipleIsEnabled: false\n  })\n}\n\nexport function exclusiveToggle (selector, options = {toggleOffIsEnabled: false, toggleMultipleIsEnabled: false}) {\n\n  return function toggle () {\n    /* eslint-disable consistent-this */\n    const that = this\n    let hasSelection = false\n    const selection = d3.select(this.farthestViewportElement)\n        .selectAll(selector)\n\n    selection.classed(\"selected\", function selectedClass () {\n      const isSelected = this.classList.contains(\"selected\")\n      const hasJustBeenClicked = this === that\n      let shouldBeSelected = false\n\n      if (hasJustBeenClicked) {\n        shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true\n      } else {\n        shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false\n      }\n\n      hasSelection = hasSelection || shouldBeSelected\n      return shouldBeSelected\n    })\n    selection.classed(\"dimmed\", function dimmedClass () {\n      return hasSelection && !this.classList.contains(\"selected\")\n    })\n    /* eslint-enable consistent-this */\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/interactors.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {toggleOnOff} from \"./interactors\"\n\nexport default function DomainEditor (_chart) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    position: {x: 0, y: 0},\n    size: {h: 16, w: 40}\n  }\n\n  const cache = {\n    chart: _chart,\n    svg: null,\n    parentDiv: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  let chartCache = {\n    svg: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"lockToggle\", \"domainChanged\")\n\n  function render () {\n    buildSVG()\n  }\n  render()\n\n  function buildSVG () {\n    chartCache = cache.chart.getCache()\n    setConfig(cache.chart.getConfig())\n\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = chartCache.svg.append(\"g\")\n          .classed(\"domain-editor-group\", true)\n\n      cache.parentDiv = d3.select(cache.svg.node().ownerSVGElement.parentNode)\n      cache.parentDiv.append(\"input\")\n        .attr(\"class\", \"input domain-y-min\")\n        .style(\"position\", \"absolute\")\n        .style(\"top\", `${config.margin.top}px`)\n        .style(\"left\", `${config.margin.left - config.size.w}px`)\n        .style(\"width\", `${config.size.w}px`)\n        .style(\"height\", `${config.size.h}px`)\n\n      cache.parentDiv.append(\"input\")\n        .attr(\"class\", \"input domain-y-max\")\n        .style(\"position\", \"absolute\")\n        .style(\"top\", `${config.margin.top + cache.chartHeight - config.size.h}px`)\n        .style(\"left\", `${config.margin.left - config.size.w}px`)\n        .style(\"width\", `${config.size.w}px`)\n\n      const lockSize = 12\n      cache.parentDiv.append(\"div\")\n        .attr(\"class\", \"domain-lock\")\n        .style(\"position\", \"absolute\")\n        .style(\"width\", `${lockSize}px`)\n        .style(\"height\", `${lockSize}px`)\n        .style(\"top\", `${config.margin.top - lockSize}px`)\n        .style(\"left\", `${config.margin.left - lockSize}px`)\n\n\n      // panel.on(\"click\", function click () {\n      //   const isClosed = this.classList.contains(\"closed\")\n      //   loop.transition().attr(\"transform\", `translate(0, ${isClosed ? \"14\" : \"6\"})`)\n      //   this.classList.toggle(\"closed\", !isClosed)\n      // })\n\n      cache.chart.on(\"hoverYAxis\", (d) => console.log(d))\n    }\n  }\n\n  function on (...args) {\n    return dispatcher.on(...args)\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function getCache () {\n    return cache\n  }\n\n  function destroy () {\n    cache.svg.remove()\n  }\n\n  function update () {\n    render()\n    return this\n  }\n\n  return {\n    getCache,\n    on,\n    setConfig,\n    destroy,\n    update\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/domain-editor.js","import * as d3 from \"./helpers/d3-service\"\nexport {bisector, extent, sum, range, merge} from \"d3-array\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData} from \"./helpers/common\"\n\nexport default function DataManager () {\n  /* eslint-disable no-magic-numbers */\n  let config = {\n    keyType: \"number\", // number, string, time,\n    range: [0, 100],\n    pointCount: 200,\n    groupCount: 2,\n    lineCount: 4\n  }\n  const cache = {\n    data: null,\n    baseDate: null\n  }\n\n  function generateRandomString (_length) {\n    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5)\n  }\n\n  function generateSeries (_dataKeys, _range, _allowNegative) {\n    let value = d3.randomUniform(..._range)()\n    const variabilityRatio = 50\n    const randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio\n    const rnd = d3.randomNormal(0, 1)\n    return _dataKeys.map((d) => {\n      value = value + rnd() * randomWalkStepSize\n      if (!_allowNegative && value < randomWalkStepSize) {\n        value = value + randomWalkStepSize\n      }\n      return {\n        value,\n        key: config.keyType === \"time\" ? d.toISOString() : d\n      }\n    })\n  }\n\n  function generateTestDataset () {\n    let dataKeys = null\n    if (config.keyType === \"time\") {\n      cache.baseDate = new Date()\n      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate))\n    } else if (config.keyType === \"string\") {\n      dataKeys = d3.range(0, config.pointCount).map(() => generateRandomString())\n      dataKeys.sort((a, b) => a.localeCompare(b, \"en\", {numeric: false}))\n    } else if (config.keyType === \"number\") {\n      dataKeys = d3.range(0, config.pointCount).map((d, i) => i)\n    }\n\n    const series = d3.range(config.lineCount).map((d) => ({\n      label: `Label ${d}`,\n      id: d,\n      group: d < config.groupCount ? d : 0,\n      values: generateSeries(dataKeys, config.range)\n    }))\n\n    cache.data = {series}\n\n    // console.log(\"generated data\", cache.data)\n\n    return cache.data\n  }\n\n  function filterByKey (_extent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      const values = series[keys.VALUES]\n      const allKeys = values.map(d => d[keys.DATA])\n      const extentMinIndex = allKeys.indexOf(_extent[0])\n      const extentMaxIndex = allKeys.indexOf(_extent[1])\n      series[keys.VALUES] = series[keys.VALUES].slice(extentMinIndex, extentMaxIndex)\n    })\n\n    return data\n  }\n\n  function filterByDate (_dateExtent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      series[keys.VALUES] = series[keys.VALUES].filter((d) => {\n        const epoch = new Date(d[keys.DATA]).getTime()\n        return epoch >= _dateExtent[0].getTime()\n          && epoch <= _dateExtent[1].getTime()\n      })\n    })\n\n    return data\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  return {\n    generateTestDataset,\n    generateSeries,\n    filterByDate,\n    filterByKey,\n    setConfig\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/data-manager.js","// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 21\n// module chunks = 0","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Observer (_dataManager) {\n  const dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\")\n  const dataManager = _dataManager\n\n  dispatcher.on(\"brushChange.observer\", (_e, _brushConfig) => {\n    const filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e)\n      : dataManager.filterByKey(_e)\n    pub(\"dataFilter\", filtered)\n  })\n\n  function sub (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function pub (_channelName, ...args) {\n    dispatcher.call(_channelName, this, ...args)\n    return this\n  }\n\n  return {\n    sub,\n    pub\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/observer.js"],"sourceRoot":""}