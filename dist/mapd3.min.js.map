{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mapd3.min.js","webpack:///webpack/bootstrap 734c627230e3da9e6e6b","webpack:///./src/bundle.js","webpack:///./src/charts/chart.js","webpack:///./src/charts/helpers/d3-service.js","webpack:///./~/d3/build/d3.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/scale.js","webpack:///./src/charts/line.js","webpack:///./src/charts/axis.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/brush.js","webpack:///./src/charts/hover.js","webpack:///./src/charts/binning.js","webpack:///./src/charts/interactors.js","webpack:///./src/charts/domain-editor.js","webpack:///./src/charts/brush-range-editor.js","webpack:///./src/charts/label.js","webpack:///./src/charts/data-manager.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./src/charts/observer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","Interactors","Hover","Brush","Label","BrushRangeEditor","DomainEditor","Binning","Observer","DataManager","Legend","Tooltip","Chart","undefined","_chart","_chart2","_tooltip","_tooltip2","_legend","_legend2","_dataManager","_dataManager2","_observer","_observer2","_binning","_binning2","_domainEditor","_domainEditor2","_brushRangeEditor","_brushRangeEditor2","_label","_label2","_brush","_brush2","_hover","_hover2","_interactors","_interactors2","_colors","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_container","render","buildSVG","dataObject","dataBySeries","buildChart","w","config","width","cache","container","clientWidth","h","height","clientHeight","chartWidth","margin","left","right","chartHeight","top","bottom","svg","template","base","d3","select","html","style","headerGroup","panel","chart","addEvents","assign","components","scale","_scale2","axis","_axis2","line","_line2","tooltip","legend","brush","hover","binning","domainEditor","brushRangeEditor","label","eventCollector","onBrush","_common","rebind","onHover","onBinning","onDomainEditor","onBrushRangeEditor","onLabel","onPanel","dispatcher","attr","setConfig","setData","scales","getScales","setScales","drawAxis","drawGridLines","drawMarks","bindEvents","legendContent","map","d","setTitle","legendTitle","setContent","setXPosition","legendXPosition","setYPosition","legendYPosition","drawTooltip","show","drawBrush","setBinning","binningReolution","setAuto","binningIsAuto","drawBinning","setXDomain","xDomain","setYDomain","yDomain","setY2Domain","y2Domain","drawDomainEditor","setRangeMin","brushRangeMin","setRangeMax","brushRangeMax","drawRangeEditor","setXLabels","xLabel","setYLabels","yLabel","setY2Labels","y2Label","drawLabels","triggerIntroAnimation","_data","data","cloneData","_constants","keys","SERIES","cleanedData","cleanData","flatData","forEach","serie","VALUES","sortData","keyType","DATA","Date","VALUE","Number","dataPoint","LABEL","GROUP","ID","push","flatDataSorted","dataByKey","nest","getKey","entries","values","groupKeys","stackData","stack","chartType","points","series","dB","getID","order","stackOrderNone","offset","stackOffsetNone","isAnimated","maskingRectangle","transition","duration","animationDuration","ease","on","remove","getNearestDataPoint","_mouseX","keyFromInvertedX","invertScale","xScale","bisectLeft","bisector","dataEntryIndex","dataEntryForXPosition","dataEntryForXPositionPrev","Math","max","nearestDataPoint","THROTTLE_DELAY","throttledDispatch","throttle","apply","arguments","mouse","node","_d3$mouse","_d3$mouse2","_slicedToArray","mouseX","mouseY","xPosition","dataPointXPosition","_config","override","destroy","easeLinear","colorSchema","mapdColors","defaultColor","tickPadding","xAxisFormat","yAxisFormat","y2AxisFormat","tickSizes","yTicks","y2Ticks","xTickSkip","grid","axisTransitionDuration","xTitle","yTitle","dotRadius","valueFormat","mouseChaseDuration","tooltipEase","easeQuadInOut","tooltipHeight","tooltipWidth","dateFormat","seriesOrder","yScale","yScale2","hasSecondAxis","colorScale","xAxis","yAxis","yAxis2","dispatch","events","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","length","err","Array","isArray","TypeError","_d3Service","_scale","_line","_axis","enumerable","get","axisBottom","axisLeft","axisRight","timeFormat","format","extent","sum","range","merge","event","randomUniform","randomNormal","timeDay","timeMonth","area","curveCatmullRom","scaleTime","scalePoint","scaleBand","scaleLinear","scaleOrdinal","brushX","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","number$1","center","bandwidth","round","entering","__axis","orient","context","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","range0","range1","position","copy","selection","path","selectAll","tick","tickExit","exit","tickEnter","enter","append","text","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","t","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","set","callback","noop","concat","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fitExtent","projection","clip","clipExtent","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","version","hi","mid","ascendingBisect","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","transform$$1","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","sourceRandomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleIdentity","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","mapdUI","skyBlue","_toConsumableArray","arr2","_dataToClone","_keyType","sortedData","getTime","localeCompare","numeric","getUnique","bandStep","accum","limit","wait","_len","_key","_len2","_key2","Scale","buildXScale","_allKeys","buildYScale","_extent","buildColorScale","ids","splitByGroups","allValues","allKeys","getValue","getStackedScales","allStackHeights","valuesExtent","allUniqueKeys","getHorizontalScales","groupAxis1","groupAxis2","valuesExtent2","Line","drawLines","seriesLine","seriesLine2","getColor","drawAreas","seriesArea","seriesArea2","areas","drawStackedAreas","_scales","Axis","buildAxis","formatter","horizontalGridLines","verticalGridLines","hoverZoneSize","background","tooltipTitle","tooltipBody","calculateTooltipPosition","_mouseY","OFFSET","tooltipSize","tooltipX","avoidanceOffset","tooltipY","yPosition","drawContent","content","tooltipItems","tooltipItemsUpdate","tooltipItem","legendData","drawTitle","title","_typeof","setupContent","_series","sortByTopicsOrder","sortByAlpha","_order","orderName","_ref","hide","setupTooltip","_dataPoint","_xPosition","_yPosition","_calculateTooltipPosi","_calculateTooltipPosi2","_dispatcher","_title","_content","tooltipDivider","tooltipBackground","extractBrushDimension","buildBrush","handleBrushStart","handleBrushMove","handleBrushEnd","chartBrush","getDataExtent","dataExtent","dateRange","drawHover","_dataPointXPosition","moveVerticalMarker","drawVerticalMarker","highlightStackedDataPoints","highlightDataPoints","dotsData","drawHighlightDataPoints","_dotsData","dots","stackedDataPoint","dotsStack","dot","verticalMarkerLine","_verticalMarkerXPosition","autoItem","isSelected","toggled","autoLabel","binningItems","exclusiveToggle","LINE_HEIGHT","changeBinning","selectedBin","toggleAuto","isAuto","_selectedItemName","_shouldBeSelected","_selectedBin","_isAuto","toggleOnOff","bool","shouldBeSelected","othersSelection","toggle","toggleOffIsEnabled","toggleMultipleIsEnabled","options","hasSelection","selectionNode","hasJustBeenClicked","blurOnEnter","blur","xHitZone","showXEditor","hideXEditor","yHitZone","showYEditor","hideYEditor","y2HitZone","showY2Editor","hideY2Editor","yMaxInput","innerText","yMinInput","yLockIcon","isLocked","y2MaxInput","y2MinInput","y2LockIcon","xMinInput","xMaxInput","xLockIcon","HOVER_ZONE_SIZE","LOCK_SIZE","INPUT_HEIGHT","PADDING","INPUT_WIDTH","_xDomain","_yDomain","_y2Domain","setXLock","_xLock","xLock","setYLock","_yLock","yLock","setY2Lock","_y2Lock","y2Lock","inputMax","rangeMax","inputMin","rangeMin","_rangeMin","_rangeMax","xAxisLabel","yAxisLabel","y2AxisLabel","textHeight","textWidth","_xLabel","_yLabel","_y2Label","generateRandomString","_length","substr","generateSeries","_dataKeys","_range","_allowNegative","variabilityRatio","randomWalkStepSize","rnd","generateTestDataset","dataKeys","baseDate","pointCount","lineCount","groupCount","filterByKey","extentMinIndex","extentMaxIndex","filterByDate","_dateExtent","epoch","_d3Array","sub","pub","_channelName","dataManager","_brushConfig","filtered"],"mappings":"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","file":"mapd3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.colors = exports.Interactors = exports.Hover = exports.Brush = exports.Label = exports.BrushRangeEditor = exports.DomainEditor = exports.Binning = exports.Observer = exports.DataManager = exports.Legend = exports.Tooltip = exports.Chart = undefined;\n\t\n\tvar _chart = __webpack_require__(1);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _tooltip = __webpack_require__(10);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(11);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _dataManager = __webpack_require__(19);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tvar _observer = __webpack_require__(21);\n\t\n\tvar _observer2 = _interopRequireDefault(_observer);\n\t\n\tvar _binning = __webpack_require__(14);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(16);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(17);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(18);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _brush = __webpack_require__(12);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(13);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _interactors = __webpack_require__(15);\n\t\n\tvar _interactors2 = _interopRequireDefault(_interactors);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Chart = _chart2.default;\n\texports.Tooltip = _tooltip2.default;\n\texports.Legend = _legend2.default;\n\texports.DataManager = _dataManager2.default;\n\texports.Observer = _observer2.default;\n\texports.Binning = _binning2.default;\n\texports.DomainEditor = _domainEditor2.default;\n\texports.BrushRangeEditor = _brushRangeEditor2.default;\n\texports.Label = _label2.default;\n\texports.Brush = _brush2.default;\n\texports.Hover = _hover2.default;\n\texports.Interactors = _interactors2.default;\n\texports.colors = _colors.colors;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Chart;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _scale = __webpack_require__(7);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _line = __webpack_require__(8);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _axis = __webpack_require__(9);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tvar _tooltip = __webpack_require__(10);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(11);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _brush = __webpack_require__(12);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(13);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _binning = __webpack_require__(14);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(16);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(17);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(18);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Chart(_container) {\n\t\n\t  var config = {\n\t    // common\n\t    margin: {\n\t      top: 48,\n\t      right: 32,\n\t      bottom: 48,\n\t      left: 32\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    chartType: \"line\", // line, area, stackedLine, stackedArea\n\t    ease: d3.easeLinear,\n\t\n\t    // intro animation\n\t    isAnimated: false,\n\t    animationDuration: 1500,\n\t\n\t    // scale\n\t    colorSchema: _colors.colors.mapdColors.map(function (d) {\n\t      return { value: d };\n\t    }),\n\t    defaultColor: \"skyblue\",\n\t\n\t    // axis\n\t    tickPadding: 5,\n\t    xAxisFormat: \"auto\",\n\t    yAxisFormat: \".2f\",\n\t    y2AxisFormat: \".2f\",\n\t    tickSizes: 8,\n\t    yTicks: 5,\n\t    y2Ticks: 5,\n\t    xTickSkip: 0,\n\t    grid: null,\n\t    axisTransitionDuration: 0,\n\t\n\t    xTitle: \"\",\n\t    yTitle: \"\",\n\t\n\t    // hover\n\t    dotRadius: 4,\n\t\n\t    // tooltip\n\t    valueFormat: \".2f\",\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: [],\n\t\n\t    // legend\n\t    legendXPosition: \"auto\",\n\t    legendYPosition: \"auto\",\n\t    legendTitle: \"\",\n\t\n\t    // binning\n\t    binningReolution: \"1mo\",\n\t    binningIsAuto: true,\n\t\n\t    // domain\n\t    xDomain: null,\n\t    yDomain: null,\n\t    y2Domain: null,\n\t\n\t    // brush range\n\t    brushRangeMin: null,\n\t    brushRangeMax: null,\n\t\n\t    // label\n\t    xLabel: \"\",\n\t    yLabel: \"\",\n\t    y2Label: \"\"\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    panel: null,\n\t    margin: null,\n\t    maskingRectangle: null,\n\t    chartWidth: null, chartHeight: null,\n\t    xAxis: null, yAxis: null, yAxis2: null\n\t  };\n\t\n\t  var dataObject = {\n\t    dataBySeries: null,\n\t    dataByKey: null,\n\t    data: null,\n\t    groupKeys: {},\n\t    hasSecondAxis: false,\n\t    stackData: null,\n\t    stack: null,\n\t    flatDataSorted: null\n\t  };\n\t\n\t  var components = {};\n\t  var eventCollector = {};\n\t\n\t  // accessors\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\");\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    if (dataObject.dataBySeries) {\n\t      buildChart();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    var w = config.width || cache.container.clientWidth;\n\t    var h = config.height || cache.container.clientHeight;\n\t    cache.chartWidth = w - config.margin.left - config.margin.right;\n\t    cache.chartHeight = h - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      var template = \"<div class=\\\"mapd3 mapd3-container\\\">\\n        <div class=\\\"header-group\\\"></div>\\n        <svg class=\\\"chart\\\">\\n          <g class=\\\"chart-group\\\"></g>\\n          <g class=\\\"panel-group\\\">\\n            <rect class=\\\"panel-background\\\"></rect>\\n          </g>\\n          <rect class=\\\"masking-rectangle\\\"></rect>\\n        </svg>\\n      </div>\";\n\t\n\t      var base = d3.select(cache.container).html(template);\n\t\n\t      cache.container = base.select(\".mapd3-container\").style(\"position\", \"relative\");\n\t\n\t      cache.svg = base.select(\"svg\");\n\t      cache.headerGroup = base.select(\".header-group\").style(\"position\", \"absolute\");\n\t      cache.panel = cache.svg.select(\".panel-group\");\n\t      cache.chart = cache.svg.select(\".chart-group\");\n\t\n\t      addEvents();\n\t\n\t      Object.assign(components, {\n\t        scale: (0, _scale2.default)(),\n\t        axis: (0, _axis2.default)(cache.chart),\n\t        line: (0, _line2.default)(cache.panel),\n\t        tooltip: (0, _tooltip2.default)(cache.container),\n\t        legend: (0, _legend2.default)(cache.container),\n\t        brush: (0, _brush2.default)(cache.panel),\n\t        hover: (0, _hover2.default)(cache.panel),\n\t        binning: (0, _binning2.default)(cache.headerGroup),\n\t        domainEditor: (0, _domainEditor2.default)(cache.container),\n\t        brushRangeEditor: (0, _brushRangeEditor2.default)(cache.headerGroup),\n\t        label: (0, _label2.default)(cache.container)\n\t      });\n\t\n\t      Object.assign(eventCollector, {\n\t        onBrush: (0, _common.rebind)(components.brush),\n\t        onHover: (0, _common.rebind)(components.hover),\n\t        onBinning: (0, _common.rebind)(components.binning),\n\t        onDomainEditor: (0, _common.rebind)(components.domainEditor),\n\t        onBrushRangeEditor: (0, _common.rebind)(components.brushRangeEditor),\n\t        onLabel: (0, _common.rebind)(components.label),\n\t        onPanel: (0, _common.rebind)(dispatcher)\n\t      });\n\t    }\n\t\n\t    cache.svg.attr(\"width\", config.width).attr(\"height\", config.height);\n\t\n\t    cache.headerGroup.style(\"width\", cache.chartWidth).style(\"left\", config.margin.left);\n\t\n\t    cache.panel.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\").select(\".panel-background\").attr(\"width\", cache.chartWidth).attr(\"height\", cache.chartHeight).attr(\"fill\", \"transparent\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildChart() {\n\t    components.scale.setConfig(config).setData(dataObject);\n\t    scales = components.scale.getScales();\n\t\n\t    components.axis.setConfig(config).setScales(scales).drawAxis().drawGridLines();\n\t\n\t    components.line.setConfig(config).setScales(scales).setData(dataObject).drawMarks();\n\t\n\t    components.tooltip.setConfig(config).setScales(scales).bindEvents(dispatcher);\n\t\n\t    var legendContent = dataObject.dataBySeries.map(function (d) {\n\t      return {\n\t        id: d.id,\n\t        key: d.key,\n\t        label: d.label\n\t      };\n\t    });\n\t\n\t    components.legend.setConfig(config).setScales(scales).setTitle(config.legendTitle).setContent(legendContent).setXPosition(config.legendXPosition).setYPosition(config.legendYPosition).drawTooltip().show();\n\t\n\t    components.brush.setConfig(config).setScales(scales).setData(dataObject).drawBrush();\n\t\n\t    components.hover.setConfig(config).setScales(scales).setData(dataObject).bindEvents(dispatcher);\n\t\n\t    components.binning.setConfig(config).setBinning(config.binningReolution).setAuto(config.binningIsAuto).drawBinning();\n\t\n\t    components.domainEditor.setConfig(config).setXDomain(config.xDomain).setYDomain(config.yDomain).setY2Domain(config.y2Domain).drawDomainEditor();\n\t\n\t    components.brushRangeEditor.setConfig(config).setRangeMin(config.brushRangeMin).setRangeMax(config.brushRangeMax).drawRangeEditor();\n\t\n\t    components.label.setConfig(config).setXLabels(config.xLabel).setYLabels(config.yLabel).setY2Labels(config.y2Label).drawLabels();\n\t\n\t    triggerIntroAnimation();\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    dataObject.data = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var cleanedData = cleanData(_data);\n\t    Object.assign(dataObject, cleanedData);\n\t\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  function cleanData(_data) {\n\t    var dataBySeries = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var flatData = [];\n\t\n\t    // Normalize dataBySeries\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES] = (0, _common.sortData)(serie[_constants.keys.VALUES], config.keyType);\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        d[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        d[_constants.keys.VALUE] = Number(d[_constants.keys.VALUE]);\n\t      });\n\t    });\n\t\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        var dataPoint = {};\n\t        dataPoint[_constants.keys.LABEL] = serie[_constants.keys.LABEL];\n\t        dataPoint[_constants.keys.GROUP] = serie[_constants.keys.GROUP];\n\t        dataPoint[_constants.keys.ID] = serie[_constants.keys.ID];\n\t        dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        dataPoint[_constants.keys.VALUE] = d[_constants.keys.VALUE];\n\t        flatData.push(dataPoint);\n\t      });\n\t    });\n\t\n\t    var flatDataSorted = (0, _common.sortData)(flatData, config.keyType);\n\t\n\t    var dataByKey = d3.nest().key(getKey).entries(flatDataSorted).map(function (d) {\n\t      var dataPoint = {};\n\t      dataPoint[_constants.keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key;\n\t      dataPoint[_constants.keys.SERIES] = d.values;\n\t      return dataPoint;\n\t    });\n\t\n\t    var groupKeys = {};\n\t    dataBySeries.forEach(function (d) {\n\t      if (!groupKeys[d[_constants.keys.GROUP]]) {\n\t        groupKeys[d[_constants.keys.GROUP]] = [];\n\t      }\n\t      groupKeys[d[_constants.keys.GROUP]].push(d[_constants.keys.ID]);\n\t    });\n\t\n\t    var stackData = null;\n\t    var stack = null;\n\t\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      stackData = dataByKey.map(function (d) {\n\t        var points = {\n\t          key: d[_constants.keys.DATA]\n\t        };\n\t        d.series.forEach(function (dB) {\n\t          points[dB[_constants.keys.ID]] = dB[_constants.keys.VALUE];\n\t        });\n\t\n\t        return points;\n\t      });\n\t\n\t      stack = d3.stack().keys(dataBySeries.map(getID)).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n\t    }\n\t\n\t    return { dataBySeries: dataBySeries, dataByKey: dataByKey, stack: stack, stackData: stackData, flatDataSorted: flatDataSorted, groupKeys: groupKeys };\n\t  }\n\t\n\t  function triggerIntroAnimation() {\n\t    if (config.isAnimated) {\n\t      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\").attr(\"width\", cache.chartWidth - 2).attr(\"height\", cache.chartHeight).attr(\"x\", config.margin.left + 1).attr(\"y\", config.margin.top);\n\t\n\t      cache.maskingRectangle.transition().duration(config.animationDuration).ease(config.ease).attr(\"width\", 0).attr(\"x\", config.width - config.margin.right).on(\"end\", function () {\n\t        return cache.maskingRectangle.remove();\n\t      });\n\t    }\n\t  }\n\t\n\t  function getNearestDataPoint(_mouseX) {\n\t    var keyFromInvertedX = (0, _common.invertScale)(scales.xScale, _mouseX, config.keyType);\n\t    var bisectLeft = d3.bisector(getKey).left;\n\t    var dataEntryIndex = bisectLeft(dataObject.dataByKey, keyFromInvertedX);\n\t    var dataEntryForXPosition = dataObject.dataByKey[dataEntryIndex];\n\t    var dataEntryForXPositionPrev = dataObject.dataByKey[Math.max(dataEntryIndex - 1, 0)];\n\t\n\t    var nearestDataPoint = null;\n\t\n\t    if (keyFromInvertedX) {\n\t      if (keyFromInvertedX - dataEntryForXPositionPrev.key < dataEntryForXPosition.key - keyFromInvertedX) {\n\t        nearestDataPoint = dataEntryForXPositionPrev;\n\t      } else {\n\t        nearestDataPoint = dataEntryForXPosition;\n\t      }\n\t    }\n\t    return nearestDataPoint;\n\t  }\n\t\n\t  function addEvents() {\n\t    var THROTTLE_DELAY = 20;\n\t    var throttledDispatch = (0, _common.throttle)(function () {\n\t      dispatcher.call.apply(dispatcher, arguments);\n\t    }, THROTTLE_DELAY);\n\t\n\t    cache.panel.on(\"mouseover.dispatch\", function () {\n\t      dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mouseout.dispatch\", function () {\n\t      dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mousemove.dispatch\", function () {\n\t      var _d3$mouse = d3.mouse(cache.panel.node()),\n\t          _d3$mouse2 = _slicedToArray(_d3$mouse, 2),\n\t          mouseX = _d3$mouse2[0],\n\t          mouseY = _d3$mouse2[1];\n\t\n\t      if (!dataObject.data) {\n\t        return;\n\t      }\n\t      var xPosition = mouseX;\n\t      var dataPoint = getNearestDataPoint(xPosition);\n\t\n\t      if (dataPoint) {\n\t        var dataPointXPosition = scales.xScale(dataPoint[_constants.keys.DATA]);\n\t        throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY);\n\t      }\n\t    });\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.on(\".\", null).remove();\n\t  }\n\t\n\t  return {\n\t    render: render,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    on: on,\n\t    destroy: destroy,\n\t    events: eventCollector\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, \"axisBottom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisBottom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisLeft\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisLeft;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisRight\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisRight;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"format\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.format;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"bisector\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.bisector;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.extent;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.sum;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.range;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.merge;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"nest\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.nest;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"dispatch\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.dispatch;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeQuadInOut\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeQuadInOut;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"select\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.select;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"mouse\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.mouse;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"event\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.event;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"transition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.transition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomUniform\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomUniform;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomNormal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomNormal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeDay\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeDay;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeMonth\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeMonth;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"area\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.area;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"curveCatmullRom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.curveCatmullRom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"line\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.line;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stack\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stack;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOffsetNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOffsetNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOrderNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOrderNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleTime\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleTime;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scalePoint\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scalePoint;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleBand\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleBand;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleOrdinal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleOrdinal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"brushX\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.brushX;\n\t\t}\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.11.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar radial = function(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tvar naturalEarth1 = function() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t};\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$2 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function constrain(transform$$1, extent) {\n\t    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n\t        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n\t        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n\t        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n\t    return transform$$1.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar mapdUI = exports.mapdUI = {\n\t  skyBlue: \"#22A7F0\"\n\t};\n\t\n\tvar mapdColors = exports.mapdColors = [\"#ea5545\", \"#bdcf32\", \"#b33dc6\", \"#ef9b20\", \"#87bc45\", \"#f46a9b\", \"#ace5c7\", \"#ede15b\", \"#836dc5\", \"#86d87f\", \"#27aeef\"];\n\t\n\tvar grey = exports.grey = [\"#F8F8FA\", \"#EFF2F5\", \"#D2D6DF\", \"#C3C6CF\", \"#ADB0B6\", \"#666A73\", \"#45494E\", \"#363A43\", \"#282C35\"];\n\t\n\tvar colors = exports.colors = {\n\t  mapdUI: mapdUI,\n\t  mapdColors: mapdColors,\n\t  grey: grey\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar keys = exports.keys = {\n\t  DATA: \"key\",\n\t  VALUE: \"value\",\n\t  ID: \"id\",\n\t  LABEL: \"label\",\n\t  GROUP: \"group\",\n\t  VALUES: \"values\",\n\t  SERIES: \"series\"\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cloneData = cloneData;\n\texports.sortData = sortData;\n\texports.getUnique = getUnique;\n\texports.invertScale = invertScale;\n\texports.override = override;\n\texports.throttle = throttle;\n\texports.rebind = rebind;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Clones the passed array of data\n\t * @param  {Object[]} dataToClone Data to clone\n\t * @return {Object[]}             Cloned data\n\t */\n\tfunction cloneData(_dataToClone) {\n\t  return JSON.parse(JSON.stringify(_dataToClone));\n\t}\n\t\n\tfunction sortData(_data, _keyType) {\n\t  var sortedData = cloneData(_data);\n\t  if (_keyType === \"time\") {\n\t    sortedData.forEach(function (d) {\n\t      d[_constants.keys.DATA] = new Date(d[_constants.keys.DATA]);\n\t    });\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].getTime() - b[_constants.keys.DATA].getTime();\n\t    });\n\t  } else if (_keyType === \"string\") {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].localeCompare(b[_constants.keys.DATA], \"en\", { numeric: false });\n\t    });\n\t  } else {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA] - b[_constants.keys.DATA];\n\t    });\n\t  }\n\t  return sortedData;\n\t}\n\t\n\tfunction getUnique(arr) {\n\t  return [].concat(_toConsumableArray(new Set(arr)));\n\t}\n\t\n\tfunction invertScale(_scale, _mouseX, _keyType) {\n\t  if (_keyType === \"time\" || _keyType === \"number\") {\n\t    return _scale.invert(_mouseX);\n\t  } else {\n\t    var bandStep = _scale.step();\n\t    var index = Math.round(_mouseX / bandStep);\n\t    return _scale.domain()[index];\n\t  }\n\t}\n\t\n\tfunction override(a, b) {\n\t  var accum = {};\n\t  for (var x in a) {\n\t    if (a.hasOwnProperty(x)) {\n\t      accum[x] = x in b ? b[x] : a[x];\n\t    }\n\t  }\n\t  return accum;\n\t}\n\t\n\tfunction throttle(callback, limit) {\n\t  var wait = false;\n\t  var timer = null;\n\t  return function throttleFn() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    if (!wait) {\n\t      wait = true;\n\t      clearTimeout(timer);\n\t      timer = setTimeout(function () {\n\t        wait = false;\n\t        callback.apply(undefined, args);\n\t      }, limit);\n\t    }\n\t  };\n\t}\n\t\n\tfunction rebind(target) {\n\t  return function reapply() {\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\t\n\t    target.on.apply(target, [args[0] + \".rebind\"].concat(_toConsumableArray(args.slice(1))));\n\t    return this;\n\t  };\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Scale;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Scale() {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    height: null,\n\t    width: null,\n\t    keyType: null,\n\t    chartType: null,\n\t    colorSchema: null,\n\t    defaultColor: null\n\t  };\n\t\n\t  var data = {\n\t    dataByKey: null,\n\t    dataBySeries: null,\n\t    flatDataSorted: null,\n\t    groupKeys: null\n\t  };\n\t\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getValue = function getValue(d) {\n\t    return d[_constants.keys.VALUE];\n\t  };\n\t\n\t  function buildXScale(_allKeys) {\n\t    var chartWidth = config.width - config.margin.left - config.margin.right;\n\t    var domain = null;\n\t    var xScale = null;\n\t    if (config.keyType === \"time\") {\n\t      domain = d3.extent(_allKeys);\n\t      xScale = d3.scaleTime();\n\t    } else if (config.keyType === \"number\") {\n\t      domain = d3.extent(_allKeys);\n\t      xScale = d3.scaleLinear();\n\t    } else {\n\t      domain = _allKeys;\n\t      xScale = config.chartType === \"bar\" || config.chartType === \"stackedBar\" ? d3.scaleBand() : d3.scalePoint();\n\t      xScale.padding(0);\n\t    }\n\t\n\t    xScale.domain(domain).range([0, chartWidth]);\n\t\n\t    return xScale;\n\t  }\n\t\n\t  function buildYScale(_extent) {\n\t    var chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var yScale = d3.scaleLinear().domain(_extent).rangeRound([chartHeight, 0]).nice();\n\t\n\t    return yScale;\n\t  }\n\t\n\t  function buildColorScale() {\n\t    var ids = data.dataBySeries.map(getID);\n\t    var colorScale = d3.scaleOrdinal().range(config.colorSchema.map(function (d) {\n\t      return d.value;\n\t    })).domain(config.colorSchema.map(function (d, i) {\n\t      return d.key || ids[i];\n\t    })).unknown(config.defaultColor);\n\t\n\t    return colorScale;\n\t  }\n\t\n\t  function splitByGroups() {\n\t    var groups = {};\n\t    data.dataBySeries.forEach(function (d) {\n\t      var key = d[_constants.keys.GROUP];\n\t      if (!groups[key]) {\n\t        groups[key] = {\n\t          allValues: [],\n\t          allKeys: []\n\t        };\n\t      }\n\t      groups[key].allValues = groups[key].allValues.concat(d[_constants.keys.VALUES].map(getValue));\n\t      groups[key].allKeys = groups[key].allKeys.concat(d[_constants.keys.VALUES].map(getKey));\n\t    });\n\t\n\t    return groups;\n\t  }\n\t\n\t  function getStackedScales() {\n\t    var allStackHeights = data.dataByKey.map(function (d) {\n\t      return d3.sum(d.series.map(function (dB) {\n\t        return dB.value;\n\t      }));\n\t    });\n\t\n\t    var valuesExtent = d3.extent(allStackHeights);\n\t\n\t    var allKeys = data.flatDataSorted.map(getKey);\n\t    var allUniqueKeys = (0, _common.getUnique)(allKeys);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale([0, valuesExtent[1]]);\n\t\n\t    return {\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getHorizontalScales() {\n\t    var groups = splitByGroups();\n\t\n\t    var hasSecondAxis = Object.keys(data.groupKeys).length > 1;\n\t\n\t    var groupAxis1 = groups[0];\n\t    var allUniqueKeys = groupAxis1.allKeys;\n\t    var valuesExtent = d3.extent(groupAxis1.allValues);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t    var yScale = buildYScale(valuesExtent);\n\t\n\t    var yScale2 = null;\n\t    if (hasSecondAxis) {\n\t      var groupAxis2 = groups[1];\n\t      var valuesExtent2 = d3.extent(groupAxis2.allValues);\n\t\n\t      yScale2 = yScale.copy().domain(valuesExtent2);\n\t    }\n\t\n\t    return {\n\t      hasSecondAxis: hasSecondAxis,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      yScale2: yScale2,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getScales() {\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      return getStackedScales();\n\t    } else {\n\t      return getHorizontalScales();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    getScales: getScales\n\t  };\n\t}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Line;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Line(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t  }\n\t\n\t  function drawLines() {\n\t    var seriesLine = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    });\n\t\n\t    var seriesLine2 = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var lines = cache.svg.selectAll(\".mark.line\").data(data.dataBySeries);\n\t\n\t    lines.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"line\"].join(\" \");\n\t    }).merge(lines).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return seriesLine(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesLine2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", \"none\");\n\t\n\t    lines.exit().remove();\n\t  }\n\t\n\t  function drawAreas() {\n\t    var seriesArea = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    });\n\t\n\t    var seriesArea2 = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale2(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return config.chartHeight;\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var areas = cache.svg.selectAll(\".mark.area\").data(data.dataBySeries);\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return seriesArea(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesArea2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", getColor);\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawStackedAreas() {\n\t    var seriesLine = d3.area().x(function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[0]);\n\t    }).y1(function (d) {\n\t      return scales.yScale(d[1]);\n\t    });\n\t\n\t    var areas = cache.svg.selectAll(\".mark.stacked-area\").data(data.stack(data.stackData));\n\t\n\t    areas.enter().append(\"path\").attr(\"class\", function () {\n\t      return [\"mark\", \"stacked-area\"].join(\" \");\n\t    }).merge(areas).attr(\"d\", seriesLine).style(\"stroke\", \"none\").style(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    });\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"area\") {\n\t      drawAreas();\n\t    } else if (config.chartType === \"line\") {\n\t      drawLines();\n\t    } else if (config.chartType === \"stackedArea\") {\n\t      drawStackedAreas();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Axis;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Axis(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    tickSizes: null,\n\t    tickPadding: null,\n\t    xAxisFormat: null,\n\t    yAxisFormat: null,\n\t    y2AxisFormat: null,\n\t    keyType: null,\n\t    yTicks: null,\n\t    y2Ticks: null,\n\t    xTickSkip: null,\n\t    axisTransitionDuration: null,\n\t    ease: null,\n\t    grid: null,\n\t    hoverZoneSize: 30\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    background: null,\n\t    chartHeight: null,\n\t    chartWidth: null,\n\t    xAxis: null,\n\t    yAxis: null,\n\t    yAxis2: null,\n\t    horizontalGridLines: null,\n\t    verticalGridLines: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"axis-group\", true).style(\"pointer-events\", \"none\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis x\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y2\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function buildAxis() {\n\t    cache.xAxis = d3.axisBottom(scales.xScale).tickSize(config.tickSizes, 0).tickPadding(config.tickPadding);\n\t\n\t    if (config.keyType === \"time\") {\n\t      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n\t        var formatter = d3.timeFormat(config.xAxisFormat);\n\t        cache.xAxis.tickFormat(formatter);\n\t      }\n\t    } else if (config.keyType === \"string\") {\n\t      cache.xAxis.tickValues(scales.xScale.domain().filter(function (d, i) {\n\t        return !(i % config.xTickSkip);\n\t      }));\n\t    }\n\t\n\t    cache.yAxis = d3.axisLeft(scales.yScale).ticks(config.yTicks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.yAxisFormat));\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.yAxis2 = d3.axisRight(scales.yScale2).ticks(config.y2Ticks).tickSize([config.tickSizes]).tickPadding(config.tickPadding).tickFormat(d3.format(config.y2AxisFormat));\n\t    }\n\t  }\n\t\n\t  function drawAxis() {\n\t    buildSVG();\n\t    buildAxis();\n\t\n\t    cache.svg.select(\".axis.x\").attr(\"transform\", \"translate(0, \" + cache.chartHeight + \")\").call(cache.xAxis);\n\t\n\t    cache.svg.select(\".axis.y\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis);\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.svg.select(\".axis.y2\").attr(\"transform\", \"translate(\" + cache.chartWidth + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis2);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawGridLines() {\n\t    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n\t      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.horizontal-grid-line\").data(scales.yScale.ticks(config.yTicks));\n\t\n\t      cache.horizontalGridLines.enter().append(\"line\").attr(\"class\", \"horizontal-grid-line\").merge(cache.horizontalGridLines).transition().duration(config.axisTransitionDuration).attr(\"x2\", cache.chartWidth).attr(\"y1\", scales.yScale).attr(\"y2\", scales.yScale);\n\t\n\t      cache.horizontalGridLines.exit().remove();\n\t    }\n\t\n\t    if (config.grid === \"vertical\" || config.grid === \"full\") {\n\t      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.vertical-grid-line\").data(cache.xAxis.tickValues());\n\t\n\t      cache.verticalGridLines.enter().append(\"line\").attr(\"class\", \"vertical-grid-line\").merge(cache.verticalGridLines).transition().duration(config.axisTransitionDuration).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight).attr(\"x1\", scales.xScale).attr(\"x2\", scales.xScale);\n\t\n\t      cache.verticalGridLines.exit().remove();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    drawAxis: drawAxis,\n\t    drawGridLines: drawGridLines\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.default = Tooltip;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Tooltip(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 2,\n\t      right: 2,\n\t      bottom: 2,\n\t      left: 2\n\t    },\n\t    width: 250,\n\t    height: 45,\n\t\n\t    valueFormat: \".2f\",\n\t\n\t    // Animations\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t\n\t    dateFormat: \"%b %d, %Y\",\n\t    seriesOrder: [],\n\t\n\t    // from chart\n\t    keyType: \"time\"\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    tooltipDivider: null,\n\t    tooltipBody: null,\n\t    tooltipTitle: null,\n\t    tooltipBackground: null,\n\t    xPosition: null,\n\t    yPosition: null,\n\t    content: null,\n\t    title: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"tooltip-group\").style(\"position\", \"absolute\").style(\"pointer-events\", \"none\");\n\t\n\t      cache.tooltipTitle = cache.root.append(\"div\").attr(\"class\", \"tooltip-title\");\n\t\n\t      cache.tooltipBody = cache.root.append(\"div\").attr(\"class\", \"tooltip-body\");\n\t    }\n\t  }\n\t\n\t  function calculateTooltipPosition(_mouseX, _mouseY) {\n\t    var OFFSET = 4;\n\t    var tooltipSize = cache.root.node().getBoundingClientRect();\n\t    var tooltipX = _mouseX;\n\t    var avoidanceOffset = OFFSET;\n\t    var tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2;\n\t\n\t    if (_mouseX > cache.chartWidth / 2) {\n\t      avoidanceOffset = -tooltipSize.width - OFFSET;\n\t    }\n\t    return [tooltipX + avoidanceOffset, tooltipY];\n\t  }\n\t\n\t  function move() {\n\t    var xPosition = cache.xPosition === \"auto\" ? cache.chartWidth : cache.xPosition;\n\t\n\t    var yPosition = cache.yPosition === \"auto\" ? config.margin.top : cache.yPosition;\n\t\n\t    cache.root.transition().duration(config.mouseChaseDuration).ease(config.tooltipEase).style(\"top\", yPosition + \"px\").style(\"left\", function left() {\n\t      var width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0;\n\t      return xPosition + config.margin.left - width + \"px\";\n\t    });\n\t    return this;\n\t  }\n\t\n\t  function drawContent() {\n\t    var content = cache.content;\n\t    var formatter = d3.format(config.valueFormat);\n\t\n\t    var tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\").data(content);\n\t    var tooltipItemsUpdate = tooltipItems.enter().append(\"div\").attr(\"class\", \"tooltip-item\").merge(tooltipItems);\n\t    tooltipItems.exit().remove();\n\t\n\t    var tooltipItem = tooltipItemsUpdate.selectAll(\".section\").data(function (d) {\n\t      var legendData = [{ key: \"color\", value: scales.colorScale(d[_constants.keys.ID]) }, { key: \"label\", value: d[_constants.keys.LABEL] }];\n\t      if (typeof d[_constants.keys.VALUE] !== \"undefined\") {\n\t        legendData.push({ key: \"value\", value: d[_constants.keys.VALUE] });\n\t      }\n\t      return legendData;\n\t    });\n\t    tooltipItem.enter().append(\"div\").merge(tooltipItem).attr(\"class\", function (d) {\n\t      return [\"section\", d.key].join(\" \");\n\t    }).each(function each(d) {\n\t      var selection = d3.select(this);\n\t      if (d.key === \"color\") {\n\t        selection.style(\"background\", d.value);\n\t      } else if (d.key === \"value\") {\n\t        selection.html(formatter(d.value));\n\t      } else {\n\t        selection.html(d.value);\n\t      }\n\t    });\n\t    tooltipItem.exit().remove();\n\t    return this;\n\t  }\n\t\n\t  function drawTitle() {\n\t    var title = cache.title;\n\t\n\t    if ((typeof title === \"undefined\" ? \"undefined\" : _typeof(title)) === \"object\") {\n\t      title = d3.timeFormat(config.dateFormat)(title);\n\t    }\n\t\n\t    cache.tooltipTitle.html(title);\n\t    return this;\n\t  }\n\t\n\t  function drawTooltip() {\n\t    buildSVG();\n\t    drawTitle();\n\t    drawContent();\n\t    move();\n\t    return this;\n\t  }\n\t\n\t  function setupContent(_series) {\n\t    var series = _series;\n\t\n\t    if (config.seriesOrder.length) {\n\t      series = sortByTopicsOrder(_series);\n\t    } else if (_series.length && _series[0][_constants.keys.LABEL]) {\n\t      series = sortByAlpha(_series);\n\t    }\n\t\n\t    cache.content = series;\n\t    return this;\n\t  }\n\t\n\t  function sortByTopicsOrder(_series) {\n\t    var _order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesOrder;\n\t\n\t    return _order.map(function (orderName) {\n\t      return _series.filter(function (_ref) {\n\t        var name = _ref.name;\n\t        return name === orderName;\n\t      })[0];\n\t    });\n\t  }\n\t\n\t  function sortByAlpha(_series) {\n\t    var series = (0, _common.cloneData)(_series);\n\t    return series.sort(function (a, b) {\n\t      return a[_constants.keys.LABEL].localeCompare(b[_constants.keys.LABEL], \"en\", { numeric: false });\n\t    });\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function setupTooltip(_dataPoint, _xPosition, _yPosition) {\n\t    buildSVG();\n\t\n\t    var _calculateTooltipPosi = calculateTooltipPosition(_xPosition, _yPosition),\n\t        _calculateTooltipPosi2 = _slicedToArray(_calculateTooltipPosi, 2),\n\t        tooltipX = _calculateTooltipPosi2[0],\n\t        tooltipY = _calculateTooltipPosi2[1];\n\t\n\t    setXPosition(tooltipX);\n\t    setYPosition(tooltipY);\n\t    setTitle(_dataPoint[_constants.keys.DATA]);\n\t    setupContent(_dataPoint[_constants.keys.SERIES]);\n\t\n\t    drawTooltip();\n\t    return this;\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.tooltip\", show).on(\"mouseMovePanel.tooltip\", setupTooltip).on(\"mouseOutPanel.tooltip\", hide);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setTitle(_title) {\n\t    cache.title = _title;\n\t    return this;\n\t  }\n\t\n\t  function setXPosition(_xPosition) {\n\t    cache.xPosition = _xPosition;\n\t    return this;\n\t  }\n\t\n\t  function setYPosition(_yPosition) {\n\t    cache.yPosition = _yPosition;\n\t    return this;\n\t  }\n\t\n\t  function setContent(_content) {\n\t    cache.content = _content;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    bindEvents: bindEvents,\n\t    setXPosition: setXPosition,\n\t    setYPosition: setYPosition,\n\t    setContent: setContent,\n\t    setTitle: setTitle,\n\t    hide: hide,\n\t    show: show,\n\t    drawTooltip: drawTooltip,\n\t    setConfig: setConfig,\n\t    setScales: setScales\n\t  };\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Legend;\n\t\n\tvar _tooltip = __webpack_require__(10);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Legend(_container) {\n\t  return (0, _tooltip2.default)(_container);\n\t}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Brush;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Brush(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"brush-group\", true);\n\t    }\n\t  }\n\t\n\t  function extractBrushDimension(_data) {\n\t    var merged = d3.merge(_data.map(function (d) {\n\t      return d[_constants.keys.VALUES];\n\t    }));\n\t    return (0, _common.sortData)(merged, config.keyType);\n\t  }\n\t\n\t  function buildBrush() {\n\t    cache.brush = cache.brush || d3.brushX().on(\"start\", handleBrushStart).on(\"brush\", handleBrushMove).on(\"end\", handleBrushEnd);\n\t\n\t    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]]);\n\t\n\t    cache.chartBrush = cache.svg.call(cache.brush);\n\t\n\t    cache.chartBrush.selectAll(\".brush-rect\").attr(\"height\", cache.chartHeight);\n\t  }\n\t\n\t  function getDataExtent() {\n\t    var selection = d3.event.selection;\n\t    var dataExtent = selection.map(function (d) {\n\t      return (0, _common.invertScale)(scales.xScale, d, config.keyType);\n\t    });\n\t    return dataExtent;\n\t  }\n\t\n\t  function handleBrushStart() {\n\t    dispatcher.call(\"brushStart\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushMove() {\n\t    dispatcher.call(\"brushMove\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushEnd() {\n\t    // Only transition after input, ignore empty selections.\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t\n\t    var dataExtent = getDataExtent();\n\t\n\t    d3.select(this).transition().call(d3.event.target.move, dataExtent.map(scales.xScale));\n\t\n\t    dispatcher.call(\"brushEnd\", this, dataExtent, config);\n\t  }\n\t\n\t  function drawBrush() {\n\t    buildSVG();\n\t\n\t    if (data.dataBySeries) {\n\t      cache.data = extractBrushDimension((0, _common.cloneData)(data.dataBySeries));\n\t      buildBrush();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  // function setBrushByPercentages (_a, _b) {\n\t  //   const x0 = _a * cache.chartWidth\n\t  //   const x1 = _b * cache.chartWidth\n\t\n\t  //   brush.move(chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function setBrushByDates (_dateA, _dateB) {\n\t  //   const x0 = cache.xScale(new Date(_dateA))\n\t  //   const x1 = cache.xScale(new Date(_dateB))\n\t\n\t  //   cache.brush.move(cache.chartBrush, [x0, x1])\n\t  // }\n\t\n\t  // function updateHandlers (_dateExtent) {\n\t  //   if (_dateExtent === null) {\n\t  //     cache.handle.attr(\"display\", \"none\")\n\t  //   } else {\n\t  //     cache.handle\n\t  //       .attr(\"display\", null)\n\t  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n\t  //   }\n\t  // }\n\t\n\t  // API\n\t\n\t  /**\n\t   * Gets or Sets the dateRange for the selected part of the brush\n\t   * @param  {String[]} _x Desired dateRange for the graph\n\t   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n\t   * @public\n\t   */\n\t  // function dateRange (_x) {\n\t  //   if (!arguments.length) {\n\t  //     return dateRange\n\t  //   }\n\t  //   dateRange = _x\n\t\n\t  //   if (Array.isArray(dateRange)) {\n\t  //     setBrushByDates(...dateRange)\n\t  //   }\n\t\n\t  //   return this\n\t  // }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    setScales: setScales,\n\t    drawBrush: drawBrush\n\t  };\n\t}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Hover;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Hover(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    dotRadius: null,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    yScale: null,\n\t    yScale2: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null\n\t  };\n\t\n\t  var data = {\n\t    stack: null,\n\t    groupKeys: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"hover\");\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"hover-group\", true).style(\"pointer-events\", \"none\");\n\t    }\n\t  }\n\t\n\t  function drawHover(_dataPoint, _dataPointXPosition) {\n\t    buildSVG();\n\t\n\t    if (!isNaN(_dataPointXPosition)) {\n\t      moveVerticalMarker(_dataPointXPosition);\n\t      drawVerticalMarker();\n\t      if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t        highlightStackedDataPoints(_dataPoint);\n\t      } else {\n\t        highlightDataPoints(_dataPoint);\n\t      }\n\t      dispatcher.call(\"hover\", this, _dataPoint);\n\t    }\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function highlightDataPoints(_dataPoint) {\n\t    var dotsData = _dataPoint[_constants.keys.SERIES];\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawHighlightDataPoints(_dotsData) {\n\t    var dots = cache.svg.selectAll(\".dot\").data(_dotsData);\n\t\n\t    dots.enter().append(\"circle\").attr(\"class\", \"dot\").merge(dots).attr(\"cy\", function (d) {\n\t      if (config.chartType === \"stackedArea\" || data.groupKeys[0].indexOf(d[_constants.keys.ID]) > -1) {\n\t        return scales.yScale(d[_constants.keys.VALUE]);\n\t      } else {\n\t        return scales.yScale2(d[_constants.keys.VALUE]);\n\t      }\n\t    }).attr(\"r\", config.dotRadius).style(\"stroke\", \"none\").style(\"fill\", getColor);\n\t\n\t    dots.exit().remove();\n\t  }\n\t\n\t  function highlightStackedDataPoints(_dataPoint) {\n\t    var stackedDataPoint = { key: _dataPoint[_constants.keys.DATA] };\n\t    _dataPoint.series.forEach(function (d) {\n\t      var id = d[_constants.keys.ID];\n\t      stackedDataPoint[id] = d[_constants.keys.VALUE];\n\t    });\n\t\n\t    var dotsStack = data.stack([stackedDataPoint]);\n\t    var dotsData = dotsStack.map(function (d) {\n\t      var dot = { value: d[0][1] };\n\t      dot[_constants.keys.ID] = d.key;\n\t      return dot;\n\t    });\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawVerticalMarker() {\n\t    var verticalMarkerLine = cache.svg.selectAll(\"line\").data([0]);\n\t\n\t    verticalMarkerLine.enter().append(\"line\").classed(\"vertical-marker\", true).merge(verticalMarkerLine).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight);\n\t\n\t    verticalMarkerLine.exit().remove();\n\t  }\n\t\n\t  function moveVerticalMarker(_verticalMarkerXPosition) {\n\t    cache.svg.attr(\"transform\", \"translate(\" + [_verticalMarkerXPosition, 0] + \")\");\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.hover\", show).on(\"mouseMovePanel.hover\", drawHover).on(\"mouseOutPanel.hover\", hide);\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    bindEvents: bindEvents,\n\t    highlightDataPoints: highlightDataPoints,\n\t    highlightStackedDataPoints: highlightStackedDataPoints,\n\t    drawVerticalMarker: drawVerticalMarker,\n\t    moveVerticalMarker: moveVerticalMarker,\n\t    on: on\n\t  };\n\t}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Binning;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(15);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Binning(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    autoLabel: \"auto\",\n\t    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n\t    label: \"BIN:\"\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    autoItem: null,\n\t    binningItems: null,\n\t    selectedBin: null,\n\t    isAuto: true\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"change\");\n\t\n\t  function buildSVG() {\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"binning-group\").style(\"float\", \"left\");\n\t\n\t      cache.label = cache.root.append(\"div\").attr(\"class\", \"label\").text(config.label);\n\t\n\t      cache.autoItem = cache.root.append(\"div\").attr(\"class\", \"item item-auto toggleOnOff\").on(\"click.select\", function click() {\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        var toggled = !isSelected;\n\t        setAuto(toggled);\n\t        drawBinning();\n\t        dispatcher.call(\"change\", this, { name: config.autoLabel, isSelected: toggled });\n\t      }).text(config.autoLabel);\n\t\n\t      cache.binningItems = cache.root.selectAll(\".toggleExclusive\").data(config.exclusiveToggle).enter().append(\"div\").attr(\"class\", function (d) {\n\t        return \"item item-\" + d + \" toggleExclusive\";\n\t      }).on(\"click.select\", function click(d) {\n\t        setBinning(d);\n\t        drawBinning();\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        dispatcher.call(\"change\", this, { name: d, isSelected: isSelected });\n\t      }).text(function (d) {\n\t        return d;\n\t      });\n\t    }\n\t\n\t    var LINE_HEIGHT = 20;\n\t    cache.root.style(\"top\", config.margin.top - LINE_HEIGHT).style(\"left\", config.margin.left);\n\t\n\t    changeBinning(cache.selectedBin);\n\t    toggleAuto(cache.isAuto);\n\t  }\n\t\n\t  function changeBinning(_selectedItemName) {\n\t    if (_selectedItemName) {\n\t      (0, _interactors.exclusiveToggle)(cache.binningItems, \".item-\" + _selectedItemName);\n\t    }\n\t  }\n\t\n\t  function toggleAuto(_shouldBeSelected) {\n\t    cache.autoItem.classed(\"selected\", _shouldBeSelected).classed(\"dimmed\", !_shouldBeSelected);\n\t  }\n\t\n\t  function drawBinning() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setBinning(_selectedBin) {\n\t    cache.selectedBin = _selectedBin;\n\t    return this;\n\t  }\n\t\n\t  function setAuto(_isAuto) {\n\t    cache.isAuto = _isAuto;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.root.remove();\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    drawBinning: drawBinning,\n\t    setBinning: setBinning,\n\t    setAuto: setAuto\n\t  };\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toggleOnOff = toggleOnOff;\n\texports.exclusiveToggle = exclusiveToggle;\n\texports.toggle = toggle;\n\texports.blurOnEnter = blurOnEnter;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n\t * @param  {Number} selector A valid selector of the elements to toggle\n\t * @example\n\t * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n\t *\n\t * @return {void}\n\t */\n\t\n\tfunction toggleOnOff(selector, bool) {\n\t  var shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool;\n\t  d3.select(selector).classed(\"selected\", shouldBeSelected).classed(\"dimmed\", !shouldBeSelected);\n\t}\n\t\n\tfunction exclusiveToggle(othersSelection, selector) {\n\t  return toggle(othersSelection, selector, {\n\t    toggleOffIsEnabled: false,\n\t    toggleMultipleIsEnabled: false\n\t  });\n\t}\n\t\n\tfunction toggle(othersSelection, selector) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { toggleOffIsEnabled: false, toggleMultipleIsEnabled: false };\n\t\n\t  /* eslint-disable consistent-this */\n\t  var hasSelection = false;\n\t  var selectionNode = document.querySelector(selector);\n\t\n\t  othersSelection.classed(\"selected\", function selectedClass() {\n\t    var isSelected = this.classList.contains(\"selected\");\n\t    var hasJustBeenClicked = this === selectionNode;\n\t    var shouldBeSelected = false;\n\t\n\t    if (hasJustBeenClicked) {\n\t      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true;\n\t    } else {\n\t      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false;\n\t    }\n\t\n\t    hasSelection = hasSelection || shouldBeSelected;\n\t    return shouldBeSelected;\n\t  });\n\t\n\t  othersSelection.classed(\"dimmed\", function dimmedClass() {\n\t    return hasSelection && !this.classList.contains(\"selected\");\n\t  });\n\t  /* eslint-enable consistent-this */\n\t}\n\t\n\tfunction blurOnEnter(selection) {\n\t  selection.on(\"keypress.enter\", function keypress() {\n\t    if (d3.event.key === \"Enter\") {\n\t      this.blur();\n\t    }\n\t  });\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DomainEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(15);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction DomainEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xHitZone: null,\n\t    yHitZone: null,\n\t    y2HitZone: null,\n\t    yMaxInput: null,\n\t    yMinInput: null,\n\t    yLockIcon: null,\n\t    y2MaxInput: null,\n\t    y2MinInput: null,\n\t    y2LockIcon: null,\n\t    xMinInput: null,\n\t    xMaxInput: null,\n\t    xLockIcon: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    xDomain: null,\n\t    yDomain: null,\n\t    y2Domain: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"domain-input-group\").style(\"position\", \"absolute\").style(\"top\", 0);\n\t\n\t      // hit zones\n\t      cache.xHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone x\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showXEditor).on(\"mouseout.dispatch\", hideXEditor);\n\t\n\t      cache.yHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showYEditor).on(\"mouseout.dispatch\", hideYEditor);\n\t\n\t      cache.y2HitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y2\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showY2Editor).on(\"mouseout.dispatch\", hideY2Editor);\n\t\n\t      // y input group\n\t      cache.yMaxInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yMinInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yLockIcon = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-lock y\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y\" });\n\t      });\n\t\n\t      // y2 input group\n\t      cache.y2MaxInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y2\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2MinInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"y2\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2LockIcon = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-lock y2\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y2\" });\n\t      });\n\t\n\t      // x input group\n\t      cache.xMinInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"x\", type: \"min\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xMaxInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        dispatcher.call(\"domainChange\", this, { value: this.innerText, axis: \"x\", type: \"max\" });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xLockIcon = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-lock x\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"x\" });\n\t      });\n\t\n\t      hideYEditor();\n\t      hideY2Editor();\n\t      hideXEditor();\n\t    }\n\t\n\t    var HOVER_ZONE_SIZE = 40;\n\t    var LOCK_SIZE = 12;\n\t    var INPUT_HEIGHT = 12;\n\t    var PADDING = 4;\n\t    var INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING;\n\t\n\t    cache.xHitZone.style(\"width\", cache.chartWidth + HOVER_ZONE_SIZE * 2 + \"px\").style(\"height\", HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top + cache.chartHeight + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.yHitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.y2HitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left + cache.chartWidth + \"px\");\n\t\n\t    cache.yMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").text(Array.isArray(cache.yDomain) && !isNaN(cache.yDomain[1]) ? cache.yDomain[1] : \"\");\n\t\n\t    cache.yMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").text(Array.isArray(cache.yDomain) && !isNaN(cache.yDomain[0]) ? cache.yDomain[0] : \"\");\n\t\n\t    cache.yLockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.y2MaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").style(\"left\", PADDING + \"px\").text(Array.isArray(cache.y2Domain) && !isNaN(cache.y2Domain[1]) ? cache.y2Domain[1] : \"\");\n\t\n\t    cache.y2MinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").style(\"left\", PADDING + \"px\").text(Array.isArray(cache.y2Domain) && !isNaN(cache.y2Domain[0]) ? cache.y2Domain[0] : \"\");\n\t\n\t    cache.y2LockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.xMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + \"px\").text(Array.isArray(cache.xDomain) && typeof cache.xDomain[0] !== \"undefined\" ? cache.xDomain[0] : \"\");\n\t\n\t    cache.xMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH + \"px\").text(Array.isArray(cache.xDomain) && typeof cache.xDomain[1] !== \"undefined\" ? cache.xDomain[1] : \"\");\n\t\n\t    cache.xLockIcon.style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth + \"px\");\n\t  }\n\t\n\t  function showYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function drawDomainEditor() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setXDomain(_xDomain) {\n\t    cache.xDomain = _xDomain;\n\t    return this;\n\t  }\n\t\n\t  function setYDomain(_yDomain) {\n\t    cache.yDomain = _yDomain;\n\t    return this;\n\t  }\n\t\n\t  function setY2Domain(_y2Domain) {\n\t    cache.y2Domain = _y2Domain;\n\t    return this;\n\t  }\n\t\n\t  function setXLock(_xLock) {\n\t    cache.xLock = _xLock;\n\t    return this;\n\t  }\n\t\n\t  function setYLock(_yLock) {\n\t    cache.yLock = _yLock;\n\t    return this;\n\t  }\n\t\n\t  function setY2Lock(_y2Lock) {\n\t    cache.y2Lock = _y2Lock;\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXDomain: setXDomain,\n\t    setYDomain: setYDomain,\n\t    setY2Domain: setY2Domain,\n\t    setXLock: setXLock,\n\t    setYLock: setYLock,\n\t    setY2Lock: setY2Lock,\n\t    drawDomainEditor: drawDomainEditor\n\t  };\n\t}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = BrushRangeEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(15);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction BrushRangeEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    inputMin: null,\n\t    inputMax: null,\n\t    rangeMin: null,\n\t    rangeMax: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"rangeChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"brush-range-input-group\").style(\"top\", 0);\n\t\n\t      cache.inputMax = cache.root.append(\"div\").attr(\"class\", \"brush-range-input max\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMax = cache.inputMax.text();\n\t        dispatcher.call(\"rangeChange\", this, { value: cache.rangeMax, type: \"max\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t\n\t      cache.root.append(\"div\").attr(\"class\", \"separator\").text(\"-\").style(\"float\", \"right\");\n\t\n\t      cache.inputMin = cache.root.append(\"div\").attr(\"class\", \"brush-range-input min\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        cache.rangeMin = cache.inputMin.text();\n\t        dispatcher.call(\"rangeChange\", this, { value: cache.rangeMin, type: \"min\" });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t    }\n\t\n\t    cache.inputMin.text(cache.rangeMin || \"\");\n\t    cache.inputMax.text(cache.rangeMax || \"\");\n\t  }\n\t\n\t  function drawRangeEditor() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setRangeMin(_rangeMin) {\n\t    cache.rangeMin = _rangeMin;\n\t    return this;\n\t  }\n\t\n\t  function setRangeMax(_rangeMax) {\n\t    cache.rangeMax = _rangeMax;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    drawRangeEditor: drawRangeEditor,\n\t    setRangeMin: setRangeMin,\n\t    setRangeMax: setRangeMax\n\t  };\n\t}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Label;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Label(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xAxisLabel: null,\n\t    yAxisLabel: null,\n\t    y2AxisLabel: null,\n\t    xLabel: null,\n\t    yLabel: null,\n\t    y2Label: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"axisLabelChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"label-group\").style(\"position\", \"absolute\").style(\"top\", 0).style(\"white-space\", \"nowrap\");\n\t\n\t      cache.xAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label x\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.xLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"x\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%)\");\n\t\n\t      cache.yAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.yLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"left\", 0).style(\"transform\", \"translate(-50%) rotate(-90deg)\");\n\t\n\t      cache.y2AxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y2\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.y2Label = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y2\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%) rotate(90deg)\");\n\t    }\n\t\n\t    cache.xAxisLabel.text(config.xLabel).style(\"top\", function top() {\n\t      var textHeight = this.getBoundingClientRect().height;\n\t      return config.height - textHeight + \"px\";\n\t    }).style(\"left\", config.margin.left + cache.chartWidth / 2 + \"px\");\n\t\n\t    cache.yAxisLabel.text(config.yLabel).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return textWidth / 2 + \"px\";\n\t    });\n\t\n\t    cache.y2AxisLabel.text(config.y2Label).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return config.width - textWidth / 2 + \"px\";\n\t    });\n\t  }\n\t\n\t  function drawLabels() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setXLabels(_xLabel) {\n\t    config.xLabel = _xLabel;\n\t    return this;\n\t  }\n\t\n\t  function setYLabels(_yLabel) {\n\t    config.yLabel = _yLabel;\n\t    return this;\n\t  }\n\t\n\t  function setY2Labels(_y2Label) {\n\t    config.y2Label = _y2Label;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXLabels: setXLabels,\n\t    setYLabels: setYLabels,\n\t    setY2Labels: setY2Labels,\n\t    drawLabels: drawLabels\n\t  };\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.merge = exports.range = exports.sum = exports.extent = exports.bisector = undefined;\n\t\n\tvar _d3Array = __webpack_require__(20);\n\t\n\tObject.defineProperty(exports, \"bisector\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.bisector;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.extent;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.sum;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.range;\n\t  }\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Array.merge;\n\t  }\n\t});\n\texports.default = DataManager;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction DataManager() {\n\t  /* eslint-disable no-magic-numbers */\n\t  var config = {\n\t    keyType: \"number\", // number, string, time,\n\t    range: [0, 100],\n\t    pointCount: 200,\n\t    groupCount: 2,\n\t    lineCount: 4\n\t  };\n\t  var cache = {\n\t    data: null,\n\t    baseDate: null\n\t  };\n\t\n\t  function generateRandomString(_length) {\n\t    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5);\n\t  }\n\t\n\t  function generateSeries(_dataKeys, _range, _allowNegative) {\n\t    var value = d3.randomUniform.apply(d3, _toConsumableArray(_range))();\n\t    var variabilityRatio = 50;\n\t    var randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio;\n\t    var rnd = d3.randomNormal(0, 1);\n\t    return _dataKeys.map(function (d) {\n\t      value = value + rnd() * randomWalkStepSize;\n\t      if (!_allowNegative && value < randomWalkStepSize) {\n\t        value = value + randomWalkStepSize;\n\t      }\n\t      return {\n\t        value: value,\n\t        key: config.keyType === \"time\" ? d.toISOString() : d\n\t      };\n\t    });\n\t  }\n\t\n\t  function generateTestDataset() {\n\t    var dataKeys = null;\n\t    if (config.keyType === \"time\") {\n\t      cache.baseDate = new Date();\n\t      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate));\n\t    } else if (config.keyType === \"string\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function () {\n\t        return generateRandomString();\n\t      });\n\t      dataKeys.sort(function (a, b) {\n\t        return a.localeCompare(b, \"en\", { numeric: false });\n\t      });\n\t    } else if (config.keyType === \"number\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function (d, i) {\n\t        return i;\n\t      });\n\t    }\n\t\n\t    var series = d3.range(config.lineCount).map(function (d) {\n\t      return {\n\t        label: \"Label \" + d,\n\t        id: d,\n\t        group: d < config.groupCount ? d : 0,\n\t        values: generateSeries(dataKeys, config.range)\n\t      };\n\t    });\n\t\n\t    cache.data = { series: series\n\t\n\t      // console.log(\"generated data\", cache.data)\n\t\n\t    };return cache.data;\n\t  }\n\t\n\t  function filterByKey(_extent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      var values = series[_constants.keys.VALUES];\n\t      var allKeys = values.map(function (d) {\n\t        return d[_constants.keys.DATA];\n\t      });\n\t      var extentMinIndex = allKeys.indexOf(_extent[0]);\n\t      var extentMaxIndex = allKeys.indexOf(_extent[1]);\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].slice(extentMinIndex, extentMaxIndex);\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function filterByDate(_dateExtent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].filter(function (d) {\n\t        var epoch = new Date(d[_constants.keys.DATA]).getTime();\n\t        return epoch >= _dateExtent[0].getTime() && epoch <= _dateExtent[1].getTime();\n\t      });\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    generateTestDataset: generateTestDataset,\n\t    generateSeries: generateSeries,\n\t    filterByDate: filterByDate,\n\t    filterByKey: filterByKey,\n\t    setConfig: setConfig\n\t  };\n\t}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Observer;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Observer(_dataManager) {\n\t  var dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\");\n\t  var dataManager = _dataManager;\n\t\n\t  dispatcher.on(\"brushChange.observer\", function (_e, _brushConfig) {\n\t    var filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e) : dataManager.filterByKey(_e);\n\t    pub(\"dataFilter\", filtered);\n\t  });\n\t\n\t  function sub() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function pub(_channelName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    dispatcher.call.apply(dispatcher, [_channelName, this].concat(args));\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    sub: sub,\n\t    pub: pub\n\t  };\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// mapd3.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 734c627230e3da9e6e6b","import Chart from \"./charts/chart.js\"\nimport Tooltip from \"./charts/tooltip.js\"\nimport Legend from \"./charts/legend.js\"\nimport DataManager from \"./charts/data-manager.js\"\nimport Observer from \"./charts/observer.js\"\nimport Binning from \"./charts/binning.js\"\nimport DomainEditor from \"./charts/domain-editor.js\"\nimport BrushRangeEditor from \"./charts/brush-range-editor.js\"\nimport Label from \"./charts/label.js\"\nimport Brush from \"./charts/brush.js\"\nimport Hover from \"./charts/hover.js\"\nimport Interactors from \"./charts/interactors.js\"\nimport {colors} from \"./charts/helpers/colors.js\"\n\nexport {\n  Chart,\n  Tooltip,\n  Legend,\n  DataManager,\n  Observer,\n  Binning,\n  DomainEditor,\n  BrushRangeEditor,\n  Label,\n  Brush,\n  Hover,\n  Interactors,\n  colors\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {colors} from \"./helpers/colors\"\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData, override, throttle, rebind} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\nimport Line from \"./line\"\nimport Axis from \"./axis\"\nimport Tooltip from \"./tooltip\"\nimport Legend from \"./legend\"\nimport Brush from \"./brush\"\nimport Hover from \"./hover\"\nimport Binning from \"./binning\"\nimport DomainEditor from \"./domain-editor\"\nimport BrushRangeEditor from \"./brush-range-editor\"\nimport Label from \"./label\"\n\nexport default function Chart (_container) {\n\n  let config = {\n    // common\n    margin: {\n      top: 48,\n      right: 32,\n      bottom: 48,\n      left: 32\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    chartType: \"line\", // line, area, stackedLine, stackedArea\n    ease: d3.easeLinear,\n\n    // intro animation\n    isAnimated: false,\n    animationDuration: 1500,\n\n    // scale\n    colorSchema: colors.mapdColors.map((d) => ({value: d})),\n    defaultColor: \"skyblue\",\n\n    // axis\n    tickPadding: 5,\n    xAxisFormat: \"auto\",\n    yAxisFormat: \".2f\",\n    y2AxisFormat: \".2f\",\n    tickSizes: 8,\n    yTicks: 5,\n    y2Ticks: 5,\n    xTickSkip: 0,\n    grid: null,\n    axisTransitionDuration: 0,\n\n    xTitle: \"\",\n    yTitle: \"\",\n\n    // hover\n    dotRadius: 4,\n\n    // tooltip\n    valueFormat: \".2f\",\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: [],\n\n    // legend\n    legendXPosition: \"auto\",\n    legendYPosition: \"auto\",\n    legendTitle: \"\",\n\n    // binning\n    binningReolution: \"1mo\",\n    binningIsAuto: true,\n\n    // domain\n    xDomain: null,\n    yDomain: null,\n    y2Domain: null,\n\n    // brush range\n    brushRangeMin: null,\n    brushRangeMax: null,\n\n    // label\n    xLabel: \"\",\n    yLabel: \"\",\n    y2Label: \"\"\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    panel: null,\n    margin: null,\n    maskingRectangle: null,\n    chartWidth: null, chartHeight: null,\n    xAxis: null, yAxis: null, yAxis2: null\n  }\n\n  const dataObject = {\n    dataBySeries: null,\n    dataByKey: null,\n    data: null,\n    groupKeys: {},\n    hasSecondAxis: false,\n    stackData: null,\n    stack: null,\n    flatDataSorted: null\n  }\n\n  const components = {}\n  const eventCollector = {}\n\n  // accessors\n  const getKey = (d) => d[keys.DATA]\n  const getID = (d) => d[keys.ID]\n\n  // events\n  const dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\")\n\n  function render () {\n    buildSVG()\n\n    if (dataObject.dataBySeries) {\n      buildChart()\n    }\n\n    return this\n  }\n\n  function buildSVG () {\n    const w = config.width || cache.container.clientWidth\n    const h = config.height || cache.container.clientHeight\n    cache.chartWidth = w - config.margin.left - config.margin.right\n    cache.chartHeight = h - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      const template = `<div class=\"mapd3 mapd3-container\">\n        <div class=\"header-group\"></div>\n        <svg class=\"chart\">\n          <g class=\"chart-group\"></g>\n          <g class=\"panel-group\">\n            <rect class=\"panel-background\"></rect>\n          </g>\n          <rect class=\"masking-rectangle\"></rect>\n        </svg>\n      </div>`\n\n      const base = d3.select(cache.container)\n          .html(template)\n\n      cache.container = base.select(\".mapd3-container\")\n          .style(\"position\", \"relative\")\n\n      cache.svg = base.select(\"svg\")\n      cache.headerGroup = base.select(\".header-group\")\n          .style(\"position\", \"absolute\")\n      cache.panel = cache.svg.select(\".panel-group\")\n      cache.chart = cache.svg.select(\".chart-group\")\n\n      addEvents()\n\n      Object.assign(components, {\n        scale: Scale(),\n        axis: Axis(cache.chart),\n        line: Line(cache.panel),\n        tooltip: Tooltip(cache.container),\n        legend: Legend(cache.container),\n        brush: Brush(cache.panel),\n        hover: Hover(cache.panel),\n        binning: Binning(cache.headerGroup),\n        domainEditor: DomainEditor(cache.container),\n        brushRangeEditor: BrushRangeEditor(cache.headerGroup),\n        label: Label(cache.container)\n      })\n\n      Object.assign(eventCollector, {\n        onBrush: rebind(components.brush),\n        onHover: rebind(components.hover),\n        onBinning: rebind(components.binning),\n        onDomainEditor: rebind(components.domainEditor),\n        onBrushRangeEditor: rebind(components.brushRangeEditor),\n        onLabel: rebind(components.label),\n        onPanel: rebind(dispatcher)\n      })\n    }\n\n    cache.svg\n      .attr(\"width\", config.width)\n      .attr(\"height\", config.height)\n\n    cache.headerGroup\n      .style(\"width\", cache.chartWidth)\n      .style(\"left\", config.margin.left)\n\n    cache.panel\n      .attr(\"transform\", `translate(${config.margin.left},${config.margin.top})`)\n      .select(\".panel-background\")\n      .attr(\"width\", cache.chartWidth)\n      .attr(\"height\", cache.chartHeight)\n      .attr(\"fill\", \"transparent\")\n\n\n    return this\n  }\n\n  function buildChart () {\n    components.scale\n      .setConfig(config)\n      .setData(dataObject)\n    scales = components.scale.getScales()\n\n    components.axis\n      .setConfig(config)\n      .setScales(scales)\n      .drawAxis()\n      .drawGridLines()\n\n    components.line\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawMarks()\n\n    components.tooltip\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n\n    const legendContent = dataObject.dataBySeries\n        .map((d) => ({\n          id: d.id,\n          key: d.key,\n          label: d.label\n        }))\n\n    components.legend\n      .setConfig(config)\n      .setScales(scales)\n      .setTitle(config.legendTitle)\n      .setContent(legendContent)\n      .setXPosition(config.legendXPosition)\n      .setYPosition(config.legendYPosition)\n      .drawTooltip()\n      .show()\n\n    components.brush\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawBrush()\n\n    components.hover\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .bindEvents(dispatcher)\n\n    components.binning\n      .setConfig(config)\n      .setBinning(config.binningReolution)\n      .setAuto(config.binningIsAuto)\n      .drawBinning()\n\n    components.domainEditor\n      .setConfig(config)\n      .setXDomain(config.xDomain)\n      .setYDomain(config.yDomain)\n      .setY2Domain(config.y2Domain)\n      .drawDomainEditor()\n\n    components.brushRangeEditor\n      .setConfig(config)\n      .setRangeMin(config.brushRangeMin)\n      .setRangeMax(config.brushRangeMax)\n      .drawRangeEditor()\n\n    components.label\n      .setConfig(config)\n      .setXLabels(config.xLabel)\n      .setYLabels(config.yLabel)\n      .setY2Labels(config.y2Label)\n      .drawLabels()\n\n    triggerIntroAnimation()\n    return this\n  }\n\n  function setData (_data) {\n    dataObject.data = cloneData(_data[keys.SERIES])\n    const cleanedData = cleanData(_data)\n    Object.assign(dataObject, cleanedData)\n\n    render()\n    return this\n  }\n\n  function cleanData (_data) {\n    const dataBySeries = cloneData(_data[keys.SERIES])\n    const flatData = []\n\n    // Normalize dataBySeries\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES] = sortData(serie[keys.VALUES], config.keyType)\n      serie[keys.VALUES].forEach((d) => {\n        d[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        d[keys.VALUE] = Number(d[keys.VALUE])\n      })\n    })\n\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES].forEach((d) => {\n        const dataPoint = {}\n        dataPoint[keys.LABEL] = serie[keys.LABEL]\n        dataPoint[keys.GROUP] = serie[keys.GROUP]\n        dataPoint[keys.ID] = serie[keys.ID]\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        dataPoint[keys.VALUE] = d[keys.VALUE]\n        flatData.push(dataPoint)\n      })\n    })\n\n    const flatDataSorted = sortData(flatData, config.keyType)\n\n    const dataByKey = d3.nest()\n      .key(getKey)\n      .entries(flatDataSorted)\n      .map((d) => {\n        const dataPoint = {}\n        dataPoint[keys.DATA] = config.keyType === \"time\" ? new Date(d.key) : d.key\n        dataPoint[keys.SERIES] = d.values\n        return dataPoint\n      })\n\n    const groupKeys = {}\n    dataBySeries.forEach((d) => {\n      if (!groupKeys[d[keys.GROUP]]) {\n        groupKeys[d[keys.GROUP]] = []\n      }\n      groupKeys[d[keys.GROUP]].push(d[keys.ID])\n    })\n\n    let stackData = null\n    let stack = null\n\n    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n      stackData = dataByKey\n          .map((d) => {\n            const points = {\n              key: d[keys.DATA]\n            }\n            d.series.forEach((dB) => {\n              points[dB[keys.ID]] = dB[keys.VALUE]\n            })\n\n            return points\n          })\n\n      stack = d3.stack()\n          .keys(dataBySeries.map(getID))\n          .order(d3.stackOrderNone)\n          .offset(d3.stackOffsetNone)\n    }\n\n    return {dataBySeries, dataByKey, stack, stackData, flatDataSorted, groupKeys}\n  }\n\n  function triggerIntroAnimation () {\n    if (config.isAnimated) {\n      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\")\n        .attr(\"width\", cache.chartWidth - 2)\n        .attr(\"height\", cache.chartHeight)\n        .attr(\"x\", config.margin.left + 1)\n        .attr(\"y\", config.margin.top)\n\n      cache.maskingRectangle.transition()\n        .duration(config.animationDuration)\n        .ease(config.ease)\n        .attr(\"width\", 0)\n        .attr(\"x\", config.width - config.margin.right)\n        .on(\"end\", () => cache.maskingRectangle.remove())\n    }\n  }\n\n  function getNearestDataPoint (_mouseX) {\n    const keyFromInvertedX = invertScale(scales.xScale, _mouseX, config.keyType)\n    const bisectLeft = d3.bisector(getKey).left\n    const dataEntryIndex = bisectLeft(dataObject.dataByKey, keyFromInvertedX)\n    const dataEntryForXPosition = dataObject.dataByKey[dataEntryIndex]\n    const dataEntryForXPositionPrev = dataObject.dataByKey[Math.max(dataEntryIndex - 1, 0)]\n\n    let nearestDataPoint = null\n\n    if (keyFromInvertedX) {\n      if ((keyFromInvertedX - dataEntryForXPositionPrev.key)\n          < (dataEntryForXPosition.key - keyFromInvertedX)) {\n        nearestDataPoint = dataEntryForXPositionPrev\n      } else {\n        nearestDataPoint = dataEntryForXPosition\n      }\n    }\n    return nearestDataPoint\n  }\n\n  function addEvents () {\n    const THROTTLE_DELAY = 20\n    const throttledDispatch = throttle((...args) => {\n      dispatcher.call(...args)\n    }, THROTTLE_DELAY)\n\n    cache.panel\n      .on(\"mouseover.dispatch\", () => {\n        dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mouseout.dispatch\", () => {\n        dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mousemove.dispatch\", () => {\n        const [mouseX, mouseY] = d3.mouse(cache.panel.node())\n        if (!dataObject.data) { return }\n        const xPosition = mouseX\n        const dataPoint = getNearestDataPoint(xPosition)\n\n        if (dataPoint) {\n          const dataPointXPosition = scales.xScale(dataPoint[keys.DATA])\n          throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY)\n        }\n      })\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.on(\".\", null).remove()\n  }\n\n  return {\n    render,\n    setConfig,\n    setData,\n    on,\n    destroy,\n    events: eventCollector\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/chart.js","export {\n\taxisBottom,\n\taxisLeft,\n\taxisRight,\n\ttimeFormat,\n\tformat,\n\tbisector,\n\textent,\n\tsum,\n\trange,\n\tmerge,\n\tnest,\n\tdispatch,\n\teaseLinear,\n\teaseQuadInOut,\n\tselect,\n\tmouse,\n\tevent,\n\ttransition,\n\trandomUniform,\n\trandomNormal,\n\ttimeDay,\n\ttimeMonth,\n\tarea,\n\tcurveCatmullRom,\n\tline,\n\tstack,\n\tstackOffsetNone,\n\tstackOrderNone,\n\tscaleTime,\n\tscalePoint,\n\tscaleBand,\n\tscaleLinear,\n\tscaleOrdinal,\n\tbrushX\n} from \"d3/build/d3\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/d3-service.js","// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.11.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function constrain(transform$$1, extent) {\n    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n    return transform$$1.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","export const mapdUI = {\n  skyBlue: \"#22A7F0\"\n}\n\nexport const mapdColors = [\n  \"#ea5545\",\n  \"#bdcf32\",\n  \"#b33dc6\",\n  \"#ef9b20\",\n  \"#87bc45\",\n  \"#f46a9b\",\n  \"#ace5c7\",\n  \"#ede15b\",\n  \"#836dc5\",\n  \"#86d87f\",\n  \"#27aeef\"\n]\n\nexport const grey = [\n  \"#F8F8FA\",\n  \"#EFF2F5\",\n  \"#D2D6DF\",\n  \"#C3C6CF\",\n  \"#ADB0B6\",\n  \"#666A73\",\n  \"#45494E\",\n  \"#363A43\",\n  \"#282C35\"\n]\n\nexport const colors = {\n  mapdUI,\n  mapdColors,\n  grey\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","export const keys = {\n  DATA: \"key\",\n  VALUE: \"value\",\n  ID: \"id\",\n  LABEL: \"label\",\n  GROUP: \"group\",\n  VALUES: \"values\",\n  SERIES: \"series\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","import {keys} from \"./constants\"\n\n/**\n * Clones the passed array of data\n * @param  {Object[]} dataToClone Data to clone\n * @return {Object[]}             Cloned data\n */\nexport function cloneData (_dataToClone) {\n  return JSON.parse(JSON.stringify(_dataToClone))\n}\n\nexport function sortData (_data, _keyType) {\n  const sortedData = cloneData(_data)\n  if (_keyType === \"time\") {\n    sortedData.forEach((d) => {\n      d[keys.DATA] = new Date(d[keys.DATA])\n    })\n    sortedData.sort((a, b) => a[keys.DATA].getTime() - b[keys.DATA].getTime())\n  } else if (_keyType === \"string\") {\n    sortedData.sort((a, b) => a[keys.DATA].localeCompare(b[keys.DATA], \"en\", {numeric: false}))\n  } else {\n    sortedData.sort((a, b) => a[keys.DATA] - b[keys.DATA])\n  }\n  return sortedData\n}\n\nexport function getUnique (arr) {\n  return [...new Set(arr)]\n}\n\nexport function invertScale (_scale, _mouseX, _keyType) {\n  if (_keyType === \"time\" || _keyType === \"number\") {\n    return _scale.invert(_mouseX)\n  } else {\n    const bandStep = _scale.step()\n    const index = Math.round((_mouseX) / bandStep)\n    return _scale.domain()[index]\n  }\n}\n\nexport function override (a, b) {\n  const accum = {}\n  for (const x in a) {\n    if (a.hasOwnProperty(x)) {\n      accum[x] = (x in b) ? b[x] : a[x]\n    }\n  }\n  return accum\n}\n\nexport function throttle (callback, limit) {\n  let wait = false\n  let timer = null\n  return function throttleFn (...args) {\n    if (!wait) {\n      wait = true\n      clearTimeout(timer)\n      timer = setTimeout(() => {\n        wait = false\n        callback(...args)\n      }, limit)\n    }\n  }\n}\n\nexport function rebind (target) {\n  return function reapply (...args) {\n    target.on(`${args[0]}.rebind`, ...args.slice(1))\n    return this\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {getUnique, override} from \"./helpers/common\"\n\nexport default function Scale () {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    height: null,\n    width: null,\n    keyType: null,\n    chartType: null,\n    colorSchema: null,\n    defaultColor: null\n  }\n\n  let data = {\n    dataByKey: null,\n    dataBySeries: null,\n    flatDataSorted: null,\n    groupKeys: null\n  }\n\n  const getID = (d) => d[keys.ID]\n  const getKey = (d) => d[keys.DATA]\n  const getValue = (d) => d[keys.VALUE]\n\n  function buildXScale (_allKeys) {\n    const chartWidth = config.width - config.margin.left - config.margin.right\n    let domain = null\n    let xScale = null\n    if (config.keyType === \"time\") {\n      domain = d3.extent(_allKeys)\n      xScale = d3.scaleTime()\n    } else if (config.keyType === \"number\") {\n      domain = d3.extent(_allKeys)\n      xScale = d3.scaleLinear()\n    } else {\n      domain = _allKeys\n      xScale = (config.chartType === \"bar\" || config.chartType === \"stackedBar\") ? d3.scaleBand() : d3.scalePoint()\n      xScale.padding(0)\n    }\n\n    xScale.domain(domain)\n      .range([0, chartWidth])\n\n    return xScale\n  }\n\n  function buildYScale (_extent) {\n    const chartHeight = config.height - config.margin.top - config.margin.bottom\n    const yScale = d3.scaleLinear()\n        .domain(_extent)\n        .rangeRound([chartHeight, 0])\n        .nice()\n\n    return yScale\n  }\n\n  function buildColorScale () {\n    const ids = data.dataBySeries.map(getID)\n    const colorScale = d3.scaleOrdinal()\n        .range(config.colorSchema.map((d) => d.value))\n        .domain(config.colorSchema.map((d, i) => d.key || ids[i]))\n        .unknown(config.defaultColor)\n\n    return colorScale\n  }\n\n  function splitByGroups () {\n    const groups = {}\n    data.dataBySeries.forEach((d) => {\n      const key = d[keys.GROUP]\n      if (!groups[key]) {\n        groups[key] = {\n          allValues: [],\n          allKeys: []\n        }\n      }\n      groups[key].allValues = groups[key].allValues.concat(d[keys.VALUES].map(getValue))\n      groups[key].allKeys = groups[key].allKeys.concat(d[keys.VALUES].map(getKey))\n    })\n\n    return groups\n  }\n\n  function getStackedScales () {\n    const allStackHeights = data.dataByKey.map((d) => d3.sum(d.series.map((dB) => dB.value)))\n\n    const valuesExtent = d3.extent(allStackHeights)\n\n    const allKeys = data.flatDataSorted.map(getKey)\n    const allUniqueKeys = getUnique(allKeys)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale([0, valuesExtent[1]])\n\n    return {\n      xScale,\n      yScale,\n      colorScale\n    }\n  }\n\n  function getHorizontalScales () {\n    const groups = splitByGroups()\n\n    const hasSecondAxis = Object.keys(data.groupKeys).length > 1\n\n    const groupAxis1 = groups[0]\n    const allUniqueKeys = groupAxis1.allKeys\n    const valuesExtent = d3.extent(groupAxis1.allValues)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n    const yScale = buildYScale(valuesExtent)\n\n    let yScale2 = null\n    if (hasSecondAxis) {\n      const groupAxis2 = groups[1]\n      const valuesExtent2 = d3.extent(groupAxis2.allValues)\n\n      yScale2 = yScale.copy()\n        .domain(valuesExtent2)\n    }\n\n    return {\n      hasSecondAxis,\n      xScale,\n      yScale,\n      yScale2,\n      colorScale\n    }\n  }\n\n  function getScales () {\n    if (config.chartType === \"stackedBar\"\n      || config.chartType === \"stackedArea\") {\n      return getStackedScales()\n    } else {\n      return getHorizontalScales()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setData,\n    getScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/scale.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Line (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    yScale2: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n  }\n\n  function drawLines () {\n    const seriesLine = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale(d[keys.VALUE]))\n\n    const seriesLine2 = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale2(d[keys.VALUE]))\n        .curve(d3.curveCatmullRom)\n\n    const lines = cache.svg.selectAll(\".mark.line\")\n        .data(data.dataBySeries)\n\n    lines.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"line\"].join(\" \"))\n      .merge(lines)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === 0) {\n          return seriesLine(d[keys.VALUES])\n        } else {\n          return seriesLine2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", \"none\")\n\n    lines.exit().remove()\n  }\n\n  function drawAreas () {\n    const seriesArea = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n\n    const seriesArea2 = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale2(d[keys.VALUE]))\n        .y1(() => config.chartHeight)\n        .curve(d3.curveCatmullRom)\n\n    const areas = cache.svg.selectAll(\".mark.area\")\n        .data(data.dataBySeries)\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === 0) {\n          return seriesArea(d[keys.VALUES])\n        } else {\n          return seriesArea2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", getColor)\n\n    areas.exit().remove()\n  }\n\n  function drawStackedAreas () {\n    const seriesLine = d3.area()\n        .x((d) => scales.xScale(d.data[keys.DATA]))\n        .y0((d) => scales.yScale(d[0]))\n        .y1((d) => scales.yScale(d[1]))\n\n    const areas = cache.svg.selectAll(\".mark.stacked-area\")\n        .data(data.stack(data.stackData))\n\n    areas.enter()\n      .append(\"path\")\n      .attr(\"class\", () => [\"mark\", \"stacked-area\"].join(\" \"))\n      .merge(areas)\n      .attr(\"d\", seriesLine)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", (d) => scales.colorScale(d.key))\n\n    areas.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"area\") {\n      drawAreas()\n    } else if (config.chartType === \"line\") {\n      drawLines()\n    } else if (config.chartType === \"stackedArea\") {\n      drawStackedAreas()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Axis (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    tickSizes: null,\n    tickPadding: null,\n    xAxisFormat: null,\n    yAxisFormat: null,\n    y2AxisFormat: null,\n    keyType: null,\n    yTicks: null,\n    y2Ticks: null,\n    xTickSkip: null,\n    axisTransitionDuration: null,\n    ease: null,\n    grid: null,\n    hoverZoneSize: 30\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null\n  }\n\n  const cache = {\n    container: _container,\n    background: null,\n    chartHeight: null,\n    chartWidth: null,\n    xAxis: null,\n    yAxis: null,\n    yAxis2: null,\n    horizontalGridLines: null,\n    verticalGridLines: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"axis-group\", true)\n          .style(\"pointer-events\", \"none\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis x\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y2\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function buildAxis () {\n    cache.xAxis = d3.axisBottom(scales.xScale)\n        .tickSize(config.tickSizes, 0)\n        .tickPadding(config.tickPadding)\n\n    if (config.keyType === \"time\") {\n      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n        const formatter = d3.timeFormat(config.xAxisFormat)\n        cache.xAxis.tickFormat(formatter)\n      }\n    } else if (config.keyType === \"string\") {\n      cache.xAxis.tickValues(scales.xScale.domain().filter((d, i) => !(i % config.xTickSkip)))\n    }\n\n    cache.yAxis = d3.axisLeft(scales.yScale)\n        .ticks(config.yTicks)\n        .tickSize([config.tickSizes])\n        .tickPadding(config.tickPadding)\n        .tickFormat(d3.format(config.yAxisFormat))\n\n    if (scales.hasSecondAxis) {\n      cache.yAxis2 = d3.axisRight(scales.yScale2)\n          .ticks(config.y2Ticks)\n          .tickSize([config.tickSizes])\n          .tickPadding(config.tickPadding)\n          .tickFormat(d3.format(config.y2AxisFormat))\n    }\n  }\n\n  function drawAxis () {\n    buildSVG()\n    buildAxis()\n\n    cache.svg.select(\".axis.x\")\n        .attr(\"transform\", `translate(0, ${cache.chartHeight})`)\n        .call(cache.xAxis)\n\n    cache.svg.select(\".axis.y\")\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .ease(config.ease)\n        .call(cache.yAxis)\n\n    if (scales.hasSecondAxis) {\n      cache.svg.select(\".axis.y2\")\n          .attr(\"transform\", `translate(${cache.chartWidth}, 0)`)\n          .transition()\n          .duration(config.axisTransitionDuration)\n          .ease(config.ease)\n          .call(cache.yAxis2)\n    }\n\n    return this\n  }\n\n  function drawGridLines () {\n    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.horizontal-grid-line\")\n          .data(scales.yScale.ticks(config.yTicks))\n\n      cache.horizontalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"horizontal-grid-line\")\n        .merge(cache.horizontalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"x2\", cache.chartWidth)\n        .attr(\"y1\", scales.yScale)\n        .attr(\"y2\", scales.yScale)\n\n      cache.horizontalGridLines.exit().remove()\n    }\n\n    if (config.grid === \"vertical\" || config.grid === \"full\") {\n      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.vertical-grid-line\")\n          .data(cache.xAxis.tickValues())\n\n      cache.verticalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"vertical-grid-line\")\n        .merge(cache.verticalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", cache.chartHeight)\n        .attr(\"x1\", scales.xScale)\n        .attr(\"x2\", scales.xScale)\n\n      cache.verticalGridLines.exit().remove()\n    }\n\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    drawAxis,\n    drawGridLines\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/axis.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override} from \"./helpers/common\"\n\nexport default function Tooltip (_container) {\n\n  let config = {\n    margin: {\n      top: 2,\n      right: 2,\n      bottom: 2,\n      left: 2\n    },\n    width: 250,\n    height: 45,\n\n    valueFormat: \".2f\",\n\n    // Animations\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n\n    dateFormat: \"%b %d, %Y\",\n    seriesOrder: [],\n\n    // from chart\n    keyType: \"time\"\n  }\n\n  let scales = {\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    chartWidth: null,\n    chartHeight: null,\n    tooltipDivider: null,\n    tooltipBody: null,\n    tooltipTitle: null,\n    tooltipBackground: null,\n    xPosition: null,\n    yPosition: null,\n    content: null,\n    title: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"tooltip-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"pointer-events\", \"none\")\n\n      cache.tooltipTitle = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-title\")\n\n      cache.tooltipBody = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-body\")\n    }\n  }\n\n  function calculateTooltipPosition (_mouseX, _mouseY) {\n    const OFFSET = 4\n    const tooltipSize = cache.root.node().getBoundingClientRect()\n    const tooltipX = _mouseX\n    let avoidanceOffset = OFFSET\n    const tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2\n\n    if (_mouseX > (cache.chartWidth / 2)) {\n      avoidanceOffset = -tooltipSize.width - OFFSET\n    }\n    return [tooltipX + avoidanceOffset, tooltipY]\n  }\n\n  function move () {\n    const xPosition = cache.xPosition === \"auto\"\n        ? cache.chartWidth\n        : cache.xPosition\n\n    const yPosition = cache.yPosition === \"auto\"\n        ? config.margin.top\n        : cache.yPosition\n\n    cache.root.transition()\n      .duration(config.mouseChaseDuration)\n      .ease(config.tooltipEase)\n      .style(\"top\", `${yPosition}px`)\n      .style(\"left\", function left () {\n        const width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0\n        return `${xPosition + config.margin.left - width}px`\n      })\n    return this\n  }\n\n  function drawContent () {\n    const content = cache.content\n    const formatter = d3.format(config.valueFormat)\n\n    const tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\")\n        .data(content)\n    const tooltipItemsUpdate = tooltipItems.enter().append(\"div\")\n      .attr(\"class\", \"tooltip-item\")\n      .merge(tooltipItems)\n    tooltipItems.exit().remove()\n\n    const tooltipItem = tooltipItemsUpdate.selectAll(\".section\")\n      .data((d) => {\n        const legendData = [\n          {key: \"color\", value: scales.colorScale(d[keys.ID])},\n          {key: \"label\", value: d[keys.LABEL]}\n        ]\n        if (typeof d[keys.VALUE] !== \"undefined\") {\n          legendData.push({key: \"value\", value: d[keys.VALUE]})\n        }\n        return legendData\n      })\n    tooltipItem.enter().append(\"div\")\n      .merge(tooltipItem)\n      .attr(\"class\", (d) => [\"section\", d.key].join(\" \"))\n      .each(function each (d) {\n        const selection = d3.select(this)\n        if (d.key === \"color\") {\n          selection.style(\"background\", d.value)\n        } else if (d.key === \"value\") {\n          selection.html(formatter(d.value))\n        } else {\n          selection.html(d.value)\n        }\n      })\n    tooltipItem.exit().remove()\n    return this\n  }\n\n  function drawTitle () {\n    let title = cache.title\n\n    if (typeof title === \"object\") {\n      title = d3.timeFormat(config.dateFormat)(title)\n    }\n\n    cache.tooltipTitle.html(title)\n    return this\n  }\n\n  function drawTooltip () {\n    buildSVG()\n    drawTitle()\n    drawContent()\n    move()\n    return this\n  }\n\n  function setupContent (_series) {\n    let series = _series\n\n    if (config.seriesOrder.length) {\n      series = sortByTopicsOrder(_series)\n    } else if (_series.length && _series[0][keys.LABEL]) {\n      series = sortByAlpha(_series)\n    }\n\n    cache.content = series\n    return this\n  }\n\n  function sortByTopicsOrder (_series, _order = seriesOrder) {\n    return _order.map((orderName) => _series.filter(({name}) => name === orderName)[0])\n  }\n\n  function sortByAlpha (_series) {\n    const series = cloneData(_series)\n    return series.sort((a, b) => a[keys.LABEL].localeCompare(b[keys.LABEL], \"en\", {numeric: false}))\n  }\n\n  function hide () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"none\")\n    return this\n  }\n\n  function show () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"block\")\n    return this\n  }\n\n  function setupTooltip (_dataPoint, _xPosition, _yPosition) {\n    buildSVG()\n    const [tooltipX, tooltipY] = calculateTooltipPosition(_xPosition, _yPosition)\n    setXPosition(tooltipX)\n    setYPosition(tooltipY)\n    setTitle(_dataPoint[keys.DATA])\n    setupContent(_dataPoint[keys.SERIES])\n\n    drawTooltip()\n    return this\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.tooltip\", show)\n      .on(\"mouseMovePanel.tooltip\", setupTooltip)\n      .on(\"mouseOutPanel.tooltip\", hide)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setTitle (_title) {\n    cache.title = _title\n    return this\n  }\n\n  function setXPosition (_xPosition) {\n    cache.xPosition = _xPosition\n    return this\n  }\n\n  function setYPosition (_yPosition) {\n    cache.yPosition = _yPosition\n    return this\n  }\n\n  function setContent (_content) {\n    cache.content = _content\n    return this\n  }\n\n  return {\n    bindEvents,\n    setXPosition,\n    setYPosition,\n    setContent,\n    setTitle,\n    hide,\n    show,\n    drawTooltip,\n    setConfig,\n    setScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","import Tooltip from \"./tooltip\"\n\nexport default function Legend (_container) {\n  return Tooltip(_container)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData, override} from \"./helpers/common\"\n\nexport default function Brush (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null\n  }\n\n  let scales = {\n    xScale: null\n  }\n\n  const cache = {\n    container: _container,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"brush-group\", true)\n    }\n  }\n\n  function extractBrushDimension (_data) {\n    const merged = d3.merge(_data.map((d) => d[keys.VALUES]))\n    return sortData(merged, config.keyType)\n  }\n\n  function buildBrush () {\n    cache.brush = cache.brush || d3.brushX()\n        .on(\"start\", handleBrushStart)\n        .on(\"brush\", handleBrushMove)\n        .on(\"end\", handleBrushEnd)\n\n    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]])\n\n    cache.chartBrush = cache.svg.call(cache.brush)\n\n    cache.chartBrush.selectAll(\".brush-rect\")\n      .attr(\"height\", cache.chartHeight)\n  }\n\n  function getDataExtent () {\n    const selection = d3.event.selection\n    const dataExtent = selection.map((d) => invertScale(scales.xScale, d, config.keyType))\n    return dataExtent\n  }\n\n  function handleBrushStart () {\n    dispatcher.call(\"brushStart\", this, getDataExtent(), config)\n  }\n\n  function handleBrushMove () {\n    dispatcher.call(\"brushMove\", this, getDataExtent(), config)\n  }\n\n  function handleBrushEnd () {\n    // Only transition after input, ignore empty selections.\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n\n    const dataExtent = getDataExtent()\n\n    d3.select(this)\n      .transition()\n      .call(d3.event.target.move, dataExtent.map(scales.xScale))\n\n    dispatcher.call(\"brushEnd\", this, dataExtent, config)\n  }\n\n  function drawBrush () {\n    buildSVG()\n\n    if (data.dataBySeries) {\n      cache.data = extractBrushDimension(cloneData(data.dataBySeries))\n      buildBrush()\n    }\n\n    return this\n  }\n\n  // function setBrushByPercentages (_a, _b) {\n  //   const x0 = _a * cache.chartWidth\n  //   const x1 = _b * cache.chartWidth\n\n  //   brush.move(chartBrush, [x0, x1])\n  // }\n\n  // function setBrushByDates (_dateA, _dateB) {\n  //   const x0 = cache.xScale(new Date(_dateA))\n  //   const x1 = cache.xScale(new Date(_dateB))\n\n  //   cache.brush.move(cache.chartBrush, [x0, x1])\n  // }\n\n  // function updateHandlers (_dateExtent) {\n  //   if (_dateExtent === null) {\n  //     cache.handle.attr(\"display\", \"none\")\n  //   } else {\n  //     cache.handle\n  //       .attr(\"display\", null)\n  //       .attr(\"transform\", (d, i) => `translate(${_dateExtent[i]},${cache.chartHeight / 2})`)\n  //   }\n  // }\n\n  // API\n\n  /**\n   * Gets or Sets the dateRange for the selected part of the brush\n   * @param  {String[]} _x Desired dateRange for the graph\n   * @return { dateRange | module} Current dateRange or Chart module to chain calls\n   * @public\n   */\n  // function dateRange (_x) {\n  //   if (!arguments.length) {\n  //     return dateRange\n  //   }\n  //   dateRange = _x\n\n  //   if (Array.isArray(dateRange)) {\n  //     setBrushByDates(...dateRange)\n  //   }\n\n  //   return this\n  // }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setData,\n    setScales,\n    drawBrush\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Hover (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    dotRadius: null,\n    chartType: null\n  }\n\n  let scales = {\n    yScale: null,\n    yScale2: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null\n  }\n\n  let data = {\n    stack: null,\n    groupKeys: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"hover\")\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"hover-group\", true)\n          .style(\"pointer-events\", \"none\")\n    }\n  }\n\n  function drawHover (_dataPoint, _dataPointXPosition) {\n    buildSVG()\n\n    if (!isNaN(_dataPointXPosition)) {\n      moveVerticalMarker(_dataPointXPosition)\n      drawVerticalMarker()\n      if (config.chartType === \"stackedLine\"\n        || config.chartType === \"stackedArea\"\n        || config.chartType === \"stackedBar\") {\n        highlightStackedDataPoints(_dataPoint)\n      } else {\n        highlightDataPoints(_dataPoint)\n      }\n      dispatcher.call(\"hover\", this, _dataPoint)\n    }\n  }\n\n  function show () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"block\")\n    return this\n  }\n\n  function hide () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"none\")\n    return this\n  }\n\n  function highlightDataPoints (_dataPoint) {\n    const dotsData = _dataPoint[keys.SERIES]\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawHighlightDataPoints (_dotsData) {\n    const dots = cache.svg.selectAll(\".dot\")\n        .data(_dotsData)\n\n    dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .merge(dots)\n      .attr(\"cy\", (d) => {\n        if (config.chartType === \"stackedArea\" || data.groupKeys[0].indexOf(d[keys.ID]) > -1) {\n          return scales.yScale(d[keys.VALUE])\n        } else {\n          return scales.yScale2(d[keys.VALUE])\n        }\n      })\n      .attr(\"r\", config.dotRadius)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", getColor)\n\n    dots.exit().remove()\n  }\n\n  function highlightStackedDataPoints (_dataPoint) {\n    const stackedDataPoint = {key: _dataPoint[keys.DATA]}\n    _dataPoint.series.forEach((d) => {\n      const id = d[keys.ID]\n      stackedDataPoint[id] = d[keys.VALUE]\n    })\n\n    const dotsStack = data.stack([stackedDataPoint])\n    const dotsData = dotsStack.map((d) => {\n      const dot = {value: d[0][1]}\n      dot[keys.ID] = d.key\n      return dot\n    })\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawVerticalMarker () {\n    const verticalMarkerLine = cache.svg.selectAll(\"line\")\n        .data([0])\n\n    verticalMarkerLine.enter()\n      .append(\"line\")\n      .classed(\"vertical-marker\", true)\n      .merge(verticalMarkerLine)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", cache.chartHeight)\n\n    verticalMarkerLine.exit().remove()\n  }\n\n  function moveVerticalMarker (_verticalMarkerXPosition) {\n    cache.svg.attr(\"transform\", `translate(${[_verticalMarkerXPosition, 0]})`)\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.hover\", show)\n      .on(\"mouseMovePanel.hover\", drawHover)\n      .on(\"mouseOutPanel.hover\", hide)\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    bindEvents,\n    highlightDataPoints,\n    highlightStackedDataPoints,\n    drawVerticalMarker,\n    moveVerticalMarker,\n    on\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/hover.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exclusiveToggle} from \"./interactors\"\n\nexport default function Binning (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    autoLabel: \"auto\",\n    exclusiveToggle: [\"1y\", \"1q\", \"1mo\", \"1w\"],\n    label: \"BIN:\"\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    autoItem: null,\n    binningItems: null,\n    selectedBin: null,\n    isAuto: true\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"change\")\n\n  function buildSVG () {\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"binning-group\")\n          .style(\"float\", \"left\")\n\n      cache.label = cache.root.append(\"div\")\n          .attr(\"class\", \"label\")\n          .text(config.label)\n\n      cache.autoItem = cache.root.append(\"div\")\n          .attr(\"class\", \"item item-auto toggleOnOff\")\n          .on(\"click.select\", function click () {\n            const isSelected = this.classList.contains(\"selected\")\n            const toggled = !isSelected\n            setAuto(toggled)\n            drawBinning()\n            dispatcher.call(\"change\", this, {name: config.autoLabel, isSelected: toggled})\n          })\n          .text(config.autoLabel)\n\n      cache.binningItems = cache.root.selectAll(\".toggleExclusive\")\n          .data(config.exclusiveToggle)\n          .enter().append(\"div\")\n          .attr(\"class\", (d) => `item item-${d} toggleExclusive`)\n          .on(\"click.select\", function click (d) {\n            setBinning(d)\n            drawBinning()\n            const isSelected = this.classList.contains(\"selected\")\n            dispatcher.call(\"change\", this, {name: d, isSelected})\n          })\n          .text((d) => d)\n    }\n\n    const LINE_HEIGHT = 20\n    cache.root\n      .style(\"top\", config.margin.top - LINE_HEIGHT)\n      .style(\"left\", config.margin.left)\n\n    changeBinning(cache.selectedBin)\n    toggleAuto(cache.isAuto)\n  }\n\n  function changeBinning (_selectedItemName) {\n    if (_selectedItemName) {\n      exclusiveToggle(cache.binningItems, `.item-${_selectedItemName}`)\n    }\n  }\n\n  function toggleAuto (_shouldBeSelected) {\n    cache.autoItem\n      .classed(\"selected\", _shouldBeSelected)\n      .classed(\"dimmed\", !_shouldBeSelected)\n  }\n\n  function drawBinning () {\n    buildSVG()\n    return this\n  }\n\n  function setBinning (_selectedBin) {\n    cache.selectedBin = _selectedBin\n    return this\n  }\n\n  function setAuto (_isAuto) {\n    cache.isAuto = _isAuto\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.root.remove()\n  }\n\n  return {\n    on,\n    setConfig,\n    destroy,\n    drawBinning,\n    setBinning,\n    setAuto\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/binning.js","import * as d3 from \"./helpers/d3-service\"\n\n/**\n * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n * @param  {Number} selector A valid selector of the elements to toggle\n * @example\n * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n *\n * @return {void}\n */\n\nexport function toggleOnOff (selector, bool) {\n  const shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool\n  d3.select(selector)\n    .classed(\"selected\", shouldBeSelected)\n    .classed(\"dimmed\", !shouldBeSelected)\n}\n\nexport function exclusiveToggle (othersSelection, selector) {\n  return toggle(othersSelection, selector, {\n    toggleOffIsEnabled: false,\n    toggleMultipleIsEnabled: false\n  })\n}\n\nexport function toggle (othersSelection, selector, options = {toggleOffIsEnabled: false, toggleMultipleIsEnabled: false}) {\n  /* eslint-disable consistent-this */\n  let hasSelection = false\n  const selectionNode = document.querySelector(selector)\n\n  othersSelection.classed(\"selected\", function selectedClass () {\n    const isSelected = this.classList.contains(\"selected\")\n    const hasJustBeenClicked = this === selectionNode\n    let shouldBeSelected = false\n\n    if (hasJustBeenClicked) {\n      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true\n    } else {\n      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false\n    }\n\n    hasSelection = hasSelection || shouldBeSelected\n    return shouldBeSelected\n  })\n\n  othersSelection.classed(\"dimmed\", function dimmedClass () {\n    return hasSelection && !this.classList.contains(\"selected\")\n  })\n  /* eslint-enable consistent-this */\n}\n\nexport function blurOnEnter (selection) {\n  selection.on(\"keypress.enter\", function keypress () {\n    if (d3.event.key === \"Enter\") { this.blur() }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/interactors.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function DomainEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xHitZone: null,\n    yHitZone: null,\n    y2HitZone: null,\n    yMaxInput: null,\n    yMinInput: null,\n    yLockIcon: null,\n    y2MaxInput: null,\n    y2MinInput: null,\n    y2LockIcon: null,\n    xMinInput: null,\n    xMaxInput: null,\n    xLockIcon: null,\n    chartWidth: null,\n    chartHeight: null,\n    xDomain: null,\n    yDomain: null,\n    y2Domain: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"domain-input-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n\n      // hit zones\n      cache.xHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone x\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showXEditor)\n          .on(\"mouseout.dispatch\", hideXEditor)\n\n      cache.yHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showYEditor)\n          .on(\"mouseout.dispatch\", hideYEditor)\n\n      cache.y2HitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y2\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showY2Editor)\n          .on(\"mouseout.dispatch\", hideY2Editor)\n\n      // y input group\n      cache.yMaxInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.yMinInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.yLockIcon = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y\"})\n        })\n\n      // y2 input group\n      cache.y2MaxInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y2\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.y2MinInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"y2\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.y2LockIcon = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y2\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y2\"})\n        })\n\n      // x input group\n      cache.xMinInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"x\", type: \"min\"})\n        })\n        .call(blurOnEnter)\n\n      cache.xMaxInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          dispatcher.call(\"domainChange\", this, {value: this.innerText, axis: \"x\", type: \"max\"})\n        })\n        .call(blurOnEnter)\n\n      cache.xLockIcon = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock x\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"x\"})\n        })\n\n      hideYEditor()\n      hideY2Editor()\n      hideXEditor()\n    }\n\n    const HOVER_ZONE_SIZE = 40\n    const LOCK_SIZE = 12\n    const INPUT_HEIGHT = 12\n    const PADDING = 4\n    const INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING\n\n    cache.xHitZone\n      .style(\"width\", `${cache.chartWidth + HOVER_ZONE_SIZE * 2}px`)\n      .style(\"height\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top + cache.chartHeight}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.yHitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.y2HitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left + cache.chartWidth}px`)\n\n    cache.yMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .text(Array.isArray(cache.yDomain)\n          && !isNaN(cache.yDomain[1]) ? cache.yDomain[1] : \"\")\n\n    cache.yMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .text(Array.isArray(cache.yDomain)\n            && !isNaN(cache.yDomain[0]) ? cache.yDomain[0] : \"\")\n\n    cache.yLockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.y2MaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(Array.isArray(cache.y2Domain)\n          && !isNaN(cache.y2Domain[1]) ? cache.y2Domain[1] : \"\")\n\n    cache.y2MinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(Array.isArray(cache.y2Domain)\n          && !isNaN(cache.y2Domain[0]) ? cache.y2Domain[0] : \"\")\n\n    cache.y2LockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.xMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE}px`)\n      .text(Array.isArray(cache.xDomain)\n          && typeof (cache.xDomain[0]) !== \"undefined\" ? cache.xDomain[0] : \"\")\n\n    cache.xMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH}px`)\n      .text(Array.isArray(cache.xDomain)\n          && typeof (cache.xDomain[1]) !== \"undefined\" ? cache.xDomain[1] : \"\")\n\n    cache.xLockIcon\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth}px`)\n  }\n\n  function showYEditor () {\n    cache.yHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideYEditor () {\n    cache.yHitZone.style(\"opacity\", \"0\")\n  }\n\n  function showY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"0\")\n  }\n\n  function showXEditor () {\n    cache.xHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideXEditor () {\n    cache.xHitZone.style(\"opacity\", \"0\")\n  }\n\n  function drawDomainEditor () {\n    buildSVG()\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setXDomain (_xDomain) {\n    cache.xDomain = _xDomain\n    return this\n  }\n\n  function setYDomain (_yDomain) {\n    cache.yDomain = _yDomain\n    return this\n  }\n\n  function setY2Domain (_y2Domain) {\n    cache.y2Domain = _y2Domain\n    return this\n  }\n\n  function setXLock (_xLock) {\n    cache.xLock = _xLock\n    return this\n  }\n\n  function setYLock (_yLock) {\n    cache.yLock = _yLock\n    return this\n  }\n\n  function setY2Lock (_y2Lock) {\n    cache.y2Lock = _y2Lock\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXDomain,\n    setYDomain,\n    setY2Domain,\n    setXLock,\n    setYLock,\n    setY2Lock,\n    drawDomainEditor\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/domain-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function BrushRangeEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    inputMin: null,\n    inputMax: null,\n    rangeMin: null,\n    rangeMax: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"rangeChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"brush-range-input-group\")\n          .style(\"top\", 0)\n\n      cache.inputMax = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input max\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMax = cache.inputMax.text()\n          dispatcher.call(\"rangeChange\", this, {value: cache.rangeMax, type: \"max\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n\n      cache.root.append(\"div\")\n        .attr(\"class\", \"separator\")\n        .text(\"-\")\n        .style(\"float\", \"right\")\n\n      cache.inputMin = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input min\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          cache.rangeMin = cache.inputMin.text()\n          dispatcher.call(\"rangeChange\", this, {value: cache.rangeMin, type: \"min\"})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n    }\n\n    cache.inputMin.text(cache.rangeMin || \"\")\n    cache.inputMax.text(cache.rangeMax || \"\")\n  }\n\n  function drawRangeEditor () {\n    buildSVG()\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setRangeMin (_rangeMin) {\n    cache.rangeMin = _rangeMin\n    return this\n  }\n\n  function setRangeMax (_rangeMax) {\n    cache.rangeMax = _rangeMax\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    drawRangeEditor,\n    setRangeMin,\n    setRangeMax\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush-range-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Label (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xAxisLabel: null,\n    yAxisLabel: null,\n    y2AxisLabel: null,\n    xLabel: null,\n    yLabel: null,\n    y2Label: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"axisLabelChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"label-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n          .style(\"white-space\", \"nowrap\")\n\n      cache.xAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label x\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.xLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"x\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%)\")\n\n      cache.yAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.yLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"left\", 0)\n        .style(\"transform\", \"translate(-50%) rotate(-90deg)\")\n\n      cache.y2AxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y2\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.y2Label = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y2\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%) rotate(90deg)\")\n    }\n\n    cache.xAxisLabel\n        .text(config.xLabel)\n        .style(\"top\", function top () {\n          const textHeight = this.getBoundingClientRect().height\n          return `${config.height - textHeight}px`\n        })\n        .style(\"left\", `${config.margin.left + cache.chartWidth / 2}px`)\n\n    cache.yAxisLabel\n      .text(config.yLabel)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${textWidth / 2}px`\n      })\n\n    cache.y2AxisLabel\n      .text(config.y2Label)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${config.width - textWidth / 2}px`\n      })\n  }\n\n  function drawLabels () {\n    buildSVG()\n    return this\n  }\n\n  function setXLabels (_xLabel) {\n    config.xLabel = _xLabel\n    return this\n  }\n\n  function setYLabels (_yLabel) {\n    config.yLabel = _yLabel\n    return this\n  }\n\n  function setY2Labels (_y2Label) {\n    config.y2Label = _y2Label\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXLabels,\n    setYLabels,\n    setY2Labels,\n    drawLabels\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/label.js","import * as d3 from \"./helpers/d3-service\"\nexport {bisector, extent, sum, range, merge} from \"d3-array\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData} from \"./helpers/common\"\n\nexport default function DataManager () {\n  /* eslint-disable no-magic-numbers */\n  let config = {\n    keyType: \"number\", // number, string, time,\n    range: [0, 100],\n    pointCount: 200,\n    groupCount: 2,\n    lineCount: 4\n  }\n  const cache = {\n    data: null,\n    baseDate: null\n  }\n\n  function generateRandomString (_length) {\n    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5)\n  }\n\n  function generateSeries (_dataKeys, _range, _allowNegative) {\n    let value = d3.randomUniform(..._range)()\n    const variabilityRatio = 50\n    const randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio\n    const rnd = d3.randomNormal(0, 1)\n    return _dataKeys.map((d) => {\n      value = value + rnd() * randomWalkStepSize\n      if (!_allowNegative && value < randomWalkStepSize) {\n        value = value + randomWalkStepSize\n      }\n      return {\n        value,\n        key: config.keyType === \"time\" ? d.toISOString() : d\n      }\n    })\n  }\n\n  function generateTestDataset () {\n    let dataKeys = null\n    if (config.keyType === \"time\") {\n      cache.baseDate = new Date()\n      dataKeys = d3.timeDay.range(d3.timeMonth.floor(cache.baseDate), d3.timeMonth.ceil(cache.baseDate))\n    } else if (config.keyType === \"string\") {\n      dataKeys = d3.range(0, config.pointCount).map(() => generateRandomString())\n      dataKeys.sort((a, b) => a.localeCompare(b, \"en\", {numeric: false}))\n    } else if (config.keyType === \"number\") {\n      dataKeys = d3.range(0, config.pointCount).map((d, i) => i)\n    }\n\n    const series = d3.range(config.lineCount).map((d) => ({\n      label: `Label ${d}`,\n      id: d,\n      group: d < config.groupCount ? d : 0,\n      values: generateSeries(dataKeys, config.range)\n    }))\n\n    cache.data = {series}\n\n    // console.log(\"generated data\", cache.data)\n\n    return cache.data\n  }\n\n  function filterByKey (_extent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      const values = series[keys.VALUES]\n      const allKeys = values.map(d => d[keys.DATA])\n      const extentMinIndex = allKeys.indexOf(_extent[0])\n      const extentMaxIndex = allKeys.indexOf(_extent[1])\n      series[keys.VALUES] = series[keys.VALUES].slice(extentMinIndex, extentMaxIndex)\n    })\n\n    return data\n  }\n\n  function filterByDate (_dateExtent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      series[keys.VALUES] = series[keys.VALUES].filter((d) => {\n        const epoch = new Date(d[keys.DATA]).getTime()\n        return epoch >= _dateExtent[0].getTime()\n          && epoch <= _dateExtent[1].getTime()\n      })\n    })\n\n    return data\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  return {\n    generateTestDataset,\n    generateSeries,\n    filterByDate,\n    filterByKey,\n    setConfig\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/data-manager.js","// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 20\n// module chunks = 0","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Observer (_dataManager) {\n  const dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\")\n  const dataManager = _dataManager\n\n  dispatcher.on(\"brushChange.observer\", (_e, _brushConfig) => {\n    const filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e)\n      : dataManager.filterByKey(_e)\n    pub(\"dataFilter\", filtered)\n  })\n\n  function sub (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function pub (_channelName, ...args) {\n    dispatcher.call(_channelName, this, ...args)\n    return this\n  }\n\n  return {\n    sub,\n    pub\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/observer.js"],"sourceRoot":""}